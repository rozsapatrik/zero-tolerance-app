var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.206,1,1]],["body/components/AboutUsComponent.html",[0,0.343,1,1.768,2,1.848,3,0.236,4,0.209,5,1.493,6,1.493,7,1.493,8,1.493,9,0.209,10,5.16,11,4.161,12,3.548,13,0.745,14,3.175,15,1.852,16,1.415,17,1.842,18,1.765,19,1.421,20,6.028,21,1.421,22,5.414,23,0.703,24,1.421,25,1.963,26,1.149,27,4.145,28,2.089,29,1.279,30,4.145,31,1.088,32,0.021,33,0.964,34,0.703,35,1.088,36,4.145,37,0.745,38,1.032,39,0.344,40,0.236,41,1.493,42,0.236,43,0.209,44,1.147,45,1.666,46,5.414,47,5.414,48,4.634,49,5.414,50,4.634,51,4.634,52,6.391,53,5.414,54,5.414,55,5.414,56,3.175,57,4.634,58,5.414,59,5.414,60,3.175,61,6.028,62,1.666,63,3.548,64,1.666,65,1.147,66,1.666,67,1.666,68,1.576,69,2.304,70,1.764,71,2.304,72,1.87,73,2.443,74,2.443,75,3.548,76,2.264,77,2.304,78,2.176,79,1.987,80,2.861,81,3.548,82,1.87,83,0.928,84,1.95,85,1.753,86,1.493,87,2.302,88,1.493,89,1.493,90,1.147,91,1.497,92,1.493,93,1.147,94,1.95,95,1.208,96,1.493,97,0.928,98,0.979,99,1.493,100,1.032,101,1.493,102,1.088,103,1.415,104,1.147,105,1.493,106,1.147,107,1.493,108,1.147,109,1.493,110,1.147,111,1.493,112,1.147,113,1.493,114,1.147,115,1.493,116,1.147,117,1.342,118,1.273,119,1.493,120,1.493,121,0.015,122,0.015]],["title/components/AdminFormComponent.html",[0,0.206,90,1]],["body/components/AdminFormComponent.html",[0,0.299,1,0.63,2,1.204,3,0.13,4,0.115,5,0.821,6,0.821,7,0.821,8,0.821,9,0.115,13,0.634,15,1.492,16,0.778,17,1.687,18,1.601,19,0.926,21,0.926,23,0.386,24,0.926,25,1.492,26,0.749,28,1.839,29,1.369,31,0.598,32,0.021,33,1.004,34,0.824,35,0.598,37,0.775,38,1.21,39,0.353,40,0.13,41,0.821,42,0.13,43,0.115,44,1.453,45,0.916,60,4.21,62,2.112,64,2.112,65,1.194,66,1.953,67,2.112,68,1.998,69,2.236,70,0.97,71,1.836,72,1.028,73,1.592,74,1.592,76,1.244,77,1.836,78,1.735,79,1.691,82,1.592,83,0.51,84,1.27,85,1.142,86,0.821,87,1.75,88,0.821,89,0.821,90,1.344,91,1.914,92,0.821,93,0.63,94,1.27,95,0.664,96,0.821,97,0.51,98,1.691,99,0.821,100,0.568,101,0.821,102,0.598,103,0.778,104,0.63,105,0.821,106,0.63,107,0.821,108,0.63,109,0.821,110,0.63,111,0.821,112,0.63,113,0.821,114,0.63,115,0.821,116,0.63,117,1.397,118,0.7,119,0.821,120,0.821,121,0.01,122,0.01,123,4.557,124,4.132,125,1.951,126,3.527,127,3.019,128,2.329,129,3.527,130,1.802,131,4.315,132,3.527,133,0.79,134,4.315,135,5.795,136,5.254,137,4.858,138,1.641,139,4.858,140,2.279,141,4.858,142,1.658,143,1.658,144,2.262,145,1.839,146,3.527,147,2.407,148,1.62,149,3.527,150,2.434,151,3.694,152,2.434,153,3.527,154,4.858,155,1.342,156,3.019,157,4.858,158,3.527,159,3.527,160,3.527,161,1.521,162,4.315,163,3.527,164,1.028,165,1.473,166,1.501,167,1.21,168,1.142,169,1.342,170,0.926,171,2.279,172,1.658,173,3.527,174,3.019,175,3.527,176,2.279,177,3.527,178,2.279,179,2.069,180,3.527,181,4.756,182,4.315,183,2.204,184,4.315,185,4.158,186,4.315,187,4.315,188,3.353,189,4.858,190,1.897,191,1.342,192,2.978,193,2.279,194,3.284,195,0.926,196,2.33,197,0.976,198,2.279,199,1.75,200,1.501,201,3.527,202,2.434,203,2.235,204,2.434,205,2.684,206,0.778,207,1.573,208,1.336,209,0.568,210,0.821,211,1.309,212,1.241,213,2.279,214,2.235,215,2.279,216,3.527,217,3.165,218,3.165,219,3.081,220,3.398,221,4.315,222,4.315,223,4.315,224,4.635,225,5.557,226,5.557,227,2.279,228,3.527,229,2.279,230,2.279,231,0.821,232,2.279,233,2.279,234,2.279,235,3.527,236,2.279,237,2.279,238,2.279,239,0.916,240,2.279,241,0.97,242,1.342,243,0.97,244,1.244,245,2.279,246,2.279,247,1.592,248,1.244,249,2.279,250,1.336,251,1.951,252,0.97,253,0.867,254,0.867,255,0.867,256,0.97,257,1.336,258,1.691,259,4.858,260,1.691,261,2.434,262,3.527,263,3.019,264,2.069,265,1.926,266,1.028,267,0.97,268,1.164,269,1.836,270,1.028,271,1.734,272,1.244,273,1.951,274,1.164,275,1.836,276,2.192,277,1.336,278,1.501,279,1.947,280,1.947,281,3.112,282,1.244,283,1.336,284,1.194,285,2.434,286,1.444,287,1.093,288,1.592,289,1.691,290,1.592,291,1.592,292,1.592,293,1.093,294,1.093,295,2.279,296,1.573,297,2.279,298,2.279,299,1.244,300,2.279]],["title/guards/AdminGuard.html",[301,2.29,302,1.846]],["body/guards/AdminGuard.html",[3,0.264,4,0.234,9,0.234,13,1.143,23,0.788,24,1.528,26,0.986,29,1.376,31,1.528,32,0.021,33,0.931,34,0.987,35,1.528,37,1.198,39,0.424,40,0.264,42,0.264,43,0.234,91,1.938,121,0.016,122,0.016,144,2.097,167,1.45,170,1.839,191,2.214,200,2.478,202,4.018,209,1.157,211,1.584,214,4.439,301,3.689,302,2.974,303,3.535,304,3.975,305,5.226,306,3.206,307,3.406,308,4.645,309,4.03,310,2.974,311,3.975,312,5.707,313,5.707,314,4.645,315,4.109,316,5.226,317,4.984,318,3.049,319,5.444,320,2.478,321,1.867,322,3.975,323,2.724,324,2.227,325,1.867,326,2.724,327,1.354,328,4.645]],["title/modules/AdminModule.html",[329,0.726,330,2.495]],["body/modules/AdminModule.html",[3,0.287,4,0.254,9,0.254,32,0.021,39,0.455,40,0.287,42,0.287,43,0.254,83,1.132,90,1.979,91,1.398,93,1.979,121,0.017,122,0.017,124,3.487,329,1.015,330,5.15,331,1.552,332,2.15,333,3.166,334,2.28,335,2.422,336,1.725,337,4.325,338,4.325,339,4.325,340,4.532,341,3.044,342,2.94,343,2.422,344,1.473,345,5.053,346,2.209,347,2.209,348,5.25,349,4.325,350,3.487,351,3.201,352,2.963,353,2.759,354,3.349,355,2.581]],["title/components/AdminPageComponent.html",[0,0.206,93,1]],["body/components/AdminPageComponent.html",[0,0.268,1,0.726,2,1.341,3,0.149,4,0.132,5,0.945,6,0.945,7,0.945,8,0.945,9,0.132,13,0.939,15,1.446,16,0.896,17,1.73,18,1.641,19,1.031,21,1.031,23,0.445,24,1.031,25,1.605,26,0.834,28,1.922,29,1.438,31,1.236,32,0.021,33,0.894,34,0.996,35,1.236,37,1.005,38,1.623,39,0.356,40,0.149,41,0.945,42,0.149,43,0.132,44,1.445,45,1.055,60,3.443,62,1.892,64,1.892,65,1.086,66,1.055,67,1.055,68,0.998,69,2.498,70,1.117,71,1.671,72,1.184,73,1.772,74,1.772,76,1.433,77,1.671,78,1.579,79,2.505,82,1.184,83,0.588,84,1.415,85,1.271,86,0.945,87,1.882,88,0.945,89,0.945,90,0.726,91,1.973,92,0.945,93,1.445,94,1.415,95,0.765,96,0.945,97,0.588,98,1.691,99,0.945,100,0.654,101,0.945,102,0.689,103,0.896,104,0.726,105,0.945,106,0.726,107,0.945,108,0.726,109,0.945,110,0.726,111,0.945,112,0.726,113,0.945,114,0.726,115,0.945,116,0.726,117,0.85,118,0.806,119,0.945,120,0.945,121,0.011,122,0.011,123,4.763,128,2.815,130,2.669,133,0.88,142,1.607,143,1.784,144,2.347,145,1.922,147,1.579,148,1.523,156,5.025,161,1.372,164,1.145,165,1.784,166,1.671,167,1.301,168,1.271,169,1.494,170,1.372,172,0.896,183,2.006,190,1.607,195,1.236,197,0.726,199,2.192,206,0.896,209,0.654,210,0.945,211,1.462,214,1.663,243,1.671,244,2.145,247,1.184,253,0.998,254,0.998,255,0.998,256,1.671,264,3.064,265,2.145,266,1.772,267,1.671,268,1.341,269,2.223,270,1.772,275,1.671,276,2.357,278,1.117,279,2.357,280,1.772,281,2.505,284,1.086,285,2.711,286,3.31,288,1.184,289,1.258,290,1.184,291,1.184,292,1.184,293,1.258,294,1.258,296,2.711,299,1.433,315,2.303,350,4.319,356,1.997,357,3.928,358,1.271,359,3.928,360,3.204,361,3.928,362,3.928,363,2.003,364,3.362,365,4.319,366,3.928,367,4.029,368,3.362,369,3.928,370,3.928,371,5.225,372,5.225,373,1.539,374,3.928,375,3.928,376,2.625,377,3.928,378,3.928,379,3.928,380,3.861,381,3.928,382,2.625,383,3.064,384,3.928,385,1.671,386,2.625,387,2.711,388,2.625,389,2.625,390,2.145,391,3.928,392,2.625,393,2.625,394,2.625,395,2.625,396,1.811,397,3.928,398,2.625,399,1.811,400,2.625,401,1.811,402,2.246,403,1.811,404,2.488,405,3.928,406,2.625,407,4.707,408,2.246,409,2.625,410,1.997,411,2.625,412,2.625,413,2.711,414,2.006,415,2.488,416,1.811,417,1.811,418,1.997,419,3.544,420,2.989,421,2.989,422,2.989,423,2.989,424,2.989,425,1.663,426,1.997,427,1.663,428,1.811,429,1.539]],["title/modules/AdminRoutingModule.html",[329,0.726,340,2.29]],["body/modules/AdminRoutingModule.html",[0,0.359,3,0.301,4,0.267,9,0.267,32,0.021,39,0.453,40,0.301,42,0.301,43,0.267,90,1.745,91,1.465,93,1.745,121,0.017,122,0.017,124,3.656,209,1.32,212,1.252,302,3.442,305,4.802,331,1.627,336,1.808,340,3.998,346,1.908,347,2.273,348,5.401,349,4.534,350,3.656,351,3.356,430,5.298,431,3.107,432,3.701,433,3.231,434,3.356,435,3.223,436,5.298,437,3.356]],["title/components/AppComponent.html",[0,0.206,95,1.054]],["body/components/AppComponent.html",[0,0.35,1,1.195,2,1.898,3,0.246,4,0.217,5,1.556,6,1.556,7,1.556,8,1.556,9,0.217,15,1.327,16,1.474,17,1.85,18,1.764,19,1.46,21,1.46,23,0.733,24,1.46,25,1.994,26,0.917,29,1.534,31,1.134,32,0.021,33,0.983,34,0.943,35,1.134,37,0.776,38,1.076,39,0.354,40,0.246,42,0.246,43,0.217,44,1.195,83,0.967,84,2.003,85,1.8,86,1.556,87,2.338,88,1.556,89,1.556,90,1.195,91,1.538,92,1.556,93,1.195,94,2.003,95,1.892,96,1.556,97,0.967,98,1.02,99,1.556,100,1.076,101,1.556,102,1.134,103,1.474,104,1.195,105,1.556,106,1.195,107,1.556,108,1.195,109,1.556,110,1.195,111,1.556,112,1.195,113,1.556,114,1.195,115,1.556,116,1.195,117,1.398,118,1.327,119,1.556,120,1.556,121,0.015,122,0.015,133,1.245,144,2.477,172,1.898,195,1.134,197,1.538,203,2.737,209,1.076,231,2.003,324,2.666,325,2.235,326,2.533,438,3.697,439,3.141,440,6.149,441,5.56,442,6.149,443,6.149,444,3.287,445,6.149,446,6.492,447,5.56,448,4.319,449,4.231,450,4.231,451,4.319,452,4.319,453,4.319,454,4.319,455,4.319,456,4.319,457,2.737]],["title/modules/AppModule.html",[329,0.726,458,2.495]],["body/modules/AppModule.html",[3,0.235,4,0.208,9,0.208,18,0.977,32,0.021,39,0.467,40,0.235,42,0.235,43,0.208,50,3.539,83,0.926,95,2.117,121,0.015,122,0.015,329,0.831,331,1.27,332,1.76,333,2.887,334,2.717,335,2.591,336,1.412,341,2.892,342,2.591,343,1.982,344,1.205,346,1.947,347,1.947,352,2.425,353,2.258,458,5.166,459,3.539,460,3.539,461,3.539,462,3.539,463,4.306,464,4.306,465,6.011,466,5.671,467,5.817,468,5.671,469,6.011,470,5.671,471,6.011,472,5.671,473,4.135,474,4.135,475,4.135,476,4.135,477,4.135,478,5.405,479,5.405,480,4.135,481,4.135,482,4.135,483,4.135,484,3.147,485,4.135,486,2.62,487,3.539,488,4.135,489,4.135,490,4.135,491,5.405,492,4.113,493,3.147,494,4.626,495,3.539,496,4.135,497,4.135,498,4.135,499,4.135]],["title/modules/AppRoutingModule.html",[329,0.726,463,2.29]],["body/modules/AppRoutingModule.html",[0,0.289,3,0.289,4,0.255,9,0.255,32,0.021,39,0.421,40,0.289,42,0.289,43,0.255,91,1.404,102,1.614,118,1.559,121,0.017,122,0.017,209,1.264,212,1.199,331,1.559,336,1.733,346,1.828,347,2.215,351,3.216,431,2.977,432,3.607,433,3.172,435,3.657,463,3.896,500,5.076,501,5.076,502,3.216,503,7.044,504,5.076,505,5.076,506,3.216,507,5.076,508,5.076,509,4.344,510,5.076,511,5.076,512,5.076,513,5.076,514,2.29,515,5.076,516,5.076,517,5.076]],["title/modules/AuthModule.html",[329,0.726,486,2.29]],["body/modules/AuthModule.html",[3,0.289,4,0.256,9,0.256,32,0.021,39,0.456,40,0.289,42,0.289,43,0.256,83,1.139,104,1.981,112,1.981,121,0.017,122,0.017,329,1.022,331,1.561,332,2.163,333,3.174,334,2.294,335,2.437,336,1.735,341,3.048,342,2.951,343,2.437,344,1.482,346,2.217,347,2.217,352,2.981,353,2.776,354,3.361,355,2.596,486,4.731,506,3.221,518,4.351,519,4.351,520,4.351,521,4.538,522,5.083,523,4.351,524,4.351]],["title/modules/AuthRoutingModule.html",[329,0.726,521,2.29]],["body/modules/AuthRoutingModule.html",[0,0.362,3,0.305,4,0.27,9,0.27,32,0.021,39,0.455,40,0.305,42,0.305,43,0.27,104,1.759,112,1.759,121,0.017,122,0.017,209,1.336,212,1.267,302,2.74,331,1.648,336,1.831,346,1.932,347,2.29,431,3.146,432,3.728,433,3.248,434,3.399,435,3.247,437,3.399,521,4.028,523,4.592,524,4.592,525,5.365,526,3.702,527,4.083]],["title/injectables/AuthenticationService.html",[307,1.846,320,1.538]],["body/injectables/AuthenticationService.html",[3,0.191,4,0.169,9,0.169,13,1.054,23,0.57,24,1.233,26,0.713,29,1.607,31,1.539,32,0.021,33,1.022,34,0.994,35,1.539,37,1.238,39,0.373,40,0.191,42,0.191,43,0.169,44,0.93,91,1.622,121,0.013,122,0.013,133,1.052,155,1.787,161,1.233,164,1.369,167,1.17,170,1.932,172,1.147,183,2.399,195,1.927,197,0.93,200,2.849,205,3.575,211,1.592,214,2.976,307,2.399,310,3.265,315,3.926,318,3.261,320,1.999,321,1.351,323,1.971,324,1.611,326,1.971,327,1.983,344,1.369,487,2.876,506,4.31,526,3.242,528,2.129,529,2.876,530,4.635,531,5.864,532,5.864,533,5.864,534,4.697,535,5.019,536,4.697,537,3.361,538,5.864,539,4.412,540,4.697,541,2.755,542,3.361,543,4.697,544,3.361,545,2.811,546,6.393,547,3.303,548,4.697,549,3.361,550,2.119,551,4.697,552,5.079,553,3.361,554,5.472,555,4.565,556,2.285,557,4.05,558,4.697,559,3.361,560,5.864,561,3.361,562,4.697,563,3.361,564,4.697,565,2.252,566,2.399,567,4.697,568,1.889,569,4.697,570,2.319,571,3.361,572,3.361,573,3.361,574,2.876,575,1.971,576,3.361,577,3.361,578,3.361,579,4.697,580,4.697,581,3.361,582,3.361,583,3.361,584,3.361,585,3.361,586,3.361,587,3.361,588,3.361]],["title/modules/CoreModule.html",[329,0.726,464,2.29]],["body/modules/CoreModule.html",[3,0.309,4,0.273,9,0.273,32,0.02,39,0.433,40,0.309,42,0.309,43,0.273,83,1.217,121,0.017,122,0.017,329,1.092,331,1.669,332,2.312,333,2.605,334,2.452,335,2.605,336,1.855,341,3.095,342,3.071,343,2.605,344,1.584,346,2.307,347,2.307,353,2.967,354,3.498,355,2.775,464,4.608,589,5.433,590,5.433,591,5.433]],["title/injectables/DateService.html",[320,1.538,592,1.538]],["body/injectables/DateService.html",[3,0.261,4,0.231,9,0.231,13,1.039,17,1.44,23,0.779,24,1.518,29,1.569,31,1.206,32,0.021,33,0.734,34,0.779,35,1.206,37,1.137,38,1.44,39,0.368,40,0.261,42,0.261,43,0.231,44,1.751,121,0.016,122,0.016,133,1.295,155,2.199,161,1.518,167,1.44,172,1.974,196,2.325,197,1.837,211,1.144,318,2.772,320,2.461,321,1.847,323,2.694,324,2.203,327,1.339,385,2.974,528,2.911,568,2.325,592,2.461,593,3.932,594,3.044,595,3.034,596,6.328,597,6.642,598,5.783,599,4.594,600,3.991,601,5.783,602,4.594,603,5.783,604,4.594,605,5.783,606,4.594,607,5.783,608,5.783,609,5.783,610,5.783,611,5.783,612,5.783,613,4.594,614,4.594,615,4.594]],["title/interfaces/Drink.html",[98,0.854,358,1.17]],["body/interfaces/Drink.html",[0,0.221,3,0.147,4,0.13,9,0.13,13,0.465,17,0.645,18,0.612,19,0.68,21,0.68,23,0.439,25,0.795,26,0.549,28,1.594,32,0.021,33,0.889,34,0.991,37,0.465,38,1.163,39,0.372,40,0.147,41,0.932,42,0.221,43,0.13,44,1.435,45,1.563,65,1.075,97,0.58,98,1.748,121,0.011,122,0.013,128,1.864,130,2.384,133,0.871,138,0.984,142,1.327,143,1.327,145,1.594,147,1.041,148,1.893,155,0.984,161,1.46,164,0.754,165,1.898,167,1.163,168,0.838,169,0.984,170,1.225,183,1.322,190,1.327,191,0.984,195,1.805,196,1.877,197,0.716,199,1.869,206,0.884,210,0.932,211,1.509,212,1.625,217,3.308,218,3.308,219,3.043,220,3.043,231,0.932,239,1.563,241,1.102,242,1.973,243,1.102,244,1.414,247,1.168,248,1.414,250,1.518,252,1.102,253,0.984,254,0.984,255,0.984,256,1.102,257,1.518,258,2.8,260,2.8,284,1.676,318,1.864,321,1.041,327,1.133,344,0.754,358,2.064,360,2.876,363,1.986,385,2.367,390,2.123,514,1.754,545,1.241,547,1.241,550,1.754,556,0.884,565,1.864,568,1.563,575,3.425,592,2.208,594,2.505,595,1.241,616,1.414,617,1.518,618,1.322,619,1.518,620,2.594,621,1.322,622,2.841,623,2.123,624,2.238,625,2.983,626,2.549,627,1.986,628,1.864,629,2.123,630,2.238,631,1.64,632,1.64,633,1.322,634,1.64,635,1.64,636,1.64,637,1.64,638,1.64,639,1.64,640,3.287,641,2.957,642,1.64,643,1.414,644,1.64,645,2.957,646,1.64,647,2.957,648,1.322,649,1.518,650,2.384,651,1.322,652,1.64,653,1.64,654,2.463,655,1.64,656,1.64,657,1.322,658,1.64,659,2.463,660,1.64,661,1.64,662,1.241,663,1.64,664,1.64,665,1.64,666,1.64,667,1.64,668,2.463,669,1.64,670,1.64,671,1.64,672,1.64,673,1.64,674,1.64,675,1.64,676,2.957,677,1.64,678,1.64,679,1.64,680,1.64,681,2.463,682,2.238,683,1.322,684,1.322,685,1.041,686,1.864,687,1.864,688,1.322,689,3.523,690,1.64,691,2.957,692,1.64,693,1.64,694,1.64,695,1.64,696,1.64,697,1.322,698,1.986,699,2.463,700,1.64,701,2.463,702,1.64,703,1.654,704,2.463,705,2.463,706,1.986,707,1.241,708,1.241,709,1.241,710,1.864,711,1.241,712,2.957,713,1.322,714,2.463,715,1.322,716,1.64,717,1.64,718,1.64,719,1.64,720,1.64,721,3.287,722,1.64,723,1.64,724,1.64,725,2.463,726,1.241,727,2.463,728,1.64,729,1.986,730,1.64,731,2.28,732,1.64,733,1.64,734,1.414,735,1.64,736,1.64,737,1.64,738,1.322,739,1.322,740,1.64]],["title/interfaces/DrinkAmount.html",[358,1.17,623,1.974]],["body/interfaces/DrinkAmount.html",[0,0.22,3,0.146,4,0.13,9,0.13,13,0.462,17,0.641,18,0.608,19,0.675,21,0.675,23,0.436,25,0.79,26,0.546,28,1.589,32,0.021,33,0.619,34,1.025,37,0.462,38,1.158,39,0.371,40,0.146,41,0.927,42,0.22,43,0.13,44,1.431,45,1.556,65,1.07,97,0.576,98,1.745,121,0.011,122,0.013,128,1.855,130,2.376,133,0.867,138,0.978,142,1.321,143,1.321,145,1.589,147,1.034,148,1.89,155,0.978,161,1.456,164,0.75,165,1.893,167,1.158,168,0.833,169,0.978,170,1.221,183,1.314,190,1.321,191,0.978,195,1.829,196,1.87,197,0.712,199,2.178,206,0.878,210,0.927,211,1.506,212,1.623,217,2.825,218,3.302,219,1.509,220,1.509,231,0.927,239,1.556,241,1.095,242,1.967,243,1.095,244,1.405,247,1.161,248,1.405,250,1.509,252,1.095,253,0.978,254,0.978,255,0.978,256,1.095,257,1.509,258,3.051,260,3.051,284,1.672,318,1.855,321,1.034,327,1.128,344,0.75,358,2.06,360,2.871,363,1.979,385,2.36,390,2.113,514,1.746,545,1.233,547,1.233,550,1.746,556,0.878,565,1.855,568,1.556,575,3.417,592,2.201,594,2.501,595,1.233,616,1.405,617,1.509,618,1.314,619,1.509,620,2.591,621,1.314,622,2.977,623,2.54,624,2.794,625,3.251,626,2.54,627,1.976,628,1.855,629,2.113,630,2.23,631,1.63,632,1.63,633,1.314,634,1.63,635,1.63,636,1.63,637,1.63,638,1.63,639,1.63,640,3.277,641,2.946,642,1.63,643,1.405,644,1.63,645,2.946,646,1.63,647,2.946,648,1.314,649,1.509,650,2.376,651,1.314,652,1.63,653,1.63,654,2.452,655,1.63,656,1.63,657,1.314,658,1.63,659,2.452,660,1.63,661,1.63,662,1.233,663,1.63,664,1.63,665,1.63,666,1.63,667,1.63,668,2.452,669,1.63,670,1.63,671,1.63,672,1.63,673,1.63,674,1.63,675,1.63,676,2.946,677,1.63,678,1.63,679,1.63,680,1.63,681,2.452,682,2.23,683,1.314,684,1.314,685,1.034,686,1.855,687,1.855,688,1.314,689,3.514,690,1.63,691,2.946,692,1.63,693,1.63,694,1.63,695,1.63,696,1.63,697,1.314,698,1.976,699,2.452,700,1.63,701,2.452,702,1.63,703,1.647,704,2.452,705,2.452,706,1.976,707,1.233,708,1.233,709,1.233,710,1.855,711,1.233,712,2.946,713,1.314,714,2.452,715,1.314,716,1.63,717,1.63,718,1.63,719,1.63,720,1.63,721,3.277,722,1.63,723,1.63,724,1.63,725,2.452,726,1.233,727,2.452,728,1.63,729,1.976,730,1.63,731,2.269,732,1.63,733,1.63,734,1.405,735,1.63,736,1.63,737,1.63,738,1.314,739,1.314,740,1.63]],["title/interfaces/DrinkAmountsMap.html",[358,1.17,626,1.974]],["body/interfaces/DrinkAmountsMap.html",[0,0.225,3,0.15,4,0.133,9,0.133,13,0.475,17,0.659,18,0.625,19,0.694,21,0.694,25,0.812,26,0.561,28,1.611,29,0.625,32,0.021,33,0.632,34,0.449,37,0.475,38,1.178,39,0.375,40,0.15,41,0.953,42,0.225,43,0.133,44,1.451,45,1.588,65,1.093,97,0.592,98,1.746,121,0.011,122,0.013,128,1.894,130,2.415,138,1.006,142,1.349,143,1.349,145,1.611,147,1.063,148,1.903,155,1.006,161,1.473,164,0.771,165,1.916,167,1.178,168,0.856,169,1.006,170,1.241,183,1.351,190,1.349,191,1.006,195,1.762,196,1.901,197,0.732,199,1.889,206,0.903,210,0.953,211,1.52,212,1.631,217,2.864,218,2.864,219,1.551,220,1.551,231,0.953,239,1.588,241,1.126,242,1.995,243,1.126,244,1.444,247,1.193,248,1.444,250,1.551,252,1.126,253,1.006,254,1.006,255,1.006,256,1.126,257,1.551,258,2.823,260,2.823,284,1.688,318,1.894,321,1.063,327,1.151,344,0.771,358,2.076,360,2.946,363,2.012,385,2.388,390,2.157,514,1.782,545,1.268,547,1.268,550,1.782,556,0.903,565,1.894,568,1.588,575,3.578,592,2.232,594,2.522,595,1.268,616,1.444,617,2.317,618,2.018,619,1.551,620,2.386,621,1.351,622,3.008,623,2.582,624,2.267,625,3.008,626,2.864,627,2.415,628,1.894,629,2.157,630,2.267,631,1.676,632,1.676,633,1.351,634,1.676,635,1.676,636,1.676,637,1.676,638,1.676,639,1.676,640,3.323,641,2.996,642,1.676,643,1.444,644,1.676,645,2.996,646,1.676,647,2.996,648,1.351,649,1.551,650,2.415,651,1.351,652,1.676,653,1.676,654,2.503,655,1.676,656,1.676,657,1.351,658,1.676,659,2.503,660,1.676,661,1.676,662,1.268,663,1.676,664,1.676,665,1.676,666,1.676,667,1.676,668,2.503,669,1.676,670,1.676,671,1.676,672,1.676,673,1.676,674,1.676,675,1.676,676,2.996,677,1.676,678,1.676,679,1.676,680,1.676,681,2.503,682,2.267,683,1.351,684,1.351,685,1.063,686,1.894,687,1.894,688,1.351,689,3.556,690,1.676,691,2.996,692,1.676,693,1.676,694,1.676,695,1.676,696,1.676,697,1.351,698,2.018,699,2.503,700,1.676,701,2.503,702,1.676,703,1.681,704,2.503,705,2.503,706,2.018,707,1.268,708,1.268,709,1.268,710,1.894,711,1.268,712,2.996,713,1.351,714,2.503,715,1.351,716,1.676,717,1.676,718,1.676,719,1.676,720,1.676,721,3.323,722,1.676,723,1.676,724,1.676,725,2.503,726,1.268,727,2.503,728,1.676,729,2.018,730,1.676,731,2.317,732,1.676,733,1.676,734,1.444,735,1.676,736,1.676,737,1.676,738,1.351,739,1.351,740,1.676,741,2.645,742,2.645]],["title/interfaces/DrinkData.html",[239,1.453,358,1.17]],["body/interfaces/DrinkData.html",[0,0.19,3,0.121,4,0.107,9,0.107,13,0.381,14,1.243,15,1.265,17,0.528,18,0.501,19,0.556,21,0.556,23,0.359,25,0.651,26,0.45,28,1.435,32,0.021,33,0.659,34,0.699,37,0.74,38,1.026,39,0.343,40,0.121,41,0.763,42,0.121,43,0.107,44,1.405,45,1.656,56,1.955,65,0.922,85,0.686,98,1.634,100,0.528,117,0.686,121,0.009,122,0.009,133,0.747,138,1.776,142,1.138,143,1.138,144,1.829,145,1.435,147,1.34,148,1.858,150,1.463,152,1.463,155,0.806,161,1.481,164,0.618,165,0.723,166,0.902,167,1.026,168,0.686,169,0.806,170,1.333,188,1.463,190,1.138,191,1.776,195,1.333,196,1.34,199,1.942,200,0.902,206,0.723,209,0.528,210,0.763,211,1.497,212,1.712,231,0.763,239,2.268,241,0.902,242,2.286,243,0.902,247,0.956,252,0.902,253,0.806,254,0.806,255,0.806,256,0.902,258,2.435,260,2.239,261,1.463,274,1.083,284,1.903,288,2.107,325,0.852,327,1.361,358,1.644,360,2.877,363,0.902,365,2.843,380,1.463,383,1.243,385,2.161,387,2.843,396,1.463,399,1.463,401,2.843,403,1.463,404,1.343,439,1.703,457,2.61,514,0.956,550,1.504,556,1.594,565,2.239,592,2.161,594,2.832,595,1.016,600,1.463,616,1.157,620,2.145,621,1.083,622,2.386,624,1.975,625,2.594,627,1.083,628,1.598,630,2.801,633,1.703,648,1.083,650,2.754,651,1.083,657,1.083,682,2.239,683,1.703,684,1.703,685,1.878,686,2.239,687,2.239,688,1.703,697,1.083,703,1.418,706,2.386,707,1.598,708,1.598,709,1.598,710,2.239,711,1.598,713,1.703,715,1.703,726,2.801,729,2.104,738,1.083,739,1.083,743,1.463,744,2.537,745,2.537,746,1.613,747,2.959,748,2.104,749,2.25,750,1.613,751,1.343,752,1.613,753,1.613,754,1.463,755,3.135,756,1.613,757,1.613,758,2.537,759,1.82,760,3.865,761,2.537,762,1.613,763,1.613,764,1.463,765,2.537,766,1.613,767,1.613,768,1.613,769,3.555,770,1.613,771,1.613,772,1.463,773,1.613,774,1.613,775,2.978,776,2.112,777,1.463,778,1.613,779,1.463,780,1.613,781,3.135,782,1.613,783,1.613,784,1.613,785,2.537,786,1.613,787,1.463,788,1.463,789,1.613,790,1.613,791,1.613,792,1.613,793,1.613,794,1.613,795,1.613,796,1.613,797,1.613,798,1.613,799,1.613,800,1.613,801,2.537,802,1.613,803,1.613,804,1.613,805,1.463,806,1.613,807,3.555,808,3.135,809,1.343,810,1.613,811,1.613,812,3.135,813,1.613,814,1.613,815,1.613,816,1.613,817,3.135,818,2.537,819,1.613,820,1.613,821,1.613,822,1.613,823,1.613,824,1.613,825,2.537,826,3.135,827,1.613,828,2.537,829,1.613,830,1.613,831,1.613,832,1.613,833,3.135,834,2.537,835,1.613,836,1.613,837,2.537,838,2.537,839,2.537,840,1.613,841,4.103,842,2.537,843,1.613,844,1.613,845,1.613,846,2.537,847,2.537,848,1.613,849,1.613,850,1.613,851,1.613,852,1.613,853,1.463,854,1.613,855,1.613,856,2.537,857,1.613,858,2.537,859,1.613,860,1.613,861,2.537,862,1.613,863,1.613,864,1.613,865,1.613,866,1.613,867,1.613,868,1.613,869,1.613,870,1.463,871,2.3,872,1.613,873,1.463,874,1.613,875,1.613,876,1.613,877,2.537,878,1.613,879,1.463,880,1.613,881,1.613,882,1.613,883,1.613,884,1.613,885,1.463,886,2.537,887,2.537,888,1.613,889,1.613,890,1.613,891,1.613,892,1.613,893,1.613,894,2.537,895,1.613,896,1.613,897,2.537,898,1.613,899,1.613,900,1.613,901,1.613,902,2.537,903,1.613,904,2.537,905,2.537,906,1.613,907,1.613,908,2.537,909,1.613,910,1.613,911,1.613,912,1.613,913,1.613,914,1.613,915,1.613,916,1.613,917,1.613,918,1.613,919,1.463,920,1.613,921,1.463]],["title/components/DrinkListComponent.html",[0,0.206,97,0.81]],["body/components/DrinkListComponent.html",[0,0.203,1,0.472,2,0.956,3,0.097,4,0.086,5,0.614,6,0.614,7,0.614,8,0.614,9,0.086,13,0.817,15,0.524,16,0.582,17,1.588,18,1.507,19,0.735,21,0.735,23,0.475,24,0.735,25,1.265,26,0.594,28,1.656,29,1.468,31,1.082,32,0.021,33,0.919,34,1.054,35,1.082,37,0.928,38,1.286,39,0.311,40,0.097,41,0.614,42,0.159,43,0.086,44,1.14,45,1.125,62,1.829,64,1.829,65,1.258,66,1.829,67,1.829,68,1.73,69,2.506,70,1.191,71,1.191,73,2.053,74,2.206,76,0.932,77,1.191,78,1.656,79,2.344,82,0.77,83,0.382,84,1.008,85,0.906,86,0.614,87,1.484,88,0.614,89,0.614,90,0.472,91,0.774,92,0.614,93,0.472,94,1.008,95,0.497,96,0.614,97,0.923,98,1.755,99,0.614,100,0.425,101,0.614,102,0.448,103,0.582,104,0.472,105,0.614,106,0.472,107,0.614,108,0.472,109,0.614,110,0.472,111,0.614,112,0.472,113,0.614,114,0.472,115,0.614,116,0.472,117,0.552,118,0.524,119,0.614,120,0.614,121,0.008,122,0.011,128,2.585,130,2.497,133,0.627,138,1.354,142,1.215,143,1.406,145,1.656,147,1.125,148,1.811,155,1.065,161,1.283,164,0.816,165,1.763,167,1.218,168,0.906,169,1.065,170,1.194,172,1.669,183,0.871,190,0.956,191,1.065,195,1.631,196,1.829,197,1.492,199,1.484,206,0.582,210,0.614,211,1.286,212,1.488,217,2.945,218,2.67,219,1,220,2.088,231,0.614,239,1.125,241,0.726,242,1.567,243,0.726,244,0.932,247,0.77,248,0.932,250,1,252,0.726,253,0.649,254,0.649,255,0.649,256,0.726,257,1,258,2.344,260,2.344,265,0.932,266,1.263,267,1.191,268,0.871,269,2.198,270,1.263,272,0.932,275,1.936,276,2.593,277,2.088,278,1.753,279,2.519,280,2.053,281,2.882,282,1.529,283,1.642,284,1.719,285,1.177,288,0.77,289,0.818,290,0.77,291,0.77,292,0.77,293,0.818,294,0.818,296,2.844,299,0.932,318,1.707,321,0.686,327,0.816,344,0.816,358,1.746,360,2.804,363,2.506,373,1,385,2.446,390,1.529,404,2.61,413,1.932,414,2.324,415,2.256,416,1.177,417,1.177,418,1.298,419,3.538,420,3.136,421,3.136,422,3.136,423,3.136,424,3.136,425,1.081,426,1.298,427,1.081,428,1.177,429,1,514,1.859,545,0.818,547,0.818,550,1.606,556,0.956,565,1.975,568,1.656,575,3.275,592,2.295,594,2.311,595,1.707,617,3.695,618,3.218,619,1,620,2.051,621,0.871,622,2.638,623,1.529,624,2.181,625,2.754,626,1.944,627,1.43,628,1.707,629,1.529,630,2.181,631,1.774,632,1.774,633,1.43,634,1.774,635,1.774,636,1.774,637,2.256,638,2.256,639,2.256,640,3.538,641,3.098,642,2.256,643,1.944,644,2.256,645,2.882,646,2.256,647,2.256,648,1.43,649,1.642,650,1.819,651,0.871,652,1.081,653,1.081,654,1.774,655,1.774,656,1.774,657,1.43,658,1.774,659,1.774,660,2.61,661,1.081,662,0.818,663,1.081,664,1.081,665,1.081,666,1.774,667,1.081,668,1.774,669,1.774,670,2.61,671,1.081,672,1.081,673,1.081,674,1.081,675,1.081,676,2.61,677,1.774,678,1.774,679,1.774,680,1.774,681,1.774,682,1.707,683,0.871,684,0.871,685,0.686,686,1.342,687,1.342,688,0.871,689,2.882,690,1.081,691,2.256,692,1.081,693,1.081,694,1.081,695,1.081,696,1.081,697,0.871,698,1.43,699,1.774,700,1.081,701,1.774,702,1.081,703,1.191,704,1.774,705,1.774,706,1.43,707,0.818,708,0.818,709,0.818,710,1.342,711,0.818,712,2.256,713,0.871,714,1.774,715,0.871,716,1.081,717,2.256,718,2.256,719,1.081,720,1.081,721,2.61,722,1.081,723,1.081,724,1.081,725,1.774,726,0.818,727,1.774,728,1.081,729,1.43,730,1.081,731,2.416,732,1.081,733,1.081,734,0.932,735,1.081,736,1.081,737,1.081,738,0.871,739,0.871,740,1.081,744,1.298,922,2.799,923,2.799,924,2.799,925,2.799,926,1.706,927,1.706,928,1.706,929,1.706,930,1.706,931,1.706,932,1.706,933,1.706,934,1.706,935,1.706,936,1.706,937,1.706,938,2.799,939,2.799,940,1.46,941,1.46,942,2.799,943,2.396,944,1.298,945,1.706,946,1.706,947,2.799,948,1.177,949,1.706,950,1.706,951,2.799,952,1.706,953,1.706,954,1.706,955,1.706,956,1.706,957,1.46,958,1.177]],["title/interfaces/FirestoreDocumentData.html",[358,1.17,629,1.974]],["body/interfaces/FirestoreDocumentData.html",[0,0.224,3,0.15,4,0.133,9,0.133,13,0.474,17,0.657,18,0.623,19,0.693,21,0.693,23,0.448,25,0.81,26,0.56,28,1.609,32,0.021,33,0.63,34,0.801,37,0.474,38,1.176,39,0.374,40,0.15,41,0.95,42,0.224,43,0.133,44,1.449,45,1.585,65,1.091,97,0.591,98,1.745,121,0.011,122,0.013,128,1.891,130,2.412,133,0.883,138,1.004,142,1.346,143,1.346,145,1.609,147,1.061,148,1.902,155,1.004,161,1.472,164,0.769,165,1.914,167,1.176,168,0.854,169,1.004,170,1.24,183,1.348,190,1.346,191,1.004,195,1.739,196,1.898,197,0.73,199,1.887,206,0.901,210,0.95,211,1.519,212,1.63,217,2.861,218,2.861,219,1.548,220,1.548,231,0.95,239,1.585,241,1.123,242,1.992,243,1.123,244,1.441,247,1.191,248,1.441,250,1.548,252,1.123,253,1.004,254,1.004,255,1.004,256,1.123,257,1.548,258,2.82,260,2.82,284,1.687,318,1.891,321,1.061,327,1.149,344,0.769,358,2.074,360,2.944,363,2.009,385,2.386,390,2.154,514,1.779,545,1.265,547,1.265,550,1.779,556,0.901,565,1.891,568,1.585,575,3.45,592,2.229,594,2.52,595,1.265,616,1.441,617,1.548,618,1.348,619,1.548,620,2.384,621,1.348,622,3.005,623,2.154,624,2.264,625,3.005,626,3.062,627,2.014,628,2.264,629,2.579,630,2.82,631,1.672,632,1.672,633,1.348,634,1.672,635,1.672,636,1.672,637,1.672,638,1.672,639,1.672,640,3.319,641,2.992,642,1.672,643,1.441,644,1.672,645,2.992,646,1.672,647,2.992,648,1.348,649,1.548,650,2.412,651,1.348,652,1.672,653,1.672,654,2.499,655,1.672,656,1.672,657,1.348,658,1.672,659,2.499,660,1.672,661,1.672,662,1.265,663,1.672,664,1.672,665,1.672,666,1.672,667,1.672,668,2.499,669,1.672,670,1.672,671,1.672,672,1.672,673,1.672,674,1.672,675,1.672,676,2.992,677,1.672,678,1.672,679,1.672,680,1.672,681,2.499,682,2.264,683,1.348,684,1.348,685,1.061,686,1.891,687,1.891,688,1.348,689,3.552,690,1.672,691,2.992,692,1.672,693,1.672,694,1.672,695,1.672,696,1.672,697,1.348,698,2.014,699,2.499,700,1.672,701,2.499,702,1.672,703,1.678,704,2.499,705,2.499,706,2.014,707,1.265,708,1.265,709,1.265,710,1.891,711,1.265,712,2.992,713,1.348,714,2.499,715,1.348,716,1.672,717,1.672,718,1.672,719,1.672,720,1.672,721,3.319,722,1.672,723,1.672,724,1.672,725,2.499,726,1.265,727,2.499,728,1.672,729,2.014,730,1.672,731,2.313,732,1.672,733,1.672,734,1.441,735,1.672,736,1.672,737,1.672,738,1.348,739,1.348,740,1.672]],["title/components/HomeComponent.html",[0,0.206,100,0.9]],["body/components/HomeComponent.html",[0,0.174,1,0.381,2,0.8,3,0.174,4,0.069,5,0.496,6,0.496,7,0.496,8,0.496,9,0.069,13,0.789,14,1.374,15,1.439,16,0.471,17,1.505,18,1.427,19,0.615,21,0.615,23,0.234,24,0.615,25,1.107,26,0.497,28,1.514,29,1.495,31,1.06,32,0.021,33,0.851,34,0.974,35,1.06,37,1.069,38,1.28,39,0.279,40,0.078,41,0.496,42,0.078,43,0.069,44,1.117,45,1.228,56,1.792,62,1.449,64,1.623,65,0.997,66,1.449,67,1.765,68,1.67,69,1.993,70,0.587,71,1.533,72,1.822,73,1.822,74,1.057,77,0.587,78,0.554,82,0.622,83,0.309,84,0.844,85,1.167,86,0.496,87,1.298,88,0.496,89,0.496,90,0.381,91,0.648,92,0.496,93,0.381,94,0.844,95,0.402,96,0.496,97,0.309,98,1.621,99,0.496,100,0.898,101,0.496,102,0.362,103,0.471,104,0.381,105,0.496,106,0.381,107,0.496,108,0.381,109,0.496,110,0.381,111,0.496,112,0.381,113,0.496,114,0.381,115,0.496,116,0.381,117,0.758,118,0.423,119,0.496,120,0.496,121,0.006,122,0.006,128,1.728,133,0.525,138,2.137,142,1.043,143,1.23,144,1.917,145,1.514,147,1.228,148,1.785,150,0.951,152,1.617,155,0.891,161,1.23,164,0.683,165,0.8,166,0.997,167,1.094,168,0.758,169,0.891,170,1.349,172,1.378,188,1.617,190,0.8,191,1.875,195,1.153,196,1.449,197,1.117,199,1.582,200,0.997,206,0.471,209,0.343,210,0.496,211,1.28,212,1.626,217,1.279,231,0.496,239,1.765,241,0.587,242,1.955,243,0.587,247,0.622,252,0.587,253,0.524,254,0.524,255,0.524,256,0.587,258,2.245,260,2.551,261,0.951,264,2.747,265,0.753,266,1.057,267,0.997,268,0.704,269,1.718,270,1.057,272,0.753,274,1.197,275,1.3,276,1.822,277,0.808,278,0.997,279,1.822,280,1.379,281,2.364,282,0.753,283,0.808,284,1.868,285,0.951,287,1.123,288,1.626,289,0.661,290,0.622,291,0.622,292,0.622,293,0.661,294,0.661,296,1.617,299,1.279,325,0.942,327,1.05,358,1.167,360,2.948,363,1.3,365,2.109,373,0.808,380,0.951,383,1.374,385,2.098,387,2.787,396,0.951,399,0.951,401,2.487,403,0.951,404,1.936,408,2.005,410,1.049,413,2.109,414,1.561,415,1.484,416,0.951,417,0.951,418,1.049,419,2.782,420,1.783,421,1.783,422,1.783,423,1.783,424,1.783,425,0.873,426,1.049,427,0.873,428,1.617,429,1.374,439,1.561,457,1.936,514,1.057,550,1.057,556,1.599,565,2.364,566,1.197,592,2.187,594,2.853,595,2.627,600,0.951,620,2.298,621,0.704,622,2.063,624,1.728,625,2.243,627,0.704,628,1.728,630,1.936,633,1.197,648,1.197,650,2.243,651,0.704,657,0.704,682,1.728,683,1.197,684,1.197,685,1.449,686,1.728,687,1.728,688,1.197,697,0.704,698,1.197,703,0.997,706,1.841,707,1.123,708,1.123,709,1.123,710,1.728,711,1.123,713,1.197,715,1.197,726,2.935,729,1.561,738,0.704,739,0.704,743,0.951,745,2.325,746,1.049,747,2.967,748,1.561,749,1.669,750,1.783,751,2.558,752,1.783,753,2.325,754,2.109,755,4.05,756,3.564,757,3.564,758,2.742,759,1.968,760,4.17,761,3.073,762,1.783,763,3.073,764,1.617,765,3.073,766,1.783,767,1.049,768,1.049,769,2.742,770,1.049,771,1.049,772,0.951,773,1.049,774,2.742,775,2.368,776,1.484,777,0.951,778,1.049,779,0.951,780,1.049,781,2.325,782,1.049,783,2.742,784,1.049,785,1.783,786,1.049,787,0.951,788,0.951,789,1.049,790,1.049,791,1.049,792,1.049,793,1.049,794,1.049,795,1.049,796,1.049,797,1.049,798,1.049,799,1.049,800,1.049,801,2.742,802,1.783,803,2.742,804,1.049,805,0.951,806,1.049,807,2.742,808,2.325,809,0.873,810,1.049,811,1.049,812,2.325,813,1.049,814,1.049,815,1.049,816,1.049,817,2.325,818,1.783,819,1.049,820,1.049,821,1.049,822,1.049,823,1.049,824,1.049,825,1.783,826,2.325,827,1.049,828,1.783,829,1.049,830,1.049,831,1.049,832,1.049,833,2.325,834,1.783,835,1.049,836,1.049,837,1.783,838,1.783,839,1.783,840,1.049,841,3.342,842,1.783,843,1.049,844,1.049,845,1.049,846,1.783,847,1.783,848,1.049,849,1.049,850,1.049,851,1.049,852,1.049,853,0.951,854,1.049,855,1.049,856,1.783,857,1.049,858,1.783,859,1.049,860,1.049,861,1.783,862,1.049,863,1.049,864,2.742,865,1.049,866,1.049,867,2.325,868,1.049,869,1.049,870,1.617,871,2.487,872,1.783,873,1.617,874,1.783,875,1.049,876,1.049,877,2.325,878,1.783,879,1.617,880,1.783,881,1.049,882,3.564,883,3.912,884,4.17,885,1.617,886,2.325,887,3.073,888,2.742,889,1.049,890,1.049,891,2.742,892,1.049,893,1.783,894,2.325,895,1.783,896,1.783,897,1.783,898,1.049,899,1.049,900,1.783,901,1.783,902,1.783,903,1.049,904,1.783,905,1.783,906,1.049,907,1.049,908,1.783,909,1.049,910,1.049,911,1.049,912,1.049,913,1.049,914,1.049,915,1.049,916,1.049,917,1.049,918,1.049,919,0.951,920,1.049,921,0.951,941,1.18,943,1.18,958,0.951,959,2.343,960,2.343,961,2.343,962,2.343,963,2.343,964,1.379,965,1.379,966,1.379,967,1.379,968,1.379,969,1.379,970,1.379,971,1.379,972,1.379,973,1.379,974,1.379,975,1.379,976,1.18,977,1.379,978,1.379,979,1.379,980,1.379,981,1.379,982,1.379,983,2.343,984,2.343,985,4.391,986,3.604,987,2.343,988,2.343,989,2.343,990,2.343,991,2.343,992,2.343,993,2.343,994,1.484,995,1.049,996,1.049,997,1.049,998,1.484,999,1.379,1000,1.18,1001,1.379,1002,1.049,1003,1.379,1004,2.343]],["title/components/LandingPageComponent.html",[0,0.206,102,0.949]],["body/components/LandingPageComponent.html",[0,0.322,1,1.013,2,1.701,3,0.208,4,0.184,5,1.319,6,1.319,7,1.319,8,1.319,9,0.184,13,0.895,14,2.923,15,2.129,16,1.25,17,1.815,18,1.721,19,1.308,21,1.308,23,0.621,24,1.308,26,0.777,29,1.339,31,0.961,32,0.021,33,0.906,34,0.621,35,0.961,37,0.895,38,1.241,39,0.317,40,0.208,42,0.208,43,0.184,62,2.004,64,2.278,65,1.567,66,2.278,67,2.445,68,2.313,69,2.707,70,1.558,71,2.411,72,1.652,75,4.266,76,2,77,2.707,78,2.445,79,1.756,81,3.134,82,2.249,83,0.82,84,1.795,85,1.613,86,1.319,87,2.191,88,1.319,89,1.319,90,1.013,91,1.379,92,1.319,93,1.013,94,1.795,95,1.067,96,1.319,97,0.82,98,0.865,99,1.319,100,0.912,101,1.319,102,1.597,103,2.392,104,1.013,105,1.319,106,1.013,107,1.319,108,1.013,109,1.319,110,1.013,111,1.319,112,1.013,113,1.319,114,1.013,115,1.319,116,1.013,117,1.185,118,1.125,119,1.319,120,1.319,121,0.014,122,0.014,144,2.496,166,2.121,209,0.912,211,0.912,264,3.323,266,1.652,267,1.558,269,2.411,270,1.652,272,2,275,2.121,276,2.249,278,2.121,279,2.249,280,2.249,281,3.277,284,1.379,286,3.158,287,1.756,289,2.389,290,2.249,291,2.249,292,2.249,293,1.756,294,1.756,326,2.147,356,2.787,367,4.85,368,4.266,383,3.567,444,2.787,449,3.793,450,3.793,502,3.853,526,3.44,527,3.793,748,1.87,998,2.32,1005,5.206,1006,6.082,1007,6.082,1008,3.662,1009,3.662,1010,3.662,1011,3.662,1012,3.134,1013,4.984,1014,4.629,1015,4.266,1016,5.666,1017,3.662,1018,3.662,1019,3.662,1020,3.662,1021,3.662,1022,3.134,1023,3.134]],["title/components/LoginComponent.html",[0,0.206,104,1]],["body/components/LoginComponent.html",[0,0.286,1,0.813,2,1.457,3,0.167,4,0.148,5,1.058,6,1.058,7,1.058,8,1.058,9,0.148,13,0.767,15,0.902,16,1.003,17,1.761,18,1.67,19,1.121,21,1.121,23,0.498,24,1.121,25,1.695,26,0.906,29,1.445,31,0.771,32,0.021,33,0.804,34,0.994,35,0.771,37,0.903,38,1.252,39,0.389,40,0.167,42,0.167,43,0.148,44,1.526,60,2.503,62,2.356,64,2.458,65,1.621,66,2.021,67,2.218,68,2.099,69,2.348,70,1.25,71,2.139,72,1.326,73,1.926,74,1.326,76,1.605,77,1.817,78,1.716,79,1.409,80,2.946,82,1.326,83,0.658,84,1.537,85,1.382,86,1.058,87,1.987,88,1.058,89,1.058,90,0.813,91,1.181,92,1.058,93,0.813,94,1.537,95,0.856,96,1.058,97,0.658,98,0.694,99,1.058,100,0.732,101,1.058,102,0.771,103,1.003,104,1.526,105,1.058,106,0.813,107,1.058,108,0.813,109,1.058,110,0.813,111,1.058,112,0.813,113,1.058,114,0.813,115,1.058,116,0.813,117,0.951,118,0.902,119,1.058,120,1.058,121,0.012,122,0.012,133,0.956,144,2.411,145,1.985,148,1.244,161,1.605,164,1.244,166,1.817,167,1.374,168,1.382,169,1.624,170,1.605,172,1.003,179,2.503,190,1.716,192,3.47,194,3.249,195,0.771,197,0.813,207,2.028,208,1.723,209,0.732,210,1.058,211,1.374,212,0.694,224,3.808,253,1.118,254,1.118,255,1.118,263,4.723,265,1.605,266,1.326,267,1.25,268,1.501,269,2.139,270,1.326,272,1.605,274,2.819,275,2.139,276,2.49,277,1.723,278,1.817,279,1.926,280,1.926,281,3.099,282,2.746,283,1.723,284,1.391,287,1.409,288,1.326,289,1.409,290,1.926,291,1.926,292,1.926,293,2.047,294,2.047,306,2.028,307,2.819,309,3.185,310,2.819,324,1.409,325,1.716,327,1.465,410,2.236,439,2.568,506,3.496,526,3.808,539,3.808,541,2.503,547,2.931,552,4.68,556,1.457,568,2.218,570,2.028,998,1.862,1014,4.199,1024,2.515,1025,4.269,1026,5.028,1027,4.269,1028,5.518,1029,3.249,1030,2.938,1031,2.938,1032,2.938,1033,3.249,1034,3.249,1035,4.269,1036,4.269,1037,4.46,1038,3.654,1039,2.938,1040,2.515,1041,2.938,1042,4.653,1043,4.653,1044,2.236,1045,2.938,1046,2.236,1047,2.938,1048,2.938,1049,2.938,1050,2.938,1051,2.938,1052,2.938,1053,2.938,1054,2.515,1055,2.938,1056,2.938,1057,4.723,1058,2.946,1059,2.515,1060,2.515,1061,2.515,1062,2.515,1063,2.515,1064,2.515,1065,3.249,1066,2.515,1067,2.938,1068,2.938,1069,3.249,1070,2.236,1071,2.236,1072,2.236,1073,4.269,1074,2.236,1075,2.938]],["title/components/NavigationComponent.html",[0,0.206,106,1]],["body/components/NavigationComponent.html",[0,0.317,1,0.978,2,1.661,3,0.201,4,0.178,5,1.273,6,1.273,7,1.273,8,1.273,9,0.178,13,0.635,15,1.086,16,1.207,17,1.807,18,1.714,19,1.277,21,1.277,23,1.066,24,1.277,29,1.15,32,0.021,33,0.778,37,0.635,38,0.881,39,0.225,40,0.201,42,0.201,43,0.178,62,2.237,64,1.956,65,1.738,66,1.956,67,1.956,68,2.116,69,2.071,70,2.674,72,2.51,73,3.141,74,2.196,77,2.071,78,1.956,83,0.792,84,1.753,85,1.575,86,1.273,87,2.159,88,1.273,89,1.273,90,0.978,91,1.346,92,1.273,93,0.978,94,1.753,95,1.031,96,1.273,97,0.792,98,0.835,99,1.273,100,0.881,101,1.273,102,0.928,103,1.207,104,0.978,105,1.273,106,1.658,107,1.273,108,0.978,109,1.273,110,0.978,111,1.273,112,0.978,113,1.273,114,0.978,115,1.273,116,0.978,117,1.145,118,1.709,119,1.273,120,1.273,121,0.013,122,0.013,133,1.09,151,5.559,172,1.207,179,2.854,197,0.978,203,3.083,204,3.358,264,2.074,269,2.832,272,2.657,273,3.026,275,2.55,276,2.51,278,2.368,279,2.196,280,1.595,284,1.945,287,1.695,290,1.595,291,1.595,292,1.595,299,2.657,344,1.031,363,1.505,413,2.44,414,2.842,416,2.44,417,4.136,419,3.083,428,2.44,429,2.854,457,2.24,566,2.485,751,3.083,759,3.432,944,4.234,948,4.136,957,3.026,994,3.083,995,2.691,996,2.691,1076,3.026,1077,7.138,1078,4.866,1079,4.866,1080,5.564,1081,4.866,1082,5.564,1083,5.993,1084,3.536,1085,4.866,1086,3.536,1087,3.703,1088,4.866,1089,3.536,1090,4.866,1091,5.564,1092,3.536,1093,4.866,1094,3.536,1095,4.866,1096,3.536,1097,4.762,1098,3.536,1099,2.691,1100,3.536,1101,2.691,1102,3.536,1103,3.536,1104,3.536,1105,3.536,1106,3.536,1107,3.536,1108,4.762,1109,5.993,1110,3.536,1111,2.44,1112,4.866,1113,3.536,1114,3.536,1115,3.536,1116,3.536,1117,3.536,1118,3.536,1119,3.536,1120,2.691,1121,2.691,1122,3.536]],["title/injectables/NotyfService.html",[145,1.11,320,1.538]],["body/injectables/NotyfService.html",[3,0.246,4,0.217,9,0.217,13,1.105,23,0.733,24,1.46,26,1.305,29,1.534,31,1.46,32,0.021,33,0.889,34,1.224,35,1.46,37,0.999,38,1.617,39,0.354,40,0.246,42,0.246,43,0.217,44,1.701,68,2.115,121,0.015,122,0.015,133,1.245,145,1.708,155,2.469,161,1.46,167,1.385,168,1.8,169,2.115,172,1.474,185,5.886,190,2.348,195,1.805,197,1.195,203,3.523,211,1.385,231,2.338,267,2.366,269,2.366,275,2.763,320,2.366,323,2.533,324,2.071,414,2.84,528,2.737,1123,3.697,1124,6.128,1125,4.319,1126,5.56,1127,4.319,1128,6.257,1129,6.492,1130,5.56,1131,4.319,1132,5.56,1133,5.56,1134,5.56,1135,5.56,1136,5.56,1137,5.56,1138,6.492,1139,5.56,1140,4.319,1141,4.231,1142,4.319,1143,4.319]],["title/components/PageNotFoundComponent.html",[0,0.206,108,1]],["body/components/PageNotFoundComponent.html",[0,0.364,1,1.303,2,2.005,3,0.268,4,0.237,5,1.696,6,1.696,7,1.696,8,1.696,9,0.237,13,0.846,14,3.444,15,2.261,16,1.608,17,1.866,18,1.77,19,1.542,21,1.542,32,0.02,33,0.939,39,0.3,40,0.268,42,0.268,43,0.237,83,1.055,84,2.115,85,1.901,86,1.696,87,2.413,88,1.696,89,1.696,90,1.303,91,1.625,92,1.696,93,1.303,94,2.115,95,1.373,96,1.696,97,1.055,98,1.113,99,1.696,100,1.173,101,1.696,102,1.236,103,1.608,104,1.303,105,1.696,106,1.303,107,1.696,108,1.854,109,1.696,110,1.303,111,1.696,112,1.303,113,1.696,114,1.303,115,1.696,116,1.303,117,1.524,118,1.446,119,1.696,120,1.696,121,0.016,122,0.016,921,4.853,1128,5.027,1144,4.031,1145,3.25,1146,4.031,1147,6.4,1148,5.873,1149,4.709,1150,4.709]],["title/modules/PagesModule.html",[329,0.726,1151,2.495]],["body/modules/PagesModule.html",[1,1.965,3,0.279,4,0.247,9,0.247,11,3.386,32,0.021,39,0.462,40,0.279,42,0.279,43,0.247,83,1.099,102,1.865,106,1.357,108,1.965,121,0.016,122,0.016,329,0.986,331,1.507,332,2.088,333,3.125,334,2.214,335,2.352,336,1.675,341,3.022,342,2.888,343,2.352,344,1.43,346,2.17,347,2.17,351,3.109,352,2.878,353,2.68,354,3.29,355,2.506,502,3.109,509,4.2,1145,3.386,1151,5.166,1152,4.2,1153,4.2,1154,4.2,1155,4.5,1156,4.907,1157,4.2,1158,4.2,1159,4.2,1160,4.907,1161,4.2,1162,4.2]],["title/modules/PagesRoutingModule.html",[329,0.726,1155,2.29]],["body/modules/PagesRoutingModule.html",[0,0.381,1,1.731,3,0.297,4,0.263,9,0.263,11,3.605,32,0.021,39,0.459,40,0.297,42,0.297,43,0.263,102,1.643,103,1.783,108,1.731,121,0.017,122,0.017,209,1.301,212,1.234,302,2.668,331,1.605,336,1.783,346,1.882,347,2.254,351,3.31,431,3.064,432,3.67,433,3.212,434,3.31,435,3.422,437,3.31,502,3.31,1145,3.605,1155,3.965,1157,4.471,1158,4.471,1159,4.471,1161,4.471,1162,4.471,1163,5.224,1164,5.224]],["title/components/ProfileComponent.html",[0,0.206,110,1]],["body/components/ProfileComponent.html",[0,0.238,1,0.601,2,1.159,3,0.124,4,0.109,5,0.782,6,0.782,7,0.782,8,0.782,9,0.109,13,0.61,15,1.86,16,0.741,17,1.672,18,1.586,19,0.892,21,0.892,23,0.368,24,0.892,25,1.454,26,0.721,28,1.809,29,1.599,31,0.57,32,0.021,33,0.669,34,0.965,35,1.098,37,1.113,38,1.279,39,0.375,40,0.124,41,0.782,42,0.124,43,0.109,44,1.507,56,2.775,62,2.065,64,2.065,65,1.63,66,1.682,67,1.903,68,1.8,69,2.507,70,1.445,71,2.318,72,1.533,73,0.98,74,0.98,76,1.186,77,2.186,78,2.065,79,1.628,82,2.135,83,0.486,84,1.223,85,1.1,86,0.782,87,1.705,88,0.782,89,0.782,90,0.601,91,1.507,92,0.782,93,0.601,94,1.223,95,0.633,96,0.782,97,0.486,98,0.513,99,0.782,100,0.541,101,0.782,102,0.57,103,0.741,104,0.601,105,0.782,106,0.601,107,0.782,108,0.601,109,0.782,110,1.309,111,0.782,112,0.601,113,0.782,114,0.601,115,0.782,116,0.601,117,1.663,118,2.043,119,0.782,120,0.782,121,0.009,122,0.009,133,0.761,138,2.53,142,1.428,143,1.616,144,2.231,145,1.809,147,1.366,148,1.379,164,0.99,165,1.159,166,1.445,167,1.357,168,1.1,170,1.546,179,1.992,195,1.59,199,1.223,200,3.019,206,0.741,209,0.846,210,0.782,211,1.357,212,1.555,242,1.954,251,1.858,266,1.533,267,1.445,268,1.109,269,2.014,270,2.135,271,1.652,275,2.014,276,2.135,278,2.014,279,2.318,280,2.318,281,3.311,284,1.309,287,1.041,289,2.269,290,2.135,291,2.135,292,2.135,293,1.041,294,1.041,307,2.417,309,2.998,310,1.735,316,4.145,321,0.873,344,1.219,373,1.273,383,3.194,535,4.051,554,2.907,555,3.837,556,2.403,557,4.46,566,1.735,568,2.49,594,2.19,620,1.292,748,3.093,749,3.307,775,2.454,776,3.254,1022,1.858,1023,1.858,1046,1.652,1054,1.858,1165,1.858,1166,3.397,1167,3.397,1168,3.581,1169,2.907,1170,4.184,1171,4.397,1172,3.602,1173,4.733,1174,4.733,1175,3.602,1176,3.602,1177,4.733,1178,4.733,1179,4.733,1180,4.733,1181,3.397,1182,3.397,1183,2.907,1184,2.171,1185,2.171,1186,2.907,1187,2.171,1188,4.051,1189,2.171,1190,2.171,1191,2.171,1192,2.171,1193,2.171,1194,2.171,1195,2.907,1196,2.171,1197,2.171,1198,2.171,1199,5.137,1200,2.171,1201,2.171,1202,2.171,1203,2.171,1204,2.171,1205,4.184,1206,2.171,1207,2.171,1208,1.858,1209,2.171,1210,2.171,1211,3.397,1212,2.171,1213,2.171,1214,2.171,1215,2.171,1216,2.171,1217,2.171,1218,2.171,1219,2.171,1220,4.397,1221,5.137,1222,5.137,1223,1.858,1224,2.171,1225,1.858,1226,2.171,1227,4.184,1228,2.171,1229,2.171,1230,2.171,1231,2.171,1232,2.171,1233,2.171,1234,2.171,1235,2.171,1236,2.171,1237,1.858,1238,2.171,1239,2.171,1240,1.858,1241,2.171,1242,2.171,1243,2.171,1244,3.397,1245,2.907,1246,3.397,1247,2.171,1248,3.397,1249,2.171,1250,2.171,1251,2.171,1252,2.171,1253,2.171,1254,2.171,1255,2.171,1256,2.171,1257,2.171,1258,2.171,1259,2.171]],["title/modules/ProfileModule.html",[329,0.726,1260,2.495]],["body/modules/ProfileModule.html",[3,0.283,4,0.25,9,0.25,32,0.021,39,0.459,40,0.283,42,0.283,43,0.25,83,1.114,110,1.971,114,1.971,116,1.971,118,1.527,121,0.017,122,0.017,329,0.999,331,1.527,332,2.116,333,3.144,334,2.243,335,2.383,336,1.697,341,3.032,342,2.911,343,2.383,344,1.449,346,2.187,347,2.187,352,2.916,353,2.715,354,3.316,355,2.539,1260,5.173,1261,4.255,1262,4.255,1263,4.255,1264,4.514,1265,4.971,1266,4.255,1267,4.255,1268,4.255,1269,3.15,1270,4.255]],["title/modules/ProfileRoutingModule.html",[329,0.726,1264,2.29]],["body/modules/ProfileRoutingModule.html",[0,0.382,3,0.299,4,0.265,9,0.265,32,0.021,39,0.459,40,0.299,42,0.299,43,0.265,110,1.737,114,1.737,116,1.737,118,1.614,121,0.017,122,0.017,209,1.309,212,1.242,302,2.685,331,1.614,336,1.794,346,1.893,347,2.262,431,3.083,432,3.683,433,3.22,434,3.33,435,3.431,437,3.33,574,4.499,1264,3.979,1266,4.499,1267,4.499,1268,4.499,1269,3.33,1270,4.499,1271,5.256,1272,5.256]],["title/components/RegisterComponent.html",[0,0.206,112,1]],["body/components/RegisterComponent.html",[0,0.221,1,0.713,2,1.323,3,0.147,4,0.13,5,0.929,6,0.929,7,0.929,8,0.929,9,0.13,13,0.696,15,0.792,16,0.88,17,1.712,18,1.624,19,0.677,21,0.677,23,0.657,24,1.018,25,1.43,26,0.547,29,1.533,31,0.677,32,0.021,33,0.745,34,0.79,35,0.677,37,0.837,38,0.965,39,0.371,40,0.147,42,0.147,60,1.512,62,2.345,64,2.432,65,1.674,66,2.232,67,2.345,68,2.301,69,2.649,70,1.982,71,2.363,72,1.749,73,2.101,74,1.163,77,1.649,78,1.558,79,1.236,80,2.675,82,1.163,83,0.578,84,1.396,85,1.255,86,0.929,87,1.865,88,0.929,89,0.929,90,0.713,91,1.072,92,0.929,93,0.713,94,1.396,95,0.752,96,0.929,97,0.578,98,0.609,99,0.929,100,0.642,101,0.929,102,0.677,103,0.88,104,0.713,105,0.929,106,0.713,107,0.929,108,0.713,109,0.929,110,0.713,111,0.929,112,1.288,113,0.929,114,0.713,115,0.929,116,0.713,117,0.835,118,0.792,119,0.929,120,0.929,121,0.011,122,0.011,133,0.868,142,1.323,143,1.59,144,2.101,145,1.705,148,1.13,161,1.588,164,0.752,165,0.88,166,1.097,167,0.965,168,0.835,170,1.223,172,0.88,174,2.207,179,1.512,181,3.318,190,1.59,192,2.675,196,1.037,197,0.713,206,0.88,207,2.675,208,1.512,209,0.642,210,0.929,212,0.916,224,4.025,231,0.929,253,0.981,254,0.981,255,0.981,265,1.408,266,1.749,267,1.097,268,1.317,269,2.204,270,1.163,272,1.408,274,2.979,275,2.482,276,2.73,277,2.731,278,2.204,279,2.337,280,2.337,281,2.984,282,2.543,283,1.512,284,1.94,286,1.634,287,1.236,288,1.163,289,1.236,290,2.101,291,2.337,292,2.337,293,1.858,294,1.858,299,1.408,306,1.78,307,2.379,309,1.634,310,1.317,324,1.236,325,1.037,327,1.13,385,1.097,414,1.98,415,1.634,427,2.456,429,1.512,435,1.317,439,1.98,527,1.962,545,1.236,547,2.233,552,4.743,555,3.695,556,0.88,566,1.98,568,2.345,685,1.037,748,3.253,749,3.304,759,1.408,809,2.456,948,1.78,958,1.78,994,2.456,997,2.95,998,1.634,1002,1.962,1012,2.207,1014,3.941,1015,4.433,1029,2.95,1033,1.962,1034,1.962,1037,4.439,1038,2.207,1040,2.207,1042,4.225,1043,4.225,1044,1.962,1046,1.962,1057,3.318,1058,1.78,1059,2.207,1060,2.207,1061,2.207,1062,2.207,1063,2.207,1064,2.207,1065,1.962,1066,2.207,1069,1.962,1070,1.962,1071,1.962,1072,1.962,1074,1.962,1099,1.962,1101,1.962,1111,1.78,1120,1.962,1121,3.544,1172,1.962,1175,1.962,1176,1.962,1183,2.207,1188,4.433,1273,1.962,1274,3.876,1275,2.579,1276,4.433,1277,4.657,1278,4.752,1279,2.579,1280,2.579,1281,2.579,1282,2.579,1283,2.207,1284,2.207,1285,2.579,1286,2.579,1287,2.675,1288,2.579,1289,2.579,1290,2.579,1291,2.579,1292,2.207,1293,2.579,1294,2.579,1295,2.579,1296,2.579,1297,3.318,1298,3.318,1299,2.95,1300,1.962,1301,3.544,1302,3.544,1303,1.962,1304,2.207,1305,2.207,1306,2.207,1307,2.207,1308,2.207,1309,2.579,1310,2.579,1311,2.579,1312,5.833,1313,5.328,1314,3.876,1315,3.318,1316,3.318,1317,3.318,1318,3.318,1319,3.318,1320,3.318,1321,2.207,1322,2.579,1323,2.579,1324,2.579,1325,2.579,1326,4.433,1327,2.579,1328,2.579,1329,2.95,1330,2.207,1331,2.207,1332,3.318,1333,2.207,1334,2.207,1335,3.318,1336,1.962,1337,2.207,1338,2.207,1339,3.318,1340,3.318,1341,3.318,1342,3.318,1343,2.207,1344,2.207,1345,2.207,1346,2.207,1347,2.207,1348,2.207,1349,2.207,1350,2.207,1351,2.207,1352,2.207,1353,4.433,1354,2.207]],["title/modules/SharedModule.html",[329,0.726,341,1.538]],["body/modules/SharedModule.html",[3,0.205,4,0.181,9,0.181,32,0.021,39,0.483,40,0.205,42,0.205,43,0.181,83,0.805,106,1.966,121,0.013,122,0.013,208,2.109,329,0.723,331,1.104,332,1.53,333,2.691,334,1.622,335,1.724,336,1.916,341,2.972,342,2.36,343,1.724,344,1.048,346,1.295,347,1.773,354,3.065,355,1.837,363,1.53,492,2.736,494,3.078,495,3.078,643,2.688,885,2.482,1355,3.078,1356,3.078,1357,3.078,1358,4.503,1359,3.596,1360,5.613,1361,5.613,1362,5.613,1363,3.596,1364,5.613,1365,3.596,1366,5.613,1367,3.596,1368,3.596,1369,5.613,1370,4.922,1371,5.613,1372,4.922,1373,5.613,1374,3.596,1375,5.613,1376,3.596,1377,5.613,1378,3.596,1379,5.613,1380,5.613,1381,3.596,1382,5.613,1383,3.596,1384,5.613,1385,3.596,1386,5.613,1387,3.596,1388,5.613,1389,3.596,1390,5.613,1391,3.596,1392,5.613,1393,3.596,1394,5.613,1395,3.596,1396,5.613,1397,3.596,1398,5.613,1399,3.596,1400,5.613,1401,3.596,1402,5.613,1403,3.596,1404,5.613,1405,4.922,1406,5.613,1407,3.596,1408,5.613,1409,3.596,1410,5.613,1411,3.596,1412,5.613,1413,3.596,1414,5.613,1415,3.596,1416,5.613,1417,3.596,1418,5.613,1419,3.596,1420,5.613,1421,3.596,1422,5.613,1423,3.596,1424,5.613,1425,3.596,1426,5.613,1427,3.596,1428,5.613,1429,3.596,1430,5.613,1431,3.596,1432,5.613,1433,3.596,1434,5.613,1435,2.736,1436,2.736,1437,3.596,1438,3.596,1439,3.596]],["title/components/StatsComponent.html",[0,0.206,114,1]],["body/components/StatsComponent.html",[0,0.25,1,0.648,2,1.23,3,0.133,4,0.118,5,0.844,6,0.844,7,0.844,8,0.844,9,0.118,13,0.886,15,0.72,16,0.8,17,1.696,18,1.609,19,0.946,21,0.946,23,0.397,24,0.946,25,1.514,26,0.497,28,1.856,29,1.543,31,1.153,32,0.021,33,0.991,34,1.073,35,1.153,37,1.086,38,1.094,39,0.314,40,0.133,41,0.844,42,0.133,43,0.118,44,1.75,45,0.942,56,2.114,62,1.766,64,1.766,65,0.648,66,0.942,67,1.766,68,2.024,71,1.534,78,1.449,83,0.984,84,1.298,85,1.167,86,0.844,87,1.776,88,0.844,89,0.844,90,0.648,91,0.997,92,0.844,93,0.648,94,1.298,95,0.683,96,0.844,97,0.525,98,0.554,99,0.844,100,0.584,101,0.844,102,0.615,103,0.8,104,0.648,105,0.844,106,0.648,107,0.844,108,0.648,109,0.844,110,0.648,111,0.844,112,0.648,113,0.844,114,1.364,115,0.844,116,0.648,117,0.759,118,0.72,119,0.844,120,0.844,121,0.01,122,0.01,127,3.759,133,0.807,138,2.357,142,1.499,143,1.683,147,1.449,148,1.844,155,1.371,161,0.615,164,1.05,165,1.23,167,0.898,168,1.167,170,0.946,172,2.116,191,2.137,195,1.586,197,1.714,199,1.776,200,2.098,206,0.8,211,1.228,212,1.667,218,2.692,239,0.942,242,2.137,264,2.576,266,1.057,267,0.997,278,0.997,282,1.28,284,1.215,287,2.105,315,2.114,325,1.449,326,1.374,327,1.28,360,1.626,373,1.374,390,1.28,414,1.841,419,1.485,425,2.782,439,2.243,556,1.918,557,3.124,566,2.243,594,1.766,620,2.406,630,2.105,643,3.069,682,1.728,685,2.259,686,1.124,687,1.124,703,1.534,707,1.124,708,1.124,709,1.124,710,1.124,711,1.124,726,1.124,731,1.374,734,1.28,744,2.743,754,1.617,759,2.398,772,3.403,775,3.543,787,2.487,788,1.617,871,3.878,940,2.006,976,2.006,994,3.828,995,2.743,996,1.783,1058,2.487,1087,1.783,1108,3.085,1111,3.031,1141,1.783,1195,3.085,1245,4.22,1300,2.743,1329,2.743,1336,1.783,1435,1.783,1436,4.716,1440,2.006,1441,4.392,1442,3.604,1443,4.392,1444,4.392,1445,4.392,1446,4.392,1447,4.392,1448,4.93,1449,3.604,1450,3.604,1451,4.93,1452,3.604,1453,4.392,1454,3.604,1455,2.343,1456,3.604,1457,4.392,1458,4.392,1459,4.392,1460,2.343,1461,3.604,1462,2.343,1463,6.438,1464,3.604,1465,2.343,1466,5.62,1467,2.343,1468,3.604,1469,4.392,1470,6.197,1471,2.343,1472,2.343,1473,4.81,1474,4.392,1475,3.604,1476,2.343,1477,2.343,1478,2.343,1479,3.604,1480,2.343,1481,2.343,1482,2.343,1483,2.343,1484,3.604,1485,3.604,1486,2.343,1487,4.392,1488,3.604,1489,3.604,1490,2.343,1491,2.343,1492,3.604,1493,3.604,1494,2.343,1495,2.343,1496,2.343,1497,2.343,1498,2.343,1499,2.343,1500,2.343,1501,2.343,1502,2.343,1503,2.343,1504,2.343,1505,3.604,1506,2.343,1507,2.343,1508,2.343,1509,2.343,1510,2.343,1511,2.343,1512,3.604,1513,2.343,1514,2.343,1515,2.343,1516,2.343,1517,2.343,1518,3.604,1519,2.343,1520,2.343,1521,3.604,1522,2.343,1523,2.343,1524,2.343,1525,2.343,1526,2.343,1527,2.343,1528,2.343,1529,2.006,1530,3.604,1531,2.343,1532,2.343,1533,3.604,1534,3.604,1535,2.343,1536,2.343,1537,2.343,1538,3.604,1539,2.006,1540,2.343,1541,2.343,1542,2.343,1543,2.343,1544,2.343,1545,2.343,1546,2.343,1547,2.343,1548,2.343,1549,3.085]],["title/modules/TrackingModule.html",[329,0.726,1550,2.495]],["body/modules/TrackingModule.html",[3,0.288,4,0.255,9,0.255,32,0.021,39,0.455,40,0.288,42,0.288,43,0.255,83,1.135,97,1.603,100,1.783,121,0.017,122,0.017,329,1.018,331,1.557,332,2.157,333,3.17,334,2.287,335,2.43,336,1.73,341,3.046,342,2.946,343,2.43,344,1.477,346,2.213,347,2.213,352,2.972,353,2.768,354,3.355,355,2.589,514,2.287,618,2.589,1550,5.152,1551,4.338,1552,4.338,1553,4.338,1554,4.535,1555,5.068,1556,4.338,1557,4.338,1558,4.338]],["title/modules/TrackingRoutingModule.html",[329,0.726,1554,2.29]],["body/modules/TrackingRoutingModule.html",[0,0.361,3,0.304,4,0.269,9,0.269,32,0.021,39,0.455,40,0.304,42,0.304,43,0.269,97,1.421,100,1.581,121,0.017,122,0.017,209,1.332,212,1.263,302,2.732,331,1.642,336,1.826,346,1.926,347,2.285,431,3.136,432,3.721,433,3.244,434,3.388,435,3.241,437,3.388,618,2.732,751,3.388,1554,4.02,1556,4.577,1557,4.577,1558,4.577,1559,5.348,1560,5.348]],["title/pipes/TrimDecimalsPipe.html",[662,1.733,1358,2.29]],["body/pipes/TrimDecimalsPipe.html",[3,0.274,4,0.243,9,0.243,13,1.071,16,1.646,24,1.266,29,1.139,31,1.266,32,0.021,33,1.034,34,0.818,35,1.266,37,1.071,39,0.307,40,0.274,42,0.274,43,0.243,121,0.016,122,0.016,148,1.737,172,1.646,195,1.774,197,2.032,211,1.485,212,1.139,284,1.334,325,1.939,327,1.737,425,3.056,566,3.045,620,2.69,624,2.858,628,2.858,662,3.24,698,3.045,879,3.329,944,3.67,1000,4.128,1097,4.128,1358,3.776,1561,4.823,1562,5.102,1563,4.128,1564,5.961,1565,5.961,1566,5.961,1567,5.961,1568,6.943,1569,4.823,1570,5.961,1571,6.758,1572,6.758,1573,6.758,1574,5.961,1575,5.961,1576,4.823,1577,4.823,1578,4.823,1579,4.823,1580,4.823]],["title/components/UpdateProfileComponent.html",[0,0.206,116,1]],["body/components/UpdateProfileComponent.html",[0,0.203,1,0.638,2,1.215,3,0.131,4,0.116,5,0.831,6,0.831,7,0.831,8,0.831,9,0.116,13,0.64,15,0.708,16,0.787,17,1.677,18,1.59,19,0.606,21,0.606,23,0.604,24,0.935,25,1.336,26,0.49,28,1.623,29,1.617,31,0.606,32,0.021,33,0.695,34,0.947,35,0.606,37,1.046,38,0.575,39,0.37,40,0.131,41,0.831,42,0.131,60,1.353,62,2.245,64,2.34,65,1.545,66,1.966,67,2.124,68,2.124,69,2.477,70,1.515,71,1.85,72,1.041,73,1.962,74,1.041,77,1.515,78,1.431,79,2.085,80,2.457,82,1.041,83,0.517,84,1.282,85,1.153,86,0.831,87,1.761,88,0.831,89,0.831,90,0.638,91,0.985,92,0.831,93,0.638,94,1.282,95,0.672,96,0.831,97,0.517,98,0.545,99,0.831,100,0.575,101,0.831,102,0.606,103,0.787,104,0.638,105,0.831,106,0.638,107,0.831,108,0.638,109,0.831,110,0.638,111,0.831,112,0.638,113,0.831,114,0.638,115,0.831,116,1.203,117,2.107,118,1.999,119,0.831,120,0.831,121,0.01,122,0.01,130,2.498,133,0.798,138,2.286,142,1.215,143,1.484,144,1.903,145,1.623,148,1.425,161,1.466,164,1.038,165,0.787,166,0.982,167,0.887,168,0.747,169,0.877,170,1.142,172,1.215,179,1.353,190,1.484,192,2.457,194,1.756,195,1.142,196,0.927,197,0.985,200,1.85,202,1.592,203,1.461,204,2.457,205,1.756,206,0.787,207,2.457,208,1.353,209,0.575,210,0.831,212,1.319,224,2.457,231,1.761,241,0.982,242,1.354,248,2.375,252,0.982,253,1.354,254,1.354,255,1.354,256,0.982,265,1.944,266,1.607,267,0.982,268,1.178,269,2.249,270,1.041,271,1.756,274,2.852,275,2.376,276,2.626,277,2.55,278,2.081,279,2.206,280,2.206,281,2.882,282,2.375,283,1.353,284,1.917,286,1.461,287,1.106,288,1.041,289,1.106,290,1.962,291,2.206,292,2.206,293,1.707,294,1.707,299,1.26,310,1.178,325,0.927,327,1.038,402,1.974,414,1.819,415,1.461,427,2.256,429,1.353,435,1.178,439,1.819,444,1.756,530,3.048,539,3.001,541,1.353,545,1.106,552,4.55,555,2.256,556,2.222,557,2.755,566,1.819,568,2.245,570,1.592,620,0.877,649,1.353,685,0.927,703,0.982,748,3.218,749,3.283,759,1.26,809,2.256,948,1.592,958,1.592,994,2.256,997,2.71,998,1.461,1002,1.756,1029,2.71,1033,1.756,1037,4.25,1044,1.756,1058,1.592,1065,1.756,1069,1.756,1070,1.756,1071,1.756,1072,1.756,1074,1.756,1099,1.756,1101,1.756,1111,1.592,1120,1.756,1121,3.309,1168,3.048,1169,1.974,1172,1.756,1175,3.309,1176,1.756,1186,3.722,1220,1.974,1269,4.365,1278,4.523,1283,1.974,1284,1.974,1287,2.457,1292,1.974,1297,3.048,1298,3.048,1299,2.71,1301,3.721,1302,4.021,1303,1.756,1304,1.974,1305,1.974,1306,1.974,1307,1.974,1308,1.974,1312,4.185,1313,3.048,1315,3.048,1316,3.048,1317,3.048,1318,3.048,1319,3.048,1320,3.048,1321,1.974,1326,3.722,1329,2.71,1330,1.974,1331,1.974,1332,3.048,1333,1.974,1334,1.974,1335,3.048,1336,1.756,1337,1.974,1338,1.974,1339,3.048,1340,3.048,1341,3.048,1342,3.048,1343,1.974,1344,1.974,1345,1.974,1346,1.974,1347,1.974,1348,1.974,1349,1.974,1350,1.974,1351,1.974,1352,1.974,1353,4.185,1354,1.974,1581,5.243,1582,1.756,1583,3.561,1584,3.561,1585,3.561,1586,3.561,1587,3.561,1588,3.561,1589,4.348,1590,4.889,1591,4.348,1592,3.722,1593,3.561,1594,2.307,1595,2.307,1596,4.348,1597,2.307,1598,2.307,1599,2.307,1600,2.307,1601,2.307,1602,2.307,1603,2.307,1604,2.307,1605,2.307,1606,2.307,1607,2.307,1608,2.307,1609,2.307,1610,2.307,1611,2.307,1612,2.307,1613,2.307,1614,4.348,1615,2.307,1616,2.307,1617,2.307,1618,4.348,1619,2.307,1620,2.307,1621,2.307,1622,2.307,1623,2.307,1624,2.307,1625,3.561,1626,2.307,1627,2.307,1628,2.307,1629,4.348,1630,2.307,1631,2.307,1632,2.307,1633,2.307,1634,2.307,1635,2.307,1636,2.307,1637,2.307]],["title/interfaces/UserData.html",[358,1.17,747,2.29]],["body/interfaces/UserData.html",[0,0.189,3,0.12,4,0.106,9,0.106,13,0.38,14,1.239,15,1.263,17,0.526,18,0.499,19,0.555,21,0.555,23,0.358,25,0.649,26,0.448,28,1.432,32,0.021,33,0.657,34,0.564,37,0.739,38,1.024,39,0.343,40,0.12,41,0.761,42,0.12,43,0.106,44,1.403,45,1.653,56,2.411,65,0.92,85,0.684,98,1.624,100,0.526,117,0.684,121,0.009,122,0.009,133,0.745,138,1.773,142,1.135,143,1.135,144,1.826,145,1.432,147,1.337,148,1.857,150,1.458,152,1.458,155,0.804,161,1.479,164,0.616,165,0.721,166,0.899,167,1.024,168,0.684,169,0.804,170,1.331,188,1.458,190,1.135,191,1.773,195,1.479,196,1.337,199,1.939,200,0.899,206,0.721,209,0.526,210,0.761,211,1.496,212,1.711,231,0.761,239,2.165,241,0.899,242,2.284,243,0.899,247,0.953,252,0.899,253,0.804,254,0.804,255,0.804,256,0.899,258,2.431,260,2.235,261,1.458,274,1.079,284,1.902,288,2.104,325,0.849,327,1.359,358,1.641,360,2.875,363,0.899,365,2.837,380,1.458,383,1.239,385,2.158,387,2.837,396,1.458,399,1.458,401,2.837,403,1.458,404,1.339,439,1.698,457,2.605,514,0.953,550,1.5,556,1.731,565,2.235,592,2.158,594,2.831,595,1.013,600,1.458,616,1.154,620,2.284,621,1.079,622,2.1,624,1.971,625,2.59,627,1.079,628,1.594,630,2.431,633,1.698,648,1.079,650,2.75,651,1.079,657,1.079,682,2.235,683,1.698,684,1.698,685,1.875,686,2.235,687,2.235,688,1.698,697,1.079,703,1.415,706,2.382,707,1.594,708,1.594,709,1.594,710,2.235,711,1.594,713,1.698,715,1.698,726,2.798,729,2.1,738,1.079,739,1.079,743,1.458,745,2.53,746,1.608,747,3.213,748,2.75,749,2.941,750,1.608,751,1.339,752,1.608,753,1.608,754,1.458,755,3.129,756,1.608,757,1.608,758,2.53,759,1.816,760,3.859,761,2.53,762,1.608,763,1.608,764,1.458,765,2.53,766,1.608,767,1.608,768,1.608,769,3.548,770,1.608,771,1.608,772,1.458,773,1.608,774,1.608,775,2.974,776,2.107,777,1.458,778,1.608,779,1.458,780,1.608,781,3.129,782,1.608,783,1.608,784,1.608,785,2.53,786,1.608,787,1.458,788,1.458,789,1.608,790,1.608,791,1.608,792,1.608,793,1.608,794,1.608,795,1.608,796,1.608,797,1.608,798,1.608,799,1.608,800,1.608,801,2.53,802,1.608,803,1.608,804,1.608,805,1.458,806,1.608,807,3.548,808,3.129,809,1.339,810,1.608,811,1.608,812,3.129,813,1.608,814,1.608,815,1.608,816,1.608,817,3.129,818,2.53,819,1.608,820,1.608,821,1.608,822,1.608,823,1.608,824,1.608,825,2.53,826,3.129,827,1.608,828,2.53,829,1.608,830,1.608,831,1.608,832,1.608,833,3.129,834,2.53,835,1.608,836,1.608,837,2.53,838,2.53,839,2.53,840,1.608,841,4.098,842,2.53,843,1.608,844,1.608,845,1.608,846,2.53,847,2.53,848,1.608,849,1.608,850,1.608,851,1.608,852,1.608,853,1.458,854,1.608,855,1.608,856,2.53,857,1.608,858,2.53,859,1.608,860,1.608,861,2.53,862,1.608,863,1.608,864,1.608,865,1.608,866,1.608,867,1.608,868,1.608,869,1.608,870,1.458,871,2.295,872,1.608,873,1.458,874,1.608,875,1.608,876,1.608,877,2.53,878,1.608,879,1.458,880,1.608,881,1.608,882,1.608,883,1.608,884,1.608,885,1.458,886,2.53,887,2.53,888,1.608,889,1.608,890,1.608,891,1.608,892,1.608,893,1.608,894,2.53,895,1.608,896,1.608,897,2.53,898,1.608,899,1.608,900,1.608,901,1.608,902,2.53,903,1.608,904,2.53,905,2.53,906,1.608,907,1.608,908,2.53,909,1.608,910,1.608,911,1.608,912,1.608,913,1.608,914,1.608,915,1.608,916,1.608,917,1.608,918,1.608,919,1.458,920,1.608,921,1.458]],["title/guards/UserGuard.html",[301,2.29,1638,2.751]],["body/guards/UserGuard.html",[3,0.265,4,0.234,9,0.234,13,1.144,23,0.79,24,1.531,26,0.988,29,1.378,31,1.531,32,0.021,33,0.932,34,0.989,35,1.531,37,1.199,39,0.425,40,0.265,42,0.265,43,0.234,121,0.016,122,0.016,144,2.101,167,1.453,170,1.918,191,2.218,200,2.482,202,4.025,209,1.16,211,1.586,214,4.443,301,3.695,303,3.544,305,5.231,306,3.214,307,3.409,309,4.035,310,2.979,311,3.986,312,5.713,313,5.713,315,4.112,316,5.231,317,4.992,318,3.053,319,5.451,320,2.482,321,1.872,322,3.986,323,2.731,324,2.233,325,1.872,326,2.731,327,1.357,1638,4.439,1639,3.986,1640,4.657,1641,4.657,1642,4.657]],["title/classes/UserModule.html",[43,0.182,1643,2.495]],["body/classes/UserModule.html",[3,0.276,4,0.244,9,0.244,13,0.87,23,0.821,26,1.028,29,1.726,31,1.272,32,0.021,33,0.774,34,1.239,35,1.272,42,0.276,43,0.244,121,0.016,122,0.016,133,1.339,148,1.412,170,1.569,195,1.949,199,2.335,329,0.973,547,3.107,555,4.107,594,2.403,620,2.273,748,3.311,749,3.54,1171,5.548,1223,4.146,1225,4.146,1237,4.146,1240,4.146,1592,5.548,1643,4.798,1644,4.844,1645,4.146,1646,6.482,1647,5.976,1648,5.976,1649,4.844,1650,4.844,1651,4.844,1652,4.844,1653,4.844,1654,4.844,1655,4.844,1656,4.844,1657,4.844,1658,4.844,1659,4.844,1660,4.146,1661,4.844,1662,4.844,1663,4.844,1664,4.844,1665,4.844,1666,4.844,1667,4.844]],["title/injectables/UserService.html",[28,1.11,320,1.538]],["body/injectables/UserService.html",[3,0.2,4,0.177,9,0.177,13,0.871,23,0.597,24,1.273,26,1.029,28,1.489,29,1.623,31,0.923,32,0.021,33,0.562,34,1.064,35,0.923,37,1.249,39,0.412,40,0.2,42,0.2,43,0.177,44,1.341,121,0.013,122,0.013,133,1.086,138,2.693,142,1.894,143,2.041,144,2.505,148,1.413,161,0.923,164,1.828,165,1.655,166,2.063,167,1.208,170,1.825,190,1.201,191,1.844,195,1.744,199,2.336,200,2.924,206,1.201,209,0.876,211,1.382,212,1.623,241,1.497,242,2.527,243,1.497,252,1.497,310,2.834,315,2.843,320,2.063,321,1.414,323,2.063,324,1.686,327,1.743,329,0.974,373,2.063,506,4.108,528,2.228,539,4.329,541,3.254,550,2.188,556,2.374,557,4.353,568,1.949,570,2.428,703,2.063,775,3.254,776,3.072,777,2.428,779,2.428,873,3.346,1042,4.935,1043,4.935,1208,5.55,1529,4.15,1643,3.829,1660,3.011,1668,3.011,1669,4.15,1670,5.548,1671,5.548,1672,5.548,1673,5.98,1674,5.98,1675,5.98,1676,4.849,1677,3.517,1678,3.517,1679,3.517,1680,4.849,1681,3.517,1682,3.517,1683,3.517,1684,3.517,1685,3.517,1686,3.517,1687,4.849,1688,3.517,1689,3.517,1690,3.517,1691,3.517,1692,3.517,1693,3.517,1694,3.517,1695,3.517,1696,3.517,1697,3.517,1698,3.517,1699,3.517,1700,3.517,1701,3.517,1702,3.517,1703,4.849,1704,3.517,1705,4.849,1706,3.517]],["title/coverage.html",[1707,4.229]],["body/coverage.html",[0,0.419,1,1.186,9,0.216,10,3.669,11,2.958,12,3.669,28,1.317,32,0.021,34,0.727,43,0.216,63,3.669,65,1.957,90,1.186,93,1.186,95,1.249,97,0.96,98,1.013,100,1.068,102,1.125,104,1.186,106,1.186,108,1.186,110,1.186,112,1.186,114,1.186,116,1.186,121,0.015,122,0.015,123,4.211,124,2.958,125,3.669,145,1.317,161,1.125,239,1.723,270,1.934,284,1.53,288,2.496,301,3.505,302,2.19,304,3.669,307,2.19,320,2.755,350,2.958,356,4.211,358,2.222,438,3.669,484,3.262,502,2.716,529,3.669,592,1.824,593,3.669,617,3.93,618,3.423,619,3.93,623,2.341,626,2.341,629,2.341,662,2.055,743,4.228,747,2.716,1005,3.669,1024,3.669,1076,3.669,1123,3.669,1144,3.669,1145,2.958,1146,3.669,1165,3.669,1269,3.505,1273,4.211,1287,3.818,1303,4.211,1358,2.716,1440,3.669,1549,4.736,1562,3.669,1563,3.669,1581,4.211,1582,4.211,1638,3.262,1639,3.669,1643,2.958,1645,3.669,1668,3.669,1707,3.669,1708,4.286,1709,4.286,1710,4.286,1711,4.286,1712,4.286,1713,4.286,1714,4.286,1715,5.533,1716,6.702,1717,5.533,1718,5.533,1719,5.533,1720,5.533,1721,4.286,1722,4.286,1723,4.286,1724,5.533,1725,5.533,1726,4.286,1727,4.286,1728,4.286,1729,4.286,1730,5.533,1731,5.533,1732,4.286,1733,4.286,1734,4.286,1735,4.286,1736,4.286,1737,3.669,1738,4.286,1739,5.533,1740,4.286,1741,4.286,1742,3.669,1743,4.286,1744,4.286,1745,4.286,1746,4.286]],["title/dependencies.html",[332,1.851,1747,2.295]],["body/dependencies.html",[32,0.021,40,0.292,121,0.017,122,0.017,208,3.013,209,1.28,321,2.065,332,2.186,334,2.318,355,2.624,492,4.714,493,4.714,541,3.013,1124,4.397,1435,3.91,1436,3.91,1748,5.137,1749,6.27,1750,5.137,1751,6.195,1752,5.137,1753,5.137,1754,5.137,1755,5.137,1756,5.137,1757,5.137,1758,5.137,1759,5.137,1760,5.137,1761,6.195,1762,5.137,1763,5.137,1764,5.137,1765,6.906,1766,5.137,1767,5.137,1768,5.137,1769,5.137,1770,5.137,1771,5.137,1772,5.137,1773,5.137,1774,5.137,1775,5.137,1776,5.137,1777,5.137,1778,5.137,1779,5.137,1780,5.137,1781,5.137,1782,5.137,1783,5.137]],["title/miscellaneous/functions.html",[1784,2.081,1785,3.723]],["body/miscellaneous/functions.html",[23,0.947,32,0.019,37,1.17,121,0.018,122,0.018,204,3.855,231,2.012,274,2.853,545,3.121,1034,4.251,1269,3.539,1273,4.251,1276,4.781,1287,5.05,1299,4.954,1300,4.251,1301,5.243,1302,5.243,1581,4.251,1582,4.954,1784,3.855,1785,4.781,1786,5.585,1787,5.585]],["title/index.html",[23,0.511,1669,2.581,1788,3.015]],["body/index.html",[0,0.375,4,0.254,15,1.547,32,0.017,33,0.805,48,4.312,51,4.312,57,5.645,121,0.017,122,0.017,128,2.415,161,1.323,164,1.922,325,2.025,344,1.468,364,4.312,734,2.751,764,3.477,853,3.477,870,3.477,919,3.477,1087,3.834,1539,6.192,1747,3.834,1749,4.312,1789,5.038,1790,6.122,1791,5.038,1792,6.595,1793,4.312,1794,5.038,1795,6.122,1796,7.03,1797,5.038,1798,5.038,1799,5.038,1800,5.038,1801,5.038,1802,5.038,1803,5.038,1804,6.595,1805,5.038,1806,6.86,1807,5.038,1808,5.038,1809,5.038,1810,5.038,1811,6.122,1812,6.122,1813,6.86,1814,5.038,1815,6.122,1816,6.122,1817,5.038,1818,7.147,1819,5.038,1820,5.038,1821,6.122,1822,5.038,1823,5.038,1824,5.038,1825,5.038,1826,6.595,1827,5.038,1828,3.834]],["title/modules.html",[331,1.517]],["body/modules.html",[32,0.017,121,0.017,122,0.017,330,3.679,331,1.637,340,3.377,341,2.269,458,3.679,463,3.377,464,3.377,486,3.377,493,5.612,521,3.377,805,4.998,1151,3.679,1155,3.377,1260,3.679,1264,3.377,1473,6.198,1550,3.679,1554,3.377,1829,7.374,1830,7.374,1831,7.551]],["title/overview.html",[1828,3.76]],["body/overview.html",[1,1.615,2,1.326,32,0.021,43,0.196,83,0.87,90,1.615,93,1.615,95,1.987,97,1.308,100,1.454,102,1.533,104,1.615,106,1.886,108,1.615,110,1.615,112,1.615,114,1.615,116,1.615,121,0.014,122,0.014,303,2.956,329,0.781,330,4.891,331,1.193,332,1.653,333,1.862,334,1.752,335,1.862,336,1.326,337,3.324,338,3.324,339,3.324,340,3.699,341,3.11,342,2.486,343,1.862,344,1.132,433,1.862,458,5.112,459,3.324,460,3.324,461,3.324,462,3.324,463,3.699,464,4.113,465,5.556,466,4.997,467,5.556,468,4.997,469,5.556,470,4.997,471,5.556,472,4.997,486,4.49,518,3.324,519,3.324,520,3.324,521,3.699,528,2.461,616,2.121,662,1.862,685,2.085,698,1.984,1151,4.966,1152,3.324,1153,3.324,1154,3.324,1155,3.699,1260,4.966,1261,3.324,1262,3.324,1263,3.324,1264,3.699,1355,3.324,1356,3.324,1357,3.324,1358,4.32,1550,4.891,1551,3.324,1552,3.324,1553,3.324,1554,3.699,1737,4.439,1828,2.956,1832,3.884,1833,3.884,1834,3.884]],["title/properties.html",[133,0.974,1747,2.295]],["body/properties.html",[32,0.019,121,0.018,122,0.018,133,1.321,1793,5.047,1835,5.896]],["title/routes.html",[433,2.369]],["body/routes.html",[32,0.018,121,0.018,122,0.018,433,2.842]],["title/miscellaneous/variables.html",[1784,2.081,1836,3.723]],["body/miscellaneous/variables.html",[18,1.32,23,0.947,32,0.02,34,0.947,121,0.018,122,0.018,172,1.907,197,1.545,449,5.243,450,5.243,484,4.954,541,3.276,1141,4.251,1742,4.781,1784,3.855,1836,4.781,1837,5.585,1838,5.585,1839,5.585,1840,5.585,1841,5.585,1842,5.585,1843,5.585,1844,5.585,1845,5.585,1846,5.585,1847,5.585,1848,5.585]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1835,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.0625em",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.12.0",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":423,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.2vh",{"_index":420,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.375em",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.3s",{"_index":1100,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1490,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":1108,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["0.58",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.789",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["0.8",{"_index":1486,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["000436",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["0004ff",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["00076e",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["00115c",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["002fff",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["003c6e",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0099ff",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["01",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["01t${drinkdata.time}:00",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["05em",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0625em",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1.11.3",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.2rem",{"_index":1118,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1.5vh",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["100",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["100vh",{"_index":1095,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":1106,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":1122,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10vh",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["11.30.0",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["12/13",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["12vh",{"_index":1112,"title":{},"body":{"components/NavigationComponent.html":{}}}],["14",{"_index":1737,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14/15",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["15.2.0",{"_index":1749,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["155",{"_index":1116,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":1109,"title":{},"body":{"components/NavigationComponent.html":{}}}],["16",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["1970",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1vh",{"_index":943,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1515,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"overview.html":{}}}],["2.3.0",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":953,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["20/21",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1491,"title":{},"body":{"components/StatsComponent.html":{}}}],["201",{"_index":947,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20px",{"_index":419,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["21",{"_index":406,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["212121",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["21212180",{"_index":418,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["255",{"_index":1114,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25vh",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["28vh",{"_index":945,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2rem",{"_index":1094,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2vh",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["3.0.0",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3/3",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1834,"title":{},"body":{"overview.html":{}}}],["300",{"_index":1487,"title":{},"body":{"components/StatsComponent.html":{}}}],["30kg",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["30vh",{"_index":941,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["33",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":940,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["375em",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3vh",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":1832,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1547,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/5",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":957,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["400",{"_index":1470,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1133,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1149,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1150,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40vh",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["48009b",{"_index":1023,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["4caf50",{"_index":1137,"title":{},"body":{"injectables/NotyfService.html":{}}}],["5",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5.0.2",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1549,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["50px",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["50vh",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5px",{"_index":1093,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5s",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5vh",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["6",{"_index":1833,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["65",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["6e0065",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6f00ff",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6vh",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["7",{"_index":1499,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["700",{"_index":1469,"title":{},"body":{"components/StatsComponent.html":{}}}],["75",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["75em",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["80vh",{"_index":1536,"title":{},"body":{"components/StatsComponent.html":{}}}],["8400ff",{"_index":1022,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["85vh",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["87",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["87008b",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["9",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["95vh",{"_index":1017,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["980328026322",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["997",{"_index":1102,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1110,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1500,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.payload.doc.data",{"_index":665,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":1164,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":958,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1167,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map((a",{"_index":664,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1180,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":312,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["active",{"_index":1182,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["adddrinkamount",{"_index":922,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adding",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["address",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adjustchartsizes",{"_index":1448,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":91,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":436,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["adminformcomponent",{"_index":90,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":302,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":330,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpagecomponent",{"_index":93,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":340,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["afauth",{"_index":1593,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["alert",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["allowed",{"_index":300,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["allows",{"_index":361,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":422,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["already",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["always",{"_index":607,"title":{},"body":{"injectables/DateService.html":{}}}],["amount",{"_index":624,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["amounts",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1363,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":1365,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/bottom",{"_index":1367,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/button",{"_index":1370,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1374,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/chips",{"_index":1378,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1399,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":1403,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1405,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":1415,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slider",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1431,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tree",{"_index":1433,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["apikey",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":95,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appends",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["appid",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":458,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":463,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximate",{"_index":802,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["approximately",{"_index":762,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1455,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1537,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1459,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1497,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1527,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1807,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1545,"title":{},"body":{"components/StatsComponent.html":{}}}],["async",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":310,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":307,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authmodule",{"_index":486,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":521,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":309,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["automatically",{"_index":1800,"title":{},"body":{"index.html":{}}}],["available",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["average",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["await",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["bac",{"_index":760,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["background",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bar",{"_index":643,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1488,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1443,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1484,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":613,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":605,"title":{},"body":{"injectables/DateService.html":{}}}],["block",{"_index":1120,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["blood",{"_index":758,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1018,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bottom",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["box",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["break",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1831,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["browsermodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1806,"title":{},"body":{"index.html":{}}}],["builder",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["button:disabled",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button:first",{"_index":409,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:last",{"_index":411,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:not(:disabled",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["buttons",{"_index":407,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["calculate",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["canactivate",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":311,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1824,"title":{},"body":{"index.html":{}}}],["catch",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":402,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1530,"title":{},"body":{"components/StatsComponent.html":{}}}],["ccblue",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpink",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpurple",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cdr",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["change",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":771,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1463,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":1436,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1087,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["checking",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["checks",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["child",{"_index":427,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["choice",{"_index":1820,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1644,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":739,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1792,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["clicks",{"_index":632,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clip",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["close",{"_index":954,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["cluster_adminmodule",{"_index":337,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":338,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":339,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1152,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1154,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1153,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1261,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1263,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1262,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1355,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1356,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1357,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackingmodule",{"_index":1551,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_declarations",{"_index":1552,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_imports",{"_index":1553,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["code",{"_index":1802,"title":{},"body":{"index.html":{}}}],["collection",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["collection('user",{"_index":777,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["color",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1821,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":1157,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/admin",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["components/drink",{"_index":1556,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/home/home.component",{"_index":1558,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/landing",{"_index":1159,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/login/login.component",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/page",{"_index":1161,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":1266,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/register/register.component",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":1267,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/update",{"_index":1268,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["confirm",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm('are",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1610,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmdelete",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["confirmed",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('invalid",{"_index":740,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.error('user",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":306,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":140,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1647,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":622,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["container.open",{"_index":1103,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contains",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":759,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["core/core.module",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/admin.guard",{"_index":434,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["coremodule",{"_index":464,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1533,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1707,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cps",{"_index":647,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["create",{"_index":786,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["creates",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["createuserwithemailandpassword",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":315,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentemail",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currenttime",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1628,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":775,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["d3",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":594,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date().gettime",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(event.target.value",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1504,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1502,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1503,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1501,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date:'yyyy",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:\\'yyyy",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["dateinput",{"_index":765,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":592,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1514,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1510,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1571,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1568,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1565,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":1438,"title":{},"body":{"modules/SharedModule.html":{}}}],["decimals.pipe.ts",{"_index":1563,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1569,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":333,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["decoration",{"_index":1117,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["deep",{"_index":1540,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":403,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletion",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":955,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detail.alcohol",{"_index":796,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":794,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":795,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":793,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":942,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":791,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map((detail",{"_index":792,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1798,"title":{},"body":{"index.html":{}}}],["development",{"_index":1794,"title":{},"body":{"index.html":{}}}],["digit",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["direction",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["directive",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1805,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1810,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1138,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1129,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1809,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1534,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["div.drink",{"_index":949,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["div:last",{"_index":950,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["doc(currentuserid",{"_index":778,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["doc(drinkid",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc(this.editingdrinkid",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["doc.data",{"_index":1523,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1522,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1524,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set(drinkamountdata",{"_index":737,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["docsnapshot",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1511,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["drankdrinksref",{"_index":1518,"title":{},"body":{"components/StatsComponent.html":{}}}],["drink",{"_index":98,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.alcohol",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.amount",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.calories",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.category",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":939,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":404,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":675,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.time.split(':').map(number",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":623,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamountdata",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkamounts",{"_index":630,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":626,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1512,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":239,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.drinkamounts",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdata.ml",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.time",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":788,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1526,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1528,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":1560,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["drinklistcomponent",{"_index":97,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkmlinput",{"_index":951,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinkname",{"_index":657,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":360,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":754,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":638,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimeinput",{"_index":952,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinktimes",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1132,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1819,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":1101,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["edit",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["eee",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":745,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["elimination",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{}}}],["emits",{"_index":610,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["encapsulation",{"_index":1078,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1818,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["enter",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["entries",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.findindex",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entryid",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["entryindex",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1126,"title":{},"body":{"injectables/NotyfService.html":{}}}],["estimated",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["estimatedsobertime",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["execute",{"_index":1815,"title":{},"body":{"index.html":{}}}],["exist",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existing",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata.drinkamounts",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exists",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exit",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{}}}],["f44336",{"_index":1139,"title":{},"body":{"injectables/NotyfService.html":{}}}],["f700ff",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["false",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{}}}],["fb",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":783,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":774,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ff00dd",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ff00ff",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1801,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1542,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fills",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filterdrinks",{"_index":670,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":642,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":669,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["find",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":629,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom(this.auth.authstate",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["fixed",{"_index":944,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["flat",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["float",{"_index":408,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["form.component.html",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:115",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:20",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:24",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:28",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:79",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:93",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["formats",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formattedtime",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formbuilder",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontainer",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontainer>h1",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol('male",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formdata",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":1361,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":1162,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["found.component.html",{"_index":1148,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1147,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1146,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1145,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1785,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1825,"title":{},"body":{"index.html":{}}}],["future",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1535,"title":{},"body":{"components/StatsComponent.html":{}}}],["gb",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["gender",{"_index":749,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1583,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["genderselection",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["genderselection>label",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genderselection>label>input",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gendertemp",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1804,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1791,"title":{},"body":{"index.html":{}}}],["generates",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["get's",{"_index":1596,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getauth",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["getconfirmpassword",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["getdate",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getdrinks",{"_index":660,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["getformatteddate(date",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1172,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1589,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getpassword",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1173,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1590,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1174,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":597,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1669,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1175,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1176,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["gradient(135deg",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["graph",{"_index":1473,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1444,"title":{},"body":{"components/StatsComponent.html":{}}}],["gray",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["green",{"_index":412,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["group",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":301,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["habits",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1091,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handles",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["headercontainer",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["help",{"_index":1826,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidden",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["history.state.drink",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":608,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":751,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/TrackingRoutingModule.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":752,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":753,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1478,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1468,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1452,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["hours",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1799,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":1092,"title":{},"body":{"components/NavigationComponent.html":{}}}],["icons",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["image",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["img",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./admin/admin.module').then((m",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then((m",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then((m",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tracking/tracking.module').then((m",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1543,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["including",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":741,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["infocontainer",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["initialization",{"_index":649,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initializeapp",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializedrinkdata",{"_index":923,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["initializedrinkdata(drinkname",{"_index":658,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initializeform",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":320,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1119,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inner",{"_index":1016,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["innercontainer",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["input",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["input[type=\"radio",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["input[type=\"radio\"]:checked+span",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inputfieldzt",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inset(100",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["instantly",{"_index":611,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":358,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":616,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["isadmin",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isopen",{"_index":1082,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isuser",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["it's",{"_index":1166,"title":{},"body":{"components/ProfileComponent.html":{}}}],["items",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["iterate",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":1111,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["karma",{"_index":1817,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["kcal/serving",{"_index":938,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["keep",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["key",{"_index":627,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:first",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:last",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":103,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingbuttondiv",{"_index":1019,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landinglogin",{"_index":1021,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landingpagecomponent",{"_index":102,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["landingregister",{"_index":1020,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["large",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["last7days",{"_index":1496,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1509,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["later",{"_index":656,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["latest",{"_index":609,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1474,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1475,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1445,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1498,"title":{},"body":{"components/StatsComponent.html":{}}}],["letter",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["li",{"_index":428,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["li:not(:last",{"_index":426,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["lightgray",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["linear",{"_index":291,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list",{"_index":363,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":1557,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["list.component.html",{"_index":636,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":637,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":619,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:114",{"_index":930,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:128",{"_index":929,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:138",{"_index":928,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:156",{"_index":931,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:164",{"_index":927,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:175",{"_index":926,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:34",{"_index":742,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:58",{"_index":933,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:62",{"_index":936,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:66",{"_index":934,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:70",{"_index":935,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:74",{"_index":932,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:89",{"_index":937,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:95",{"_index":925,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":618,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["listens",{"_index":1457,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":631,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":744,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1449,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1461,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadchildren",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":317,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpiechartdata",{"_index":1450,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1464,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":772,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["log",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":526,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttondiv",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":104,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["loop",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["m.adminmodule",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trackingmodule",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":359,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map(([name",{"_index":790,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["map((actions",{"_index":663,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["margin",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["mat",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matautocompletemodule",{"_index":1362,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":1364,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbottomsheetmodule",{"_index":1366,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":1369,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1371,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1373,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{}}}],["matches",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdatepickermodule",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogmodule",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{}}}],["materror",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["matexpansionmodule",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldupdate",{"_index":1634,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformfieldupdate>mat",{"_index":1635,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformlogin",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformregister",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matformregister>mat",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matgridlistmodule",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.max",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(...pastdrinks.map((drink",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(earliestalldrinktime.gettime",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1489,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1485,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.min(...drinktimes.map((drink",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.random",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["maticonmodule",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1400,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginatormodule",{"_index":1402,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1404,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1406,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":1408,"title":{},"body":{"modules/SharedModule.html":{}}}],["matripplemodule",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidermodule",{"_index":1416,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbarmodule",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsortmodule",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1428,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattreemodule",{"_index":1432,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":425,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["mdc",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["media",{"_index":1544,"title":{},"body":{"components/StatsComponent.html":{}}}],["menu",{"_index":1077,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":738,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["merging",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["message",{"_index":1128,"title":{},"body":{"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{}}}],["messages",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1784,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{}}}],["mm",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mmm",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":329,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1827,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":364,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["navigates",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigation",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1081,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1080,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":1439,"title":{},"body":{"modules/SharedModule.html":{}}}],["navigation?.extras?.state",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":106,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":405,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["necessary",{"_index":635,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":1822,"title":{},"body":{"index.html":{}}}],["needed",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1618,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":677,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1625,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1614,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":1539,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["ngneat/hot",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":1541,"title":{},"body":{"components/StatsComponent.html":{}}}],["ngxchartsmodule",{"_index":1434,"title":{},"body":{"modules/SharedModule.html":{}}}],["none",{"_index":417,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["notification",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1183,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1124,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":145,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["nowrap",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["null",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":620,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["object",{"_index":1141,"title":{},"body":{"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map(([category",{"_index":1532,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts",{"_index":789,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1622,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1525,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1513,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1507,"title":{},"body":{"components/StatsComponent.html":{}}}],["once",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondatechange",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondatechange(event",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondrinkclick(drink",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["oninit",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1451,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":139,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":1088,"title":{},"body":{"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":750,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":266,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["overlay",{"_index":1105,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":1828,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["package",{"_index":1747,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":687,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":351,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["page.component.html",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":367,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":356,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1008,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:22",{"_index":1010,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:24",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:29",{"_index":1009,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:51",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:68",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:76",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:84",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":350,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":108,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{}}}],["pages/components/landing",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesmodule",{"_index":1151,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":1155,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1577,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["passwordsdontmatch",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["past",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":435,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{}}}],["per",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["personal",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":1272,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["picker",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1466,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1446,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1493,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1447,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1492,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":662,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap(({user",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipes",{"_index":1561,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":1437,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1575,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1572,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["please",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pointer",{"_index":429,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":414,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["present",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":784,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":118,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":111,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":1270,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profile.component.html",{"_index":1169,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1168,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1582,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profile.component.ts:100",{"_index":1599,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:109",{"_index":1607,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:115",{"_index":1608,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1609,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:127",{"_index":1611,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:133",{"_index":1612,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:140",{"_index":1598,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:151",{"_index":1597,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:168",{"_index":1595,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:186",{"_index":1600,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1605,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:53",{"_index":1602,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1606,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:61",{"_index":1601,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:65",{"_index":1603,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1604,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1594,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":1269,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profileadminbtn",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilebuttondiv",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecontainer",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilelogoutbtn",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilemodule",{"_index":1260,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1592,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1584,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profileroutingmodule",{"_index":1264,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilestatsbtn",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilesub",{"_index":1170,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileupdatebtn",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1790,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1517,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1508,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":628,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{}}}],["provideauth",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":335,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["providestorage",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":634,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["pwcheck",{"_index":1585,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["querysnapshot",{"_index":1520,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rate",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ratio",{"_index":1546,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1458,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":1360,"title":{},"body":{"modules/SharedModule.html":{}}}],["record",{"_index":787,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["recorded",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["rect(0",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["red",{"_index":410,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttoadminformadddrink",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1177,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1006,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1178,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1007,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1179,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('email",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["reference",{"_index":764,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":527,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":113,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1646,"title":{},"body":{"classes/UserModule.html":{}}}],["registerbutton",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerbuttondiv",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":112,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1171,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["registers",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":415,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["reload",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["remaining",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["remixicon",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["result",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":327,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1505,"title":{},"body":{"components/StatsComponent.html":{}}}],["rgb(20",{"_index":1096,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgb(201",{"_index":946,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgb(255",{"_index":956,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgba($color",{"_index":421,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["rgba(0",{"_index":1107,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(132",{"_index":1113,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(72",{"_index":1115,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1135,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":316,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":432,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":437,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":313,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":433,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["routing.module.ts",{"_index":431,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["row",{"_index":1548,"title":{},"body":{"components/StatsComponent.html":{}}}],["rules",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["run",{"_index":1796,"title":{},"body":{"index.html":{}}}],["running",{"_index":1811,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1803,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":640,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":644,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1538,"title":{},"body":{"components/StatsComponent.html":{}}}],["select",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["selectdrink",{"_index":924,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":666,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":595,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":596,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":639,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["separate",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1797,"title":{},"body":{"index.html":{}}}],["server",{"_index":1795,"title":{},"body":{"index.html":{}}}],["serves",{"_index":357,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":322,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["serving",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":600,"title":{},"body":{"injectables/DateService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sets",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":598,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":601,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["shape",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["shared/navigation/navigation.component",{"_index":1160,"title":{},"body":{"modules/PagesModule.html":{}}}],["shared/shared.module",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["sharedmodule",{"_index":341,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":1368,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":1506,"title":{},"body":{"components/StatsComponent.html":{}}}],["shows",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":1014,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["snapshotchanges",{"_index":661,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["sober",{"_index":761,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":763,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":424,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["spacing",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["span",{"_index":1121,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["specific",{"_index":633,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":1407,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/.../environment.ts",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../update",{"_index":1787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/admin/admin",{"_index":430,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/admin/admin.module.ts",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/components/admin",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":525,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/login/login.component.ts",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/login/login.component.ts:20",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:23",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:39",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:44",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:50",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:58",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/register/register.component.ts",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/components/register/register.component.ts:105",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:111",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:119",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:47",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:60",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:76",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:81",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:87",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:93",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:99",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":304,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":308,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:26",{"_index":314,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1639,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1640,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:26",{"_index":1641,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/services/authentication.service",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:17",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:32",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:40",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:45",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:52",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:59",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:69",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:76",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/date.service",{"_index":621,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/date.service.ts",{"_index":593,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":606,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":604,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:24",{"_index":602,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:32",{"_index":599,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/notyf/notyf.service",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/notyf/notyf.service.ts",{"_index":1123,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:10",{"_index":1125,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:16",{"_index":1140,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:41",{"_index":1131,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:49",{"_index":1127,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/user/user.module.ts",{"_index":1645,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.module.ts:10",{"_index":1654,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:11",{"_index":1650,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:12",{"_index":1648,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:5",{"_index":1651,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:6",{"_index":1655,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:7",{"_index":1649,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:8",{"_index":1652,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:9",{"_index":1653,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:22",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:26",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:36",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:43",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:62",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:75",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:88",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/landing",{"_index":1005,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/page",{"_index":1144,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages",{"_index":1163,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1156,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/profile/components/profile/profile.component.ts",{"_index":1165,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/profile/profile.component.ts:107",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:116",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:131",{"_index":1184,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:141",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:150",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:157",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:164",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:22",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:26",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:30",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:34",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:38",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:42",{"_index":1181,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:65",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:88",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:98",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts",{"_index":1440,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/stats/stats.component.ts:116",{"_index":1465,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:18",{"_index":1471,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:22",{"_index":1477,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:26",{"_index":1476,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:31",{"_index":1472,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:35",{"_index":1454,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:48",{"_index":1456,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:56",{"_index":1467,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:69",{"_index":1460,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:87",{"_index":1462,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/update",{"_index":1581,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/profile/profile",{"_index":1271,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1265,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/navigation/navigation.component.ts",{"_index":1076,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/shared/navigation/navigation.component.ts:16",{"_index":1086,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:21",{"_index":1084,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/pipes/trim",{"_index":1562,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1359,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tracking/components/drink",{"_index":617,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts",{"_index":743,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts:117",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:134",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:192",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:264",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:276",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:287",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:294",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:301",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:309",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:322",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:43",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:47",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:51",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:55",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:59",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:63",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:67",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:88",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:93",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/tracking",{"_index":1559,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["src/app/tracking/tracking.module.ts",{"_index":1555,"title":{},"body":{"modules/TrackingModule.html":{}}}],["src/environments/environment.ts",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1788,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":115,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1442,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1441,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":114,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storagebucket",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":655,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["stored",{"_index":1808,"title":{},"body":{"index.html":{}}}],["stores",{"_index":676,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["style",{"_index":416,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["subscribe",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["subscribers",{"_index":612,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1130,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sum",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1829,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["svg",{"_index":1830,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1435,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["tempamounts",{"_index":646,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["temporary",{"_index":645,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tempstring",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":641,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":671,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every((term",{"_index":674,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1814,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1823,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1813,"title":{},"body":{"index.html":{}}}],["text",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["then((result",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.adjustchartsizes",{"_index":1479,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1627,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1519,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(this.currentuserid",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.currentuser",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.subscribe(async",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isadmin",{"_index":328,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1642,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.login(email",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1494,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":651,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe((date",{"_index":773,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(this.selecteddate",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.deletedrinkfromfirestore(drink",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkform",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":785,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":653,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter((drink",{"_index":673,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1659,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":769,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":768,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":654,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe(map(user",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1619,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1620,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe((drinks",{"_index":652,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getweight",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1516,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1656,"title":{},"body":{"classes/UserModule.html":{}}}],["this.initializedrinkdata(drink.name",{"_index":667,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.initializeform",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.iseditmode",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.isopen",{"_index":1090,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1480,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1481,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyf.error(message",{"_index":1143,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1142,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('no",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('something",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('drink",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('password",{"_index":1630,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1624,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.notyfservice.success('url",{"_index":1613,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.password?.value",{"_index":1626,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1531,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1495,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1661,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilesub",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pwcheck",{"_index":1629,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.registerageindays",{"_index":1663,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/admin",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/adminform",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":1012,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/auth/register",{"_index":1011,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.router.navigate(['/pages/landing",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate(['/profile/personalstats",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/profile/profile",{"_index":1632,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.router.navigate(['/profile/updateprofile",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/tracking/drinklist",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.router.navigate(['/tracking/home",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":672,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":650,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":684,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":603,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":614,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":615,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":668,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.tempamounts[drink.name",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.tempamounts[drinkname",{"_index":659,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.totalcalories",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.userdata",{"_index":781,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuseremailstring",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.weight",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1615,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1616,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["throw",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":625,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":767,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":1372,"title":{},"body":{"modules/SharedModule.html":{}}}],["togglemenu",{"_index":1083,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1085,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tolocaletimestring('en",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tools",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["topromise",{"_index":779,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tostring",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["total",{"_index":755,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":756,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":757,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{}}}],["trackingmodule",{"_index":1550,"title":{"modules/TrackingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingroutingmodule",{"_index":1554,"title":{"modules/TrackingRoutingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trailing",{"_index":1579,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":1097,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["transform(value",{"_index":1567,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":1099,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["translatex",{"_index":1098,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1104,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["triggers",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1566,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimals:2",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["trimdecimalspipe",{"_index":1358,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1573,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1574,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1564,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1570,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":1136,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":413,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["undefined",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unelevated",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unique",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["unit",{"_index":1812,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1529,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1578,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":1015,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":117,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["update(drinkdata",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["update(updates",{"_index":1623,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebutton",{"_index":1637,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebuttondiv",{"_index":1636,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["updateddrinkamounts",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name].push",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateform",{"_index":1633,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/ProfileRoutingModule.html":{}}}],["updateprofile(user",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":116,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1586,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1591,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["updates.gender",{"_index":1621,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1617,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1631,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["uploaded",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["urltree",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":1158,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":648,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["used",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1660,"title":{},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user.gender",{"_index":1666,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1657,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1662,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1664,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1665,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1658,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1667,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":747,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":776,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":782,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":780,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocs",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["userguard",{"_index":1638,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1643,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1587,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(0",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(1",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(30",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.minlength(8",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1576,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["valuechanges",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["values",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1836,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1793,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1816,"title":{},"body":{"index.html":{}}}],["view",{"_index":362,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":746,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":766,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1089,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1079,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["watches",{"_index":770,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["weight",{"_index":748,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1588,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1013,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1521,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.confirm",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["window.innerheight",{"_index":1483,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1482,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1453,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrap",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["wrong",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":1134,"title":{},"body":{"injectables/NotyfService.html":{}}}],["y",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["yyyy",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":948,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["zero",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1580,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1789,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        \n    About Us\n    Thank you for using our application! \n        The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits. \n        This app is for personal use only and should not be used commercially in any form.\n    \n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                .innerContainer {\n    width: 80%;\n    height: 100%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 70%;\n}\n\n.innerContainer > h1 {\n    font-size: 5vh;\n    padding-bottom: 10vh;\n}\n\n.innerContainer > p {\n    font-size: large;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Thank you for using our application!         The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits.         This app is for personal use only and should not be used commercially in any form.    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the form with default values and validation rules.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:20\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss'],\n})\nexport class AdminFormComponent {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm: FormGroup;\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [\n          caloriesPerServing,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    } else {\n      this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        ml: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: ['', Validators.required],\n        caloriesPerServing: [\n          '',\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.initializeForm();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Initializes the form with default values and validation rules.\n   */\n  initializeForm(): void {\n    this.drinkForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      abv: [\n        null,\n        [Validators.required, Validators.min(0), Validators.max(100)],\n      ],\n      caloriesPerServing: [null, [Validators.required, Validators.min(0)]],\n      ml: [null, [Validators.required, Validators.min(1)]],\n      category: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   *\n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs\n            .collection('drink')\n            .doc(this.editingDrinkId)\n            .update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.router.navigate(['/admin/admin']);\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Update drink' : 'Add a new drink' }}\n\n  \n    \n    \n      Name\n      \n    \n\n    \n    \n      Alcohol by Volume (ABV %)\n      \n    \n\n    \n    \n      Calories per Serving\n      \n    \n\n    \n    \n      Volume (ml)\n      \n    \n\n    \n    \n      Category\n      \n    \n\n    \n    \n      Submit\n    \n  \n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                .admin-form-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-form-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n}\n\n.drink-form {\n  width: 40vh;\n  height: 25vh;\n  padding-top: 2vh;\n}\n\n.form-group {\n  text-align: center;\n  margin-bottom: 3vh;\n}\n\n.drink-form input {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.admin-form-button-div {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n}\n\n.admin-form-button {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.admin-form-button:disabled {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: gray;\n  background-image: linear-gradient(135deg, #00115c 0%, #000436 100%);\n  cursor: not-allowed;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Update drink\\' : \\'Add a new drink\\' }}                Name                        Alcohol by Volume (ABV %)                        Calories per Serving                        Volume (ml)                        Category                        Submit      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    \n      return this.authService.isAdmin();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AdminFormComponent, AdminPageComponent],\n  imports: [SharedModule, AdminRoutingModule, CommonModule],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss'],\n})\nexport class AdminPageComponent {\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs\n      .collection('drink')\n      .valueChanges({ idField: 'id' })\n      .subscribe(\n        (drinks) => {\n          this.drinks = drinks;\n        },\n        (error) => {\n          console.error('Error fetching drinks', error);\n        }\n      );\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.router.navigate(['/admin/adminform']);\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.router.navigate(['/admin/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  All Drinks\n  \n    \n      {{ drink.name }}\n      \n        Delete &nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp; Edit\n      \n    \n  \n  \n    Add New Drink\n  \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                .admin-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.add-drink-button {\n  margin-left: 21%;\n  margin-top: 10%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.buttons-div {\n  float: right;\n}\n\n.buttons-div > button:first-of-type {\n  color: red;\n}\n\n.buttons-div > button:last-of-type {\n  color: green;\n}\n\n.add-drink-button-div {\n  width: 100%;\n}\n\n.admin-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.admin-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All Drinks            {{ drink.name }}              Delete                Edit                  Add New Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from \"@angular/router\";\nimport { AdminPageComponent } from \"./components/admin-page/admin-page.component\";\nimport { AdminFormComponent } from \"./components/admin-form/admin-form.component\";\nimport { NgModule } from \"@angular/core\";\nimport { AdminGuard } from \"../core/guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard] },\n  { path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth, AuthModule } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingPageComponent } from './pages/components/landing-page/landing-page.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingPageComponent },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'pages',\n    loadChildren: () =>\n      \"import('./pages/pages.module').then((m) => m.PagesModule)\",\n  },\n  {\n    path: 'profile',\n    loadChildren: () =>\n      \"import('./profile/profile.module').then((m) => m.ProfileModule)\",\n  },\n  {\n    path: 'tracking',\n    loadChildren: () =>\n      \"import('./tracking/tracking.module').then((m) => m.TrackingModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [SharedModule, AuthRoutingModule, CommonModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Auth, signInWithEmailAndPassword, authState, createUserWithEmailAndPassword, updateProfile } from '@angular/fire/auth';\nimport { from, map, Observable, switchMap } from 'rxjs';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n  \n  /**\n   * \n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(private auth: Auth, private fireAuth: AngularFireAuth) { }\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string){\n    return from(\n      signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser(){ return this.currentUser$; }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == this.auth.currentUser?.email;}));\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == \"admin@zt.com\"}));\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string){\n    return from(createUserWithEmailAndPassword(this.auth, email, password))\n    .pipe(switchMap(({user}) => updateProfile(user, {displayName: username})));\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string){\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser(){ return from(this.auth.signOut()); }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                            \n                                tempAmounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                initializeDrinkData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink tracking to be uploaded\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDrinkData\n                        \n                    \n                \n            \n            \n                \ninitializeDrinkData(drinkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Initializes a temporary value to store drink data later\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the given drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:74\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:58\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:66\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:70\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:95\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:62\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:89\n                        \n                    \n\n            \n                \n                    Temporary data for consumed drink.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n    \n        \n  Add Drink\n\n  \n\n  \n    \n      {{ drink.name }}\n      \n        \n        {{drink.name}}\n        ABV: {{ drink.abv}}\n        Kcal/Serving: {{ drink.caloriesPerServing}}\n        Category: {{ drink.category}}\n        Size: {{ drink.ml}} ml\n        \n          Amount (ml)\n          \n          Time\n          \n          Add\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                .drink-list {\n  width: 35vh;\n  position: relative;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.drink-list ul {\n  position: relative; \n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\n.drink-list > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.drink-list li {\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  padding: 20px;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drink-details {\n  padding: 1vh;\n  position: fixed;\n  top: 0;\n  margin-top: 28vh;\n  margin-left: -5vh;\n  width: 40vh;\n  color: rgb(201, 201, 201);\n\n  z-index: 10;\n  background-color: #212121;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  text-align: center;\n}\n\n.drink-name {\n  margin-bottom: 2vh;\n  color: white;\n}\n\ndiv.drink-details div:last-of-type {\n  margin-top: 5vh;\n}\n\n.search-bar {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.drinkMlInput,\n.drinkTimeInput {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drinkMlInput {\n  margin-bottom: 1vh;\n}\n\n.add-drink-button {\n  margin-top: 20%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.close-drink-detail {\n  color: rgb(255, 0, 0);\n  margin-left: 40%;\n  position: absolute;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Drink              {{ drink.name }}                      {{drink.name}}        ABV: {{ drink.abv}}        Kcal/Serving: {{ drink.caloriesPerServing}}        Category: {{ drink.category}}        Size: {{ drink.ml}} ml                  Amount (ml)                    Time                    Add                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the drink tracking page and the overall data.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bac\n                            \n                            \n                                    \n                                dateInput\n                            \n                            \n                                drinksForTheDay\n                            \n                            \n                                selectedDate\n                            \n                            \n                                soberTime\n                            \n                            \n                                totalCalories\n                            \n                            \n                                totalDrinks\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateBAC\n                            \n                            \n                                calculateTotals\n                            \n                            \n                                    Async\n                                deleteDrinkFromFirestore\n                            \n                            \n                                    Async\n                                fetchDrinksForTheDay\n                            \n                            \n                                    Async\n                                fetchUserData\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                redirectToDrinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService, dateService: DateService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBAC\n                        \n                    \n                \n            \n            \n                \ncalculateBAC()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Calculates approximate blood alcohol content for given day.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If user data is not present then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotals\n                        \n                    \n                \n            \n            \n                \ncalculateTotals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:264\n                        \n                    \n\n\n            \n                \n                        Calculates total calories and drinks for the day.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDrinkFromFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDrinkFromFirestore(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:322\n                        \n                    \n\n\n            \n                \n                        Removes the selected drink from the user's consumed drinks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchDrinksForTheDay\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDrinksForTheDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Fetches the user's consumed drinks for the day.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Fetches user data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Formats the given date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The given date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The given date but properly formatted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the page.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:276\n                        \n                    \n\n\n            \n                \n                        Sets proper data on date change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event that triggers this method.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:309\n                        \n                    \n\n\n            \n                \n                        Shows alert for drink deletion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:294\n                        \n                    \n\n\n            \n                \n                        Opens the date picker.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToDrinks\n                        \n                    \n                \n            \n            \n                \nredirectToDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:301\n                        \n                    \n\n\n            \n                \n                        Redirects to drink list page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bac\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:59\n                        \n                    \n\n            \n                \n                    Blood alcohol content for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Reference to the dateInput element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksForTheDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:47\n                        \n                    \n\n            \n                \n                    Drinks for the selected day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        soberTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    The time by the user will be sober approximately.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:51\n                        \n                    \n\n            \n                \n                    Total calories for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:55\n                        \n                    \n\n            \n                \n                    Total amount of drinks for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                        \n                    \n\n            \n                \n                    The user's personal data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    -->\n\n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    \n\n    \n      \n      \n    -->\n\n    \n      \n    \n  \n\n   0\">\n    \n      \n        {{ drink.name }}\n        \n         {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |\n        trimDecimals:2 }} kcal\n        \n      \n    \n  \n  \n    No drinks recorded for this day\n  \n\n  \n    \n      Total calories for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalCalories | trimDecimals:2 }}-->\n      Total calories:{{ totalCalories | trimDecimals:2 }} kcal\n    \n    \n      Number of drinks for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalDrinks }}-->\n      Number of drinks:{{ totalDrinks }}\n    \n    \n    \n      Estimated BAC:{{ bac | number: '1.2-2' }}%\n      Sober:~ {{ soberTime | date: 'EEE MMM dd yyyy HH:mm:ss'\n          }}\n    \n  \n  \n    Add Drink\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.date-picker-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.date-display-box {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding: 20px;\n  cursor: pointer;\n}\n\n.info-container {\n  padding-top: 5%;\n}\n\n.info-container-right {\n  float: right;\n}\n\nul > li {\n  text-align: center;\n}\n\n.add-drink-container {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2vh;\n}\n\n.add-drink-button {\n  margin-top: 5%;\n  width: 65%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.no-drinks {\n  text-align: center;\n}\n\n.home-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.home-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n.remove-drink {\n  color: red;\n  float: right;\n  margin-right: -1vh;\n  margin-top: -1.5vh;\n}\n\n.hidden-date-input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n}\n\n.date-picker-field {\n  padding-bottom: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedDate | date: \\'yyyy-MM-dd\\' }}    -->          {{ selectedDate | date: \\'yyyy-MM-dd\\' }}                        -->                   0\">                  {{ drink.name }}                 {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |        trimDecimals:2 }} kcal                          No drinks recorded for this day              Total calories for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalCalories | trimDecimals:2 }}-->      Total calories:{{ totalCalories | trimDecimals:2 }} kcal              Number of drinks for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalDrinks }}-->      Number of drinks:{{ totalDrinks }}                  Estimated BAC:{{ bac | number: \\'1.2-2\\' }}%      Sober:~ {{ soberTime | date: \\'EEE MMM dd yyyy HH:mm:ss\\'          }}            Add Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/landing-page/landing-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:22\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  /**\n   *\n   * @param router Router for routing.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister() {\n    this.router.navigate(['/auth/register']);\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin() {\n    this.router.navigate(['/auth/login']);\n  }\n}\n\n    \n\n    \n        \n    \n        Welcome To\n        Zero Tolerance\n    \n    \n        Sign Up\n        Sign In\n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                .inner-container {\n    margin-top: 100%;\n    overflow-y: auto;\n    height: 95vh;\n\n  }\n\n  .inner-container > div > p {\n    text-align: center;\n    font-size: 2vh;\n  }\n\n  .inner-container > div > h1 {\n    text-align: center;\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  .landingButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  #landingRegister {\n    width: 70%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n    color: white;\n  }\n\n  #landingLogin {\n    margin-top: 5%;\n    width: 70%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n    color: white;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To        Zero Tolerance                Sign Up        Sign In    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:50\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email() {\n    return this.loginForm.get('email');\n  }\n  /**\n   * Gets the password input.\n   */\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: () => {\n        this.notyfService.success('Logged in');\n        this.auth.user.subscribe(async (user) => {\n          if (user) {\n            this.router.navigate(['/tracking/home']);\n          }\n        });\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  Sign In\n  \n\n    \n      \n      Type in an e-mail address\n      Invalid e-mail address\n    \n    \n    \n      \n      Type in your password\n      \n    \n    \n\n    \n      Sign In\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n  }\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.loginForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.loginButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.loginButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormLogin {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormLogin > mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.matError {\n    color: red;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign In                  Type in an e-mail address      Invalid e-mail address                        Type in your password                        Sign In      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Toggles navigation menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navigation/navigation.component.ts:16\n                        \n                    \n\n            \n                \n                    Flag to check if menu is open.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NavigationComponent {\n  /**\n   * Flag to check if menu is open.\n   */\n  isOpen = false;\n\n  /**\n   * Toggles navigation menu.\n   */\n  toggleMenu() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home\n      \n      \n        About Us\n      \n      \n        Profile\n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .hamburger-icon {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.hamburger-menu-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: rgb(20, 0, 40);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  z-index: 997;\n}\n\n.hamburger-menu-container.open {\n  transform: translateX(0);\n}\n\n.menu-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.menu-content {\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: white;\n  z-index: 999;\n}\n\n.menu-content ul {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 3vh;\n}\n\n.menu-content li {\n  margin-top: 15px;\n  padding-right: 12vh;\n  padding-left: 12vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  border-radius: 15px;\n  cursor: pointer;\n  background-image: linear-gradient(135deg, rgba(132, 0, 255, 0.5) 0%, rgba(72, 0, 155, 0.5) 100%);\n  width: 100%;\n}\n\n.menu-content a {\n  color: white;\n  text-decoration: none;\n  font-size: 1.2rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n\na > span {\n  padding-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home                    About Us                    Profile              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyfService {\n  constructor() { }\n  \n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_PagesModule_declarations\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { NavigationComponent } from '../shared/navigation/navigation.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AboutUsComponent, LandingPageComponent, PageNotFoundComponent],\n  imports: [SharedModule, PagesRoutingModule, CommonModule],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  { path: 'aboutus', component: AboutUsComponent },\n  { path: 'landing', component: LandingPageComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:38\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:30\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit() {\n    this.profileSub = this.route.paramMap.subscribe((params) => {\n      this.currentUserID = params.get('id') as string;\n      if (!this.currentUserID) {\n        this.userService\n          .getCurrentUserId()\n          .then((result: string | undefined) => {\n            const tempString: string = result || '';\n            this.currentUserID = tempString;\n\n            this.getUsername();\n            this.getRegisterDate();\n            this.getProfilePicture();\n            this.getGender();\n            this.getWeight();\n          });\n      }\n    });\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser() {\n    this.authService.logoutUser().subscribe(() => {\n      this.notyfService.success('Logged out');\n      this.router.navigate(['']);\n    });\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\n      'profilePic'\n    ) as HTMLImageElement;\n    profilePicHtml.src = picUrl\n      ? picUrl\n      : 'https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&';\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats() {\n    this.router.navigate(['/profile/personalstats']);\n  }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile() {\n    this.router.navigate(['/profile/updateprofile']);\n  }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() {\n    this.router.navigate(['/admin/admin']);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        {{username}}\n    \n    \n        {{registerDate}}\n        {{gender}} - \n        {{weight}} kg\n    \n    \n        Admin Page\n        Personal Stats\n        Update Profile\n        Logout\n    \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .profileContainer {\n    width: 25vh;\n    overflow-y: auto;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.headerContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.headerContainer > img {\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50px 50px 50px 50px;\n}\n\n.infoContainer {\n    text-align: center;\n    padding-bottom: 5vh;\n}\n\n.profileButtonDiv {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.profileStatsBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n  color: white;\n}\n\n.profileUpdateBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n  color: white;\n}\n\n.profileLogoutBtn {\n    width: 100%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #ff00ff 0%, #6e0065 100%);\n    color: white;\n  }\n\n  .profileAdminBtn {\n    width: 100%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #0099ff 0%, #003c6e 100%);\n    color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}                {{registerDate}}        {{gender}} -         {{weight}} kg                Admin Page        Personal Stats        Update Profile        Logout    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ProfileComponent, StatsComponent, UpdateProfileComponent],\n  imports: [SharedModule, ProfileRoutingModule, CommonModule],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'personalstats', component: StatsComponent },\n  { path: 'updateprofile', component: UpdateProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/register/register.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \nregisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl('male', Validators.required), // Gender must be selected\n    },\n    { validators: passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/register/register.component.ts:47\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:81\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:87\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:93\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:99\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:105\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:111\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Checks if the two passwords typed in the `registerForm` match\n */\nexport function passwordsMatchValidator(): ValidatorFn {\n  return (AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if (password && password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    } else if (\n      password != '' &&\n      (password.length  {\n          this.notyfService.success('Registered successfully');\n          this.authService.logoutUser();\n          this.router.navigate(['/auth/login']);\n        },\n        error: (error) => {\n          this.notyfService.error('Something went wrong');\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  Sign Up\n  \n  \n    \n      \n      Please enter a username! \n\n    \n      \n      Please enter an e-mail!\n      Please enter a valid e-mail address!\n    \n\n    \n      \n      Please type in a password! \n\n    \n      \n      Please confirm your password!\n    \n\n    The passwords do not match\n    Password must be at least 8 characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg! \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n    \n\n    \n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n}\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.registerForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.registerButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.registerButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormRegister {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormRegister>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.genderSelection,\n.genderSelection>label,\n.genderSelection>label>input {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign Up                    Please enter a username!                 Please enter an e-mail!      Please enter a valid e-mail address!                    Please type in a password!                 Please confirm your password!        The passwords do not match    Password must be at least 8 characters!                    Please enter your weight!      Weight must be at least 30kg!                                             Male                                      Female                Please select your gender!                                Sign Up            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [TrimDecimalsPipe, NavigationComponent],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  exports: [\n    CommonModule,\n    TrimDecimalsPipe,\n    NavigationComponent,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [400, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [400, 400];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n  \n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(private afs: AngularFirestore, private userService: UserService) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {drinkAmounts?: Record};\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return { name: `${day.date.getMonth() + 1}.${day.date.getDate()}`, value: drinkCount };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as { drinkAmounts?: Record };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(([category, count]) => ({\n      name: category,\n      value: count,\n    }));\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n    \n  \n    \n    \n      \n      \n    \n    Distribution of Drinks (by category)\n  \n  \n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                .stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  overflow-y: auto;\n  height: 80vh;\n}\n\n.chart-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.chart-section {\n  flex: 1 1 auto;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 35vh;\n}\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n@media (min-aspect-ratio: 4/3) {\n  .stats-container {\n    flex-direction: row;\n    justify-content: center;\n  }\n\n  .chart-section {\n    flex: 1 1 50%;\n    max-width: 50%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Distribution of Drinks (by category)    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingModule.html":{"url":"modules/TrackingModule.html","title":"module - TrackingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrackingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrackingRoutingModule } from './tracking-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DrinkListComponent, HomeComponent],\n  imports: [SharedModule, TrackingRoutingModule, CommonModule],\n})\nexport class TrackingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingRoutingModule.html":{"url":"modules/TrackingRoutingModule.html","title":"module - TrackingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'drinklist', component: DrinkListComponent },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrackingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                pwCheck\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:61\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:53\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pwCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:65\n                        \n                    \n\n            \n                \n                    Flag for checking if password match.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl(''),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl('', Validators.required),\n    },\n    { validators: passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:70\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:49\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:57\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:109\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:115\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:121\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:127\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:133\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Checks if the input passwords match.\n * @returns True flag if passwords match\n */\nexport function passwordsMatchValidator(): ValidatorFn {\n  return (AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if (password && password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    } else if (\n      password != '' &&\n      (password.length  this.notyfService.success('URL updated'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = this.gender?.value;\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef\n        .update(updates)\n        .then(() => this.notyfService.success('Profile updated'));\n    }\n\n    const newPassword = this.password?.value;\n    if (newPassword) {\n      try {\n        const currentUser = await this.afAuth.currentUser;\n        if (currentUser) {\n          await currentUser.updatePassword(newPassword);\n          this.pwCheck = true;\n          this.notyfService.success('Password updated');\n        }\n      } catch (error) {\n        console.error('Error updating password: ', error);\n        this.pwCheck = false;\n        this.notyfService.error('Something went wrong');\n      }\n    }\n\n    if (this.pwCheck) {\n      this.router.navigate(['/profile/profile']);\n    }\n  }\n}\n\n    \n\n    \n        \n  Update Profile\n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    The passwords do not match\n    Password must be at least 8\n      characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg!\n    \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n\n    \n      \n        Update Profile\n      \n    \n  \n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .formContainer {\n    width: 40vh;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.updateForm {\n    width: 40vh;\n    height: 25vh;\n    padding-top: 5vh;\n}\n\n.matFormFieldUpdate {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormFieldUpdate>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.updateButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5vh;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.updateButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Profile                                                The passwords do not match    Password must be at least 8      characters!                    Please enter your weight!      Weight must be at least 30kg!                                                Male                                      Female                Please select your gender!                            Update Profile            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/user.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n  \n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n           \n      return this.authService.isUser();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:36\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    // const user = await this.auth.currentUser;\n    const user = await firstValueFrom(this.auth.authState);\n    if (user) {\n      const userDocs = await this.afs\n        .collection('user', (ref) => ref.where('email', '==', user.email))\n        .get()\n        .toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/pages/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId() {\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail() {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userRef = this.afs.collection('user').doc(await this.getUserId());\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString() {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/admin/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                        src/app/auth/components/register/register.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/profile/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profile/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                        src/app/profile/components/update-profile/update-profile.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordsMatchValidator   (src/.../register.component.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../update-profile.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/components/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/profile/components/update-profile/update-profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
