var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.206,1,1]],["body/components/AboutUsComponent.html",[0,0.343,1,1.769,2,1.849,3,0.236,4,0.209,5,1.495,6,1.495,7,1.495,8,1.495,9,0.209,10,5.163,11,4.163,12,3.552,13,0.746,14,3.177,15,1.853,16,1.417,17,1.842,18,1.765,19,1.422,20,6.032,21,1.422,22,5.417,23,0.704,24,1.422,25,1.964,26,1.422,27,4.15,28,2.089,29,1.28,30,4.15,31,1.089,32,0.021,33,0.964,34,0.704,35,1.089,36,4.15,37,0.746,38,1.034,39,0.345,40,0.236,41,1.495,42,0.236,43,0.209,44,1.148,45,1.668,46,5.417,47,5.417,48,4.637,49,5.417,50,4.637,51,4.637,52,6.394,53,5.417,54,5.417,55,5.417,56,3.177,57,4.637,58,5.417,59,5.417,60,3.177,61,6.032,62,1.668,63,3.552,64,1.668,65,1.148,66,1.668,67,1.668,68,1.578,69,2.305,70,1.766,71,2.305,72,1.872,73,2.444,74,2.444,75,3.552,76,2.266,77,2.305,78,2.178,79,1.989,80,2.864,81,3.552,82,1.872,83,0.93,84,1.951,85,1.754,86,1.495,87,2.303,88,1.495,89,1.495,90,1.148,91,1.499,92,1.495,93,1.148,94,1.951,95,1.209,96,1.495,97,0.93,98,0.98,99,1.495,100,1.034,101,1.495,102,1.089,103,1.417,104,1.148,105,1.495,106,1.148,107,1.495,108,1.148,109,1.495,110,1.148,111,1.495,112,1.148,113,1.495,114,1.148,115,1.495,116,1.148,117,1.343,118,1.275,119,1.495,120,1.495,121,0.015,122,0.015]],["title/components/AdminFormComponent.html",[0,0.206,90,1]],["body/components/AdminFormComponent.html",[0,0.299,1,0.632,2,1.206,3,0.13,4,0.115,5,0.823,6,0.823,7,0.823,8,0.823,9,0.115,13,0.635,15,1.494,16,0.78,17,1.688,18,1.601,19,0.928,21,0.928,23,0.387,24,0.928,25,1.494,26,0.928,28,1.84,29,1.37,31,0.6,32,0.021,33,1.004,34,0.825,35,0.6,37,0.776,38,1.211,39,0.354,40,0.13,41,0.823,42,0.13,43,0.115,44,1.455,45,0.918,60,4.211,62,2.115,64,2.115,65,1.195,66,1.955,67,2.115,68,2,69,2.238,70,0.972,71,1.839,72,1.031,73,1.594,74,1.594,76,1.247,77,1.839,78,1.737,79,1.694,82,1.594,83,0.512,84,1.273,85,1.144,86,0.823,87,1.752,88,0.823,89,0.823,90,1.345,91,1.914,92,0.823,93,0.632,94,1.273,95,0.666,96,0.823,97,0.512,98,1.692,99,0.823,100,0.569,101,0.823,102,0.6,103,0.78,104,0.632,105,0.823,106,0.632,107,0.823,108,0.632,109,0.823,110,0.632,111,0.823,112,0.632,113,0.823,114,0.632,115,0.823,116,0.632,117,1.399,118,0.702,119,0.823,120,0.823,121,0.01,122,0.01,123,4.56,124,4.135,125,1.955,126,3.533,127,3.024,128,2.332,129,3.533,130,1.805,131,4.321,132,3.533,133,0.791,134,4.321,135,5.8,136,5.26,137,4.864,138,1.644,139,4.864,140,2.284,141,4.864,142,1.66,143,1.66,144,2.263,145,1.84,146,3.533,147,2.409,148,1.621,149,3.533,150,2.439,151,3.699,152,2.439,153,3.533,154,4.864,155,1.344,156,3.024,157,4.864,158,3.533,159,3.533,160,3.533,161,1.522,162,4.321,163,3.533,164,1.03,165,1.475,166,1.504,167,1.211,168,1.144,169,1.344,170,0.928,171,2.284,172,1.66,173,3.533,174,3.024,175,3.533,176,2.284,177,3.533,178,2.284,179,2.072,180,3.533,181,4.761,182,4.321,183,2.207,184,4.321,185,4.163,186,4.321,187,4.321,188,3.357,189,4.864,190,1.899,191,1.344,192,2.983,193,2.284,194,3.289,195,0.928,196,2.332,197,0.977,198,2.284,199,1.752,200,1.504,201,3.533,202,2.439,203,2.239,204,2.439,205,2.689,206,0.78,207,1.576,208,1.339,209,0.569,210,0.823,211,1.31,212,1.243,213,2.284,214,2.239,215,2.284,216,3.533,217,3.167,218,3.167,219,3.085,220,3.401,221,4.321,222,4.321,223,4.321,224,4.637,225,5.562,226,5.562,227,2.284,228,3.533,229,2.284,230,2.284,231,0.823,232,2.284,233,2.284,234,2.284,235,3.533,236,2.284,237,2.284,238,2.284,239,0.918,240,2.284,241,0.972,242,1.344,243,1.339,244,1.955,245,2.284,246,2.284,247,1.594,248,1.247,249,2.284,250,1.339,251,1.955,252,0.972,253,0.869,254,0.869,255,0.869,256,0.972,257,1.339,258,1.694,259,4.864,260,1.694,261,2.439,262,3.533,263,3.024,264,2.072,265,1.93,266,1.031,267,0.972,268,1.167,269,1.839,270,1.031,271,1.738,272,1.247,273,1.955,274,1.167,275,1.839,276,2.195,277,1.339,278,1.504,279,1.95,280,1.95,281,3.113,282,1.247,283,1.339,284,1.195,285,2.439,286,1.447,287,1.095,288,1.594,289,1.694,290,1.594,291,1.594,292,1.594,293,1.095,294,1.095,295,2.284,296,1.576,297,2.284,298,2.284,299,1.247,300,2.284]],["title/guards/AdminGuard.html",[301,2.29,302,1.846]],["body/guards/AdminGuard.html",[3,0.264,4,0.234,9,0.234,13,1.143,23,0.788,24,1.529,26,1.22,29,1.376,31,1.529,32,0.021,33,0.931,34,0.988,35,1.529,37,1.198,39,0.424,40,0.264,42,0.264,43,0.234,91,1.939,121,0.016,122,0.016,144,2.098,167,1.451,170,1.84,191,2.216,200,2.479,202,4.021,209,1.158,211,1.585,214,4.44,301,3.691,302,2.976,303,3.538,304,3.979,305,5.228,306,3.208,307,3.407,308,4.648,309,4.031,310,2.976,311,3.979,312,5.709,313,5.709,314,4.648,315,4.11,316,5.228,317,4.986,318,3.05,319,5.446,320,2.479,321,1.869,322,3.979,323,2.726,324,2.229,325,1.869,326,1.978,327,1.355,328,4.648]],["title/modules/AdminModule.html",[329,0.726,330,2.495]],["body/modules/AdminModule.html",[3,0.288,4,0.254,9,0.254,32,0.021,39,0.455,40,0.288,42,0.288,43,0.254,83,1.132,90,1.979,91,1.399,93,1.979,121,0.017,122,0.017,124,3.489,329,1.016,330,5.151,331,1.553,332,2.151,333,3.167,334,2.281,335,2.424,336,1.726,337,4.327,338,4.327,339,4.327,340,4.532,341,3.044,342,2.941,343,2.424,344,1.474,345,5.056,346,2.21,347,2.21,348,5.251,349,4.327,350,3.489,351,3.203,352,2.965,353,2.761,354,3.35,355,2.582]],["title/components/AdminPageComponent.html",[0,0.206,93,1]],["body/components/AdminPageComponent.html",[0,0.268,1,0.727,2,1.343,3,0.15,4,0.132,5,0.947,6,0.947,7,0.947,8,0.947,9,0.132,13,0.94,15,1.447,16,0.898,17,1.73,18,1.641,19,1.033,21,1.033,23,0.446,24,1.033,25,1.606,26,1.033,28,1.923,29,1.439,31,1.237,32,0.021,33,0.895,34,0.996,35,1.237,37,1.006,38,1.624,39,0.356,40,0.15,41,0.947,42,0.15,43,0.132,44,1.447,45,1.057,60,3.446,62,1.895,64,1.895,65,1.088,66,1.057,67,1.057,68,1,69,2.5,70,1.119,71,1.674,72,1.187,73,1.775,74,1.775,76,1.436,77,1.674,78,1.581,79,2.507,82,1.187,83,0.589,84,1.417,85,1.273,86,0.947,87,1.884,88,0.947,89,0.947,90,0.727,91,1.973,92,0.947,93,1.447,94,1.417,95,0.767,96,0.947,97,0.589,98,1.692,99,0.947,100,0.655,101,0.947,102,0.69,103,0.898,104,0.727,105,0.947,106,0.727,107,0.947,108,0.727,109,0.947,110,0.727,111,0.947,112,0.727,113,0.947,114,0.727,115,0.947,116,0.727,117,0.851,118,0.808,119,0.947,120,0.947,121,0.011,122,0.011,123,4.765,128,2.817,130,2.671,133,0.881,142,1.609,143,1.785,144,2.348,145,1.923,147,1.581,148,1.524,156,5.029,161,1.373,164,1.147,165,1.785,166,1.674,167,1.303,168,1.273,169,1.496,170,1.373,172,0.898,183,2.009,190,1.609,195,1.237,197,0.727,199,2.194,206,0.898,209,0.655,210,0.947,211,1.463,214,1.666,243,2.307,244,3.367,247,1.187,253,1,254,1,255,1,256,1.674,264,3.067,265,2.148,266,1.775,267,1.674,268,1.343,269,2.226,270,1.775,275,1.674,276,2.36,278,1.119,279,2.36,280,1.775,281,2.507,284,1.088,285,2.715,286,3.314,288,1.187,289,1.261,290,1.187,291,1.187,292,1.187,293,1.261,294,1.261,296,2.715,299,1.436,315,2.307,350,4.322,356,2.001,357,3.934,358,1.273,359,3.934,360,3.205,361,3.934,362,3.934,363,2.005,364,3.367,365,4.322,366,3.934,367,4.033,368,3.367,369,3.934,370,3.934,371,5.23,372,5.23,373,1.542,374,3.934,375,3.934,376,2.63,377,3.934,378,3.934,379,3.934,380,3.864,381,3.934,382,2.63,383,3.067,384,3.934,385,1.674,386,2.63,387,2.715,388,2.63,389,2.63,390,2.148,391,3.934,392,2.63,393,2.63,394,2.63,395,2.63,396,1.815,397,3.934,398,2.63,399,1.815,400,2.63,401,1.815,402,2.251,403,1.815,404,2.492,405,3.934,406,2.63,407,4.712,408,2.251,409,2.63,410,2.001,411,2.63,412,2.63,413,2.715,414,2.009,415,2.492,416,1.815,417,1.815,418,2.001,419,3.547,420,2.994,421,2.994,422,2.994,423,2.994,424,2.994,425,1.666,426,2.001,427,1.666,428,1.815,429,1.542]],["title/modules/AdminRoutingModule.html",[329,0.726,340,2.29]],["body/modules/AdminRoutingModule.html",[0,0.359,3,0.302,4,0.267,9,0.267,32,0.021,39,0.453,40,0.302,42,0.302,43,0.267,90,1.746,91,1.466,93,1.746,121,0.017,122,0.017,124,3.658,209,1.32,212,1.252,302,3.443,305,4.803,331,1.628,336,1.809,340,3.999,346,1.909,347,2.273,348,5.402,349,4.536,350,3.658,351,3.358,430,5.3,431,3.108,432,3.701,433,3.232,434,3.358,435,3.224,436,5.3,437,3.358]],["title/components/AppComponent.html",[0,0.206,95,1.054]],["body/components/AppComponent.html",[0,0.35,1,1.196,2,1.899,3,0.246,4,0.218,5,1.557,6,1.557,7,1.557,8,1.557,9,0.218,15,1.328,16,1.476,17,1.85,18,1.764,19,1.461,21,1.461,23,0.733,24,1.461,25,1.995,26,1.135,29,1.534,31,1.135,32,0.021,33,0.983,34,0.944,35,1.135,37,0.777,38,1.077,39,0.354,40,0.246,42,0.246,43,0.218,44,1.196,83,0.968,84,2.004,85,1.801,86,1.557,87,2.339,88,1.557,89,1.557,90,1.196,91,1.539,92,1.557,93,1.196,94,2.004,95,1.893,96,1.557,97,0.968,98,1.022,99,1.557,100,1.077,101,1.557,102,1.135,103,1.476,104,1.196,105,1.557,106,1.196,107,1.557,108,1.196,109,1.557,110,1.196,111,1.557,112,1.196,113,1.557,114,1.196,115,1.557,116,1.196,117,1.4,118,1.328,119,1.557,120,1.557,121,0.015,122,0.015,133,1.246,144,2.478,172,1.899,195,1.135,197,1.539,203,2.739,209,1.077,231,2.004,324,2.667,325,2.237,326,1.84,438,3.701,439,3.142,440,6.152,441,5.564,442,6.152,443,6.152,444,3.29,445,6.152,446,6.495,447,5.564,448,4.324,449,4.234,450,4.234,451,4.324,452,4.324,453,4.324,454,4.324,455,4.324,456,4.324,457,2.739]],["title/modules/AppModule.html",[329,0.726,458,2.495]],["body/modules/AppModule.html",[3,0.236,4,0.208,9,0.208,18,0.978,32,0.021,39,0.467,40,0.236,42,0.236,43,0.208,50,3.543,83,0.927,95,2.118,121,0.015,122,0.015,329,0.832,331,1.271,332,1.762,333,2.888,334,2.718,335,2.593,336,1.413,341,2.893,342,2.593,343,1.985,344,1.207,346,1.948,347,1.948,352,2.428,353,2.261,458,5.166,459,3.543,460,3.543,461,3.543,462,3.543,463,4.307,464,4.307,465,6.012,466,5.673,467,5.819,468,5.673,469,6.012,470,5.673,471,6.012,472,5.673,473,4.14,474,4.14,475,4.14,476,4.14,477,4.14,478,5.409,479,5.409,480,4.14,481,4.14,482,4.14,483,4.14,484,3.15,485,4.14,486,2.623,487,3.543,488,4.14,489,4.14,490,4.14,491,5.409,492,4.116,493,3.15,494,4.63,495,3.543,496,4.14,497,4.14,498,4.14,499,4.14]],["title/modules/AppRoutingModule.html",[329,0.726,463,2.29]],["body/modules/AppRoutingModule.html",[0,0.289,3,0.289,4,0.256,9,0.256,32,0.021,39,0.421,40,0.289,42,0.289,43,0.256,91,1.405,102,1.615,118,1.56,121,0.017,122,0.017,209,1.265,212,1.2,331,1.56,336,1.734,346,1.829,347,2.216,351,3.218,431,2.978,432,3.608,433,3.173,435,3.658,463,3.898,500,5.078,501,5.078,502,3.218,503,7.045,504,5.078,505,5.078,506,3.218,507,5.078,508,5.078,509,4.347,510,5.078,511,5.078,512,5.078,513,5.078,514,2.291,515,5.078,516,5.078,517,5.078]],["title/modules/AuthModule.html",[329,0.726,486,2.29]],["body/modules/AuthModule.html",[3,0.289,4,0.256,9,0.256,32,0.021,39,0.456,40,0.289,42,0.289,43,0.256,83,1.139,104,1.982,112,1.982,121,0.017,122,0.017,329,1.022,331,1.562,332,2.164,333,3.175,334,2.295,335,2.438,336,1.736,341,3.048,342,2.952,343,2.438,344,1.482,346,2.218,347,2.218,352,2.983,353,2.777,354,3.363,355,2.598,486,4.732,506,3.222,518,4.353,519,4.353,520,4.353,521,4.539,522,5.086,523,4.353,524,4.353]],["title/modules/AuthRoutingModule.html",[329,0.726,521,2.29]],["body/modules/AuthRoutingModule.html",[0,0.362,3,0.305,4,0.27,9,0.27,32,0.021,39,0.455,40,0.305,42,0.305,43,0.27,104,1.759,112,1.759,121,0.017,122,0.017,209,1.337,212,1.268,302,2.741,331,1.648,336,1.832,346,1.933,347,2.29,431,3.147,432,3.729,433,3.249,434,3.4,435,3.248,437,3.4,521,4.029,523,4.594,524,4.594,525,5.367,526,3.704,527,4.084]],["title/injectables/AuthenticationService.html",[307,1.846,320,1.538]],["body/injectables/AuthenticationService.html",[3,0.192,4,0.169,9,0.169,13,1.054,23,0.571,24,1.235,26,0.884,29,1.608,31,1.54,32,0.021,33,1.023,34,0.995,35,1.54,37,1.238,39,0.373,40,0.192,42,0.192,43,0.169,44,0.931,91,1.623,121,0.013,122,0.013,133,1.053,155,1.789,161,1.235,164,1.371,167,1.171,170,1.932,172,1.149,183,2.402,195,1.927,197,0.931,200,2.85,205,3.579,211,1.593,214,2.979,307,2.402,310,3.267,315,3.928,318,3.262,320,2.001,321,1.353,323,1.974,324,1.614,326,1.432,327,1.983,344,1.371,487,2.881,506,4.311,526,3.246,528,2.133,529,2.881,530,4.639,531,5.868,532,5.868,533,5.868,534,4.703,535,5.023,536,4.703,537,3.366,538,5.868,539,4.414,540,4.703,541,2.758,542,3.366,543,4.703,544,3.366,545,2.813,546,6.396,547,3.11,548,4.703,549,3.366,550,2.122,551,4.703,552,5.08,553,3.366,554,5.475,555,4.566,556,2.286,557,4.052,558,4.703,559,3.366,560,5.868,561,3.366,562,4.703,563,3.366,564,4.703,565,2.255,566,2.402,567,4.703,568,1.891,569,4.703,570,2.323,571,3.366,572,3.366,573,3.366,574,2.881,575,1.974,576,3.366,577,3.366,578,3.366,579,4.703,580,4.703,581,3.366,582,3.366,583,3.366,584,3.366,585,3.366,586,3.366,587,3.366,588,3.366]],["title/modules/CoreModule.html",[329,0.726,464,2.29]],["body/modules/CoreModule.html",[3,0.309,4,0.274,9,0.274,32,0.02,39,0.433,40,0.309,42,0.309,43,0.274,83,1.217,121,0.017,122,0.017,329,1.092,331,1.669,332,2.313,333,2.606,334,2.452,335,2.606,336,1.855,341,3.095,342,3.072,343,2.606,344,1.584,346,2.307,347,2.307,353,2.968,354,3.499,355,2.776,464,4.608,589,5.435,590,5.435,591,5.435]],["title/injectables/DateService.html",[320,1.538,592,1.538]],["body/injectables/DateService.html",[3,0.262,4,0.231,9,0.231,13,1.04,17,1.441,23,0.78,24,1.519,29,1.57,31,1.207,32,0.021,33,0.735,34,0.78,35,1.207,37,1.137,38,1.441,39,0.368,40,0.262,42,0.262,43,0.231,44,1.751,121,0.016,122,0.016,133,1.296,155,2.201,161,1.519,167,1.441,172,1.975,196,2.326,197,1.838,211,1.145,318,2.774,320,2.462,321,1.849,323,2.697,324,2.205,327,1.34,385,2.974,528,2.913,568,2.326,592,2.462,593,3.936,594,3.044,595,3.035,596,6.331,597,6.644,598,5.786,599,4.598,600,3.993,601,5.786,602,4.598,603,5.786,604,4.598,605,5.786,606,4.598,607,5.786,608,5.786,609,5.786,610,5.786,611,5.786,612,5.786,613,4.598,614,4.598,615,4.598]],["title/interfaces/Drink.html",[98,0.854,358,1.17]],["body/interfaces/Drink.html",[0,0.225,3,0.15,4,0.133,9,0.133,13,0.475,17,0.658,18,0.624,19,0.694,21,0.694,23,0.448,25,0.812,28,1.61,32,0.021,33,0.897,34,0.998,37,0.475,38,1.177,39,0.374,40,0.15,41,0.952,42,0.225,43,0.133,44,1.307,45,1.587,65,0.731,97,0.592,98,1.751,121,0.011,122,0.013,128,1.892,130,2.414,133,0.884,138,1.005,142,1.347,143,1.347,145,1.61,147,1.062,148,1.902,155,1.005,161,1.473,164,0.77,165,1.915,167,1.177,168,0.855,169,1.005,170,1.24,183,1.35,190,1.347,191,1.005,195,1.812,196,1.9,197,0.731,199,1.888,206,0.902,210,0.952,211,1.519,212,1.631,217,3.331,218,3.331,219,3.074,220,3.074,231,0.952,239,1.587,241,1.124,242,1.994,247,1.192,248,1.443,250,1.55,252,1.124,253,1.005,254,1.005,255,1.005,256,1.124,257,1.55,258,2.822,260,2.822,284,1.687,318,1.892,321,1.062,326,1.124,327,1.151,344,0.77,358,2.075,360,2.892,363,2.011,385,2.387,390,2.156,514,1.781,545,1.267,547,1.192,550,1.781,556,0.902,565,1.892,568,1.587,575,3.452,592,2.231,594,2.452,595,1.267,616,1.443,617,1.55,618,1.35,619,1.55,620,2.604,621,1.35,622,2.866,623,2.156,624,2.266,625,3.006,626,2.581,627,2.016,628,1.892,629,2.156,630,2.266,631,1.674,632,1.674,633,1.35,634,1.674,635,1.674,636,1.674,637,1.674,638,1.674,639,1.674,640,3.321,641,2.994,642,1.674,643,1.443,644,1.674,645,2.994,646,1.674,647,2.994,648,1.35,649,1.55,650,2.016,651,1.35,652,1.674,653,1.674,654,2.501,655,1.674,656,1.674,657,1.35,658,1.674,659,2.501,660,1.674,661,1.674,662,1.674,663,1.674,664,1.674,665,1.674,666,1.674,667,2.501,668,1.674,669,1.674,670,1.674,671,1.674,672,1.674,673,1.674,674,1.674,675,2.994,676,1.674,677,1.674,678,1.674,679,1.674,680,2.501,681,2.266,682,1.35,683,1.35,684,1.674,685,1.674,686,3.554,687,1.674,688,2.994,689,1.674,690,1.674,691,1.674,692,1.674,693,1.35,694,2.016,695,2.501,696,1.674,697,2.501,698,1.674,699,1.68,700,2.501,701,2.501,702,2.016,703,1.267,704,1.267,705,1.267,706,1.892,707,1.267,708,2.994,709,1.35,710,2.501,711,1.35,712,1.674,713,1.674,714,1.674,715,1.674,716,1.674,717,3.321,718,1.674,719,1.674,720,1.674,721,2.501,722,1.267,723,2.501,724,1.674,725,2.016,726,1.674,727,2.315,728,1.674,729,1.674,730,1.443,731,1.674,732,1.674,733,1.674,734,1.35,735,1.35,736,1.674]],["title/interfaces/DrinkAmount.html",[358,1.17,623,1.974]],["body/interfaces/DrinkAmount.html",[0,0.224,3,0.149,4,0.132,9,0.132,13,0.472,17,0.654,18,0.62,19,0.689,21,0.689,23,0.445,25,0.807,28,1.605,32,0.021,33,0.628,34,1.032,37,0.472,38,1.173,39,0.374,40,0.149,41,0.946,42,0.224,43,0.132,44,1.302,45,1.58,65,0.726,97,0.588,98,1.747,121,0.011,122,0.013,128,1.884,130,2.405,133,0.88,138,0.999,142,1.341,143,1.341,145,1.605,147,1.056,148,1.899,155,0.999,161,1.469,164,0.765,165,1.91,167,1.173,168,0.85,169,0.999,170,1.236,183,1.341,190,1.341,191,0.999,195,1.835,196,1.893,197,0.726,199,2.192,206,0.896,210,0.946,211,1.516,212,1.629,217,2.854,218,3.324,219,1.54,220,1.54,231,0.946,239,1.58,241,1.117,242,1.988,247,1.185,248,1.434,250,1.54,252,1.117,253,0.999,254,0.999,255,0.999,256,1.117,257,1.54,258,3.068,260,3.068,284,1.684,318,1.884,321,1.056,326,1.117,327,1.145,344,0.765,358,2.072,360,2.887,363,2.003,385,2.381,390,2.146,514,1.773,545,1.259,547,1.185,550,1.773,556,0.896,565,1.884,568,1.58,575,3.444,592,2.224,594,2.447,595,1.259,616,1.434,617,1.54,618,1.341,619,1.54,620,2.601,621,1.341,622,2.999,623,2.571,624,2.815,625,3.269,626,2.571,627,2.007,628,1.884,629,2.146,630,2.257,631,1.664,632,1.664,633,1.341,634,1.664,635,1.664,636,1.664,637,1.664,638,1.664,639,1.664,640,3.311,641,2.983,642,1.664,643,1.434,644,1.664,645,2.983,646,1.664,647,2.983,648,1.341,649,1.54,650,2.007,651,1.341,652,1.664,653,1.664,654,2.489,655,1.664,656,1.664,657,1.341,658,1.664,659,2.489,660,1.664,661,1.664,662,1.664,663,1.664,664,1.664,665,1.664,666,1.664,667,2.489,668,1.664,669,1.664,670,1.664,671,1.664,672,1.664,673,1.664,674,1.664,675,2.983,676,1.664,677,1.664,678,1.664,679,1.664,680,2.489,681,2.257,682,1.341,683,1.341,684,1.664,685,1.664,686,3.545,687,1.664,688,2.983,689,1.664,690,1.664,691,1.664,692,1.664,693,1.341,694,2.007,695,2.489,696,1.664,697,2.489,698,1.664,699,1.672,700,2.489,701,2.489,702,2.007,703,1.259,704,1.259,705,1.259,706,1.884,707,1.259,708,2.983,709,1.341,710,2.489,711,1.341,712,1.664,713,1.664,714,1.664,715,1.664,716,1.664,717,3.311,718,1.664,719,1.664,720,1.664,721,2.489,722,1.259,723,2.489,724,1.664,725,2.007,726,1.664,727,2.304,728,1.664,729,1.664,730,1.434,731,1.664,732,1.664,733,1.664,734,1.341,735,1.341,736,1.664]],["title/interfaces/DrinkAmountsMap.html",[358,1.17,626,1.974]],["body/interfaces/DrinkAmountsMap.html",[0,0.228,3,0.154,4,0.136,9,0.136,13,0.485,17,0.673,18,0.638,19,0.709,21,0.709,25,0.83,28,1.628,29,0.638,32,0.021,33,0.641,34,0.458,37,0.485,38,1.192,39,0.377,40,0.154,41,0.973,42,0.228,43,0.136,44,1.324,45,1.613,65,0.747,97,0.605,98,1.749,121,0.011,122,0.013,128,1.924,130,2.445,138,1.027,142,1.37,143,1.37,145,1.628,147,1.086,148,1.913,155,1.027,161,1.486,164,0.787,165,1.933,167,1.192,168,0.874,169,1.027,170,1.257,183,1.38,190,1.37,191,1.027,195,1.769,196,1.925,197,0.747,199,1.909,206,0.922,210,0.973,211,1.53,212,1.637,217,2.894,218,2.894,219,1.584,220,1.584,231,0.973,239,1.613,241,1.149,242,2.015,247,1.219,248,1.475,250,1.584,252,1.149,253,1.027,254,1.027,255,1.027,256,1.149,257,1.584,258,2.845,260,2.845,284,1.699,318,1.924,321,1.086,326,1.149,327,1.17,344,0.787,358,2.087,360,2.961,363,2.037,385,2.41,390,2.191,514,1.81,545,1.295,547,1.219,550,1.81,556,0.922,565,1.924,568,1.613,575,3.603,592,2.255,594,2.47,595,1.295,616,1.475,617,2.353,618,2.05,619,1.584,620,2.4,621,1.38,622,3.031,623,2.614,624,2.295,625,3.031,626,2.894,627,2.445,628,1.924,629,2.191,630,2.295,631,1.711,632,1.711,633,1.38,634,1.711,635,1.711,636,1.711,637,1.711,638,1.711,639,1.711,640,3.357,641,3.033,642,1.711,643,1.475,644,1.711,645,3.033,646,1.711,647,3.033,648,1.38,649,1.584,650,2.05,651,1.38,652,1.711,653,1.711,654,2.542,655,1.711,656,1.711,657,1.38,658,1.711,659,2.542,660,1.711,661,1.711,662,1.711,663,1.711,664,1.711,665,1.711,666,1.711,667,2.542,668,1.711,669,1.711,670,1.711,671,1.711,672,1.711,673,1.711,674,1.711,675,3.033,676,1.711,677,1.711,678,1.711,679,1.711,680,2.542,681,2.295,682,1.38,683,1.38,684,1.711,685,1.711,686,3.587,687,1.711,688,3.033,689,1.711,690,1.711,691,1.711,692,1.711,693,1.38,694,2.05,695,2.542,696,1.711,697,2.542,698,1.711,699,1.708,700,2.542,701,2.542,702,2.05,703,1.295,704,1.295,705,1.295,706,1.924,707,1.295,708,3.033,709,1.38,710,2.542,711,1.38,712,1.711,713,1.711,714,1.711,715,1.711,716,1.711,717,3.357,718,1.711,719,1.711,720,1.711,721,2.542,722,1.295,723,2.542,724,1.711,725,2.05,726,1.711,727,2.353,728,1.711,729,1.711,730,1.475,731,1.711,732,1.711,733,1.711,734,1.38,735,1.38,736,1.711,737,2.701,738,2.701]],["title/interfaces/DrinkData.html",[239,1.453,358,1.17]],["body/interfaces/DrinkData.html",[0,0.184,3,0.116,4,0.103,9,0.103,13,0.367,14,1.199,15,1.236,17,0.509,18,0.483,19,0.537,21,0.537,23,0.347,25,0.628,26,0.537,28,1.406,32,0.021,33,0.643,34,0.682,37,0.723,38,1.002,39,0.338,40,0.116,41,0.736,42,0.116,43,0.103,44,1.38,45,1.618,56,1.9,65,1.113,85,0.662,98,1.649,100,0.509,117,0.662,121,0.009,122,0.009,133,0.726,138,1.741,142,1.106,143,1.106,144,1.797,145,1.406,147,1.302,148,1.841,150,1.411,152,1.411,155,0.777,161,1.46,164,0.596,165,1.106,166,0.87,167,1.002,168,0.662,169,0.777,170,1.31,188,1.411,190,1.106,191,1.741,195,1.31,196,1.302,199,1.912,200,0.87,206,0.698,209,0.509,210,0.736,211,1.48,212,1.706,231,0.736,239,2.32,241,0.87,242,2.26,243,1.199,247,0.922,252,0.87,253,0.777,254,0.777,255,0.777,256,0.87,258,2.545,260,2.195,261,1.411,274,1.044,284,1.891,288,2.065,325,0.822,327,1.334,358,1.615,360,2.93,363,0.87,365,3.159,380,1.411,383,1.199,385,2.123,387,2.777,396,1.411,399,1.411,401,3.159,403,1.411,404,2.052,439,1.655,457,2.549,514,0.922,550,1.462,556,1.563,565,2.195,592,2.123,594,2.819,595,0.98,600,1.411,616,1.116,620,2.116,621,1.044,622,2.338,624,1.929,625,2.841,627,1.044,628,1.553,630,2.766,633,1.655,648,1.044,650,2.712,651,1.044,657,1.044,681,2.392,682,1.655,683,1.655,693,1.044,699,1.712,702,2.549,703,1.553,704,1.553,705,1.553,706,2.195,707,1.553,709,1.655,711,1.655,722,2.766,725,2.055,734,1.044,735,1.044,739,1.411,740,2.465,741,2.465,742,1.556,743,2.9,744,2.055,745,2.197,746,1.556,747,1.295,748,1.556,749,1.556,750,1.411,751,3.062,752,1.556,753,1.556,754,2.465,755,1.769,756,4.04,757,3.484,758,1.556,759,1.556,760,1.411,761,2.465,762,1.556,763,1.556,764,1.556,765,3.484,766,1.556,767,1.556,768,1.411,769,1.556,770,1.556,771,2.926,772,2.052,773,1.411,774,1.556,775,1.411,776,1.556,777,3.484,778,1.556,779,1.556,780,1.556,781,2.465,782,2.5,783,3.159,784,3.159,785,2.465,786,1.556,787,1.411,788,1.411,789,1.556,790,1.556,791,1.556,792,1.556,793,1.556,794,1.556,795,1.556,796,1.556,797,1.556,798,1.556,799,1.556,800,1.556,801,2.465,802,1.556,803,1.556,804,1.556,805,1.411,806,1.556,807,3.798,808,1.556,809,3.062,810,1.295,811,1.556,812,1.556,813,3.062,814,1.556,815,1.556,816,1.556,817,1.556,818,3.062,819,2.465,820,1.556,821,1.556,822,1.556,823,2.465,824,2.465,825,1.556,826,3.484,827,3.062,828,1.556,829,2.465,830,1.556,831,1.556,832,1.556,833,1.556,834,1.556,835,3.798,836,3.062,837,2.465,838,1.556,839,2.465,840,1.556,841,1.556,842,1.556,843,2.465,844,2.465,845,1.556,846,4.04,847,2.465,848,1.556,849,2.465,850,1.556,851,2.465,852,3.062,853,1.556,854,1.556,855,1.556,856,1.556,857,1.556,858,1.556,859,1.556,860,1.556,861,1.556,862,1.411,863,1.556,864,1.556,865,1.556,866,3.062,867,1.556,868,3.062,869,1.556,870,1.556,871,2.465,872,1.556,873,1.556,874,2.465,875,1.556,876,2.465,877,1.556,878,1.556,879,1.556,880,1.556,881,1.556,882,1.556,883,1.411,884,2.236,885,1.556,886,1.411,887,1.556,888,1.556,889,1.556,890,2.465,891,1.556,892,1.411,893,1.556,894,1.556,895,1.556,896,1.556,897,1.556,898,1.411,899,2.465,900,2.465,901,1.556,902,1.556,903,1.556,904,1.556,905,1.556,906,1.556,907,2.465,908,1.556,909,1.556,910,2.465,911,1.556,912,1.556,913,1.556,914,1.556,915,1.556,916,1.556,917,1.556,918,2.465,919,1.556,920,2.465,921,2.465,922,1.556,923,1.556,924,2.465,925,1.556,926,1.556,927,1.556,928,1.556,929,1.556,930,1.556,931,1.556,932,1.556,933,1.556,934,1.556,935,1.556,936,1.556,937,1.411,938,1.556,939,2.236,940,1.556]],["title/components/DrinkListComponent.html",[0,0.206,97,0.81]],["body/components/DrinkListComponent.html",[0,0.205,1,0.479,2,0.967,3,0.098,4,0.087,5,0.623,6,0.623,7,0.623,8,0.623,9,0.087,13,0.824,15,0.532,16,0.591,17,1.594,18,1.512,19,0.744,21,0.744,23,0.481,24,0.744,25,1.277,26,0.454,28,1.666,29,1.474,31,1.091,32,0.021,33,0.923,34,1.058,35,1.091,37,0.934,38,1.295,39,0.313,40,0.098,41,0.623,42,0.161,43,0.087,44,0.995,45,1.139,62,1.843,64,1.843,65,1.15,66,1.843,67,1.843,68,1.744,69,2.517,70,1.206,71,1.206,73,2.069,74,2.222,76,0.945,77,1.206,78,1.671,79,2.36,82,0.781,83,0.388,84,1.021,85,0.917,86,0.623,87,1.497,88,0.623,89,0.623,90,0.479,91,0.784,92,0.623,93,0.479,94,1.021,95,0.505,96,0.623,97,0.931,98,1.756,99,0.623,100,0.431,101,0.623,102,0.454,103,0.591,104,0.479,105,0.623,106,0.479,107,0.623,108,0.479,109,0.623,110,0.479,111,0.623,112,0.479,113,0.623,114,0.479,115,0.623,116,0.479,117,0.56,118,0.532,119,0.623,120,0.623,121,0.008,122,0.011,128,2.6,130,2.515,133,0.635,138,1.368,142,1.228,143,1.419,145,1.666,147,1.139,148,1.818,155,1.078,161,1.293,164,0.826,165,1.774,167,1.226,168,0.917,169,1.078,170,1.204,172,1.681,183,0.884,190,0.967,191,1.078,195,1.638,196,1.843,197,1.5,199,1.497,206,0.591,210,0.623,211,1.295,212,1.494,217,2.962,218,2.689,219,1.015,220,2.109,231,0.623,239,1.139,241,0.737,242,1.581,247,0.781,248,0.945,250,1.015,252,0.737,253,0.658,254,0.658,255,0.658,256,0.737,257,1.015,258,2.36,260,2.36,265,0.945,266,1.278,267,1.206,268,0.884,269,2.212,270,1.278,272,0.945,275,1.951,276,2.606,277,2.109,278,1.769,279,2.533,280,2.069,281,2.894,282,1.547,283,1.662,284,1.726,285,1.195,288,0.781,289,0.83,290,0.781,291,0.781,292,0.781,293,0.83,294,0.83,296,2.869,299,0.945,318,1.724,321,0.696,326,0.737,327,0.826,344,0.826,358,1.756,360,2.815,363,2.517,373,1.015,385,2.458,390,1.547,404,2.634,413,1.956,414,2.342,415,2.279,416,1.195,417,1.195,418,1.317,419,3.557,420,3.164,421,3.164,422,3.164,423,3.164,424,3.164,425,1.097,426,1.317,427,1.097,428,1.195,429,1.015,514,1.876,545,0.83,547,0.781,550,1.623,556,0.967,565,1.993,568,1.671,575,3.292,592,2.308,594,2.257,595,1.724,617,3.708,618,3.23,619,1.015,620,2.063,621,0.884,622,2.655,623,1.547,624,2.198,625,2.77,626,1.964,627,1.447,628,1.724,629,1.547,630,2.198,631,1.795,632,1.795,633,1.447,634,1.795,635,1.795,636,1.795,637,2.279,638,2.279,639,2.279,640,3.557,641,3.119,642,2.279,643,1.964,644,2.279,645,2.905,646,2.279,647,2.279,648,1.447,649,1.662,650,1.447,651,0.884,652,1.097,653,1.097,654,1.795,655,1.795,656,1.795,657,1.447,658,1.795,659,1.795,660,2.634,661,1.097,662,1.097,663,1.097,664,1.097,665,1.795,666,1.097,667,1.795,668,1.795,669,2.634,670,1.097,671,1.097,672,1.097,673,1.097,674,1.097,675,2.634,676,1.795,677,1.795,678,1.795,679,1.795,680,1.795,681,1.724,682,0.884,683,0.884,684,1.097,685,1.097,686,2.905,687,1.097,688,2.279,689,1.097,690,1.097,691,1.097,692,1.097,693,0.884,694,1.447,695,1.795,696,1.097,697,1.795,698,1.097,699,1.206,700,1.795,701,1.795,702,1.447,703,0.83,704,0.83,705,0.83,706,1.358,707,0.83,708,2.279,709,0.884,710,1.795,711,0.884,712,1.097,713,2.279,714,1.097,715,1.097,716,1.097,717,2.634,718,1.097,719,1.097,720,1.097,721,1.795,722,0.83,723,1.795,724,1.097,725,1.447,726,1.097,727,2.438,728,1.097,729,1.097,730,0.945,731,1.097,732,1.097,733,1.097,734,0.884,735,0.884,736,1.097,740,1.317,941,2.833,942,2.833,943,2.833,944,2.833,945,1.731,946,1.731,947,1.731,948,1.731,949,1.731,950,1.731,951,1.731,952,1.731,953,1.731,954,1.731,955,1.731,956,1.731,957,2.833,958,2.833,959,2.833,960,1.482,961,1.482,962,2.833,963,2.425,964,1.317,965,1.731,966,1.731,967,2.833,968,1.195,969,1.731,970,1.731,971,2.833,972,1.731,973,1.731,974,1.731,975,1.731,976,1.731,977,1.482,978,1.195]],["title/interfaces/FirestoreDocumentData.html",[358,1.17,629,1.974]],["body/interfaces/FirestoreDocumentData.html",[0,0.228,3,0.153,4,0.136,9,0.136,13,0.484,17,0.671,18,0.637,19,0.707,21,0.707,23,0.457,25,0.828,28,1.626,32,0.021,33,0.64,34,0.811,37,0.484,38,1.191,39,0.377,40,0.153,41,0.97,42,0.228,43,0.136,44,1.322,45,1.61,65,0.745,97,0.604,98,1.748,121,0.011,122,0.013,128,1.92,130,2.442,133,0.897,138,1.025,142,1.367,143,1.367,145,1.626,147,1.083,148,1.911,155,1.025,161,1.485,164,0.785,165,1.931,167,1.191,168,0.872,169,1.025,170,1.255,183,1.376,190,1.367,191,1.025,195,1.747,196,1.922,197,0.745,199,1.906,206,0.92,210,0.97,211,1.529,212,1.636,217,2.891,218,2.891,219,1.58,220,1.58,231,0.97,239,1.61,241,1.147,242,2.013,247,1.216,248,1.471,250,1.58,252,1.147,253,1.025,254,1.025,255,1.025,256,1.147,257,1.58,258,2.842,260,2.842,284,1.698,318,1.92,321,1.083,326,1.147,327,1.167,344,0.785,358,2.086,360,2.959,363,2.034,385,2.407,390,2.187,514,1.807,545,1.292,547,1.216,550,1.807,556,0.92,565,1.92,568,1.61,575,3.477,592,2.252,594,2.468,595,1.292,616,1.471,617,1.58,618,1.376,619,1.58,620,2.399,621,1.376,622,3.028,623,2.187,624,2.292,625,3.028,626,3.089,627,2.046,628,2.292,629,2.611,630,2.842,631,1.707,632,1.707,633,1.376,634,1.707,635,1.707,636,1.707,637,1.707,638,1.707,639,1.707,640,3.353,641,3.029,642,1.707,643,1.471,644,1.707,645,3.029,646,1.707,647,3.029,648,1.376,649,1.58,650,2.046,651,1.376,652,1.707,653,1.707,654,2.538,655,1.707,656,1.707,657,1.376,658,1.707,659,2.538,660,1.707,661,1.707,662,1.707,663,1.707,664,1.707,665,1.707,666,1.707,667,2.538,668,1.707,669,1.707,670,1.707,671,1.707,672,1.707,673,1.707,674,1.707,675,3.029,676,1.707,677,1.707,678,1.707,679,1.707,680,2.538,681,2.292,682,1.376,683,1.376,684,1.707,685,1.707,686,3.584,687,1.707,688,3.029,689,1.707,690,1.707,691,1.707,692,1.707,693,1.376,694,2.046,695,2.538,696,1.707,697,2.538,698,1.707,699,1.704,700,2.538,701,2.538,702,2.046,703,1.292,704,1.292,705,1.292,706,1.92,707,1.292,708,3.029,709,1.376,710,2.538,711,1.376,712,1.707,713,1.707,714,1.707,715,1.707,716,1.707,717,3.353,718,1.707,719,1.707,720,1.707,721,2.538,722,1.292,723,2.538,724,1.707,725,2.046,726,1.707,727,2.349,728,1.707,729,1.707,730,1.471,731,1.707,732,1.707,733,1.707,734,1.376,735,1.376,736,1.707]],["title/components/HomeComponent.html",[0,0.206,100,0.9]],["body/components/HomeComponent.html",[0,0.171,1,0.373,2,0.785,3,0.171,4,0.068,5,0.485,6,0.485,7,0.485,8,0.485,9,0.068,13,0.78,14,1.348,15,1.423,16,0.46,17,1.496,18,1.419,19,0.603,21,0.603,23,0.229,24,0.603,25,1.091,26,0.603,28,1.499,29,1.487,31,1.046,32,0.021,33,0.843,34,0.967,35,1.046,37,1.062,38,1.268,39,0.276,40,0.077,41,0.485,42,0.077,43,0.068,44,1.102,45,1.208,56,1.762,62,1.428,64,1.602,65,1.102,66,1.428,67,1.744,68,1.65,69,1.971,70,0.574,71,1.511,72,1.798,73,1.798,74,1.037,77,0.574,78,0.542,82,0.608,83,0.302,84,0.828,85,1.15,86,0.485,87,1.279,88,0.485,89,0.485,90,0.373,91,0.636,92,0.485,93,0.373,94,0.828,95,0.393,96,0.485,97,0.302,98,1.632,99,0.485,100,0.884,101,0.485,102,0.354,103,0.46,104,0.373,105,0.485,106,0.373,107,0.485,108,0.373,109,0.485,110,0.373,111,0.485,112,0.373,113,0.485,114,0.373,115,0.485,116,0.373,117,0.744,118,0.414,119,0.485,120,0.485,121,0.006,122,0.006,128,1.702,133,0.515,138,2.121,142,1.026,143,1.212,144,1.9,145,1.499,147,1.208,148,1.774,150,0.93,152,1.586,155,0.874,161,1.216,164,0.67,165,1.026,166,0.978,167,1.081,168,0.744,169,0.874,170,1.337,172,1.36,188,1.586,190,0.785,191,1.856,195,1.139,196,1.428,197,1.102,199,1.563,200,0.978,206,0.46,209,0.336,210,0.485,211,1.268,212,1.621,217,1.255,231,0.485,239,1.862,241,0.574,242,1.937,243,0.79,247,0.608,252,0.574,253,0.513,254,0.513,255,0.513,256,0.574,258,2.34,260,2.529,261,0.93,264,2.717,265,0.736,266,1.037,267,0.978,268,0.689,269,1.696,270,1.037,272,0.736,274,1.174,275,1.279,276,1.798,277,0.79,278,0.978,279,1.798,280,1.356,281,2.34,282,0.736,283,0.79,284,1.861,285,0.93,287,1.102,288,1.602,289,0.646,290,0.608,291,0.608,292,0.608,293,0.646,294,0.646,296,1.586,299,1.255,325,0.924,327,1.035,358,1.15,360,2.972,363,1.279,365,2.451,373,0.79,380,0.93,383,1.348,385,2.077,387,2.75,396,0.93,399,0.93,401,2.75,403,0.93,404,2.25,408,1.967,410,1.026,413,2.074,414,1.535,415,1.456,416,0.93,417,0.93,418,1.026,419,2.749,420,1.749,421,1.749,422,1.749,423,1.749,424,1.749,425,0.854,426,1.026,427,0.854,428,1.586,429,1.348,439,1.535,457,1.904,514,1.037,550,1.037,556,1.581,565,2.34,566,1.174,592,2.167,594,2.846,595,2.606,600,0.93,620,2.284,621,0.689,622,2.036,624,1.702,625,2.493,627,0.689,628,1.702,630,1.911,633,1.174,648,1.174,650,2.216,651,0.689,657,0.689,681,1.911,682,1.174,683,1.174,693,0.689,694,1.174,699,1.279,702,2.036,703,1.102,704,1.102,705,1.102,706,1.702,707,1.102,709,1.174,711,1.174,722,2.918,725,1.535,734,0.689,735,0.689,739,0.93,741,2.287,742,1.026,743,2.935,744,1.535,745,1.641,746,1.749,747,2.525,748,1.749,749,2.287,750,2.074,751,4.015,752,3.526,753,3.526,754,2.702,755,1.939,756,4.244,757,3.526,758,1.749,759,3.033,760,1.586,761,3.033,762,1.749,763,1.026,764,1.026,765,2.702,766,1.026,767,1.026,768,0.93,769,1.026,770,2.702,771,2.337,772,1.456,773,0.93,774,1.026,775,0.93,776,1.026,777,2.702,778,1.026,779,2.702,780,1.026,781,1.749,782,1.939,783,2.451,784,2.451,785,1.749,786,1.026,787,0.93,788,0.93,789,1.026,790,1.026,791,1.026,792,1.026,793,1.026,794,1.026,795,1.026,796,1.026,797,1.026,798,1.026,799,1.026,800,1.026,801,2.702,802,1.749,803,2.702,804,1.026,805,0.93,806,1.026,807,3.033,808,1.026,809,2.287,810,0.854,811,1.026,812,1.026,813,2.287,814,1.026,815,1.026,816,1.026,817,1.026,818,2.287,819,1.749,820,1.026,821,1.026,822,1.026,823,1.749,824,1.749,825,1.026,826,2.702,827,2.287,828,1.026,829,1.749,830,1.026,831,1.026,832,1.026,833,1.026,834,1.026,835,3.033,836,2.287,837,1.749,838,1.026,839,1.749,840,1.026,841,1.026,842,1.026,843,1.749,844,1.749,845,1.026,846,3.302,847,1.749,848,1.026,849,1.749,850,1.026,851,1.749,852,2.287,853,1.026,854,1.026,855,1.026,856,1.026,857,1.026,858,1.026,859,1.026,860,1.026,861,1.026,862,0.93,863,1.026,864,1.026,865,1.026,866,2.287,867,1.026,868,2.287,869,1.026,870,1.026,871,1.749,872,1.026,873,1.026,874,1.749,875,1.026,876,1.749,877,2.702,878,1.026,879,1.026,880,2.287,881,1.026,882,1.026,883,1.586,884,2.451,885,1.749,886,1.586,887,1.749,888,1.026,889,1.026,890,2.287,891,1.749,892,1.586,893,1.749,894,1.026,895,3.526,896,3.875,897,4.136,898,1.586,899,2.287,900,3.033,901,2.702,902,1.026,903,1.026,904,2.702,905,1.026,906,1.749,907,2.287,908,1.749,909,1.749,910,1.749,911,1.026,912,1.026,913,1.749,914,1.749,915,1.026,916,1.026,917,1.026,918,1.749,919,1.026,920,1.749,921,1.749,922,1.026,923,1.026,924,1.749,925,1.026,926,1.026,927,1.026,928,1.026,929,1.026,930,1.026,931,1.026,932,1.026,933,1.026,934,1.026,935,1.026,936,2.287,937,0.93,938,1.026,939,1.586,940,1.026,961,1.154,963,1.154,978,0.93,979,2.299,980,2.299,981,2.299,982,2.299,983,2.299,984,1.348,985,1.348,986,1.348,987,1.348,988,1.348,989,1.348,990,1.348,991,1.348,992,1.348,993,1.348,994,1.348,995,1.348,996,1.154,997,1.348,998,1.348,999,1.348,1000,1.348,1001,1.348,1002,1.348,1003,2.299,1004,4.339,1005,3.551,1006,2.299,1007,2.299,1008,2.299,1009,2.299,1010,2.299,1011,2.299,1012,2.299,1013,1.456,1014,1.026,1015,1.026,1016,1.026,1017,1.456,1018,1.348,1019,1.154,1020,1.348,1021,1.026,1022,1.348,1023,2.299]],["title/components/LandingPageComponent.html",[0,0.206,102,0.949]],["body/components/LandingPageComponent.html",[0,0.323,1,1.014,2,1.703,3,0.209,4,0.185,5,1.321,6,1.321,7,1.321,8,1.321,9,0.185,13,0.896,14,2.926,15,2.129,16,1.252,17,1.815,18,1.722,19,1.31,21,1.31,23,0.622,24,1.31,26,0.963,29,1.34,31,0.963,32,0.021,33,0.906,34,0.622,35,0.963,37,0.896,38,1.243,39,0.317,40,0.209,42,0.209,43,0.185,62,2.006,64,2.28,65,1.568,66,2.28,67,2.447,68,2.315,69,2.709,70,1.56,71,2.413,72,1.655,75,4.27,76,2.002,77,2.709,78,2.447,79,1.758,81,3.139,82,2.251,83,0.821,84,1.797,85,1.615,86,1.321,87,2.192,88,1.321,89,1.321,90,1.014,91,1.38,92,1.321,93,1.014,94,1.797,95,1.069,96,1.321,97,0.821,98,0.866,99,1.321,100,0.913,101,1.321,102,1.598,103,2.393,104,1.014,105,1.321,106,1.014,107,1.321,108,1.014,109,1.321,110,1.014,111,1.321,112,1.014,113,1.321,114,1.014,115,1.321,116,1.014,117,1.187,118,1.126,119,1.321,120,1.321,121,0.014,122,0.014,144,2.497,166,2.123,209,0.913,211,0.913,264,3.325,266,1.655,267,1.56,269,2.413,270,1.655,272,2.002,275,2.123,276,2.251,278,2.123,279,2.251,280,2.251,281,3.278,284,1.38,286,3.161,287,1.758,289,2.392,290,2.251,291,2.251,292,2.251,293,1.758,294,1.758,326,1.56,356,2.791,367,4.853,368,4.27,383,3.569,444,2.791,449,3.797,450,3.797,502,3.856,526,3.443,527,3.797,744,1.873,1017,2.323,1024,5.209,1025,6.086,1026,6.086,1027,3.667,1028,3.667,1029,3.667,1030,3.667,1031,3.139,1032,4.989,1033,4.631,1034,4.27,1035,5.67,1036,3.667,1037,3.667,1038,3.667,1039,3.667,1040,3.667,1041,3.139,1042,3.139]],["title/components/LoginComponent.html",[0,0.206,104,1]],["body/components/LoginComponent.html",[0,0.286,1,0.814,2,1.459,3,0.167,4,0.148,5,1.06,6,1.06,7,1.06,8,1.06,9,0.148,13,0.768,15,0.904,16,1.005,17,1.761,18,1.671,19,1.122,21,1.122,23,0.499,24,1.122,25,1.696,26,1.122,29,1.446,31,0.773,32,0.021,33,0.805,34,0.995,35,0.773,37,0.904,38,1.254,39,0.389,40,0.167,42,0.167,43,0.148,44,1.528,60,2.507,62,2.358,64,2.46,65,1.622,66,2.023,67,2.22,68,2.1,69,2.35,70,1.253,71,2.142,72,1.328,73,1.929,74,1.328,76,1.608,77,1.819,78,1.718,79,1.411,80,2.95,82,1.328,83,0.659,84,1.54,85,1.384,86,1.06,87,1.989,88,1.06,89,1.06,90,0.814,91,1.182,92,1.06,93,0.814,94,1.54,95,0.858,96,1.06,97,0.659,98,0.696,99,1.06,100,0.733,101,1.06,102,0.773,103,1.005,104,1.528,105,1.06,106,0.814,107,1.06,108,0.814,109,1.06,110,0.814,111,1.06,112,0.814,113,1.06,114,0.814,115,1.06,116,0.814,117,0.953,118,0.904,119,1.06,120,1.06,121,0.012,122,0.012,133,0.957,144,2.412,145,1.986,148,1.246,161,1.606,164,1.246,166,1.819,167,1.376,168,1.384,169,1.626,170,1.606,172,1.005,179,2.507,190,1.718,192,3.473,194,3.253,195,0.773,197,0.814,207,2.032,208,1.726,209,0.733,210,1.06,211,1.376,212,0.696,224,3.812,253,1.12,254,1.12,255,1.12,263,4.727,265,1.608,266,1.328,267,1.253,268,1.504,269,2.142,270,1.328,272,1.608,274,2.821,275,2.142,276,2.492,277,1.726,278,1.819,279,1.929,280,1.929,281,3.1,282,2.748,283,1.726,284,1.392,287,1.411,288,1.328,289,1.411,290,1.929,291,1.929,292,1.929,293,2.049,294,2.049,306,2.032,307,2.821,309,3.189,310,2.821,324,1.411,325,1.718,327,1.467,410,2.24,439,2.571,506,3.499,526,3.812,539,3.812,541,2.507,547,2.761,552,4.682,556,1.459,568,2.22,570,2.032,1017,1.865,1033,4.203,1043,2.52,1044,4.275,1045,5.033,1046,4.275,1047,5.523,1048,3.253,1049,2.944,1050,2.944,1051,2.944,1052,3.253,1053,3.253,1054,4.275,1055,4.275,1056,4.464,1057,3.659,1058,2.944,1059,2.52,1060,2.944,1061,4.656,1062,4.656,1063,2.24,1064,2.944,1065,2.24,1066,2.944,1067,2.944,1068,2.944,1069,2.944,1070,2.944,1071,2.944,1072,2.944,1073,2.52,1074,2.944,1075,2.944,1076,4.727,1077,2.95,1078,2.52,1079,2.52,1080,2.52,1081,2.52,1082,2.52,1083,2.52,1084,3.253,1085,2.52,1086,2.944,1087,2.944,1088,3.253,1089,2.24,1090,2.24,1091,2.24,1092,4.275,1093,2.24,1094,2.944]],["title/components/NavigationComponent.html",[0,0.206,106,1]],["body/components/NavigationComponent.html",[0,0.317,1,0.98,2,1.663,3,0.201,4,0.178,5,1.275,6,1.275,7,1.275,8,1.275,9,0.178,13,0.636,15,1.088,16,1.209,17,1.807,18,1.714,19,1.279,21,1.279,23,1.066,24,1.279,29,1.151,32,0.021,33,0.779,37,0.636,38,0.882,39,0.225,40,0.201,42,0.201,43,0.178,62,2.239,64,1.958,65,1.739,66,1.958,67,1.958,68,2.118,69,2.073,70,2.676,72,2.512,73,3.142,74,2.198,77,2.073,78,1.958,83,0.793,84,1.754,85,1.577,86,1.275,87,2.16,88,1.275,89,1.275,90,0.98,91,1.347,92,1.275,93,0.98,94,1.754,95,1.032,96,1.275,97,0.793,98,0.837,99,1.275,100,0.882,101,1.275,102,0.93,103,1.209,104,0.98,105,1.275,106,1.659,107,1.275,108,0.98,109,1.275,110,0.98,111,1.275,112,0.98,113,1.275,114,0.98,115,1.275,116,0.98,117,1.146,118,1.71,119,1.275,120,1.275,121,0.013,122,0.013,133,1.091,151,5.562,172,1.209,179,2.857,197,0.98,203,3.086,204,3.362,264,2.077,269,2.833,272,2.66,273,3.031,275,2.552,276,2.512,278,2.369,279,2.198,280,1.598,284,1.945,287,1.698,290,1.598,291,1.598,292,1.598,299,2.66,344,1.032,363,1.507,413,2.444,414,2.844,416,2.444,417,4.139,419,3.086,428,2.444,429,2.857,457,2.243,566,2.488,747,3.086,755,3.434,964,4.237,968,4.139,977,3.031,1013,3.086,1014,2.695,1015,2.695,1095,3.031,1096,7.14,1097,4.871,1098,4.871,1099,5.568,1100,4.871,1101,5.568,1102,5.997,1103,3.541,1104,4.871,1105,3.541,1106,3.707,1107,4.871,1108,3.541,1109,4.871,1110,5.568,1111,3.541,1112,4.871,1113,3.541,1114,4.871,1115,3.541,1116,4.766,1117,3.541,1118,2.695,1119,3.541,1120,2.695,1121,3.541,1122,3.541,1123,3.541,1124,3.541,1125,3.541,1126,3.541,1127,4.766,1128,5.997,1129,3.541,1130,2.444,1131,4.871,1132,3.541,1133,3.541,1134,3.541,1135,3.541,1136,3.541,1137,3.541,1138,3.541,1139,2.695,1140,2.695,1141,3.541]],["title/injectables/NotyfService.html",[145,1.11,320,1.538]],["body/injectables/NotyfService.html",[3,0.246,4,0.218,9,0.218,13,1.105,23,0.733,24,1.461,26,1.615,29,1.534,31,1.461,32,0.021,33,0.889,34,1.224,35,1.461,37,1,38,1.618,39,0.354,40,0.246,42,0.246,43,0.218,44,1.702,68,2.116,121,0.015,122,0.015,133,1.246,145,1.709,155,2.47,161,1.461,167,1.386,168,1.801,169,2.116,172,1.476,185,5.888,190,2.348,195,1.806,197,1.196,203,3.525,211,1.386,231,2.339,267,2.368,269,2.368,275,2.764,320,2.368,323,2.536,324,2.073,414,2.842,528,2.739,1142,3.701,1143,6.129,1144,4.324,1145,5.564,1146,4.324,1147,6.258,1148,6.495,1149,5.564,1150,4.324,1151,5.564,1152,5.564,1153,5.564,1154,5.564,1155,5.564,1156,5.564,1157,6.495,1158,5.564,1159,4.324,1160,4.234,1161,4.324,1162,4.324]],["title/components/PageNotFoundComponent.html",[0,0.206,108,1]],["body/components/PageNotFoundComponent.html",[0,0.364,1,1.304,2,2.006,3,0.268,4,0.237,5,1.697,6,1.697,7,1.697,8,1.697,9,0.237,13,0.847,14,3.446,15,2.261,16,1.609,17,1.867,18,1.77,19,1.542,21,1.542,32,0.02,33,0.939,39,0.3,40,0.268,42,0.268,43,0.237,83,1.056,84,2.116,85,1.902,86,1.697,87,2.414,88,1.697,89,1.697,90,1.304,91,1.625,92,1.697,93,1.304,94,2.116,95,1.374,96,1.697,97,1.056,98,1.113,99,1.697,100,1.174,101,1.697,102,1.237,103,1.609,104,1.304,105,1.697,106,1.304,107,1.697,108,1.854,109,1.697,110,1.304,111,1.697,112,1.304,113,1.697,114,1.304,115,1.697,116,1.304,117,1.526,118,1.447,119,1.697,120,1.697,121,0.016,122,0.016,939,4.854,1147,5.029,1163,4.034,1164,3.253,1165,4.034,1166,6.402,1167,5.876,1168,4.713,1169,4.713]],["title/modules/PagesModule.html",[329,0.726,1170,2.495]],["body/modules/PagesModule.html",[1,1.965,3,0.279,4,0.247,9,0.247,11,3.389,32,0.021,39,0.462,40,0.279,42,0.279,43,0.247,83,1.1,102,1.865,106,1.358,108,1.965,121,0.016,122,0.016,329,0.987,331,1.508,332,2.089,333,3.126,334,2.215,335,2.354,336,1.676,341,3.023,342,2.889,343,2.354,344,1.431,346,2.171,347,2.171,351,3.111,352,2.879,353,2.681,354,3.291,355,2.508,502,3.111,509,4.203,1164,3.389,1170,5.166,1171,4.203,1172,4.203,1173,4.203,1174,4.501,1175,4.91,1176,4.203,1177,4.203,1178,4.203,1179,4.91,1180,4.203,1181,4.203]],["title/modules/PagesRoutingModule.html",[329,0.726,1174,2.29]],["body/modules/PagesRoutingModule.html",[0,0.381,1,1.731,3,0.297,4,0.263,9,0.263,11,3.607,32,0.021,39,0.459,40,0.297,42,0.297,43,0.263,102,1.643,103,1.784,108,1.731,121,0.017,122,0.017,209,1.302,212,1.235,302,2.67,331,1.605,336,1.784,346,1.882,347,2.254,351,3.311,431,3.065,432,3.671,433,3.212,434,3.311,435,3.423,437,3.311,502,3.311,1164,3.607,1174,3.966,1176,4.474,1177,4.474,1178,4.474,1180,4.474,1181,4.474,1182,5.227,1183,5.227]],["title/components/ProfileComponent.html",[0,0.206,110,1]],["body/components/ProfileComponent.html",[0,0.238,1,0.602,2,1.161,3,0.124,4,0.109,5,0.783,6,0.783,7,0.783,8,0.783,9,0.109,13,0.611,15,1.861,16,0.742,17,1.673,18,1.586,19,0.893,21,0.893,23,0.369,24,0.893,25,1.455,26,0.893,28,1.81,29,1.6,31,0.571,32,0.021,33,0.67,34,0.966,35,1.1,37,1.113,38,1.28,39,0.375,40,0.124,41,0.783,42,0.124,43,0.109,44,1.508,56,2.778,62,2.067,64,2.067,65,1.631,66,1.684,67,1.904,68,1.802,69,2.508,70,1.447,71,2.319,72,1.535,73,0.981,74,0.981,76,1.188,77,2.188,78,2.067,79,1.631,82,2.137,83,0.487,84,1.225,85,1.101,86,0.783,87,1.706,88,0.783,89,0.783,90,0.602,91,1.508,92,0.783,93,0.602,94,1.225,95,0.634,96,0.783,97,0.487,98,0.514,99,0.783,100,0.542,101,0.783,102,0.571,103,0.742,104,0.602,105,0.783,106,0.602,107,0.783,108,0.602,109,0.783,110,1.31,111,0.783,112,0.602,113,0.783,114,0.602,115,0.783,116,0.602,117,1.664,118,2.043,119,0.783,120,0.783,121,0.009,122,0.009,133,0.762,138,2.53,142,1.43,143,1.617,144,2.232,145,1.81,147,1.367,148,1.381,164,0.991,165,1.161,166,1.447,167,1.358,168,1.101,170,1.547,179,1.995,195,1.591,199,1.225,200,3.019,206,0.742,209,0.847,210,0.783,211,1.358,212,1.556,242,1.955,251,1.861,266,1.535,267,1.447,268,1.111,269,2.016,270,2.137,271,1.655,275,2.016,276,2.137,278,2.016,279,2.32,280,2.32,281,3.312,284,1.31,287,1.043,289,2.271,290,2.137,291,2.137,292,2.137,293,1.043,294,1.043,307,2.42,309,3.001,310,1.737,316,4.148,321,0.874,344,1.221,373,1.275,383,3.196,535,4.054,554,2.911,555,3.839,556,2.404,557,4.461,566,1.737,568,2.492,594,2.191,620,1.294,744,3.095,745,3.309,771,2.456,772,3.257,1041,1.861,1042,1.861,1065,1.655,1073,1.861,1184,1.861,1185,3.401,1186,3.401,1187,3.585,1188,2.911,1189,4.189,1190,4.4,1191,3.605,1192,4.737,1193,4.737,1194,3.605,1195,3.605,1196,4.737,1197,4.737,1198,4.737,1199,4.737,1200,3.401,1201,3.401,1202,2.911,1203,2.175,1204,2.175,1205,2.911,1206,2.175,1207,4.054,1208,2.175,1209,2.175,1210,2.175,1211,2.175,1212,2.175,1213,2.175,1214,2.911,1215,2.175,1216,2.175,1217,2.175,1218,5.141,1219,2.175,1220,2.175,1221,2.175,1222,2.175,1223,2.175,1224,4.189,1225,2.175,1226,2.175,1227,1.861,1228,2.175,1229,2.175,1230,3.401,1231,2.175,1232,2.175,1233,2.175,1234,2.175,1235,2.175,1236,2.175,1237,2.175,1238,2.175,1239,2.175,1240,4.4,1241,5.141,1242,5.141,1243,1.861,1244,2.175,1245,1.861,1246,2.175,1247,4.189,1248,2.175,1249,2.175,1250,2.175,1251,2.175,1252,2.175,1253,2.175,1254,2.175,1255,2.175,1256,2.175,1257,1.861,1258,2.175,1259,2.175,1260,1.861,1261,2.175,1262,2.175,1263,2.175,1264,3.401,1265,2.911,1266,3.401,1267,2.175,1268,3.401,1269,2.175,1270,2.175,1271,2.175,1272,2.175,1273,2.175,1274,2.175,1275,2.175,1276,2.175,1277,2.175,1278,2.175,1279,2.175]],["title/modules/ProfileModule.html",[329,0.726,1280,2.495]],["body/modules/ProfileModule.html",[3,0.283,4,0.25,9,0.25,32,0.021,39,0.459,40,0.283,42,0.283,43,0.25,83,1.114,110,1.971,114,1.971,116,1.971,118,1.528,121,0.017,122,0.017,329,1,331,1.528,332,2.117,333,3.144,334,2.245,335,2.385,336,1.698,341,3.032,342,2.913,343,2.385,344,1.45,346,2.188,347,2.188,352,2.917,353,2.717,354,3.318,355,2.541,1280,5.174,1281,4.258,1282,4.258,1283,4.258,1284,4.515,1285,4.975,1286,4.258,1287,4.258,1288,4.258,1289,3.152,1290,4.258]],["title/modules/ProfileRoutingModule.html",[329,0.726,1284,2.29]],["body/modules/ProfileRoutingModule.html",[0,0.382,3,0.299,4,0.265,9,0.265,32,0.021,39,0.459,40,0.299,42,0.299,43,0.265,110,1.738,114,1.738,116,1.738,118,1.615,121,0.017,122,0.017,209,1.31,212,1.242,302,2.686,331,1.615,336,1.795,346,1.894,347,2.263,431,3.084,432,3.684,433,3.221,434,3.332,435,3.432,437,3.332,574,4.501,1284,3.98,1286,4.501,1287,4.501,1288,4.501,1289,3.332,1290,4.501,1291,5.259,1292,5.259]],["title/components/RegisterComponent.html",[0,0.206,112,1]],["body/components/RegisterComponent.html",[0,0.221,1,0.715,2,1.325,3,0.147,4,0.13,5,0.931,6,0.931,7,0.931,8,0.931,9,0.13,13,0.697,15,0.794,16,0.882,17,1.713,18,1.624,19,0.678,21,0.678,23,0.658,24,1.019,25,1.432,26,0.678,29,1.533,31,0.678,32,0.021,33,0.745,34,0.791,35,0.678,37,0.838,38,0.967,39,0.371,40,0.147,42,0.147,60,1.515,62,2.347,64,2.434,65,1.675,66,2.234,67,2.347,68,2.303,69,2.651,70,1.984,71,2.365,72,1.752,73,2.104,74,1.166,77,1.652,78,1.561,79,1.239,80,2.679,82,1.166,83,0.579,84,1.398,85,1.257,86,0.931,87,1.867,88,0.931,89,0.931,90,0.715,91,1.074,92,0.931,93,0.715,94,1.398,95,0.753,96,0.931,97,0.579,98,0.61,99,0.931,100,0.644,101,0.931,102,0.678,103,0.882,104,0.715,105,0.931,106,0.715,107,0.931,108,0.715,109,0.931,110,0.715,111,0.931,112,1.29,113,0.931,114,0.715,115,0.931,116,0.715,117,0.837,118,0.794,119,0.931,120,0.931,121,0.011,122,0.011,133,0.87,142,1.325,143,1.592,144,2.102,145,1.707,148,1.131,161,1.589,164,0.753,165,0.882,166,1.1,167,0.967,168,0.837,170,1.224,172,0.882,174,2.212,179,1.515,181,3.323,190,1.592,192,2.679,196,1.039,197,0.715,206,0.882,207,2.679,208,1.515,209,0.644,210,0.931,212,0.917,224,4.028,231,0.931,253,0.983,254,0.983,255,0.983,265,1.411,266,1.752,267,1.1,268,1.32,269,2.206,270,1.166,272,1.411,274,2.981,275,2.484,276,2.732,277,2.735,278,2.206,279,2.339,280,2.339,281,2.986,282,2.546,283,1.515,284,1.94,286,1.637,287,1.239,288,1.166,289,1.239,290,2.104,291,2.339,292,2.339,293,1.861,294,1.861,299,1.411,306,1.783,307,2.382,309,1.637,310,1.32,324,1.239,325,1.039,327,1.131,385,1.1,414,1.983,415,1.637,427,2.46,429,1.515,435,1.32,439,1.983,527,1.967,545,1.239,547,2.104,552,4.745,555,3.698,556,0.882,566,1.983,568,2.347,744,3.255,745,3.306,755,1.411,782,1.411,810,2.46,968,1.783,978,1.783,1013,2.46,1016,2.954,1017,1.637,1021,1.967,1031,2.212,1033,3.945,1034,4.437,1048,2.954,1052,1.967,1053,1.967,1056,4.442,1057,2.212,1059,2.212,1061,4.229,1062,4.229,1063,1.967,1065,1.967,1076,3.323,1077,1.783,1078,2.212,1079,2.212,1080,2.212,1081,2.212,1082,2.212,1083,2.212,1084,1.967,1085,2.212,1088,1.967,1089,1.967,1090,1.967,1091,1.967,1093,1.967,1118,1.967,1120,1.967,1130,1.783,1139,1.967,1140,3.549,1191,1.967,1194,1.967,1195,1.967,1202,2.212,1207,4.437,1293,1.967,1294,3.882,1295,2.584,1296,4.437,1297,4.663,1298,4.756,1299,2.584,1300,2.584,1301,2.584,1302,2.584,1303,2.212,1304,2.212,1305,2.584,1306,2.584,1307,2.679,1308,2.584,1309,2.584,1310,2.584,1311,2.584,1312,2.212,1313,2.584,1314,2.584,1315,2.584,1316,2.584,1317,3.323,1318,3.323,1319,2.954,1320,1.967,1321,3.549,1322,3.549,1323,1.967,1324,2.212,1325,2.212,1326,2.212,1327,2.212,1328,2.212,1329,2.584,1330,2.584,1331,2.584,1332,5.835,1333,5.331,1334,3.882,1335,3.323,1336,3.323,1337,3.323,1338,3.323,1339,3.323,1340,3.323,1341,2.212,1342,2.584,1343,2.584,1344,2.584,1345,2.584,1346,4.437,1347,2.584,1348,2.584,1349,2.954,1350,2.212,1351,2.212,1352,3.323,1353,2.212,1354,2.212,1355,3.323,1356,1.967,1357,2.212,1358,2.212,1359,3.323,1360,3.323,1361,3.323,1362,3.323,1363,2.212,1364,2.212,1365,2.212,1366,2.212,1367,2.212,1368,2.212,1369,2.212,1370,2.212,1371,2.212,1372,2.212,1373,4.437,1374,2.212]],["title/modules/SharedModule.html",[329,0.726,341,1.538]],["body/modules/SharedModule.html",[3,0.205,4,0.181,9,0.181,32,0.021,39,0.483,40,0.205,42,0.205,43,0.181,83,0.807,106,1.967,121,0.013,122,0.013,208,2.112,329,0.724,331,1.106,332,1.532,333,2.693,334,1.625,335,1.726,336,1.917,341,2.973,342,2.362,343,1.726,344,1.05,346,1.297,347,1.775,354,3.067,355,1.839,363,1.532,492,2.74,494,3.082,495,3.082,643,2.691,898,2.485,1375,3.082,1376,3.082,1377,3.082,1378,4.504,1379,3.601,1380,5.617,1381,5.617,1382,5.617,1383,3.601,1384,5.617,1385,3.601,1386,5.617,1387,3.601,1388,3.601,1389,5.617,1390,4.927,1391,5.617,1392,4.927,1393,5.617,1394,3.601,1395,5.617,1396,3.601,1397,5.617,1398,3.601,1399,5.617,1400,5.617,1401,3.601,1402,5.617,1403,3.601,1404,5.617,1405,3.601,1406,5.617,1407,3.601,1408,5.617,1409,3.601,1410,5.617,1411,3.601,1412,5.617,1413,3.601,1414,5.617,1415,3.601,1416,5.617,1417,3.601,1418,5.617,1419,3.601,1420,5.617,1421,3.601,1422,5.617,1423,3.601,1424,5.617,1425,4.927,1426,5.617,1427,3.601,1428,5.617,1429,3.601,1430,5.617,1431,3.601,1432,5.617,1433,3.601,1434,5.617,1435,3.601,1436,5.617,1437,3.601,1438,5.617,1439,3.601,1440,5.617,1441,3.601,1442,5.617,1443,3.601,1444,5.617,1445,3.601,1446,5.617,1447,3.601,1448,5.617,1449,3.601,1450,5.617,1451,3.601,1452,5.617,1453,3.601,1454,5.617,1455,2.74,1456,2.74,1457,3.601,1458,3.601,1459,3.601]],["title/components/StatsComponent.html",[0,0.206,114,1]],["body/components/StatsComponent.html",[0,0.25,1,0.65,2,1.232,3,0.134,4,0.118,5,0.846,6,0.846,7,0.846,8,0.846,9,0.118,13,0.887,15,0.721,16,0.802,17,1.697,18,1.609,19,0.948,21,0.948,23,0.398,24,0.948,25,1.516,26,0.617,28,1.857,29,1.544,31,1.154,32,0.021,33,0.991,34,1.074,35,1.154,37,1.086,38,1.095,39,0.314,40,0.134,41,0.846,42,0.134,43,0.118,44,1.751,45,0.944,56,2.117,62,1.768,64,1.768,65,0.65,66,0.944,67,1.768,68,2.026,71,1.536,78,1.451,83,0.985,84,1.3,85,1.169,86,0.846,87,1.778,88,0.846,89,0.846,90,0.65,91,0.999,92,0.846,93,0.65,94,1.3,95,0.685,96,0.846,97,0.526,98,0.555,99,0.846,100,0.585,101,0.846,102,0.617,103,0.802,104,0.65,105,0.846,106,0.65,107,0.846,108,0.65,109,0.846,110,0.65,111,0.846,112,0.65,113,0.846,114,1.365,115,0.846,116,0.65,117,0.76,118,0.721,119,0.846,120,0.846,121,0.01,122,0.01,127,3.764,133,0.809,138,2.358,142,1.501,143,1.685,147,1.451,148,1.845,155,1.373,161,0.617,164,1.052,165,1.232,167,0.899,168,1.169,170,0.948,172,2.117,191,2.139,195,1.587,197,1.715,199,1.778,200,2.101,206,0.802,211,1.229,212,1.667,218,2.696,239,0.944,242,2.139,264,2.579,266,1.06,267,0.999,278,0.999,282,1.283,284,1.217,287,2.108,315,2.117,325,1.451,326,0.999,327,1.282,360,1.629,373,1.377,390,1.283,414,1.844,419,1.488,425,2.786,439,2.246,556,1.92,557,3.127,566,2.246,594,1.768,620,2.408,630,2.108,643,3.072,681,1.731,699,1.536,703,1.126,704,1.126,705,1.126,706,1.126,707,1.126,722,1.126,727,1.377,730,1.283,740,2.748,750,1.621,755,2.402,768,3.407,771,3.546,782,3.072,783,1.621,784,1.621,787,2.492,788,1.621,884,3.882,960,2.01,996,2.01,1013,3.831,1014,2.748,1015,1.787,1077,2.492,1106,1.787,1127,3.09,1130,3.035,1160,1.787,1214,3.09,1265,4.225,1320,2.748,1349,2.748,1356,1.787,1455,1.787,1456,4.719,1460,2.01,1461,4.398,1462,3.61,1463,4.398,1464,4.398,1465,4.398,1466,4.398,1467,4.398,1468,4.936,1469,3.61,1470,3.61,1471,4.936,1472,3.61,1473,4.398,1474,3.61,1475,2.349,1476,3.61,1477,4.398,1478,4.398,1479,4.398,1480,2.349,1481,3.61,1482,2.349,1483,6.441,1484,3.61,1485,2.349,1486,5.625,1487,2.349,1488,3.61,1489,4.398,1490,6.201,1491,2.349,1492,2.349,1493,4.814,1494,4.398,1495,3.61,1496,2.349,1497,2.349,1498,2.349,1499,3.61,1500,2.349,1501,2.349,1502,2.349,1503,2.349,1504,3.61,1505,3.61,1506,2.349,1507,4.398,1508,3.61,1509,3.61,1510,2.349,1511,2.349,1512,3.61,1513,3.61,1514,2.349,1515,2.349,1516,2.349,1517,2.349,1518,2.349,1519,2.349,1520,2.349,1521,2.349,1522,2.349,1523,2.349,1524,2.349,1525,3.61,1526,2.349,1527,2.349,1528,2.349,1529,2.349,1530,2.349,1531,2.349,1532,3.61,1533,2.349,1534,2.349,1535,2.349,1536,2.349,1537,2.349,1538,3.61,1539,2.349,1540,2.349,1541,3.61,1542,2.349,1543,2.349,1544,2.349,1545,2.349,1546,2.349,1547,2.349,1548,2.349,1549,2.01,1550,3.61,1551,2.349,1552,2.349,1553,3.61,1554,3.61,1555,2.349,1556,2.349,1557,2.349,1558,3.61,1559,2.01,1560,2.349,1561,2.349,1562,2.349,1563,2.349,1564,2.349,1565,2.349,1566,2.349,1567,2.349,1568,2.349,1569,3.09]],["title/modules/TrackingModule.html",[329,0.726,1570,2.495]],["body/modules/TrackingModule.html",[3,0.289,4,0.255,9,0.255,32,0.021,39,0.455,40,0.289,42,0.289,43,0.255,83,1.136,97,1.603,100,1.783,121,0.017,122,0.017,329,1.019,331,1.557,332,2.158,333,3.171,334,2.288,335,2.431,336,1.731,341,3.046,342,2.947,343,2.431,344,1.478,346,2.214,347,2.214,352,2.974,353,2.769,354,3.356,355,2.59,514,2.288,618,2.59,1570,5.153,1571,4.34,1572,4.34,1573,4.34,1574,4.535,1575,5.071,1576,4.34,1577,4.34,1578,4.34]],["title/modules/TrackingRoutingModule.html",[329,0.726,1574,2.29]],["body/modules/TrackingRoutingModule.html",[0,0.361,3,0.304,4,0.269,9,0.269,32,0.021,39,0.455,40,0.304,42,0.304,43,0.269,97,1.422,100,1.581,121,0.017,122,0.017,209,1.333,212,1.264,302,2.733,331,1.643,336,1.826,346,1.927,347,2.286,431,3.137,432,3.722,433,3.244,434,3.389,435,3.242,437,3.389,618,2.733,747,3.389,1574,4.021,1576,4.579,1577,4.579,1578,4.579,1579,5.35,1580,5.35]],["title/pipes/TrimDecimalsPipe.html",[1378,2.29,1581,2.495]],["body/pipes/TrimDecimalsPipe.html",[3,0.275,4,0.243,9,0.243,13,1.071,16,1.648,24,1.267,29,1.14,31,1.267,32,0.021,33,1.035,34,0.819,35,1.267,37,1.071,39,0.307,40,0.275,42,0.275,43,0.243,121,0.016,122,0.016,148,1.738,172,1.648,195,1.774,197,2.033,211,1.485,212,1.14,284,1.335,325,1.94,327,1.738,425,3.058,566,3.046,620,2.69,624,2.859,628,2.859,694,3.046,892,3.331,964,3.673,1019,4.131,1116,4.131,1378,3.778,1581,4.665,1582,4.826,1583,5.104,1584,4.131,1585,5.963,1586,5.963,1587,5.963,1588,5.963,1589,6.945,1590,4.826,1591,5.963,1592,6.759,1593,6.759,1594,6.759,1595,5.963,1596,5.963,1597,4.826,1598,4.826,1599,4.826,1600,4.826,1601,4.826]],["title/components/UpdateProfileComponent.html",[0,0.206,116,1]],["body/components/UpdateProfileComponent.html",[0,0.203,1,0.64,2,1.218,3,0.132,4,0.116,5,0.833,6,0.833,7,0.833,8,0.833,9,0.116,13,0.641,15,0.71,16,0.789,17,1.678,18,1.591,19,0.607,21,0.607,23,0.605,24,0.936,25,1.337,26,0.607,28,1.625,29,1.617,31,0.607,32,0.021,33,0.696,34,0.948,35,0.607,37,1.047,38,0.576,39,0.371,40,0.132,41,0.833,42,0.132,60,1.356,62,2.247,64,2.342,65,1.546,66,1.968,67,2.126,68,2.126,69,2.479,70,1.518,71,1.853,72,1.043,73,1.965,74,1.043,77,1.518,78,1.434,79,2.088,80,2.462,82,1.043,83,0.518,84,1.285,85,1.155,86,0.833,87,1.763,88,0.833,89,0.833,90,0.64,91,0.987,92,0.833,93,0.64,94,1.285,95,0.674,96,0.833,97,0.518,98,0.546,99,0.833,100,0.576,101,0.833,102,0.607,103,0.789,104,0.64,105,0.833,106,0.64,107,0.833,108,0.64,109,0.833,110,0.64,111,0.833,112,0.64,113,0.833,114,0.64,115,0.833,116,1.205,117,2.108,118,2,119,0.833,120,0.833,121,0.01,122,0.01,130,2.5,133,0.799,138,2.288,142,1.218,143,1.487,144,1.905,145,1.625,148,1.427,161,1.467,164,1.04,165,0.789,166,0.984,167,0.888,168,0.748,169,0.879,170,1.143,172,1.218,179,1.356,190,1.487,192,2.462,194,1.759,195,1.143,196,0.929,197,0.987,200,1.853,202,1.596,203,1.465,204,2.462,205,1.759,206,0.789,207,2.462,208,1.356,209,0.576,210,0.833,212,1.321,224,2.462,231,1.763,241,0.984,242,1.357,248,2.378,252,0.984,253,1.357,254,1.357,255,1.357,256,0.984,265,1.948,266,1.609,267,0.984,268,1.181,269,2.251,270,1.043,271,1.759,274,2.855,275,2.378,276,2.628,277,2.554,278,2.083,279,2.209,280,2.209,281,2.884,282,2.378,283,1.356,284,1.918,286,1.465,287,1.108,288,1.043,289,1.108,290,1.965,291,2.209,292,2.209,293,1.71,294,1.71,299,1.263,310,1.181,325,0.929,327,1.04,402,1.979,414,1.822,415,1.465,427,2.26,429,1.356,435,1.181,439,1.822,444,1.759,530,3.053,539,3.005,541,1.356,545,1.108,552,4.552,555,2.26,556,2.223,557,2.759,566,1.822,568,2.247,570,1.596,620,0.879,649,1.356,699,0.984,744,3.22,745,3.285,755,1.263,782,1.263,810,2.26,968,1.596,978,1.596,1013,2.26,1016,2.714,1017,1.465,1021,1.759,1048,2.714,1052,1.759,1056,4.254,1063,1.759,1077,1.596,1084,1.759,1088,1.759,1089,1.759,1090,1.759,1091,1.759,1093,1.759,1118,1.759,1120,1.759,1130,1.596,1139,1.759,1140,3.314,1187,3.053,1188,1.979,1191,1.759,1194,3.314,1195,1.759,1205,3.727,1240,1.979,1289,4.366,1298,4.527,1303,1.979,1304,1.979,1307,2.462,1312,1.979,1317,3.053,1318,3.053,1319,2.714,1321,3.726,1322,4.025,1323,1.759,1324,1.979,1325,1.979,1326,1.979,1327,1.979,1328,1.979,1332,4.19,1333,3.053,1335,3.053,1336,3.053,1337,3.053,1338,3.053,1339,3.053,1340,3.053,1341,1.979,1346,3.727,1349,2.714,1350,1.979,1351,1.979,1352,3.053,1353,1.979,1354,1.979,1355,3.053,1356,1.759,1357,1.979,1358,1.979,1359,3.053,1360,3.053,1361,3.053,1362,3.053,1363,1.979,1364,1.979,1365,1.979,1366,1.979,1367,1.979,1368,1.979,1369,1.979,1370,1.979,1371,1.979,1372,1.979,1373,4.19,1374,1.979,1602,5.245,1603,1.759,1604,3.567,1605,3.567,1606,3.567,1607,3.567,1608,3.567,1609,3.567,1610,4.355,1611,4.895,1612,4.355,1613,3.727,1614,3.567,1615,2.312,1616,2.312,1617,4.355,1618,2.312,1619,2.312,1620,2.312,1621,2.312,1622,2.312,1623,2.312,1624,2.312,1625,2.312,1626,2.312,1627,2.312,1628,2.312,1629,2.312,1630,2.312,1631,2.312,1632,2.312,1633,2.312,1634,2.312,1635,4.355,1636,2.312,1637,2.312,1638,2.312,1639,4.355,1640,2.312,1641,2.312,1642,2.312,1643,2.312,1644,2.312,1645,2.312,1646,3.567,1647,2.312,1648,2.312,1649,2.312,1650,4.355,1651,2.312,1652,2.312,1653,2.312,1654,2.312,1655,2.312,1656,2.312,1657,2.312,1658,2.312]],["title/interfaces/UserData.html",[358,1.17,743,2.29]],["body/interfaces/UserData.html",[0,0.184,3,0.116,4,0.103,9,0.103,13,0.366,14,1.195,15,1.233,17,0.508,18,0.481,19,0.535,21,0.535,23,0.346,25,0.626,26,0.535,28,1.404,32,0.021,33,0.642,34,0.548,37,0.721,38,1,39,0.337,40,0.116,41,0.734,42,0.116,43,0.103,44,1.378,45,1.614,56,2.355,65,1.111,85,0.66,98,1.641,100,0.508,117,0.66,121,0.009,122,0.009,133,0.724,138,1.738,142,1.103,143,1.103,144,1.795,145,1.404,147,1.299,148,1.84,150,1.406,152,1.406,155,0.775,161,1.459,164,0.594,165,1.103,166,0.867,167,1,168,0.66,169,0.775,170,1.308,188,1.406,190,1.103,191,1.738,195,1.459,196,1.299,199,1.91,200,0.867,206,0.696,209,0.508,210,0.734,211,1.478,212,1.705,231,0.734,239,2.234,241,0.867,242,2.258,243,1.195,247,0.92,252,0.867,253,0.775,254,0.775,255,0.775,256,0.867,258,2.542,260,2.191,261,1.406,274,1.041,284,1.891,288,2.062,325,0.819,327,1.332,358,1.613,360,2.928,363,0.867,365,3.154,380,1.406,383,1.195,385,2.12,387,2.771,396,1.406,399,1.406,401,3.154,403,1.406,404,2.047,439,1.651,457,2.544,514,0.92,550,1.458,556,1.701,565,2.191,592,2.12,594,2.817,595,0.977,600,1.406,616,1.113,620,2.258,621,1.041,622,2.051,624,1.925,625,2.838,627,1.041,628,1.549,630,2.389,633,1.651,648,1.041,650,2.708,651,1.041,657,1.041,681,2.389,682,1.651,683,1.651,693,1.041,699,1.709,702,2.545,703,1.549,704,1.549,705,1.549,706,2.191,707,1.549,709,1.651,711,1.651,722,2.763,725,2.051,734,1.041,735,1.041,739,1.406,741,2.459,742,1.551,743,3.157,744,2.708,745,2.895,746,1.551,747,1.291,748,1.551,749,1.551,750,1.406,751,3.056,752,1.551,753,1.551,754,2.459,755,1.765,756,4.035,757,3.478,758,1.551,759,1.551,760,1.406,761,2.459,762,1.551,763,1.551,764,1.551,765,3.478,766,1.551,767,1.551,768,1.406,769,1.551,770,1.551,771,2.922,772,2.047,773,1.406,774,1.551,775,1.406,776,1.551,777,3.478,778,1.551,779,1.551,780,1.551,781,2.459,782,2.496,783,3.154,784,3.154,785,2.459,786,1.551,787,1.406,788,1.406,789,1.551,790,1.551,791,1.551,792,1.551,793,1.551,794,1.551,795,1.551,796,1.551,797,1.551,798,1.551,799,1.551,800,1.551,801,2.459,802,1.551,803,1.551,804,1.551,805,1.406,806,1.551,807,3.792,808,1.551,809,3.056,810,1.291,811,1.551,812,1.551,813,3.056,814,1.551,815,1.551,816,1.551,817,1.551,818,3.056,819,2.459,820,1.551,821,1.551,822,1.551,823,2.459,824,2.459,825,1.551,826,3.478,827,3.056,828,1.551,829,2.459,830,1.551,831,1.551,832,1.551,833,1.551,834,1.551,835,3.792,836,3.056,837,2.459,838,1.551,839,2.459,840,1.551,841,1.551,842,1.551,843,2.459,844,2.459,845,1.551,846,4.035,847,2.459,848,1.551,849,2.459,850,1.551,851,2.459,852,3.056,853,1.551,854,1.551,855,1.551,856,1.551,857,1.551,858,1.551,859,1.551,860,1.551,861,1.551,862,1.406,863,1.551,864,1.551,865,1.551,866,3.056,867,1.551,868,3.056,869,1.551,870,1.551,871,2.459,872,1.551,873,1.551,874,2.459,875,1.551,876,2.459,877,1.551,878,1.551,879,1.551,880,1.551,881,1.551,882,1.551,883,1.406,884,2.23,885,1.551,886,1.406,887,1.551,888,1.551,889,1.551,890,2.459,891,1.551,892,1.406,893,1.551,894,1.551,895,1.551,896,1.551,897,1.551,898,1.406,899,2.459,900,2.459,901,1.551,902,1.551,903,1.551,904,1.551,905,1.551,906,1.551,907,2.459,908,1.551,909,1.551,910,2.459,911,1.551,912,1.551,913,1.551,914,1.551,915,1.551,916,1.551,917,1.551,918,2.459,919,1.551,920,2.459,921,2.459,922,1.551,923,1.551,924,2.459,925,1.551,926,1.551,927,1.551,928,1.551,929,1.551,930,1.551,931,1.551,932,1.551,933,1.551,934,1.551,935,1.551,936,1.551,937,1.406,938,1.551,939,2.23,940,1.551]],["title/guards/UserGuard.html",[301,2.29,1659,2.751]],["body/guards/UserGuard.html",[3,0.265,4,0.235,9,0.235,13,1.145,23,0.79,24,1.532,26,1.224,29,1.379,31,1.532,32,0.021,33,0.933,34,0.99,35,1.532,37,1.2,39,0.425,40,0.265,42,0.265,43,0.235,121,0.016,122,0.016,144,2.102,167,1.454,170,1.919,191,2.219,200,2.483,202,4.027,209,1.161,211,1.587,214,4.443,301,3.697,303,3.547,305,5.232,306,3.217,307,3.41,309,4.036,310,2.981,311,3.99,312,5.715,313,5.715,315,4.113,316,5.232,317,4.995,318,3.054,319,5.453,320,2.483,321,1.874,322,3.99,323,2.734,324,2.235,325,1.874,326,1.984,327,1.359,1659,4.441,1660,3.99,1661,4.661,1662,4.661,1663,4.661]],["title/classes/UserModule.html",[43,0.182,1664,2.495]],["body/classes/UserModule.html",[3,0.276,4,0.244,9,0.244,13,0.871,23,0.822,26,1.272,29,1.726,31,1.272,32,0.021,33,0.775,34,1.239,35,1.272,42,0.276,43,0.244,121,0.016,122,0.016,133,1.339,148,1.413,170,1.57,195,1.949,199,2.335,329,0.974,547,2.925,555,4.108,594,2.404,620,2.274,744,3.312,745,3.541,1190,5.55,1243,4.149,1245,4.149,1257,4.149,1260,4.149,1613,5.55,1664,4.799,1665,4.847,1666,4.149,1667,6.484,1668,5.979,1669,5.979,1670,4.847,1671,4.847,1672,4.847,1673,4.847,1674,4.847,1675,4.847,1676,4.847,1677,4.847,1678,4.847,1679,4.847,1680,4.847,1681,4.149,1682,4.847,1683,4.847,1684,4.847,1685,4.847,1686,4.847,1687,4.847,1688,4.847]],["title/injectables/UserService.html",[28,1.11,320,1.538]],["body/injectables/UserService.html",[3,0.2,4,0.177,9,0.177,13,0.87,23,0.596,24,1.271,26,1.271,28,1.488,29,1.623,31,0.922,32,0.021,33,0.561,34,1.063,35,0.922,37,1.249,39,0.412,40,0.2,42,0.2,43,0.177,44,1.34,121,0.013,122,0.013,133,1.085,138,2.693,142,1.892,143,2.04,144,2.504,148,1.412,161,0.922,164,1.827,165,1.653,166,2.061,167,1.206,170,1.825,190,1.199,191,1.842,195,1.744,199,2.334,200,2.923,206,1.199,209,0.875,211,1.381,212,1.623,241,1.494,242,2.526,243,2.06,252,1.494,310,2.832,315,2.84,320,2.061,321,1.412,323,2.06,324,1.684,327,1.742,329,0.973,373,2.06,506,4.106,528,2.225,539,4.327,541,3.251,547,1.585,550,2.185,556,2.373,557,4.352,568,1.947,570,2.424,699,2.061,771,3.251,772,3.069,773,2.424,775,2.424,886,3.343,1061,4.933,1062,4.933,1227,5.548,1549,4.145,1664,3.826,1681,3.006,1689,3.006,1690,4.145,1691,5.544,1692,5.544,1693,5.544,1694,5.976,1695,5.976,1696,5.976,1697,4.843,1698,3.512,1699,3.512,1700,3.512,1701,4.843,1702,3.512,1703,3.512,1704,3.512,1705,3.512,1706,3.512,1707,3.512,1708,4.843,1709,3.512,1710,3.512,1711,3.512,1712,3.512,1713,3.512,1714,3.512,1715,3.512,1716,3.512,1717,3.512,1718,3.512,1719,3.512,1720,3.512,1721,3.512,1722,3.512,1723,3.512,1724,4.843,1725,3.512,1726,5.544,1727,3.512,1728,3.512]],["title/coverage.html",[1729,4.229]],["body/coverage.html",[0,0.419,1,1.187,9,0.216,10,3.673,11,2.961,12,3.673,28,1.318,32,0.021,34,0.728,43,0.216,63,3.673,65,1.958,90,1.187,93,1.187,95,1.251,97,0.961,98,1.014,100,1.069,102,1.126,104,1.187,106,1.187,108,1.187,110,1.187,112,1.187,114,1.187,116,1.187,121,0.015,122,0.015,123,4.213,124,2.961,125,3.673,145,1.318,161,1.126,239,1.725,270,1.936,284,1.531,288,2.498,301,3.508,302,2.192,304,3.673,307,2.192,320,2.756,350,2.961,356,4.213,358,2.222,438,3.673,484,3.266,502,2.719,529,3.673,592,1.826,593,3.673,617,3.932,618,3.424,619,3.932,623,2.343,626,2.343,629,2.343,739,4.23,743,2.719,1024,3.673,1043,3.673,1095,3.673,1142,3.673,1163,3.673,1164,2.961,1165,3.673,1184,3.673,1289,3.508,1293,4.213,1307,3.821,1323,4.213,1378,2.719,1460,3.673,1569,4.739,1581,2.961,1583,3.673,1584,3.673,1602,4.213,1603,4.213,1659,3.266,1660,3.673,1664,2.961,1666,3.673,1689,3.673,1729,3.673,1730,4.291,1731,4.291,1732,4.291,1733,4.291,1734,4.291,1735,4.291,1736,4.291,1737,5.536,1738,6.704,1739,5.536,1740,5.536,1741,5.536,1742,5.536,1743,4.291,1744,4.291,1745,4.291,1746,5.536,1747,5.536,1748,4.291,1749,4.291,1750,4.291,1751,4.291,1752,5.536,1753,5.536,1754,4.291,1755,4.291,1756,4.291,1757,4.291,1758,4.291,1759,3.673,1760,4.291,1761,5.536,1762,4.291,1763,4.291,1764,3.673,1765,4.291,1766,4.291,1767,4.291,1768,4.291]],["title/dependencies.html",[332,1.851,1769,2.295]],["body/dependencies.html",[32,0.021,40,0.292,121,0.017,122,0.017,208,3.014,209,1.28,321,2.066,332,2.187,334,2.319,355,2.625,492,4.716,493,4.716,541,3.014,1143,4.399,1455,3.912,1456,3.912,1770,5.14,1771,6.271,1772,5.14,1773,6.197,1774,5.14,1775,5.14,1776,5.14,1777,5.14,1778,5.14,1779,5.14,1780,5.14,1781,5.14,1782,5.14,1783,6.197,1784,5.14,1785,5.14,1786,5.14,1787,6.907,1788,5.14,1789,5.14,1790,5.14,1791,5.14,1792,5.14,1793,5.14,1794,5.14,1795,5.14,1796,5.14,1797,5.14,1798,5.14,1799,5.14,1800,5.14,1801,5.14,1802,5.14,1803,5.14,1804,5.14,1805,5.14]],["title/miscellaneous/functions.html",[1806,2.081,1807,3.723]],["body/miscellaneous/functions.html",[23,0.947,32,0.019,37,1.17,121,0.018,122,0.018,204,3.856,231,2.012,274,2.854,545,3.121,1053,4.252,1289,3.54,1293,4.252,1296,4.782,1307,5.05,1319,4.955,1320,4.252,1321,5.244,1322,5.244,1602,4.252,1603,4.955,1806,3.856,1807,4.782,1808,5.587,1809,5.587]],["title/index.html",[23,0.511,1690,2.581,1810,3.015]],["body/index.html",[0,0.375,4,0.254,15,1.548,32,0.017,33,0.806,48,4.315,51,4.315,57,5.646,121,0.017,122,0.017,128,2.417,161,1.323,164,1.923,325,2.027,344,1.469,364,4.315,730,2.753,760,3.479,862,3.479,883,3.479,937,3.479,1106,3.836,1559,6.193,1769,3.836,1771,4.315,1811,5.041,1812,6.124,1813,5.041,1814,6.597,1815,4.315,1816,5.041,1817,6.124,1818,7.031,1819,5.041,1820,5.041,1821,5.041,1822,5.041,1823,5.041,1824,5.041,1825,5.041,1826,6.597,1827,5.041,1828,6.862,1829,5.041,1830,5.041,1831,5.041,1832,5.041,1833,6.124,1834,6.124,1835,6.862,1836,5.041,1837,6.124,1838,6.124,1839,5.041,1840,7.148,1841,5.041,1842,5.041,1843,6.124,1844,5.041,1845,5.041,1846,5.041,1847,5.041,1848,6.597,1849,5.041,1850,3.836]],["title/modules.html",[331,1.517]],["body/modules.html",[32,0.017,121,0.017,122,0.017,330,3.681,331,1.638,340,3.379,341,2.269,458,3.681,463,3.379,464,3.379,486,3.379,493,5.612,521,3.379,805,4.998,1170,3.681,1174,3.379,1280,3.681,1284,3.379,1493,6.199,1570,3.681,1574,3.379,1851,7.374,1852,7.374,1853,7.551]],["title/overview.html",[1850,3.76]],["body/overview.html",[1,1.616,2,1.328,32,0.021,43,0.196,83,0.871,90,1.616,93,1.616,95,1.988,97,1.309,100,1.455,102,1.534,104,1.616,106,1.887,108,1.616,110,1.616,112,1.616,114,1.616,116,1.616,121,0.014,122,0.014,303,2.96,329,0.782,330,4.892,331,1.194,332,1.655,333,1.864,334,1.755,335,1.864,336,1.328,337,3.329,338,3.329,339,3.329,340,3.701,341,3.111,342,2.488,343,1.864,344,1.133,433,1.864,458,5.113,459,3.329,460,3.329,461,3.329,462,3.329,463,3.701,464,4.115,465,5.559,466,5,467,5.559,468,5,469,5.559,470,5,471,5.559,472,5,486,4.491,518,3.329,519,3.329,520,3.329,521,3.701,528,2.464,616,2.124,694,1.986,782,2.834,1170,4.967,1171,3.329,1172,3.329,1173,3.329,1174,3.701,1280,4.967,1281,3.329,1282,3.329,1283,3.329,1284,3.701,1375,3.329,1376,3.329,1377,3.329,1378,4.321,1570,4.892,1571,3.329,1572,3.329,1573,3.329,1574,3.701,1581,2.684,1759,4.443,1850,2.96,1854,3.889,1855,3.889,1856,3.889]],["title/properties.html",[133,0.974,1769,2.295]],["body/properties.html",[32,0.019,121,0.018,122,0.018,133,1.321,1815,5.047,1857,5.897]],["title/routes.html",[433,2.369]],["body/routes.html",[32,0.018,121,0.018,122,0.018,433,2.842]],["title/miscellaneous/variables.html",[1806,2.081,1858,3.723]],["body/miscellaneous/variables.html",[18,1.32,23,0.947,32,0.02,34,0.947,121,0.018,122,0.018,172,1.907,197,1.545,449,5.244,450,5.244,484,4.955,541,3.276,1160,4.252,1764,4.782,1806,3.856,1858,4.782,1859,5.587,1860,5.587,1861,5.587,1862,5.587,1863,5.587,1864,5.587,1865,5.587,1866,5.587,1867,5.587,1868,5.587,1869,5.587,1870,5.587]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1857,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.0625em",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.12.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":423,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.2vh",{"_index":420,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.375em",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.3s",{"_index":1119,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1510,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":1127,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["0.58",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.789",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["0.8",{"_index":1506,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["000436",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["0004ff",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["00076e",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["00115c",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["002fff",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["003c6e",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0099ff",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["01",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["01t${drinkdata.time}:00`).tolocaletimestring('en",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["05em",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0625em",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1",{"_index":782,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":684,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["1.11.3",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.2rem",{"_index":1137,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1.5vh",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["100",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["100vh",{"_index":1114,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":1125,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":1141,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10vh",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["11.30.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["12/13",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["12vh",{"_index":1131,"title":{},"body":{"components/NavigationComponent.html":{}}}],["14",{"_index":1759,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14/15",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["15.2.0",{"_index":1771,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["155",{"_index":1135,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":1128,"title":{},"body":{"components/NavigationComponent.html":{}}}],["16",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1vh",{"_index":963,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1535,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"overview.html":{}}}],["2.3.0",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":973,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["20/21",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1511,"title":{},"body":{"components/StatsComponent.html":{}}}],["201",{"_index":967,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20px",{"_index":419,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["21",{"_index":406,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["212121",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["21212180",{"_index":418,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["255",{"_index":1133,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25vh",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["28vh",{"_index":965,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2rem",{"_index":1113,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2vh",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["3.0.0",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3/3",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1856,"title":{},"body":{"overview.html":{}}}],["300",{"_index":1507,"title":{},"body":{"components/StatsComponent.html":{}}}],["30kg",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["30vh",{"_index":961,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["33",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":960,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["375em",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3vh",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":1854,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1567,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/5",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":977,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["400",{"_index":1490,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1152,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1168,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1169,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40vh",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["48009b",{"_index":1042,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["4caf50",{"_index":1156,"title":{},"body":{"injectables/NotyfService.html":{}}}],["5",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5.0.2",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1569,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["50px",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["50vh",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5px",{"_index":1112,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5s",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5vh",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["6",{"_index":1855,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["65",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["6e0065",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6f00ff",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6vh",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["7",{"_index":1519,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["700",{"_index":1489,"title":{},"body":{"components/StatsComponent.html":{}}}],["75",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["75em",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["80vh",{"_index":1556,"title":{},"body":{"components/StatsComponent.html":{}}}],["8400ff",{"_index":1041,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["85vh",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["87",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["87008b",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["9",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["95vh",{"_index":1036,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["980328026322",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["997",{"_index":1121,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1129,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1520,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.payload.doc.data",{"_index":664,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":1183,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":978,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map(a",{"_index":663,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":312,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["active",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["adddrinkamount",{"_index":941,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adding",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["address",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adjustchartsizes",{"_index":1468,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":91,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":436,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["adminformcomponent",{"_index":90,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":302,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":330,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpagecomponent",{"_index":93,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":340,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["afauth",{"_index":1614,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["alert",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["allowed",{"_index":300,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["allows",{"_index":361,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":422,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["already",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["always",{"_index":607,"title":{},"body":{"injectables/DateService.html":{}}}],["amount",{"_index":624,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["amounts",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/bottom",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/button",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/chips",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1403,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":1405,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1407,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1415,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1431,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1433,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":1435,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slider",{"_index":1437,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1439,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":1441,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":1443,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":1445,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1447,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1449,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1451,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tree",{"_index":1453,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["apikey",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":95,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appends",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["appid",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":458,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":463,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximate",{"_index":802,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["approximately",{"_index":758,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1475,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1557,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1479,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1517,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1547,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1829,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1565,"title":{},"body":{"components/StatsComponent.html":{}}}],["async",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":310,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":307,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authmodule",{"_index":486,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":521,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":309,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["automatically",{"_index":1822,"title":{},"body":{"index.html":{}}}],["available",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["average",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["await",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["bac",{"_index":756,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["background",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bar",{"_index":643,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1508,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1463,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1504,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":613,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":605,"title":{},"body":{"injectables/DateService.html":{}}}],["block",{"_index":1139,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["blood",{"_index":754,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1037,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bottom",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["box",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["break",{"_index":929,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1853,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["browseranimationsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["browsermodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1828,"title":{},"body":{"index.html":{}}}],["builder",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["button:disabled",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button:first",{"_index":409,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:last",{"_index":411,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:not(:disabled",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["buttons",{"_index":407,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["calculate",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["canactivate",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":311,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1846,"title":{},"body":{"index.html":{}}}],["catch",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":402,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1550,"title":{},"body":{"components/StatsComponent.html":{}}}],["ccblue",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpink",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpurple",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cdr",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["change",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":767,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1483,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":1456,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1106,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["checking",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["checks",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["child",{"_index":427,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["choice",{"_index":1842,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1665,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1814,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["clicks",{"_index":632,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clip",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["close",{"_index":974,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["cluster_adminmodule",{"_index":337,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":338,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":339,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1171,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1172,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1173,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1281,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1283,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1282,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackingmodule",{"_index":1571,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_declarations",{"_index":1573,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_imports",{"_index":1572,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["code",{"_index":1824,"title":{},"body":{"index.html":{}}}],["collection",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["collection('user",{"_index":773,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["color",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1843,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":1176,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/admin",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["components/drink",{"_index":1576,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/home/home.component",{"_index":1578,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/landing",{"_index":1178,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/login/login.component",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/page",{"_index":1180,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":1286,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/register/register.component",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":1287,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/update",{"_index":1288,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["confirm",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm('are",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1631,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmdelete",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["confirmed",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('user",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log",{"_index":935,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('current",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('date",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('drink",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('drinkdata",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('estimated",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('fetched",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('future",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('invalid",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log('last",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('no",{"_index":940,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('past",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('time",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('total",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('udata",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('uid",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(this.currentuserid",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":306,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":140,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1668,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":622,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["container.open",{"_index":1122,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contains",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":755,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["core/core.module",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/admin.guard",{"_index":434,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["coremodule",{"_index":464,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1553,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1729,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cps",{"_index":647,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["create",{"_index":786,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["creates",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["createuserwithemailandpassword",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":315,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentemail",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currenttime",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1649,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":771,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["d3",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":594,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date().gettime",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(`1970",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(event.target.value",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1524,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1522,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1523,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1521,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date:'yyyy",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:\\'yyyy",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["dateinput",{"_index":761,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":592,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1534,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1530,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1592,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1589,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1586,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":1458,"title":{},"body":{"modules/SharedModule.html":{}}}],["decimals.pipe.ts",{"_index":1584,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1590,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":333,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["decoration",{"_index":1136,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["deep",{"_index":1560,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":403,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletion",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":975,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detail.alcohol",{"_index":796,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":794,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":795,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":793,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":962,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":791,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map((detail",{"_index":792,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1820,"title":{},"body":{"index.html":{}}}],["development",{"_index":1816,"title":{},"body":{"index.html":{}}}],["digit",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["direction",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["directive",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1827,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1832,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1157,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1148,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1831,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1554,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["div.drink",{"_index":969,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["div:last",{"_index":970,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["doc(currentuserid",{"_index":774,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["doc(drinkid",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc(this.editingdrinkid",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["doc.data",{"_index":1543,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1542,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1544,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":934,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set(drinkamountdata",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["docsnapshot",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1531,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["drankdrinksref",{"_index":1538,"title":{},"body":{"components/StatsComponent.html":{}}}],["drink",{"_index":98,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":957,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.abv/100",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.alcohol",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.amount",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.calories",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.category",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":927,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":959,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":404,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":674,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":936,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.time.split(':').map(number",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":623,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamountdata",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkamounts",{"_index":630,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":923,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":626,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1532,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":239,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.drinkamounts",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdata.ml",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.time",{"_index":687,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":788,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1546,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1548,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":1580,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["drinklistcomponent",{"_index":97,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkmlinput",{"_index":971,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinkname",{"_index":657,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":360,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":750,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":638,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimeinput",{"_index":972,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinktimes",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1151,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1841,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":1120,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["edit",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["eee",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{}}}],["elapsed",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":741,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["elimination",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":610,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["encapsulation",{"_index":1097,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1840,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["enter",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["entries",{"_index":922,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.findindex",{"_index":925,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":928,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":926,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entryid",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["entryindex",{"_index":924,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1145,"title":{},"body":{"injectables/NotyfService.html":{}}}],["estimated",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["estimatedsobertime",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["execute",{"_index":1837,"title":{},"body":{"index.html":{}}}],["exist",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existing",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata.drinkamounts",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exists",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exit",{"_index":930,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{}}}],["f44336",{"_index":1158,"title":{},"body":{"injectables/NotyfService.html":{}}}],["f700ff",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["false",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{}}}],["fb",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":779,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":770,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ff00dd",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ff00ff",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1823,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1562,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fills",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filterdrinks",{"_index":669,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":642,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":668,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["find",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":629,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom(this.auth.authstate",{"_index":1709,"title":{},"body":{"injectables/UserService.html":{}}}],["fixed",{"_index":964,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["flat",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["float",{"_index":408,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["form.component.html",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:115",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:20",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:24",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:28",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:79",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:93",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["formats",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formattedtime",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formbuilder",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontainer",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontainer>h1",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol('male",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formdata",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":939,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":1181,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["found.component.html",{"_index":1167,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1166,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1165,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1164,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1807,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1847,"title":{},"body":{"index.html":{}}}],["future",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["futuredrinks",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1555,"title":{},"body":{"components/StatsComponent.html":{}}}],["gb",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["gender",{"_index":745,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1604,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["genderselection",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["genderselection>label",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genderselection>label>input",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gendertemp",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1826,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1813,"title":{},"body":{"index.html":{}}}],["generates",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["get's",{"_index":1617,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getauth",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["getconfirmpassword",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["getdate",{"_index":785,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getdrinks",{"_index":660,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["getformatteddate(date",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1610,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getpassword",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1611,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":597,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1690,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["gradient(135deg",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["grams",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["graph",{"_index":1493,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1464,"title":{},"body":{"components/StatsComponent.html":{}}}],["gray",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["green",{"_index":412,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["group",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":301,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["habits",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1110,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handles",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["headercontainer",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["help",{"_index":1848,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidden",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["history.state.drink",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":608,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":747,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/TrackingRoutingModule.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":748,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":749,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1498,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1488,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1472,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["hours",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1821,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":1111,"title":{},"body":{"components/NavigationComponent.html":{}}}],["icons",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["image",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["img",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./admin/admin.module').then((m",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then((m",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then((m",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tracking/tracking.module').then((m",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1563,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["including",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":737,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["infocontainer",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["initialization",{"_index":649,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initializeapp",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializedrinkdata",{"_index":942,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["initializedrinkdata(drinkname",{"_index":658,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initializeform",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":320,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1138,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inner",{"_index":1035,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["innercontainer",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["input",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["input[type=\"radio",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["input[type=\"radio\"]:checked+span",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inputfieldzt",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inset(100",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["instantly",{"_index":611,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":358,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":616,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["isadmin",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isopen",{"_index":1101,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isuser",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["it's",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{}}}],["items",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["iterate",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":1130,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["karma",{"_index":1839,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["kcal/serving",{"_index":958,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["keep",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["key",{"_index":627,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:first",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:last",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":103,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingbuttondiv",{"_index":1038,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landinglogin",{"_index":1040,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landingpagecomponent",{"_index":102,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["landingregister",{"_index":1039,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["large",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["last",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["last7days",{"_index":1516,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1529,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["later",{"_index":656,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["latest",{"_index":609,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1494,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1495,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1465,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1518,"title":{},"body":{"components/StatsComponent.html":{}}}],["letter",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["li",{"_index":428,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["li:not(:last",{"_index":426,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["lightgray",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["linear",{"_index":291,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list",{"_index":363,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":1577,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["list.component.html",{"_index":636,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":637,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":619,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:102",{"_index":949,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:116",{"_index":948,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:127",{"_index":947,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:140",{"_index":950,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:148",{"_index":946,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:159",{"_index":945,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:34",{"_index":738,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:60",{"_index":952,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:64",{"_index":955,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:68",{"_index":953,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:72",{"_index":954,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:76",{"_index":951,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:80",{"_index":956,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:84",{"_index":944,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":618,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["listens",{"_index":1477,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":631,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":740,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1469,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1481,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadchildren",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":317,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpiechartdata",{"_index":1470,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1484,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":768,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["log",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":526,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttondiv",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":104,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["loop",{"_index":931,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["m.adminmodule",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trackingmodule",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":359,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map(([name",{"_index":790,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["map(actions",{"_index":662,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["margin",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["mat",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matautocompletemodule",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbottomsheetmodule",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{}}}],["matches",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdatepickermodule",{"_index":1402,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogmodule",{"_index":1404,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":1406,"title":{},"body":{"modules/SharedModule.html":{}}}],["materror",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["matexpansionmodule",{"_index":1408,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldupdate",{"_index":1655,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformfieldupdate>mat",{"_index":1656,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformlogin",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformregister",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matformregister>mat",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matgridlistmodule",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.max",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(...pastdrinks.map((drink",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(earliestalldrinktime.gettime",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1509,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1505,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.min(...drinktimes.map((drink",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.random",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["maticonmodule",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1416,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1399,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginatormodule",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":1428,"title":{},"body":{"modules/SharedModule.html":{}}}],["matripplemodule",{"_index":1400,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1432,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidermodule",{"_index":1436,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1434,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbarmodule",{"_index":1438,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsortmodule",{"_index":1440,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":1442,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":1444,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1446,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1448,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1450,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattreemodule",{"_index":1452,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":425,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["mdc",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["media",{"_index":1564,"title":{},"body":{"components/StatsComponent.html":{}}}],["menu",{"_index":1096,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["merging",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["message",{"_index":1147,"title":{},"body":{"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{}}}],["messages",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1806,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{}}}],["mm",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mmm",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":329,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1849,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":364,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["navigates",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigation",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1100,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1099,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":1459,"title":{},"body":{"modules/SharedModule.html":{}}}],["navigation?.extras?.state",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":106,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":405,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["necessary",{"_index":635,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":1844,"title":{},"body":{"index.html":{}}}],["needed",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1639,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":676,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1646,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1635,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":1559,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["ngneat/hot",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":1561,"title":{},"body":{"components/StatsComponent.html":{}}}],["ngxchartsmodule",{"_index":1454,"title":{},"body":{"modules/SharedModule.html":{}}}],["none",{"_index":417,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["notification",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1143,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":145,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["nowrap",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["null",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":620,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["object",{"_index":1160,"title":{},"body":{"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map(([category",{"_index":1552,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts",{"_index":789,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1643,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1545,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1533,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1527,"title":{},"body":{"components/StatsComponent.html":{}}}],["once",{"_index":932,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondatechange",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondatechange(event",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondrinkclick(drink",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["oninit",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1471,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":139,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":1107,"title":{},"body":{"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":746,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":266,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["overlay",{"_index":1124,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":1850,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["package",{"_index":1769,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":784,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":351,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["page.component.html",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":367,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":356,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1027,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:22",{"_index":1029,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:24",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:29",{"_index":1028,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:51",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:68",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:76",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:84",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":350,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":108,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{}}}],["pages/components/landing",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesmodule",{"_index":1170,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":1174,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1598,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["passwordsdontmatch",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["past",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":435,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{}}}],["per",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["personal",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":1292,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["picker",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1486,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1466,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1513,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1467,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1512,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":1581,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap(({user",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipes",{"_index":1582,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":1457,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1596,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1593,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["please",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pointer",{"_index":429,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":414,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["present",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":780,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":118,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":111,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":1290,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profile.component.html",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1603,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profile.component.ts:100",{"_index":1620,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:109",{"_index":1628,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:115",{"_index":1629,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1630,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:127",{"_index":1632,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:133",{"_index":1633,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:140",{"_index":1619,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:151",{"_index":1618,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:168",{"_index":1616,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:186",{"_index":1621,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1626,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:53",{"_index":1623,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1627,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:61",{"_index":1622,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:65",{"_index":1624,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1625,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1615,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":1289,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profileadminbtn",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilebuttondiv",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecontainer",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilelogoutbtn",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilemodule",{"_index":1280,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1613,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1605,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profileroutingmodule",{"_index":1284,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilestatsbtn",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilesub",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileupdatebtn",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1812,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1537,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1528,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":628,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{}}}],["provideauth",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":335,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["providestorage",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":634,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["pwcheck",{"_index":1606,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["querysnapshot",{"_index":1540,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rate",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ratio",{"_index":1566,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1478,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{}}}],["record",{"_index":787,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["recorded",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["rect(0",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["red",{"_index":410,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttoadminformadddrink",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1025,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1026,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('email",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["reference",{"_index":760,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":527,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":113,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1667,"title":{},"body":{"classes/UserModule.html":{}}}],["registerbutton",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerbuttondiv",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":112,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["registers",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":415,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["reload",{"_index":937,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["remaining",{"_index":933,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["remixicon",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["result",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":327,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1525,"title":{},"body":{"components/StatsComponent.html":{}}}],["rgb(20",{"_index":1115,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgb(201",{"_index":966,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgb(255",{"_index":976,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgba($color",{"_index":421,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["rgba(0",{"_index":1126,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(132",{"_index":1132,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(72",{"_index":1134,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1154,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":316,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":432,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":437,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":313,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":433,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["routing.module.ts",{"_index":431,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["row",{"_index":1568,"title":{},"body":{"components/StatsComponent.html":{}}}],["rules",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["run",{"_index":1818,"title":{},"body":{"index.html":{}}}],["running",{"_index":1833,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1825,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":640,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":644,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1558,"title":{},"body":{"components/StatsComponent.html":{}}}],["select",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["selectdrink",{"_index":943,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":665,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":595,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":596,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":639,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["separate",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1819,"title":{},"body":{"index.html":{}}}],["server",{"_index":1817,"title":{},"body":{"index.html":{}}}],["serves",{"_index":357,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":322,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["serving",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":600,"title":{},"body":{"injectables/DateService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sets",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":598,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":601,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["shape",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["shared/navigation/navigation.component",{"_index":1179,"title":{},"body":{"modules/PagesModule.html":{}}}],["shared/shared.module",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["sharedmodule",{"_index":341,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":1526,"title":{},"body":{"components/StatsComponent.html":{}}}],["shows",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":1033,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["sober",{"_index":757,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":759,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":424,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["spacing",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["span",{"_index":1140,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["specific",{"_index":633,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/.../environment.ts",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../update",{"_index":1809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/admin/admin",{"_index":430,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/admin/admin.module.ts",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/components/admin",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":525,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/login/login.component.ts",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/login/login.component.ts:20",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:23",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:39",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:44",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:50",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:58",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/register/register.component.ts",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/components/register/register.component.ts:105",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:111",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:119",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:47",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:60",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:76",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:81",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:87",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:93",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:99",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":304,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":308,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:26",{"_index":314,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1660,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1661,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:26",{"_index":1662,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/services/authentication.service",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:17",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:32",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:40",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:45",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:52",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:59",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:69",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:76",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/date.service",{"_index":621,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/date.service.ts",{"_index":593,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":606,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":604,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:24",{"_index":602,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:32",{"_index":599,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/notyf/notyf.service",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/notyf/notyf.service.ts",{"_index":1142,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:10",{"_index":1144,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:16",{"_index":1159,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:41",{"_index":1150,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:49",{"_index":1146,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/user/user.module.ts",{"_index":1666,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.module.ts:10",{"_index":1675,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:11",{"_index":1671,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:12",{"_index":1669,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:5",{"_index":1672,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:6",{"_index":1676,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:7",{"_index":1670,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:8",{"_index":1673,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:9",{"_index":1674,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:22",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:26",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:36",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:43",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:62",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:75",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:89",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/landing",{"_index":1024,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/page",{"_index":1163,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages",{"_index":1182,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1175,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/profile/components/profile/profile.component.ts",{"_index":1184,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/profile/profile.component.ts:108",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:117",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:132",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:142",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:151",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:158",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:165",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:22",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:26",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:30",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:34",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:38",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:42",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:65",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:89",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:99",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts",{"_index":1460,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/stats/stats.component.ts:116",{"_index":1485,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:18",{"_index":1491,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:22",{"_index":1497,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:26",{"_index":1496,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:31",{"_index":1492,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:35",{"_index":1474,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:48",{"_index":1476,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:56",{"_index":1487,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:69",{"_index":1480,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:87",{"_index":1482,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/update",{"_index":1602,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/profile/profile",{"_index":1291,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1285,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/navigation/navigation.component.ts",{"_index":1095,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/shared/navigation/navigation.component.ts:16",{"_index":1105,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:21",{"_index":1103,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/pipes/trim",{"_index":1583,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tracking/components/drink",{"_index":617,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts",{"_index":739,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts:117",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:134",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:192",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:277",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:289",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:300",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:307",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:314",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:322",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:335",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:43",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:47",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:51",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:55",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:59",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:63",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:67",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:88",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:93",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/tracking",{"_index":1579,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["src/app/tracking/tracking.module.ts",{"_index":1575,"title":{},"body":{"modules/TrackingModule.html":{}}}],["src/environments/environment.ts",{"_index":1764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1810,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":115,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1462,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1461,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":114,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storagebucket",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":655,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["stored",{"_index":1830,"title":{},"body":{"index.html":{}}}],["stores",{"_index":675,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["style",{"_index":416,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["subscribe",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["subscribers",{"_index":612,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1149,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sum",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1851,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["svg",{"_index":1852,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1455,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["tempamounts",{"_index":646,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["temporary",{"_index":645,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tempstring",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":641,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":670,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every(term",{"_index":673,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1836,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1845,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1835,"title":{},"body":{"index.html":{}}}],["text",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["then((result",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.adjustchartsizes",{"_index":1499,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1648,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1539,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('drink').snapshotchanges().pipe",{"_index":661,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(this.currentuserid",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.currentuser",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.subscribe(async",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isadmin",{"_index":328,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1663,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.login(email",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1514,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":651,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe((date",{"_index":769,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(this.selecteddate",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.deletedrinkfromfirestore(drink",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkform",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":781,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":653,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter(drink",{"_index":672,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1680,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":765,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":764,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":654,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe(map(user",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1640,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1641,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe(drinks",{"_index":652,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getweight",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1536,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1677,"title":{},"body":{"classes/UserModule.html":{}}}],["this.initializedrinkdata(drink.name",{"_index":666,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.initializeform",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.iseditmode",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.isopen",{"_index":1109,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1500,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1501,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyf.error(message",{"_index":1162,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1161,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('no",{"_index":938,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('something",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('drink",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('password",{"_index":1651,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1645,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.notyfservice.success('url",{"_index":1634,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.password?.value",{"_index":1647,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1551,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1515,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1682,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilesub",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pwcheck",{"_index":1650,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.registerageindays",{"_index":1684,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/admin",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/adminform",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":1031,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/auth/register",{"_index":1030,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.router.navigate(['/pages/landing",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate(['/profile/personalstats",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/profile/profile",{"_index":1653,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.router.navigate(['/profile/updateprofile",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/tracking/drinklist",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.router.navigate(['/tracking/home",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":671,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":650,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getdate().tostring().padstart(2",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate.getfullyear",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":603,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":614,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":615,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":667,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.tempamounts[drink.name",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.tempamounts[drinkname",{"_index":659,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.totalcalories",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.userdata",{"_index":777,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuseremailstring",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.weight",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1636,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1637,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["throw",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":625,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":763,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{}}}],["togglemenu",{"_index":1102,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1104,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["topromise",{"_index":775,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tostring",{"_index":783,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["total",{"_index":751,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":752,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":753,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":677,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{}}}],["trackingmodule",{"_index":1570,"title":{"modules/TrackingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingroutingmodule",{"_index":1574,"title":{"modules/TrackingRoutingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trailing",{"_index":1600,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":1116,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["transform(value",{"_index":1588,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":1118,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["translatex",{"_index":1117,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1123,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["triggers",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1587,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimals:2",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["trimdecimalspipe",{"_index":1378,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1594,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1595,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1585,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1591,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":1155,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":413,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["undefined",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unelevated",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unique",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["unit",{"_index":1834,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1549,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1599,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":1034,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":117,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["update(drinkdata",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["update(updates",{"_index":1644,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebutton",{"_index":1658,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebuttondiv",{"_index":1657,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["updateddrinkamounts",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name].push",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateform",{"_index":1654,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/ProfileRoutingModule.html":{}}}],["updateprofile(user",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":116,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1607,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1612,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["updates.gender",{"_index":1642,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1638,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1652,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["uploaded",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["urltree",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":1177,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":648,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["used",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1681,"title":{},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user.gender",{"_index":1687,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1678,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1683,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1685,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1686,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1679,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1688,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":743,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":772,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":778,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":776,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocs",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["userguard",{"_index":1659,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1664,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1608,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(0",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(1",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(30",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.minlength(8",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1597,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["valuechanges",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["values",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1858,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1815,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1838,"title":{},"body":{"index.html":{}}}],["view",{"_index":362,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":742,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":762,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1108,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1098,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["watches",{"_index":766,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["weight",{"_index":744,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1609,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1032,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1541,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.confirm",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["window.innerheight",{"_index":1503,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1502,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1473,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrap",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["wrong",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":1153,"title":{},"body":{"injectables/NotyfService.html":{}}}],["y",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["yyyy",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":968,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["zero",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1601,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1811,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        \n    About Us\n    Thank you for using our application! \n        The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits. \n        This app is for personal use only and should not be used commercially in any form.\n    \n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                .innerContainer {\n    width: 80%;\n    height: 100%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 70%;\n}\n\n.innerContainer > h1 {\n    font-size: 5vh;\n    padding-bottom: 10vh;\n}\n\n.innerContainer > p {\n    font-size: large;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Thank you for using our application!         The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits.         This app is for personal use only and should not be used commercially in any form.    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the form with default values and validation rules.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:20\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss'],\n})\nexport class AdminFormComponent {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm: FormGroup;\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [\n          caloriesPerServing,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    } else {\n      this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        ml: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: ['', Validators.required],\n        caloriesPerServing: [\n          '',\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.initializeForm();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Initializes the form with default values and validation rules.\n   */\n  initializeForm(): void {\n    this.drinkForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      abv: [\n        null,\n        [Validators.required, Validators.min(0), Validators.max(100)],\n      ],\n      caloriesPerServing: [null, [Validators.required, Validators.min(0)]],\n      ml: [null, [Validators.required, Validators.min(1)]],\n      category: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   *\n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs\n            .collection('drink')\n            .doc(this.editingDrinkId)\n            .update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.router.navigate(['/admin/admin']);\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Update drink' : 'Add a new drink' }}\n\n  \n    \n    \n      Name\n      \n    \n\n    \n    \n      Alcohol by Volume (ABV %)\n      \n    \n\n    \n    \n      Calories per Serving\n      \n    \n\n    \n    \n      Volume (ml)\n      \n    \n\n    \n    \n      Category\n      \n    \n\n    \n    \n      Submit\n    \n  \n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                .admin-form-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-form-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n}\n\n.drink-form {\n  width: 40vh;\n  height: 25vh;\n  padding-top: 2vh;\n}\n\n.form-group {\n  text-align: center;\n  margin-bottom: 3vh;\n}\n\n.drink-form input {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.admin-form-button-div {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n}\n\n.admin-form-button {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.admin-form-button:disabled {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: gray;\n  background-image: linear-gradient(135deg, #00115c 0%, #000436 100%);\n  cursor: not-allowed;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Update drink\\' : \\'Add a new drink\\' }}                Name                        Alcohol by Volume (ABV %)                        Calories per Serving                        Volume (ml)                        Category                        Submit      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    \n      return this.authService.isAdmin();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AdminFormComponent, AdminPageComponent],\n  imports: [SharedModule, AdminRoutingModule, CommonModule],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss'],\n})\nexport class AdminPageComponent {\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs\n      .collection('drink')\n      .valueChanges({ idField: 'id' })\n      .subscribe(\n        (drinks) => {\n          this.drinks = drinks;\n        },\n        (error) => {\n          console.error('Error fetching drinks', error);\n        }\n      );\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.router.navigate(['/admin/adminform']);\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.router.navigate(['/admin/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  All Drinks\n  \n    \n      {{ drink.name }}\n      \n        Delete &nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp; Edit\n      \n    \n  \n  \n    Add New Drink\n  \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                .admin-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.add-drink-button {\n  margin-left: 21%;\n  margin-top: 10%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.buttons-div {\n  float: right;\n}\n\n.buttons-div > button:first-of-type {\n  color: red;\n}\n\n.buttons-div > button:last-of-type {\n  color: green;\n}\n\n.add-drink-button-div {\n  width: 100%;\n}\n\n.admin-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.admin-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All Drinks            {{ drink.name }}              Delete                Edit                  Add New Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from \"@angular/router\";\nimport { AdminPageComponent } from \"./components/admin-page/admin-page.component\";\nimport { AdminFormComponent } from \"./components/admin-form/admin-form.component\";\nimport { NgModule } from \"@angular/core\";\nimport { AdminGuard } from \"../core/guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard] },\n  { path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth, AuthModule } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingPageComponent } from './pages/components/landing-page/landing-page.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingPageComponent },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'pages',\n    loadChildren: () =>\n      \"import('./pages/pages.module').then((m) => m.PagesModule)\",\n  },\n  {\n    path: 'profile',\n    loadChildren: () =>\n      \"import('./profile/profile.module').then((m) => m.ProfileModule)\",\n  },\n  {\n    path: 'tracking',\n    loadChildren: () =>\n      \"import('./tracking/tracking.module').then((m) => m.TrackingModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [SharedModule, AuthRoutingModule, CommonModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Auth, signInWithEmailAndPassword, authState, createUserWithEmailAndPassword, updateProfile } from '@angular/fire/auth';\nimport { from, map, Observable, switchMap } from 'rxjs';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n  \n  /**\n   * \n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(private auth: Auth, private fireAuth: AngularFireAuth) { }\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string){\n    return from(\n      signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser(){ return this.currentUser$; }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == this.auth.currentUser?.email;}));\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == \"admin@zt.com\"}));\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string){\n    return from(createUserWithEmailAndPassword(this.auth, email, password))\n    .pipe(switchMap(({user}) => updateProfile(user, {displayName: username})));\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string){\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser(){ return from(this.auth.signOut()); }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n    console.log('Drink times:', drinkTimes);\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n    console.log('Past Drinks:', pastDrinks);\n    console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      console.log('Last past drink time:', lastDrinkTime);\n      console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n      console.log('Current BAC:', this.bac);\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n    console.log('Estimated hours to sober:', soberHours * 100);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n    console.log('Estimated time to be sober:', this.soberTime);\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log('drinkData: ', drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(\n            `Deleted drink ${drink.name} at ${drink.time} from Firestore`\n          );\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                            \n                                tempAmounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                initializeDrinkData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink tracking to be uploaded\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDrinkData\n                        \n                    \n                \n            \n            \n                \ninitializeDrinkData(drinkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Initializes a temporary value to store drink data later\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the given drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:76\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:60\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:68\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:72\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:84\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:64\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:80\n                        \n                    \n\n            \n                \n                    Temporary data for consumed drink.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Add Drink\n\n  \n\n  \n    \n      {{ drink.name }}\n      \n        \n        {{drink.name}}\n        ABV: {{ drink.abv}}\n        Kcal/Serving: {{ drink.caloriesPerServing}}\n        Category: {{ drink.category}}\n        Size: {{ drink.ml}} ml\n        \n          Amount (ml)\n          \n          Time\n          \n          Add\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                .drink-list {\n  width: 35vh;\n  position: relative;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.drink-list ul {\n  position: relative; \n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\n.drink-list > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.drink-list li {\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  padding: 20px;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drink-details {\n  padding: 1vh;\n  position: fixed;\n  top: 0;\n  margin-top: 28vh;\n  margin-left: -5vh;\n  width: 40vh;\n  color: rgb(201, 201, 201);\n\n  z-index: 10;\n  background-color: #212121;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  text-align: center;\n}\n\n.drink-name {\n  margin-bottom: 2vh;\n  color: white;\n}\n\ndiv.drink-details div:last-of-type {\n  margin-top: 5vh;\n}\n\n.search-bar {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.drinkMlInput,\n.drinkTimeInput {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drinkMlInput {\n  margin-bottom: 1vh;\n}\n\n.add-drink-button {\n  margin-top: 20%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.close-drink-detail {\n  color: rgb(255, 0, 0);\n  margin-left: 40%;\n  position: absolute;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Drink              {{ drink.name }}                      {{drink.name}}        ABV: {{ drink.abv}}        Kcal/Serving: {{ drink.caloriesPerServing}}        Category: {{ drink.category}}        Size: {{ drink.ml}} ml                  Amount (ml)                    Time                    Add                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the drink tracking page and the overall data.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bac\n                            \n                            \n                                    \n                                dateInput\n                            \n                            \n                                drinksForTheDay\n                            \n                            \n                                selectedDate\n                            \n                            \n                                soberTime\n                            \n                            \n                                totalCalories\n                            \n                            \n                                totalDrinks\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateBAC\n                            \n                            \n                                calculateTotals\n                            \n                            \n                                    Async\n                                deleteDrinkFromFirestore\n                            \n                            \n                                    Async\n                                fetchDrinksForTheDay\n                            \n                            \n                                    Async\n                                fetchUserData\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                redirectToDrinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService, dateService: DateService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBAC\n                        \n                    \n                \n            \n            \n                \ncalculateBAC()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Calculates approximate blood alcohol content for given day.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If user data is not present then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotals\n                        \n                    \n                \n            \n            \n                \ncalculateTotals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:277\n                        \n                    \n\n\n            \n                \n                        Calculates total calories and drinks for the day.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDrinkFromFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDrinkFromFirestore(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:335\n                        \n                    \n\n\n            \n                \n                        Removes the selected drink from the user's consumed drinks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchDrinksForTheDay\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDrinksForTheDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Fetches the user's consumed drinks for the day.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Fetches user data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:300\n                        \n                    \n\n\n            \n                \n                        Formats the given date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The given date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The given date but properly formatted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the page.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:289\n                        \n                    \n\n\n            \n                \n                        Sets proper data on date change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event that triggers this method.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:322\n                        \n                    \n\n\n            \n                \n                        Shows alert for drink deletion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:307\n                        \n                    \n\n\n            \n                \n                        Opens the date picker.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToDrinks\n                        \n                    \n                \n            \n            \n                \nredirectToDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:314\n                        \n                    \n\n\n            \n                \n                        Redirects to drink list page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bac\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:59\n                        \n                    \n\n            \n                \n                    Blood alcohol content for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Reference to the dateInput element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksForTheDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:47\n                        \n                    \n\n            \n                \n                    Drinks for the selected day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        soberTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    The time by the user will be sober approximately.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:51\n                        \n                    \n\n            \n                \n                    Total calories for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:55\n                        \n                    \n\n            \n                \n                    Total amount of drinks for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                        \n                    \n\n            \n                \n                    The user's personal data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n    console.log('Drink times:', drinkTimes);\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n    console.log('Past Drinks:', pastDrinks);\n    console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      console.log('Last past drink time:', lastDrinkTime);\n      console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n      console.log('Current BAC:', this.bac);\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n    console.log('Estimated hours to sober:', soberHours * 100);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n    console.log('Estimated time to be sober:', this.soberTime);\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log('drinkData: ', drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(\n            `Deleted drink ${drink.name} at ${drink.time} from Firestore`\n          );\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    -->\n\n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    \n\n    \n      \n      \n    -->\n\n    \n      \n    \n  \n\n   0\">\n    \n      \n        {{ drink.name }}\n        \n         {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |\n        trimDecimals:2 }} kcal\n        \n      \n    \n  \n  \n    No drinks recorded for this day\n  \n\n  \n    \n      Total calories for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalCalories | trimDecimals:2 }}-->\n      Total calories:{{ totalCalories | trimDecimals:2 }} kcal\n    \n    \n      Number of drinks for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalDrinks }}-->\n      Number of drinks:{{ totalDrinks }}\n    \n    \n    \n      Estimated BAC:{{ bac | number: '1.2-2' }}%\n      Sober:~ {{ soberTime | date: 'EEE MMM dd yyyy HH:mm:ss'\n          }}\n    \n  \n  \n    Add Drink\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.date-picker-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.date-display-box {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding: 20px;\n  cursor: pointer;\n}\n\n.info-container {\n  padding-top: 5%;\n}\n\n.info-container-right {\n  float: right;\n}\n\nul > li {\n  text-align: center;\n}\n\n.add-drink-container {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2vh;\n}\n\n.add-drink-button {\n  margin-top: 5%;\n  width: 65%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.no-drinks {\n  text-align: center;\n}\n\n.home-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.home-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n.remove-drink {\n  color: red;\n  float: right;\n  margin-right: -1vh;\n  margin-top: -1.5vh;\n}\n\n.hidden-date-input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n}\n\n.date-picker-field {\n  padding-bottom: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedDate | date: \\'yyyy-MM-dd\\' }}    -->          {{ selectedDate | date: \\'yyyy-MM-dd\\' }}                        -->                   0\">                  {{ drink.name }}                 {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |        trimDecimals:2 }} kcal                          No drinks recorded for this day              Total calories for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalCalories | trimDecimals:2 }}-->      Total calories:{{ totalCalories | trimDecimals:2 }} kcal              Number of drinks for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalDrinks }}-->      Number of drinks:{{ totalDrinks }}                  Estimated BAC:{{ bac | number: \\'1.2-2\\' }}%      Sober:~ {{ soberTime | date: \\'EEE MMM dd yyyy HH:mm:ss\\'          }}            Add Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/landing-page/landing-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:22\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  /**\n   *\n   * @param router Router for routing.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister() {\n    this.router.navigate(['/auth/register']);\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin() {\n    this.router.navigate(['/auth/login']);\n  }\n}\n\n    \n\n    \n        \n    \n        Welcome To\n        Zero Tolerance\n    \n    \n        Sign Up\n        Sign In\n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                .inner-container {\n    margin-top: 100%;\n    overflow-y: auto;\n    height: 95vh;\n\n  }\n\n  .inner-container > div > p {\n    text-align: center;\n    font-size: 2vh;\n  }\n\n  .inner-container > div > h1 {\n    text-align: center;\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  .landingButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  #landingRegister {\n    width: 70%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n    color: white;\n  }\n\n  #landingLogin {\n    margin-top: 5%;\n    width: 70%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n    color: white;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To        Zero Tolerance                Sign Up        Sign In    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:50\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email() {\n    return this.loginForm.get('email');\n  }\n  /**\n   * Gets the password input.\n   */\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: () => {\n        this.notyfService.success('Logged in');\n        this.auth.user.subscribe(async (user) => {\n          if (user) {\n            this.router.navigate(['/tracking/home']);\n          }\n        });\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  Sign In\n  \n\n    \n      \n      Type in an e-mail address\n      Invalid e-mail address\n    \n    \n    \n      \n      Type in your password\n      \n    \n    \n\n    \n      Sign In\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n  }\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.loginForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.loginButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.loginButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormLogin {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormLogin > mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.matError {\n    color: red;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign In                  Type in an e-mail address      Invalid e-mail address                        Type in your password                        Sign In      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Toggles navigation menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navigation/navigation.component.ts:16\n                        \n                    \n\n            \n                \n                    Flag to check if menu is open.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NavigationComponent {\n  /**\n   * Flag to check if menu is open.\n   */\n  isOpen = false;\n\n  /**\n   * Toggles navigation menu.\n   */\n  toggleMenu() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home\n      \n      \n        About Us\n      \n      \n        Profile\n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .hamburger-icon {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.hamburger-menu-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: rgb(20, 0, 40);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  z-index: 997;\n}\n\n.hamburger-menu-container.open {\n  transform: translateX(0);\n}\n\n.menu-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.menu-content {\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: white;\n  z-index: 999;\n}\n\n.menu-content ul {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 3vh;\n}\n\n.menu-content li {\n  margin-top: 15px;\n  padding-right: 12vh;\n  padding-left: 12vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  border-radius: 15px;\n  cursor: pointer;\n  background-image: linear-gradient(135deg, rgba(132, 0, 255, 0.5) 0%, rgba(72, 0, 155, 0.5) 100%);\n  width: 100%;\n}\n\n.menu-content a {\n  color: white;\n  text-decoration: none;\n  font-size: 1.2rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n\na > span {\n  padding-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home                    About Us                    Profile              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyfService {\n  constructor() { }\n  \n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { NavigationComponent } from '../shared/navigation/navigation.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AboutUsComponent, LandingPageComponent, PageNotFoundComponent],\n  imports: [SharedModule, PagesRoutingModule, CommonModule],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  { path: 'aboutus', component: AboutUsComponent },\n  { path: 'landing', component: LandingPageComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:38\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:30\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit() {\n    this.profileSub = this.route.paramMap.subscribe((params) => {\n      this.currentUserID = params.get('id') as string;\n      if (!this.currentUserID) {\n        this.userService\n          .getCurrentUserId()\n          .then((result: string | undefined) => {\n            const tempString: string = result || '';\n            this.currentUserID = tempString;\n            console.log(this.currentUserID);\n\n            this.getUsername();\n            this.getRegisterDate();\n            this.getProfilePicture();\n            this.getGender();\n            this.getWeight();\n          });\n      }\n    });\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser() {\n    this.authService.logoutUser().subscribe(() => {\n      this.notyfService.success('Logged out');\n      this.router.navigate(['']);\n    });\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\n      'profilePic'\n    ) as HTMLImageElement;\n    profilePicHtml.src = picUrl\n      ? picUrl\n      : 'https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&';\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats() {\n    this.router.navigate(['/profile/personalstats']);\n  }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile() {\n    this.router.navigate(['/profile/updateprofile']);\n  }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() {\n    this.router.navigate(['/admin/admin']);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        {{username}}\n    \n    \n        {{registerDate}}\n        {{gender}} - \n        {{weight}} kg\n    \n    \n        Admin Page\n        Personal Stats\n        Update Profile\n        Logout\n    \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .profileContainer {\n    width: 25vh;\n    overflow-y: auto;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.headerContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.headerContainer > img {\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50px 50px 50px 50px;\n}\n\n.infoContainer {\n    text-align: center;\n    padding-bottom: 5vh;\n}\n\n.profileButtonDiv {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.profileStatsBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n  color: white;\n}\n\n.profileUpdateBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n  color: white;\n}\n\n.profileLogoutBtn {\n    width: 100%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #ff00ff 0%, #6e0065 100%);\n    color: white;\n  }\n\n  .profileAdminBtn {\n    width: 100%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #0099ff 0%, #003c6e 100%);\n    color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}                {{registerDate}}        {{gender}} -         {{weight}} kg                Admin Page        Personal Stats        Update Profile        Logout    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ProfileComponent, StatsComponent, UpdateProfileComponent],\n  imports: [SharedModule, ProfileRoutingModule, CommonModule],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'personalstats', component: StatsComponent },\n  { path: 'updateprofile', component: UpdateProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/register/register.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \nregisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl('male', Validators.required), // Gender must be selected\n    },\n    { validators: passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/register/register.component.ts:47\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:81\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:87\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:93\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:99\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:105\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:111\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Checks if the two passwords typed in the `registerForm` match\n */\nexport function passwordsMatchValidator(): ValidatorFn {\n  return (AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if (password && password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    } else if (\n      password != '' &&\n      (password.length  {\n          this.notyfService.success('Registered successfully');\n          this.authService.logoutUser();\n          this.router.navigate(['/auth/login']);\n        },\n        error: (error) => {\n          this.notyfService.error('Something went wrong');\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  Sign Up\n  \n  \n    \n      \n      Please enter a username! \n\n    \n      \n      Please enter an e-mail!\n      Please enter a valid e-mail address!\n    \n\n    \n      \n      Please type in a password! \n\n    \n      \n      Please confirm your password!\n    \n\n    The passwords do not match\n    Password must be at least 8 characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg! \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n    \n\n    \n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n}\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.registerForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.registerButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.registerButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormRegister {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormRegister>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.genderSelection,\n.genderSelection>label,\n.genderSelection>label>input {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign Up                    Please enter a username!                 Please enter an e-mail!      Please enter a valid e-mail address!                    Please type in a password!                 Please confirm your password!        The passwords do not match    Password must be at least 8 characters!                    Please enter your weight!      Weight must be at least 30kg!                                             Male                                      Female                Please select your gender!                                Sign Up            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [TrimDecimalsPipe, NavigationComponent],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  exports: [\n    CommonModule,\n    TrimDecimalsPipe,\n    NavigationComponent,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [400, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [400, 400];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n  \n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(private afs: AngularFirestore, private userService: UserService) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {drinkAmounts?: Record};\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return { name: `${day.date.getMonth() + 1}.${day.date.getDate()}`, value: drinkCount };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as { drinkAmounts?: Record };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(([category, count]) => ({\n      name: category,\n      value: count,\n    }));\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n    \n  \n    \n    \n      \n      \n    \n    Distribution of Drinks (by category)\n  \n  \n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                .stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  overflow-y: auto;\n  height: 80vh;\n}\n\n.chart-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.chart-section {\n  flex: 1 1 auto;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 35vh;\n}\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n@media (min-aspect-ratio: 4/3) {\n  .stats-container {\n    flex-direction: row;\n    justify-content: center;\n  }\n\n  .chart-section {\n    flex: 1 1 50%;\n    max-width: 50%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Distribution of Drinks (by category)    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingModule.html":{"url":"modules/TrackingModule.html","title":"module - TrackingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_imports\n\n\n\ncluster_TrackingModule_declarations\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrackingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrackingRoutingModule } from './tracking-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DrinkListComponent, HomeComponent],\n  imports: [SharedModule, TrackingRoutingModule, CommonModule],\n})\nexport class TrackingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingRoutingModule.html":{"url":"modules/TrackingRoutingModule.html","title":"module - TrackingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'drinklist', component: DrinkListComponent },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrackingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                pwCheck\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:61\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:53\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pwCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:65\n                        \n                    \n\n            \n                \n                    Flag for checking if password match.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl(''),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl('', Validators.required),\n    },\n    { validators: passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:70\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:49\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:57\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:109\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:115\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:121\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:127\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:133\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Checks if the input passwords match.\n * @returns True flag if passwords match\n */\nexport function passwordsMatchValidator(): ValidatorFn {\n  return (AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if (password && password !== confirmPassword) {\n      return { passwordsDontMatch: true };\n    } else if (\n      password != '' &&\n      (password.length  this.notyfService.success('URL updated'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = this.gender?.value;\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef\n        .update(updates)\n        .then(() => this.notyfService.success('Profile updated'));\n    }\n\n    const newPassword = this.password?.value;\n    if (newPassword) {\n      try {\n        const currentUser = await this.afAuth.currentUser;\n        if (currentUser) {\n          await currentUser.updatePassword(newPassword);\n          this.pwCheck = true;\n          this.notyfService.success('Password updated');\n        }\n      } catch (error) {\n        console.error('Error updating password: ', error);\n        this.pwCheck = false;\n        this.notyfService.error('Something went wrong');\n      }\n    }\n\n    if (this.pwCheck) {\n      this.router.navigate(['/profile/profile']);\n    }\n  }\n}\n\n    \n\n    \n        \n  Update Profile\n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    The passwords do not match\n    Password must be at least 8\n      characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg!\n    \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n\n    \n      \n        Update Profile\n      \n    \n  \n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .formContainer {\n    width: 40vh;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.updateForm {\n    width: 40vh;\n    height: 25vh;\n    padding-top: 5vh;\n}\n\n.matFormFieldUpdate {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormFieldUpdate>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.updateButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5vh;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.updateButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Profile                                                The passwords do not match    Password must be at least 8      characters!                    Please enter your weight!      Weight must be at least 30kg!                                                Male                                      Female                Please select your gender!                            Update Profile            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n      return { ...drink, drinkDate };\n    });\n    console.log('Drink times:', drinkTimes);\n\n    // Separate past and future drinks\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n    console.log('Past Drinks:', pastDrinks);\n    console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      console.log('Last past drink time:', lastDrinkTime);\n      console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n      console.log('Current BAC:', this.bac);\n    } else {\n      this.bac = 0; // No past drinks, no BAC\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n    console.log('Estimated hours to sober:', soberHours * 100);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n    console.log('Estimated time to be sober:', this.soberTime);\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log('drinkData: ', drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n\n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(\n            `Deleted drink ${drink.name} at ${drink.time} from Firestore`\n          );\n\n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/user.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n  \n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n           \n      return this.authService.isUser();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:36\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    // const user = await this.auth.currentUser;\n    const user = await firstValueFrom(this.auth.authState);\n    if (user) {\n      const userDocs = await this.afs\n        .collection('user', (ref) => ref.where('email', '==', user.email))\n        .get()\n        .toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/pages/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId() {\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail() {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userRef = this.afs.collection('user').doc(await this.getUserId());\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n      console.log('fetched email:', this.currentUserEmail);\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString() {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/admin/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                        src/app/auth/components/register/register.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/profile/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profile/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                        src/app/profile/components/update-profile/update-profile.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordsMatchValidator   (src/.../register.component.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../update-profile.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/components/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/profile/components/update-profile/update-profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
