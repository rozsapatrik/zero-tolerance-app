var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.224,1,1.015]],["body/components/AboutUsComponent.html",[0,0.382,1,1.829,2,1.924,3,0.212,4,0.185,5,1.574,6,1.574,7,1.574,8,1.574,9,0.185,10,5.288,11,4.27,12,3.708,13,0.753,14,2.864,15,1.919,16,1.493,17,1.894,18,1.808,19,1.486,20,6.172,21,1.486,22,5.578,23,0.711,24,1.341,25,2.026,26,1.027,27,4.328,28,2.261,29,1.207,30,4.328,31,0.987,32,0.02,33,0.901,34,0.632,35,0.987,36,4.328,37,0.753,38,1.04,39,0.309,40,0.212,41,1.661,42,0.212,43,0.133,44,0.888,45,1.754,46,5.578,47,4.252,48,3.284,49,3.859,50,1.273,51,5.578,52,3.545,53,4.779,54,5.578,55,5.578,56,5.578,57,3.545,58,3.284,59,5.578,60,5.578,61,2.391,62,2.222,63,3.3,64,4.328,65,2.222,66,2.548,67,2.548,68,0.987,69,2.028,70,1.826,71,1.574,72,2.37,73,1.574,74,1.574,75,1.214,76,1.565,77,1.574,78,1.214,79,2.028,80,1.278,81,1.574,82,0.987,83,1.04,84,1.574,85,1.153,86,1.574,87,1.214,88,1.493,89,1.214,90,1.574,91,1.214,92,1.574,93,1.153,94,1.574,95,1.214,96,1.574,97,1.214,98,1.574,99,1.214,100,1.574,101,1.214,102,1.574,103,1.214,104,1.417,105,1.345,106,1.574,107,1.574,108,0.015,109,0.015]],["title/components/AdminFormComponent.html",[0,0.224,75,1.015]],["body/components/AdminFormComponent.html",[0,0.323,1,0.624,2,1.196,3,0.109,4,0.095,5,0.809,6,0.809,7,0.809,8,0.809,9,0.095,13,0.603,15,1.495,16,0.767,17,1.728,18,1.641,19,0.924,21,0.924,23,0.366,24,0.833,25,1.495,26,0.638,28,1.951,29,1.403,31,0.508,32,0.021,33,0.97,34,0.622,35,0.508,37,0.741,38,1.024,39,0.33,40,0.109,41,0.854,42,0.109,43,0.068,44,1.183,45,0.902,50,0.791,52,1.414,58,1.31,61,3.001,62,1.143,65,1.143,68,0.508,69,1.261,70,1.135,71,0.809,72,1.748,73,0.809,74,0.809,75,1.349,76,1.864,77,0.809,78,0.624,79,1.261,80,0.657,81,0.809,82,0.508,83,1.734,84,0.809,85,0.593,86,0.809,87,0.624,88,0.767,89,0.624,90,0.809,91,0.624,92,0.809,93,0.593,94,0.809,95,0.624,96,0.809,97,0.624,98,0.809,99,0.624,100,0.809,101,0.624,102,0.809,103,0.624,104,1.394,105,0.692,106,0.809,107,0.809,108,0.009,109,0.009,110,5.006,111,4.543,112,1.906,113,3.467,114,1.902,115,2.184,116,3.467,117,1.672,118,1.33,119,2.187,120,4.259,121,3.467,122,0.833,123,4.259,124,5.764,125,5.212,126,1.469,127,4.808,128,3.056,129,2.203,130,3.509,131,3.509,132,3.686,133,3.435,134,2.225,135,4.808,136,1.658,137,1.658,138,2.05,139,1.951,140,1.588,141,1.845,142,1.658,143,3.467,144,3.25,145,1.792,146,3.467,147,3.467,148,1.797,149,2.643,150,3.467,151,4.808,152,1.405,153,2.97,154,4.808,155,3.467,156,2.041,157,3.467,158,1.915,159,4.259,160,3.467,161,1.078,162,1.549,163,1.486,164,1.433,165,1.196,166,1.405,167,0.877,168,1.462,169,1.574,170,2.225,171,3.467,172,2.225,173,1.78,174,3.467,175,2.471,176,3.649,177,2.707,178,2.507,179,4.119,180,3.247,181,2.187,182,3.819,183,4.808,184,2.662,185,1.261,186,2.225,187,2.97,188,2.97,189,1.469,190,1.469,191,2.054,192,2.513,193,3.237,194,2.97,195,3.25,196,2.83,197,3.467,198,2.041,199,2.225,200,1.78,201,0.877,202,2.061,203,2.225,204,1.845,205,1.33,206,3.467,207,2.041,208,2.203,209,2.97,210,2.97,211,2.225,212,2.225,213,2.402,214,3.215,215,2.225,216,2.225,217,1.78,218,2.225,219,2.225,220,1.78,221,3.467,222,3.467,223,2.225,224,2.225,225,3.467,226,2.225,227,2.225,228,0.767,229,1.073,230,0.954,231,0.563,232,0.657,233,0.728,234,0.854,235,1.183,236,1.253,237,2.225,238,1.78,239,2.225,240,3.467,241,4.259,242,2.225,243,2.225,244,4.259,245,4.259,246,3.467,247,2.225,248,2.225,249,1.143,250,2.225,251,2.225,252,1.462,253,2.225,254,2.225,255,2.225,256,2.225,257,2.225,258,1.54,259,1.31,260,1.414,261,2.225,262,2.225,263,2.225,264,1.696,265,2.225,266,0.954,267,2.225,268,1.011,269,1.414,270,1.672,271,0.954,272,1.221,273,2.225,274,2.225,275,2.398,276,1.906,277,2.225,278,2.225,279,2.225,280,1.414,281,1.221,282,1.221,283,1.221,284,1.414,285,2.225,286,1.414,287,1.143,288,3.467,289,2.97,290,2.203,291,1.31,292,1.54,293,1.073,294,1.902,295,1.073,296,1.31,297,1.54,298,1.696,299,1.31,300,1.54,301,1.073,302,0.954,303,1.906,304,2.203,305,1.696,306,1.54,307,1.143,308,1.414,309,1.31,310,1.221,311,1.414,312,1.54,313,1.906,314,1.54,315,1.54]],["title/guards/AdminGuard.html",[316,2.131,317,1.858]],["body/guards/AdminGuard.html",[3,0.237,4,0.207,9,0.207,13,1.041,23,0.795,24,1.438,26,0.89,29,1.295,31,1.103,32,0.021,33,0.706,34,0.706,35,1.103,37,1.181,39,0.376,40,0.237,42,0.237,43,0.149,76,1.993,108,0.016,109,0.016,118,1.855,138,1.583,164,1.438,167,1.799,185,2.175,205,1.855,207,3.522,231,1.224,235,1.333,238,3.072,252,1.356,316,3.522,317,3.072,318,3.346,319,4.143,320,4.916,321,2.847,322,3.083,323,4.836,324,3.563,325,2.885,326,4.836,327,3.581,328,2.95,329,4.952,330,2.175,331,1.668,332,3.687,333,2.483,334,2.332,335,3.346,336,4.561,337,4.143,338,4.836]],["title/modules/AdminModule.html",[339,0.743,340,2.504]],["body/modules/AdminModule.html",[3,0.25,4,0.218,9,0.218,32,0.02,39,0.399,40,0.25,42,0.25,43,0.157,50,1.162,68,1.162,75,2.018,76,1.428,78,2.018,108,0.016,109,0.016,111,3.523,339,1.045,340,5.192,341,1.583,342,2.183,343,3.205,344,2.313,345,2.456,346,1.756,347,4.363,348,4.363,349,4.363,350,4.573,351,3.084,352,2.978,353,2.456,354,5.092,355,2.245,356,2.245,357,5.29,358,4.363,359,3.523,360,3.523,361,2.998,362,2.793,363,3.387,364,2.614]],["title/components/AdminPageComponent.html",[0,0.224,78,1.015]],["body/components/AdminPageComponent.html",[0,0.293,1,0.741,2,1.363,3,0.13,4,0.113,5,0.96,6,0.96,7,0.96,8,0.96,9,0.113,13,0.915,15,1.472,16,0.911,17,1.779,18,1.689,19,1.053,21,1.053,23,0.434,24,0.95,25,1.634,26,0.727,28,2.06,29,1.362,31,1.08,32,0.021,33,0.821,34,0.767,35,1.08,37,1.028,38,1.599,39,0.339,40,0.13,41,1.013,42,0.13,43,0.081,44,1.212,45,1.07,50,0.902,58,1.555,61,2.697,62,2.431,63,3.012,65,2.029,66,2.326,67,2.787,68,0.603,69,1.437,70,1.294,71,0.96,72,1.911,73,0.96,74,0.96,75,0.741,76,1.971,77,0.96,78,1.474,79,1.437,80,0.78,81,0.96,82,0.603,83,1.723,84,0.96,85,0.704,86,0.96,87,0.741,88,0.911,89,0.741,90,0.96,91,0.741,92,0.96,93,0.704,94,0.96,95,0.741,96,0.96,97,0.741,98,0.96,99,0.741,100,0.96,101,0.741,102,0.96,103,0.741,104,0.865,105,0.821,106,0.96,107,0.96,108,0.011,109,0.011,110,4.905,115,2.387,117,2.534,122,0.95,128,3.34,136,1.633,137,1.812,138,2.145,139,2.06,140,1.677,141,2.016,142,1.812,144,2.326,145,1.634,148,1.363,153,4.82,158,1.474,161,1.228,162,1.911,163,1.694,164,1.513,165,1.363,166,1.601,167,1.33,168,1.578,169,1.72,177,2.511,182,2.734,184,2.283,187,3.385,188,3.385,189,0.911,190,0.911,201,1.198,204,2.348,228,0.911,231,0.668,232,0.78,233,0.865,234,1.013,235,1.292,238,1.356,258,1.827,268,1.199,271,1.694,272,2.168,275,1.827,281,1.449,282,1.449,283,1.449,284,2.511,286,1.679,290,2.511,291,1.555,293,2.283,294,2.597,295,1.274,296,1.555,301,1.274,304,1.679,308,3.34,309,1.555,310,2.168,311,2.511,327,2.029,359,4.452,365,2.013,366,3.952,367,1.363,368,3.952,369,3.443,370,3.952,371,3.952,372,2.387,373,3.012,374,4.501,375,3.952,376,4.056,377,3.385,378,3.952,379,3.952,380,5.255,381,5.255,382,1.679,383,3.385,384,3.952,385,2.641,386,3.952,387,3.952,388,3.952,389,5.627,390,3.952,391,2.641,392,3.094,393,3.952,394,1.795,395,2.641,396,3.012,397,2.641,398,2.641,399,2.641,400,3.385,401,3.952,402,2.641,403,2.641,404,2.263,405,2.263,406,2.641,407,2.641,408,2.263,409,2.641,410,2.013,411,2.641,412,2.641,413,2.641,414,2.641,415,2.641,416,2.013,417,1.679,418,1.555,419,2.263,420,2.013,421,3.385,422,3.952,423,2.263,424,1.906,425,2.511,426,1.827,427,1.827,428,1.827,429,2.734,430,2.013,431,3.385,432,1.827,433,2.263,434,2.734,435,2.013,436,2.013,437,2.263,438,2.013,439,1.449,440,1.555,441,2.013,442,2.263,443,3.012,444,2.263,445,2.013,446,2.263,447,2.263,448,2.263,449,2.263,450,2.263,451,2.263]],["title/modules/AdminRoutingModule.html",[339,0.743,350,2.3]],["body/modules/AdminRoutingModule.html",[0,0.393,3,0.262,4,0.228,9,0.228,32,0.02,39,0.397,40,0.262,42,0.262,43,0.164,75,1.781,76,1.497,78,1.781,108,0.017,109,0.017,111,3.691,231,1.35,236,1.282,317,3.481,320,4.393,341,1.659,346,1.84,350,4.036,355,1.94,356,2.309,357,5.441,358,4.571,359,3.691,360,3.691,452,5.336,453,3.141,454,3.738,455,3.27,456,3.391,457,3.26,458,5.336,459,3.391]],["title/components/AppComponent.html",[0,0.224,80,1.069]],["body/components/AppComponent.html",[0,0.383,1,1.216,2,1.925,3,0.213,4,0.185,5,1.576,6,1.576,7,1.576,8,1.576,9,0.185,15,1.347,16,1.495,17,1.895,18,1.808,19,1.488,21,1.488,23,0.712,24,1.342,25,2.027,26,0.798,29,1.412,31,0.989,32,0.02,33,0.901,34,0.815,35,0.989,37,0.754,38,1.042,39,0.309,40,0.213,42,0.213,43,0.133,44,0.889,48,3.286,49,3.862,68,0.989,69,2.03,70,1.827,71,1.576,72,2.372,73,1.576,74,1.576,75,1.216,76,1.566,77,1.576,78,1.216,79,2.03,80,1.926,81,1.576,82,0.989,83,1.042,84,1.576,85,1.155,86,1.576,87,1.216,88,1.495,89,1.216,90,1.576,91,1.216,92,1.576,93,1.155,94,1.576,95,1.216,96,1.576,97,1.216,98,1.576,99,1.216,100,1.576,101,1.216,102,1.576,103,1.216,104,1.419,105,1.347,106,1.576,107,1.576,108,0.015,109,0.015,118,2.142,119,3.171,122,1.342,138,2.262,169,2.022,189,1.925,190,1.925,201,1.097,208,2.754,231,1.097,249,2.866,334,2.692,335,2.998,417,2.754,460,3.713,461,6.176,462,5.583,463,6.176,464,2.754,465,6.176,466,6.522,467,5.583,468,4.334,469,4.334,470,4.334,471,3.713,472,4.334,473,4.334,474,2.754]],["title/modules/AppModule.html",[339,0.743,475,2.504]],["body/modules/AppModule.html",[3,0.203,4,0.177,9,0.177,18,0.995,32,0.021,39,0.41,40,0.203,42,0.203,43,0.127,50,0.945,52,2.632,68,0.945,80,2.155,108,0.014,109,0.014,168,1.162,232,1.223,339,0.85,341,1.287,342,1.775,343,2.914,344,2.744,345,2.614,346,1.429,351,2.926,352,2.614,353,1.997,355,1.971,356,1.971,361,2.438,362,2.272,475,5.204,476,3.548,477,3.548,478,3.548,479,3.548,480,4.338,481,4.338,482,6.044,483,5.7,484,5.848,485,5.7,486,6.044,487,5.7,488,6.044,489,5.7,490,4.142,491,4.142,492,4.142,493,4.142,494,4.142,495,5.421,496,5.421,497,4.142,498,4.142,499,4.142,500,4.142,501,3.158,502,4.142,503,2.632,504,3.548,505,4.142,506,4.142,507,4.142,508,5.421,509,4.644,510,3.158,511,5.421,512,4.142,513,5.421,514,4.142,515,4.142,516,4.142,517,4.142]],["title/modules/AppRoutingModule.html",[339,0.743,480,2.3]],["body/modules/AppRoutingModule.html",[0,0.379,3,0.246,4,0.215,9,0.215,32,0.021,39,0.381,40,0.246,42,0.246,43,0.154,76,1.408,93,1.631,97,1.717,105,1.56,108,0.016,109,0.016,231,1.27,236,1.206,341,1.56,346,1.731,355,1.825,356,2.225,453,2.954,454,3.603,455,3.184,457,3.727,480,3.89,518,5.018,519,5.018,520,3.189,521,3.826,522,5.018,523,5.018,524,3.826,525,7.049,526,5.018,527,5.018,528,3.189,529,5.018,530,5.018,531,4.299,532,5.018,533,5.018,534,5.018,535,5.018,536,2.42,537,5.018,538,5.018,539,5.018]],["title/modules/AuthModule.html",[339,0.743,503,2.3]],["body/modules/AuthModule.html",[3,0.251,4,0.219,9,0.219,32,0.02,39,0.399,40,0.251,42,0.251,43,0.157,50,1.169,68,1.169,89,2.021,99,2.021,108,0.016,109,0.016,339,1.051,341,1.592,342,2.196,343,3.213,344,2.326,345,2.47,346,1.767,351,3.088,352,2.988,353,2.47,355,2.253,356,2.253,361,3.015,362,2.81,363,3.399,364,2.63,503,4.773,528,3.255,540,4.388,541,4.388,542,4.388,543,4.579,544,5.122,545,4.388,546,4.388]],["title/modules/AuthRoutingModule.html",[339,0.743,543,2.3]],["body/modules/AuthRoutingModule.html",[0,0.396,3,0.265,4,0.231,9,0.231,32,0.02,39,0.399,40,0.265,42,0.265,43,0.166,89,1.794,99,1.794,108,0.017,109,0.017,231,1.367,236,1.298,317,2.774,341,1.679,346,1.863,355,1.964,356,2.326,453,3.18,454,3.766,455,3.287,456,3.433,457,3.285,459,3.433,543,4.066,545,4.628,546,4.628,547,5.402,548,3.737,549,4.118]],["title/injectables/AuthenticationService.html",[322,1.644,330,1.316]],["body/injectables/AuthenticationService.html",[3,0.142,4,0.124,9,0.124,13,1.063,23,0.476,24,1.017,26,0.779,29,1.47,31,1.393,32,0.021,33,0.943,34,0.891,35,1.393,37,1.247,39,0.324,40,0.142,42,0.142,43,0.089,44,1.026,50,0.965,76,1.542,108,0.011,109,0.011,117,2.651,122,1.017,126,2.106,136,1.724,137,1.896,152,1.715,158,1.187,161,1.315,164,1.017,167,1.848,177,2.689,185,1.999,189,0.999,190,0.999,201,1.867,205,2.48,210,3.625,213,1.623,214,2.822,228,0.999,235,1.327,236,1.017,238,2.173,249,2.173,252,1.904,270,2.041,271,1.814,293,2.041,322,1.922,325,2.944,327,3.319,328,2.994,330,1.539,331,0.999,333,1.488,334,1.397,504,2.482,528,4.19,548,2.928,550,1.706,551,2.482,552,4.283,553,4.232,554,4.232,555,5.497,556,5.497,557,4.71,558,4.232,559,4.71,560,4.232,561,2.898,562,5.497,563,4.224,564,4.232,565,2.491,566,4.232,567,2.898,568,3.319,569,3.803,570,3.803,571,4.191,572,5.497,573,4.796,574,4.191,575,3.494,576,4.232,577,2.898,578,4.64,579,2.898,580,4.232,581,2.898,582,6.106,583,4.232,584,2.898,585,2.041,586,4.232,587,5.035,588,2.898,589,5.231,590,2.35,591,3.88,592,4.232,593,2.898,594,5.497,595,2.898,596,4.232,597,2.898,598,4.232,599,2.173,600,4.232,601,4.232,602,2.005,603,2.898,604,2.898,605,2.898,606,2.482,607,4.283,608,1.589,609,4.232,610,4.232,611,2.898,612,4.232,613,3.625,614,4.232,615,2.898,616,2.898,617,2.898,618,1.242,619,2.898,620,2.898,621,4.232,622,2.928,623,3.625,624,2.898,625,4.232,626,2.482,627,2.898]],["title/modules/CoreModule.html",[339,0.743,481,2.3]],["body/modules/CoreModule.html",[3,0.268,4,0.234,9,0.234,32,0.02,39,0.38,40,0.268,42,0.268,43,0.168,50,1.248,68,1.248,108,0.017,109,0.017,339,1.123,341,1.7,342,2.345,343,2.638,344,2.484,345,2.638,346,1.887,351,3.135,352,3.108,353,2.638,355,2.343,356,2.343,362,3.001,363,3.535,364,2.809,481,4.648,628,5.47,629,5.47,630,5.47]],["title/injectables/DateService.html",[330,1.316,631,1.644]],["body/injectables/DateService.html",[3,0.227,4,0.198,9,0.198,13,1.014,17,1.475,23,0.762,24,1.4,29,1.447,31,1.058,32,0.02,33,0.677,34,0.677,35,1.058,37,1.109,38,1.4,39,0.323,40,0.227,42,0.227,43,0.142,44,1.308,108,0.015,109,0.015,122,1.4,152,2.361,158,1.634,164,1.4,189,2.01,190,2.306,202,2.498,213,2.235,235,0.951,252,1.3,328,2.646,330,2.119,331,1.599,333,2.38,334,2.235,394,3.193,550,2.729,631,2.646,632,3.971,633,3.263,634,3.272,635,6.373,636,6.686,637,5.827,638,4.636,639,5.827,640,5.827,641,4.636,642,5.827,643,4.636,644,5.827,645,4.636,646,4.442,647,5.827,648,5.827,649,5.827,650,5.827,651,5.827,652,4.636,653,4.636,654,4.636]],["title/interfaces/Drink.html",[83,0.87,367,1.248]],["body/interfaces/Drink.html",[0,0.248,3,0.132,4,0.115,9,0.115,13,0.467,17,0.679,18,0.645,19,0.715,21,0.715,23,0.441,25,0.834,26,0.494,28,1.734,32,0.021,33,0.773,34,0.867,37,0.832,38,1.273,39,0.365,40,0.132,41,1.03,42,0.196,43,0.082,44,1.219,45,1.088,50,0.912,61,1.714,82,0.612,83,1.792,108,0.011,109,0.013,114,1.472,115,1.219,117,2.305,122,0.961,126,0.926,130,3.118,131,3.118,132,3.118,133,3.107,136,1.379,137,1.379,139,1.734,140,1.412,141,1.534,142,1.379,145,1.846,148,0.926,152,1.088,156,1.58,158,1.589,161,0.834,162,1.454,164,1.362,165,0.926,166,1.088,167,1.012,168,1.341,169,1.309,175,1.714,178,1.58,181,1.378,185,0.976,191,1.929,192,1.294,193,2.305,195,2.814,196,2.354,198,1.58,200,1.378,201,1.69,202,2.637,204,1.03,205,1.03,213,1.534,217,1.378,220,1.378,228,0.926,229,1.294,230,1.15,232,0.793,233,0.879,234,1.03,235,1.37,236,1.362,252,1.726,266,1.714,268,1.219,271,1.15,272,1.472,287,1.378,302,2.049,307,1.378,328,1.816,331,0.926,367,2.229,369,3.116,372,2.406,394,2.794,424,2.555,536,1.294,568,2.053,585,1.294,590,0.976,599,1.378,608,3.107,618,1.15,631,2.406,633,1.714,634,1.378,655,1.472,656,1.58,657,1.378,658,1.58,659,2.593,660,1.472,661,1.378,662,2.194,663,1.378,664,1.472,665,2.906,666,2.194,667,2.72,668,2.053,669,2.194,670,1.472,671,2.053,672,1.472,673,2.053,674,1.706,675,1.706,676,1.472,677,1.706,678,1.706,679,1.472,680,1.706,681,1.706,682,1.472,683,1.472,684,1.472,685,2.194,686,2.454,687,2.666,688,1.472,689,2.053,690,1.472,691,1.816,692,1.472,693,1.472,694,1.706,695,3.038,696,1.706,697,3.038,698,1.706,699,1.706,700,1.706,701,3.367,702,3.038,703,1.706,704,1.472,705,1.706,706,1.472,707,1.58,708,2.622,709,1.472,710,1.706,711,1.706,712,2.542,713,1.706,714,1.706,715,1.706,716,1.706,717,1.706,718,1.706,719,1.706,720,1.706,721,1.706,722,1.706,723,1.706,724,1.58,725,2.555,726,1.706,727,1.706,728,1.706,729,2.542,730,3.367,731,2.542,732,1.706,733,1.706,734,1.706,735,2.354,736,1.706,737,1.706,738,1.706,739,1.706,740,1.706,741,1.706,742,1.706,743,1.706,744,1.706,745,1.706,746,1.706,747,1.706,748,1.706,749,1.706,750,1.706,751,1.706,752,1.706,753,2.542,754,1.706,755,2.542,756,2.542,757,2.542,758,2.542,759,1.378,760,1.472,761,1.472,762,2.053,763,2.053,764,1.472,765,1.706,766,1.706,767,1.706,768,1.706,769,2.542,770,1.706,771,1.706,772,1.472,773,1.378,774,1.706]],["title/interfaces/DrinkAmount.html",[367,1.248,666,1.985]],["body/interfaces/DrinkAmount.html",[0,0.247,3,0.131,4,0.114,9,0.114,13,0.464,17,0.675,18,0.641,19,0.711,21,0.711,23,0.438,25,0.829,26,0.491,28,1.729,32,0.021,33,0.389,34,0.896,37,0.829,38,1.269,39,0.364,40,0.131,41,1.023,42,0.195,43,0.082,44,1.216,45,1.081,50,0.908,61,1.706,82,0.609,83,1.789,108,0.011,109,0.013,114,1.463,115,1.211,117,2.297,122,0.957,126,0.92,130,1.57,131,1.57,132,1.57,133,3.099,136,1.373,137,1.373,139,1.729,140,1.407,141,1.527,142,1.373,145,1.842,148,0.92,152,1.081,156,1.57,158,1.585,161,0.829,162,1.448,164,1.358,165,0.92,166,1.081,167,1.008,168,1.336,169,1.303,175,1.706,178,1.57,181,1.37,185,0.97,191,1.92,192,1.286,193,2.297,195,2.804,196,2.344,198,1.57,200,1.37,201,1.727,202,2.632,204,2.026,205,1.023,213,1.527,217,2.712,220,2.712,228,0.92,229,1.286,230,1.143,232,0.788,233,0.873,234,1.023,235,1.368,236,1.358,252,1.722,266,1.706,268,1.211,271,1.143,272,1.463,287,1.37,302,2.041,307,1.37,328,1.808,331,0.92,367,2.225,369,3.111,372,2.398,394,2.789,424,2.547,536,1.286,568,2.044,585,1.286,590,0.97,599,1.37,608,3.099,618,1.143,631,2.398,633,1.706,634,1.37,655,1.463,656,1.57,657,1.37,658,1.57,659,2.59,660,1.463,661,1.37,662,2.184,663,1.37,664,1.463,665,3.099,666,2.613,667,3.153,668,2.901,669,2.184,670,1.463,671,2.044,672,1.463,673,2.044,674,1.695,675,1.695,676,1.463,677,1.695,678,1.695,679,1.463,680,1.695,681,1.695,682,1.463,683,1.463,684,1.463,685,2.184,686,2.445,687,2.662,688,1.463,689,2.044,690,1.463,691,1.808,692,1.463,693,1.463,694,1.695,695,3.027,696,1.695,697,3.027,698,1.695,699,1.695,700,1.695,701,3.356,702,3.027,703,1.695,704,1.463,705,1.695,706,1.463,707,1.57,708,2.613,709,1.463,710,1.695,711,1.695,712,2.53,713,1.695,714,1.695,715,1.695,716,1.695,717,1.695,718,1.695,719,1.695,720,1.695,721,1.695,722,1.695,723,1.695,724,1.57,725,2.547,726,1.695,727,1.695,728,1.695,729,2.53,730,3.356,731,2.53,732,1.695,733,1.695,734,1.695,735,2.344,736,1.695,737,1.695,738,1.695,739,1.695,740,1.695,741,1.695,742,1.695,743,1.695,744,1.695,745,1.695,746,1.695,747,1.695,748,1.695,749,1.695,750,1.695,751,1.695,752,1.695,753,2.53,754,1.695,755,2.53,756,2.53,757,2.53,758,2.53,759,1.37,760,1.463,761,1.463,762,2.044,763,2.044,764,1.463,765,1.695,766,1.695,767,1.695,768,1.695,769,2.53,770,1.695,771,1.695,772,1.463,773,1.37,774,1.695]],["title/interfaces/DrinkAmountsMap.html",[367,1.248,669,1.985]],["body/interfaces/DrinkAmountsMap.html",[0,0.252,3,0.135,4,0.117,9,0.117,13,0.477,17,0.694,18,0.659,19,0.731,21,0.731,25,0.853,26,0.505,28,1.753,29,0.594,32,0.021,33,0.4,34,0.4,37,0.843,38,1.287,39,0.366,40,0.135,41,1.053,42,0.199,43,0.084,44,1.229,45,1.112,50,0.927,61,1.742,82,0.626,83,1.79,108,0.011,109,0.013,114,1.505,115,1.246,117,2.335,126,0.946,130,1.615,131,1.615,132,1.615,133,2.23,136,1.402,137,1.402,139,1.753,140,1.427,141,1.56,142,1.402,145,1.861,148,0.946,152,1.112,156,1.615,158,1.604,161,0.853,162,1.478,164,1.374,165,0.946,166,1.112,167,1.029,168,1.358,169,1.331,175,1.742,178,1.615,181,1.409,185,0.998,191,1.96,192,1.323,193,2.335,195,2.851,196,2.393,198,1.615,200,1.409,201,1.611,202,2.656,204,1.053,205,1.053,213,1.56,217,1.409,220,1.409,228,0.946,229,1.323,230,1.176,232,0.81,233,0.898,234,1.053,235,1.377,236,1.374,252,1.738,266,1.742,268,1.246,271,1.176,272,1.505,287,1.409,302,2.076,307,1.409,328,1.846,331,0.946,367,2.242,369,3.189,372,2.432,394,2.814,424,2.582,536,1.323,568,2.087,585,1.323,590,0.998,599,1.409,608,3.285,618,1.176,631,2.432,633,1.742,634,1.409,655,1.505,656,2.393,657,2.087,658,1.615,659,2.297,660,1.505,661,1.409,662,2.23,663,1.409,664,1.505,665,3.136,666,2.656,667,2.749,668,2.087,669,2.656,670,2.23,671,2.087,672,1.505,673,2.087,674,1.744,675,1.744,676,1.505,677,1.744,678,1.744,679,1.505,680,1.744,681,1.744,682,1.505,683,1.505,684,1.505,685,2.23,686,2.486,687,2.68,688,1.505,689,2.087,690,1.505,691,1.846,692,1.505,693,1.505,694,1.744,695,3.078,696,1.744,697,3.078,698,1.744,699,1.744,700,1.744,701,3.403,702,3.078,703,1.744,704,1.505,705,1.744,706,1.505,707,1.615,708,2.656,709,1.505,710,1.744,711,1.744,712,2.584,713,1.744,714,1.744,715,1.744,716,1.744,717,1.744,718,1.744,719,1.744,720,1.744,721,1.744,722,1.744,723,1.744,724,1.615,725,2.582,726,1.744,727,1.744,728,1.744,729,2.584,730,3.403,731,2.584,732,1.744,733,1.744,734,1.744,735,2.393,736,1.744,737,1.744,738,1.744,739,1.744,740,1.744,741,1.744,742,1.744,743,1.744,744,1.744,745,1.744,746,1.744,747,1.744,748,1.744,749,1.744,750,1.744,751,1.744,752,1.744,753,2.584,754,1.744,755,2.584,756,2.584,757,2.584,758,2.584,759,1.409,760,1.505,761,1.505,762,2.087,763,2.087,764,1.505,765,1.744,766,1.744,767,1.744,768,1.744,769,2.584,770,1.744,771,1.744,772,1.505,773,1.409,774,1.744,775,2.744,776,2.744]],["title/interfaces/DrinkData.html",[266,1.551,367,1.248]],["body/interfaces/DrinkData.html",[0,0.15,3,0.07,4,0.061,9,0.061,13,0.248,14,0.733,15,0.976,17,0.361,18,0.343,19,0.38,21,0.38,23,0.235,25,0.444,26,0.263,28,1.209,32,0.021,33,0.352,34,0.603,37,0.546,38,0.754,39,0.278,40,0.07,41,0.548,42,0.07,43,0.044,44,0.92,45,1.272,47,1.088,48,0.84,50,0.843,57,1.535,70,0.467,83,1.624,85,0.38,104,0.467,108,0.006,109,0.006,115,1.097,118,0.548,119,1.24,122,0.58,126,1.274,136,0.833,137,0.833,138,0.791,139,1.209,140,0.984,141,0.926,142,0.833,144,1.422,145,1.811,148,0.492,149,1.088,152,0.578,158,1.717,161,0.751,162,0.519,163,0.612,164,0.993,165,0.492,166,0.578,167,1.045,168,0.88,169,0.791,173,0.733,175,1.035,177,0.907,181,0.733,182,0.987,184,1.165,185,1.343,201,1.324,202,2.545,204,1.584,207,1.422,208,1.535,214,0.733,217,2.452,220,1.896,228,0.492,232,0.421,233,0.467,234,0.548,235,1.11,236,1.735,238,0.733,249,1.24,252,1.518,260,1.535,264,1.841,266,2.047,269,0.907,270,2.522,271,0.612,275,0.987,280,0.907,281,0.783,282,0.783,283,0.783,284,0.907,295,1.165,301,1.992,302,2.386,327,2.302,367,1.424,369,2.81,372,0.648,374,1.088,392,0.84,394,1.876,396,2.393,410,1.088,416,1.841,420,1.088,424,2.751,425,1.535,439,0.783,474,3.191,524,1.088,536,0.688,571,1.841,575,0.907,585,1.165,590,1.343,599,1.896,622,0.987,631,1.876,633,2.988,634,1.612,646,1.088,655,0.783,659,2.076,660,1.325,661,1.24,662,2.459,663,0.733,664,0.783,665,2.265,667,1.612,668,3.317,670,1.722,671,1.24,673,2.578,676,1.325,679,0.783,682,1.325,683,0.783,684,1.722,685,1.325,686,2.858,687,2.895,688,1.325,689,2.452,690,1.325,691,2.591,692,1.722,693,1.325,706,0.783,708,2.869,709,0.783,725,1.165,759,1.896,760,1.325,761,1.325,762,1.896,763,1.896,764,1.325,772,0.783,773,0.733,777,1.088,778,2.069,779,2.069,780,1.223,781,2.555,782,2.459,783,2.431,784,1.223,785,0.987,786,1.223,787,1.223,788,1.223,789,3.164,790,1.841,791,2.689,792,2.069,793,1.223,794,1.223,795,1.223,796,2.069,797,2.689,798,1.671,799,1.223,800,1.223,801,2.689,802,1.223,803,0.987,804,1.088,805,2.393,806,1.223,807,3.828,808,1.841,809,2.689,810,1.223,811,1.223,812,2.069,813,1.535,814,5.086,815,3.538,816,1.223,817,1.223,818,1.088,819,2.069,820,1.223,821,1.223,822,1.223,823,2.689,824,1.223,825,2.069,826,1.088,827,1.223,828,2.069,829,1.223,830,2.069,831,1.088,832,1.223,833,1.223,834,2.625,835,1.671,836,1.223,837,1.088,838,1.223,839,3.538,840,1.223,841,1.223,842,1.223,843,1.223,844,2.689,845,1.841,846,1.223,847,2.689,848,1.841,849,1.841,850,2.815,851,1.841,852,2.069,853,2.069,854,1.088,855,1.088,856,1.223,857,1.223,858,1.223,859,1.223,860,1.223,861,1.223,862,1.223,863,1.223,864,1.223,865,1.223,866,1.223,867,1.223,868,2.069,869,1.223,870,2.069,871,1.841,872,1.841,873,3.164,874,4.302,875,3.841,876,1.671,877,2.069,878,2.069,879,4.302,880,2.069,881,3.841,882,3.164,883,1.223,884,1.223,885,1.223,886,1.223,887,1.223,888,2.069,889,3.164,890,2.069,891,3.538,892,2.069,893,2.069,894,1.223,895,1.223,896,3.538,897,2.069,898,1.223,899,3.841,900,3.164,901,1.223,902,1.223,903,1.223,904,3.538,905,2.069,906,1.223,907,2.069,908,1.223,909,4.888,910,1.223,911,2.689,912,1.088,913,2.689,914,1.223,915,1.223,916,2.069,917,1.223,918,2.069,919,1.223,920,1.223,921,2.069,922,1.223,923,4.302,924,3.164,925,1.223,926,1.223,927,1.995,928,0.907,929,2.689,930,1.088,931,1.223,932,1.223,933,1.223,934,1.223,935,2.689,936,1.223,937,1.223,938,1.223,939,2.069,940,1.223,941,2.069,942,2.069,943,2.069,944,1.223,945,1.223,946,1.223,947,1.223,948,1.223,949,1.223,950,1.223,951,1.223,952,1.223,953,1.088,954,1.223,955,1.223,956,1.223,957,1.223,958,4.481,959,4.302,960,2.069,961,1.223,962,1.223,963,1.671,964,1.223,965,1.223,966,2.689,967,2.172,968,3.538,969,2.069,970,2.069,971,2.689,972,1.223,973,1.841,974,1.223,975,1.223,976,1.223,977,2.069,978,1.223,979,1.223,980,2.069,981,2.069,982,2.689,983,2.069,984,1.223,985,4.481,986,4.302,987,1.223,988,1.088,989,1.223,990,2.069,991,1.223,992,2.069,993,2.069,994,1.223,995,1.223,996,1.223,997,1.223,998,1.223,999,1.223,1000,2.069,1001,1.223,1002,1.223,1003,1.223,1004,1.223,1005,1.223,1006,1.223,1007,1.223,1008,1.223,1009,1.223,1010,1.223,1011,0.987,1012,1.223,1013,2.689,1014,1.223,1015,1.223,1016,1.223,1017,1.223,1018,1.223,1019,1.223,1020,1.223,1021,1.223,1022,1.223,1023,1.223,1024,1.088,1025,1.223,1026,2.069,1027,1.223,1028,1.223,1029,1.223,1030,1.223,1031,1.223,1032,1.088,1033,2.069,1034,2.069,1035,1.223,1036,1.223,1037,1.223,1038,1.223,1039,1.223,1040,1.223,1041,1.223,1042,1.535,1043,2.069,1044,1.223,1045,1.223,1046,1.223,1047,1.223,1048,2.689,1049,2.069,1050,1.223,1051,1.223,1052,1.223,1053,1.223,1054,1.223,1055,1.223,1056,1.223,1057,1.223]],["title/components/DrinkListComponent.html",[0,0.224,82,0.826]],["body/components/DrinkListComponent.html",[0,0.222,1,0.482,2,0.972,3,0.084,4,0.074,5,0.624,6,0.624,7,0.624,8,0.624,9,0.074,13,0.856,15,0.534,16,0.592,17,1.641,18,1.558,19,0.751,21,0.751,23,0.463,24,0.677,25,1.289,26,0.519,28,1.776,29,1.417,31,1.044,32,0.021,33,0.82,34,0.882,35,1.044,37,1.006,38,1.35,39,0.32,40,0.084,41,0.659,42,0.138,43,0.053,44,1.01,45,0.696,50,0.817,58,1.011,61,1.777,62,2.668,63,2.732,65,3.041,66,2.695,67,3.486,68,0.392,69,1.025,70,0.922,71,0.624,72,1.508,73,0.624,74,0.624,75,0.482,76,0.79,77,0.624,78,0.482,79,1.025,80,0.507,81,0.624,82,0.946,83,1.799,84,0.624,85,0.458,86,0.624,87,0.482,88,0.592,89,0.482,90,0.624,91,0.482,92,0.624,93,0.458,94,0.624,95,0.482,96,0.624,97,0.482,98,0.624,99,0.482,100,0.624,101,0.482,102,0.624,103,0.482,104,0.562,105,0.534,106,0.624,107,0.624,108,0.007,109,0.011,114,0.942,115,2.234,117,2.372,122,0.677,126,1.236,129,1.791,130,1.011,131,1.011,132,2.695,133,1.546,136,1.236,137,1.43,139,1.776,140,1.445,141,1.591,142,1.43,145,1.746,148,0.972,152,1.142,156,1.011,158,1.621,161,0.876,162,1.508,164,1.389,165,0.972,166,1.142,167,1.049,168,1.284,169,1.357,175,1.536,178,1.659,181,1.447,185,1.025,189,1.792,190,1.696,191,1.728,192,0.828,193,2.372,195,2.896,196,2.441,198,1.659,200,1.447,201,1.373,202,2.408,204,0.659,205,1.081,213,1.591,214,0.882,217,0.882,220,0.882,228,0.592,229,0.828,230,0.736,232,0.507,233,0.562,234,0.659,235,1.215,236,1.1,252,1.457,266,1.208,268,0.78,271,0.736,272,0.942,287,0.882,291,1.011,292,1.95,293,2.372,294,3.171,295,1.999,296,2.109,297,1.188,299,1.659,300,1.188,301,1.728,302,1.536,304,2.635,306,1.188,307,1.447,308,2.635,309,1.011,310,1.546,311,2.635,312,1.188,314,1.188,328,1.627,331,0.592,367,1.871,369,3.014,372,2.625,382,1.092,394,2.839,421,3.552,423,1.471,424,2.372,425,1.791,426,1.188,427,1.188,428,1.188,429,1.95,430,1.309,431,2.414,432,2.479,433,2.414,434,2.479,435,2.148,436,2.148,437,1.471,438,1.309,439,0.942,440,1.659,441,1.309,442,1.471,443,2.732,444,2.414,445,2.148,446,1.471,447,1.471,448,1.471,449,1.471,450,1.471,451,1.471,536,1.359,568,1.447,585,1.359,590,1.025,599,1.447,608,2.975,618,0.736,631,2.463,633,1.777,634,1.84,656,3.887,657,3.39,658,1.011,659,1.887,660,0.942,661,0.882,662,1.546,663,0.882,664,0.942,665,2.511,666,1.546,667,2.668,668,1.84,669,1.546,670,0.942,671,1.84,672,0.942,673,2.129,674,1.791,675,1.791,676,1.546,677,1.791,678,1.791,679,1.546,680,1.791,681,2.277,682,0.942,683,0.942,684,0.942,685,1.546,686,1.84,687,2.4,688,0.942,689,1.447,690,0.942,691,1.28,692,0.942,693,0.942,694,2.277,695,3.126,696,1.791,697,3.126,698,1.791,699,2.277,700,2.277,701,3.447,702,3.126,703,2.277,704,1.546,705,2.277,706,1.546,707,1.659,708,1.965,709,0.942,710,1.092,711,1.092,712,1.791,713,1.092,714,1.092,715,1.092,716,2.635,717,1.092,718,1.092,719,1.092,720,1.092,721,1.791,722,1.791,723,1.791,724,1.659,725,2.616,726,1.791,727,1.791,728,1.791,729,3.126,730,2.635,731,1.791,732,1.092,733,1.791,734,1.791,735,2.441,736,1.791,737,1.791,738,1.791,739,1.791,740,2.635,741,1.092,742,1.092,743,1.092,744,1.092,745,1.092,746,1.791,747,1.791,748,1.791,749,1.791,750,1.791,751,1.092,752,1.092,753,1.791,754,1.092,755,1.791,756,1.791,757,1.791,758,1.791,759,0.882,760,0.942,761,0.942,762,1.447,763,1.447,764,0.942,765,1.092,766,1.092,767,1.092,768,1.092,769,1.791,770,1.092,771,1.092,772,0.942,773,0.882,774,1.092,813,1.791,1058,2.818,1059,2.818,1060,2.818,1061,2.818,1062,2.818,1063,1.718,1064,1.718,1065,1.718,1066,1.718,1067,1.718,1068,1.718,1069,1.718,1070,1.718,1071,1.718,1072,1.718,1073,1.718,1074,1.718,1075,1.718,1076,1.718,1077,1.718,1078,1.718,1079,1.718,1080,1.718,1081,1.718,1082,3.583,1083,2.818,1084,2.818,1085,2.818,1086,2.818,1087,2.414,1088,1.718,1089,3.583,1090,1.95,1091,1.471,1092,1.718,1093,3.49,1094,1.718,1095,2.414,1096,1.718,1097,1.718,1098,1.309,1099,1.188,1100,1.471,1101,1.309,1102,1.471,1103,2.818,1104,2.818,1105,1.718,1106,1.718,1107,1.718,1108,1.309]],["title/interfaces/FirestoreDocumentData.html",[367,1.248,672,1.985]],["body/interfaces/FirestoreDocumentData.html",[0,0.251,3,0.134,4,0.117,9,0.117,13,0.476,17,0.693,18,0.658,19,0.729,21,0.729,23,0.45,25,0.851,26,0.504,28,1.751,32,0.021,33,0.4,34,0.706,37,0.842,38,1.286,39,0.366,40,0.134,41,1.05,42,0.199,43,0.084,44,1.228,45,1.109,50,0.926,61,1.739,82,0.624,83,1.79,108,0.011,109,0.013,114,1.501,115,1.243,117,2.332,122,0.975,126,0.944,130,1.611,131,1.611,132,1.611,133,2.226,136,1.4,137,1.4,139,1.751,140,1.425,141,1.557,142,1.4,145,1.86,148,0.944,152,1.109,156,1.611,158,1.602,161,0.851,162,1.476,164,1.373,165,0.944,166,1.109,167,1.027,168,1.356,169,1.328,175,1.739,178,1.611,181,1.405,185,0.995,191,1.957,192,1.32,193,2.332,195,2.847,196,2.389,198,1.611,200,1.405,201,1.567,202,2.654,204,1.05,205,1.05,213,1.557,217,1.405,220,1.405,228,0.944,229,1.32,230,1.173,232,0.808,233,0.896,234,1.05,235,1.376,236,1.373,252,1.737,266,1.739,268,1.243,271,1.173,272,1.501,287,1.405,302,2.073,307,1.405,328,1.843,331,0.944,367,2.24,369,3.187,372,2.429,394,2.812,424,2.579,536,1.32,568,2.083,585,1.32,590,0.995,599,1.405,608,3.133,618,1.173,631,2.429,633,1.739,634,1.405,655,1.501,656,1.611,657,1.405,658,1.611,659,2.295,660,1.501,661,1.405,662,2.226,663,1.405,664,1.501,665,3.133,666,2.226,667,2.746,668,2.083,669,2.934,670,1.501,671,2.483,672,2.226,673,2.933,674,1.74,675,1.74,676,1.501,677,1.74,678,1.74,679,1.501,680,1.74,681,1.74,682,1.501,683,1.501,684,1.501,685,2.226,686,2.483,687,2.678,688,1.501,689,2.083,690,1.501,691,1.843,692,1.501,693,1.501,694,1.74,695,3.073,696,1.74,697,3.073,698,1.74,699,1.74,700,1.74,701,3.399,702,3.073,703,1.74,704,1.501,705,1.74,706,1.501,707,1.611,708,2.653,709,1.501,710,1.74,711,1.74,712,2.579,713,1.74,714,1.74,715,1.74,716,1.74,717,1.74,718,1.74,719,1.74,720,1.74,721,1.74,722,1.74,723,1.74,724,1.611,725,2.579,726,1.74,727,1.74,728,1.74,729,2.579,730,3.399,731,2.579,732,1.74,733,1.74,734,1.74,735,2.389,736,1.74,737,1.74,738,1.74,739,1.74,740,1.74,741,1.74,742,1.74,743,1.74,744,1.74,745,1.74,746,1.74,747,1.74,748,1.74,749,1.74,750,1.74,751,1.74,752,1.74,753,2.579,754,1.74,755,2.579,756,2.579,757,2.579,758,2.579,759,1.405,760,1.501,761,1.501,762,2.083,763,2.083,764,1.501,765,1.74,766,1.74,767,1.74,768,1.74,769,2.579,770,1.74,771,1.74,772,1.501,773,1.405,774,1.74]],["title/components/LandingPageComponent.html",[0,0.224,87,1.015]],["body/components/LandingPageComponent.html",[0,0.37,1,1.132,2,1.838,3,0.198,4,0.173,5,1.467,6,1.467,7,1.467,8,1.467,9,0.173,13,0.927,14,2.736,15,2.207,16,1.392,17,1.881,18,1.786,19,1.42,21,1.42,23,0.663,24,1.281,26,0.981,29,1.291,31,0.921,32,0.02,33,0.871,34,0.589,35,0.921,37,0.927,38,1.281,39,0.331,40,0.198,42,0.198,43,0.124,44,1.094,48,3.137,49,3.687,65,2.736,66,3.137,67,2.376,68,0.921,69,1.938,70,1.744,71,1.467,72,2.307,73,1.467,74,1.467,75,1.132,76,1.495,77,1.467,78,1.132,79,1.938,80,1.192,81,1.467,82,0.921,83,0.97,84,1.467,85,1.075,86,1.467,87,1.78,88,2.472,89,1.132,90,1.467,91,1.132,92,1.467,93,1.075,94,1.467,95,1.132,96,1.467,97,1.132,98,1.467,99,1.132,100,1.467,101,1.132,102,1.467,103,1.132,104,1.321,105,1.254,106,1.467,107,1.467,108,0.014,109,0.014,138,2.324,140,1.842,163,2.284,231,1.021,233,1.321,235,0.828,365,3.077,376,5.112,377,4.566,383,3.457,392,3.736,464,2.565,548,3.687,549,4.063,782,2.214,967,3.687,1098,4.548,1099,3.687,1100,3.457,1109,5.437,1110,4.39,1111,6.346,1112,6.346,1113,4.036,1114,4.036,1115,4.036,1116,4.036,1117,5.329,1118,5.329,1119,4.838,1120,4.036,1121,4.036,1122,4.036,1123,4.036]],["title/components/LoginComponent.html",[0,0.224,89,1.015]],["body/components/LoginComponent.html",[0,0.326,1,0.889,2,1.556,3,0.155,4,0.136,5,1.152,6,1.152,7,1.152,8,1.152,9,0.136,13,0.785,14,2.317,15,0.985,16,1.093,17,1.826,18,1.734,19,1.203,21,1.203,23,0.521,24,1.085,25,1.781,26,0.831,29,1.402,31,0.723,32,0.021,33,0.767,34,0.462,35,0.723,37,0.997,38,1.377,39,0.373,40,0.155,42,0.155,43,0.097,44,1.292,52,2.013,61,1.934,68,0.723,69,1.641,70,1.477,71,1.152,72,2.083,73,1.152,74,1.152,75,0.889,76,1.266,77,1.152,78,0.889,79,1.641,80,0.935,81,1.152,82,0.723,83,0.761,84,1.152,85,0.844,86,1.152,87,0.889,88,1.093,89,1.607,90,1.152,91,0.889,92,1.152,93,0.844,94,1.152,95,0.889,96,1.152,97,0.889,98,1.152,99,0.889,100,1.152,101,0.889,102,1.152,103,0.889,104,1.037,105,0.985,106,1.152,107,1.152,108,0.012,109,0.012,118,1.731,119,2.699,122,1.085,126,1.093,128,3.641,129,2.868,138,2.237,139,2.167,140,1.726,141,2.017,142,1.976,145,1.634,158,1.766,161,1.403,163,1.934,164,1.377,165,1.556,166,1.829,167,1.593,168,0.889,173,2.317,175,1.934,184,2.176,189,1.093,190,1.093,191,2.535,192,2.92,193,2.763,200,2.317,201,0.802,213,2.198,214,2.941,229,1.528,230,1.358,231,0.802,232,0.935,233,1.037,234,1.215,235,1.176,236,1.085,252,1.474,258,2.192,259,1.865,268,1.439,270,1.528,281,1.738,282,1.738,283,1.738,286,2.868,287,1.627,289,4.908,290,2.868,321,1.865,322,2.602,324,2.884,325,2.763,331,1.093,418,1.865,528,3.641,548,4.189,563,3.964,565,2.657,569,3.964,570,3.964,573,4.355,575,2.013,587,4.728,590,1.641,602,2.192,1119,4.367,1124,2.714,1125,4.513,1126,5.257,1127,4.513,1128,5.257,1129,3.168,1130,3.168,1131,3.168,1132,3.44,1133,2.868,1134,3.168,1135,3.44,1136,3.866,1137,4.513,1138,5.257,1139,3.866,1140,3.168,1141,2.714,1142,3.168,1143,2.415,1144,3.168,1145,2.192,1146,2.415,1147,3.168,1148,3.168,1149,3.168,1150,2.415,1151,3.168,1152,3.168,1153,3.168,1154,3.168,1155,3.168,1156,2.714,1157,3.168,1158,2.013,1159,3.168,1160,2.868,1161,1.738,1162,2.714,1163,2.192,1164,2.714,1165,3.168,1166,3.168,1167,3.168,1168,3.168,1169,2.714]],["title/components/NavigationComponent.html",[0,0.224,91,1.015]],["body/components/NavigationComponent.html",[0,0.301,1,0.774,2,1.409,3,0.135,4,0.118,5,1.004,6,1.004,7,1.004,8,1.004,9,0.118,13,0.846,15,1.511,16,0.952,17,1.791,18,1.701,19,1.088,21,1.088,23,0.942,24,0.982,26,0.752,29,1.163,31,0.932,32,0.021,33,0.784,34,0.709,35,0.932,37,0.711,38,0.982,39,0.318,40,0.135,42,0.135,43,0.085,44,0.998,50,1.308,58,1.625,62,2.943,65,3.188,66,1.625,67,2.404,68,0.63,69,1.485,70,1.337,71,1.004,72,1.953,73,1.004,74,1.004,75,0.774,76,1.146,77,1.004,78,0.774,79,1.485,80,0.815,81,1.004,82,0.63,83,0.664,84,1.004,85,0.736,86,1.004,87,0.774,88,0.952,89,0.774,90,1.004,91,1.507,92,1.004,93,0.736,94,1.004,95,0.774,96,1.004,97,0.774,98,1.004,99,0.774,100,1.004,101,0.774,102,1.004,103,0.774,104,0.904,105,1.67,106,1.004,107,1.004,108,0.011,109,0.011,122,0.982,138,2.131,140,1.655,142,1.853,148,2.284,163,1.751,168,1.683,169,1.591,173,2.097,180,3.114,189,0.952,190,0.952,201,1.23,231,0.699,232,0.815,233,0.904,235,0.838,238,2.758,259,1.625,291,1.625,293,1.97,294,2.24,295,1.332,296,1.625,299,3.162,300,3.363,301,3.14,302,2.733,304,1.755,305,2.105,306,4.411,307,3.081,308,3.814,309,2.404,310,2.24,311,3.089,312,2.826,314,2.826,315,1.91,372,1.254,405,4.602,408,2.366,417,2.596,418,2.861,424,1.332,427,3.716,429,2.826,432,3.363,434,1.91,436,3.706,438,2.105,439,1.515,440,2.861,441,2.105,443,3.706,445,3.706,457,3.081,464,1.755,471,3.499,474,1.755,618,1.184,661,3.081,686,3.527,687,2.323,689,3.343,691,2.603,724,3.375,725,1.332,785,2.826,798,2.826,803,2.826,813,2.596,831,3.114,930,2.105,953,2.105,1090,1.91,1091,4.602,1093,4.095,1095,3.499,1098,2.105,1099,1.91,1101,2.105,1108,2.105,1158,1.755,1160,1.755,1161,1.515,1170,2.366,1171,6.8,1172,4.084,1173,4.084,1174,4.861,1175,4.084,1176,4.861,1177,4.084,1178,5.371,1179,2.761,1180,4.084,1181,4.084,1182,2.761,1183,4.602,1184,2.761,1185,4.084,1186,6.21,1187,5.733,1188,5.371,1189,2.761,1190,2.761,1191,3.499,1192,2.761,1193,2.761,1194,2.761,1195,2.761,1196,2.366,1197,6.21,1198,4.861,1199,2.761,1200,2.761,1201,2.761,1202,2.105,1203,2.366,1204,2.366,1205,4.084,1206,4.861,1207,3.499,1208,2.761,1209,2.366,1210,4.861,1211,4.084,1212,2.366,1213,2.761,1214,4.861,1215,5.371,1216,4.084,1217,4.861,1218,5.371,1219,2.761,1220,5.371,1221,2.761,1222,2.761,1223,2.761,1224,2.761,1225,2.761,1226,2.761,1227,2.761,1228,2.761,1229,2.761,1230,2.761,1231,2.761]],["title/injectables/NavigationService.html",[140,0.964,330,1.316]],["body/injectables/NavigationService.html",[3,0.213,4,0.186,9,0.186,13,0.972,23,0.713,24,1.343,26,0.799,29,1.209,31,1.275,32,0.021,33,0.815,34,0.815,35,1.489,37,0.755,38,1.485,39,0.342,40,0.213,42,0.213,43,0.133,44,0.891,108,0.015,109,0.015,138,2.356,140,1.489,142,2.251,148,1.927,163,2.395,164,1.343,168,2.019,169,1.829,180,4.259,189,1.497,190,1.497,201,1.652,231,1.098,232,1.281,235,1.419,330,2.031,333,2.228,334,2.092,335,3.002,373,4.711,417,3.551,430,4.975,457,3.726,464,2.758,550,2.554,659,2.652,668,3.35,1011,3.865,1161,3.065,1183,4.787,1191,6.166,1196,3.717,1232,3.717,1233,4.339,1234,4.339,1235,6.526,1236,6.912,1237,6.752,1238,4.339,1239,5.587,1240,5.587,1241,5.587,1242,4.339,1243,5.587,1244,5.587,1245,4.787,1246,4.339,1247,4.339,1248,4.339,1249,4.339,1250,4.339]],["title/injectables/NotyfService.html",[139,1.185,330,1.316]],["body/injectables/NotyfService.html",[3,0.335,4,0.177,9,0.177,13,1.052,23,0.682,24,1.304,26,1.113,29,1.441,31,1.379,32,0.021,33,0.883,34,1.076,35,1.379,37,1.052,38,1.641,39,0.301,40,0.203,42,0.203,43,0.127,44,1.241,108,0.014,109,0.014,122,1.304,139,1.776,152,2.599,158,1.522,164,1.304,165,1.871,166,2.198,179,5.85,184,3.293,189,1.43,190,1.43,201,1.806,208,3.448,235,1.113,249,3.506,299,3.194,330,1.973,333,2.129,334,2,426,3.753,432,4.724,440,3.194,550,2.441,735,3.194,928,3.448,1093,4.136,1133,4.686,1251,3.553,1252,6.113,1253,4.147,1254,5.425,1255,4.147,1256,6.414,1257,5.425,1258,4.147,1259,5.425,1260,4.147,1261,5.425,1262,5.425,1263,5.425,1264,5.425,1265,5.425,1266,6.828,1267,5.425,1268,5.425,1269,4.147,1270,4.147,1271,4.147,1272,4.147]],["title/components/PageNotFoundComponent.html",[0,0.224,93,0.964]],["body/components/PageNotFoundComponent.html",[0,0.398,1,1.325,2,2.034,3,0.232,4,0.202,5,1.718,6,1.718,7,1.718,8,1.718,9,0.202,13,0.822,14,3.027,15,2.3,16,1.629,17,1.911,18,1.814,19,1.571,21,1.571,32,0.02,33,0.861,39,0.262,40,0.232,42,0.232,43,0.145,68,1.078,69,2.144,70,1.93,71,1.718,72,2.448,73,1.718,74,1.718,75,1.325,76,1.654,77,1.718,78,1.325,79,2.144,80,1.395,81,1.718,82,1.078,83,1.135,84,1.718,85,1.259,86,1.718,87,1.325,88,1.629,89,1.325,90,1.718,91,1.325,92,1.718,93,1.794,94,1.718,95,1.325,96,1.718,97,1.325,98,1.718,99,1.325,100,1.718,101,1.325,102,1.718,103,1.325,104,1.546,105,1.468,106,1.718,107,1.718,108,0.016,109,0.016,520,3.002,575,4.49,1133,3.747,1273,4.047,1274,4.047,1275,6.428,1276,5.896,1277,4.724,1278,4.724]],["title/modules/PagesModule.html",[339,0.743,1279,2.504]],["body/modules/PagesModule.html",[1,2.004,3,0.243,4,0.212,9,0.212,11,3.422,32,0.02,39,0.405,40,0.243,42,0.243,43,0.152,50,1.129,68,1.129,87,2.004,91,1.387,93,1.904,108,0.016,109,0.016,339,1.015,341,1.538,342,2.12,343,3.164,344,2.247,345,2.385,346,1.706,351,3.063,352,2.926,353,2.385,355,2.206,356,2.206,360,3.422,361,2.912,362,2.713,363,3.328,364,2.54,520,3.144,521,3.771,531,4.238,1110,3.422,1279,5.208,1280,4.238,1281,4.238,1282,4.238,1283,4.541,1284,4.947,1285,4.238,1286,4.238,1287,4.238,1288,4.947,1289,4.238]],["title/modules/PagesRoutingModule.html",[339,0.743,1283,2.3]],["body/modules/PagesRoutingModule.html",[0,0.392,1,1.776,3,0.26,4,0.227,9,0.227,11,3.674,32,0.02,39,0.403,40,0.26,42,0.26,43,0.163,87,1.776,88,1.832,93,1.415,108,0.017,109,0.017,231,1.344,236,1.276,317,2.727,341,1.651,346,1.832,355,1.931,356,2.303,360,3.674,453,3.126,454,3.728,455,3.263,456,3.375,457,3.252,459,3.375,520,3.375,521,4.049,1110,3.674,1283,4.025,1285,4.55,1286,4.55,1287,4.55,1289,4.55,1290,5.311,1291,5.311]],["title/components/ProfileComponent.html",[0,0.224,95,1.015]],["body/components/ProfileComponent.html",[0,0.27,1,0.647,2,1.23,3,0.175,4,0.099,5,0.839,6,0.839,7,0.839,8,0.839,9,0.099,13,0.62,15,1.925,16,0.796,17,1.739,18,1.652,19,0.95,21,0.95,23,0.379,24,0.857,25,1.524,26,0.656,28,1.975,29,1.488,31,0.526,32,0.021,33,0.636,34,0.852,35,0.994,37,1.101,38,1.274,39,0.35,40,0.113,41,0.885,42,0.113,43,0.071,44,1.238,50,0.994,57,3.115,62,1.184,65,1.184,66,1.358,67,1.358,68,0.526,69,1.296,70,1.167,71,0.839,72,1.782,73,0.839,74,0.839,75,0.647,76,1.571,77,0.839,78,0.647,79,1.296,80,0.681,81,0.839,82,0.526,83,0.554,84,0.839,85,0.615,86,0.839,87,0.647,88,0.796,89,0.647,90,0.839,91,0.647,92,0.839,93,0.615,94,0.839,95,1.375,96,0.839,97,0.647,98,0.839,99,0.647,100,0.839,101,0.647,102,0.839,103,0.647,104,1.735,105,2.12,106,0.839,107,0.839,108,0.009,109,0.009,122,0.857,126,2.332,136,1.503,137,1.691,138,2.07,139,1.975,140,1.608,141,1.881,142,1.691,144,2.099,145,1.524,148,1.23,161,1.108,162,1.296,163,1.528,164,1.52,165,1.23,167,1.527,168,1.486,169,1.605,173,1.83,201,1.567,204,1.368,205,2.754,213,2.426,228,0.796,231,0.902,232,0.681,233,0.755,234,0.885,235,1.238,236,1.609,268,1.048,270,2.555,292,1.596,293,2.101,294,1.956,295,1.112,310,1.265,322,2.226,324,2.689,325,1.719,331,0.796,336,4.271,382,1.466,392,3.298,417,1.466,418,2.099,434,1.596,435,1.759,439,1.265,440,1.358,474,1.466,559,4.199,578,3.935,589,3.054,590,2.592,591,4.531,633,2.401,659,1.368,782,3.396,783,3.645,834,2.769,835,3.666,1090,1.596,1145,1.596,1156,1.976,1158,2.266,1160,3.115,1161,1.956,1162,1.976,1163,1.596,1202,3.322,1292,1.976,1293,3.565,1294,3.565,1295,3.733,1296,3.054,1297,4.357,1298,4.54,1299,3.737,1300,4.902,1301,4.902,1302,3.737,1303,3.737,1304,4.902,1305,4.902,1306,4.902,1307,4.902,1308,3.565,1309,3.565,1310,3.054,1311,2.307,1312,2.307,1313,2.307,1314,4.199,1315,2.307,1316,2.307,1317,2.307,1318,2.307,1319,2.307,1320,2.307,1321,3.054,1322,2.307,1323,2.307,1324,2.307,1325,5.299,1326,2.307,1327,2.307,1328,2.307,1329,2.307,1330,2.307,1331,4.357,1332,2.307,1333,2.307,1334,1.976,1335,2.307,1336,3.565,1337,2.307,1338,1.976,1339,2.307,1340,2.307,1341,2.307,1342,2.307,1343,2.307,1344,2.307,1345,4.54,1346,5.299,1347,5.299,1348,1.976,1349,2.307,1350,1.976,1351,2.307,1352,4.357,1353,2.307,1354,2.307,1355,2.307,1356,2.307,1357,2.307,1358,2.307,1359,2.307,1360,2.307,1361,1.976,1362,2.307,1363,2.307,1364,1.976,1365,2.307,1366,2.307,1367,2.307,1368,2.307,1369,3.054,1370,3.054,1371,3.565,1372,2.307,1373,2.307,1374,2.307]],["title/modules/ProfileModule.html",[339,0.743,1375,2.504]],["body/modules/ProfileModule.html",[3,0.246,4,0.214,9,0.214,32,0.02,39,0.402,40,0.246,42,0.246,43,0.154,50,1.143,68,1.143,95,2.01,101,2.01,103,2.01,105,1.558,108,0.016,109,0.016,339,1.028,341,1.558,342,2.148,343,3.182,344,2.276,345,2.416,346,1.728,351,3.072,352,2.949,353,2.416,355,2.223,356,2.223,361,2.95,362,2.749,363,3.354,364,2.573,1375,5.215,1376,4.293,1377,4.293,1378,4.293,1379,4.555,1380,5.011,1381,4.293,1382,4.293,1383,4.293,1384,3.467,1385,4.293]],["title/modules/ProfileRoutingModule.html",[339,0.743,1379,2.3]],["body/modules/ProfileRoutingModule.html",[0,0.419,3,0.26,4,0.227,9,0.227,32,0.02,39,0.402,40,0.26,42,0.26,43,0.163,95,1.773,101,1.773,103,1.773,105,1.646,108,0.017,109,0.017,231,1.34,236,1.273,317,2.718,341,1.646,346,1.826,355,1.925,356,2.298,453,3.117,454,3.721,455,3.259,456,3.365,457,3.47,459,3.365,606,4.536,1379,4.018,1381,4.536,1382,4.536,1383,4.536,1384,3.663,1385,4.536,1386,5.295,1387,5.295]],["title/components/RedirectComponent.html",[0,0.224,97,1.015]],["body/components/RedirectComponent.html",[0,0.387,1,1.244,2,1.954,3,0.217,4,0.19,5,1.612,6,1.612,7,1.612,8,1.612,9,0.19,15,1.378,16,1.529,17,1.899,18,1.803,19,1.509,21,1.509,23,0.729,24,1.362,25,2.045,26,1.043,29,1.226,31,1.012,32,0.02,33,0.911,34,0.647,35,1.012,37,0.772,38,1.066,39,0.377,40,0.217,42,0.217,43,0.136,44,1.163,68,1.012,69,2.06,70,1.854,71,1.612,72,2.392,73,1.612,74,1.612,75,1.244,76,1.589,77,1.612,78,1.244,79,2.06,80,1.309,81,1.612,82,1.012,83,1.066,84,1.612,85,1.181,86,1.612,87,1.244,88,1.529,89,1.244,90,1.612,91,1.244,92,1.612,93,1.181,94,1.612,95,1.244,96,1.612,97,1.845,98,1.612,99,1.244,100,1.612,101,1.244,102,1.612,103,1.244,104,1.451,105,1.378,106,1.612,107,1.612,108,0.015,109,0.015,138,1.451,140,1.883,167,1.122,231,1.122,233,1.451,321,2.61,322,2.987,324,3.107,331,1.529,557,3.798,1145,3.067,1146,3.38,1388,3.798,1389,4.853,1390,6.243,1391,5.665,1392,4.434,1393,4.434,1394,4.434,1395,4.434,1396,4.434,1397,4.434,1398,4.434]],["title/guards/RedirectGuard.html",[316,2.131,1399,2.759]],["body/guards/RedirectGuard.html",[3,0.228,4,0.199,9,0.199,13,0.808,23,0.763,24,1.402,26,1.073,29,1.262,31,1.059,32,0.021,33,0.677,34,0.677,35,1.059,37,1.164,39,0.382,40,0.228,42,0.228,43,0.143,44,1.309,108,0.016,109,0.016,118,1.781,138,2.337,140,1.924,148,2.011,164,1.608,167,1.614,168,1.636,169,1.909,185,2.12,207,3.433,231,1.175,235,1.197,252,1.789,318,3.211,320,4.866,321,2.732,322,3.038,324,3.498,325,2.812,328,2.896,329,5.254,330,2.12,331,1.601,332,3.538,333,2.383,334,2.238,392,3.433,608,2.546,613,3.977,1146,3.538,1389,4.996,1399,4.446,1400,3.977,1401,4.642,1402,4.642,1403,5.832,1404,5.832,1405,5.832,1406,4.642,1407,4.642,1408,4.642,1409,4.642,1410,4.642]],["title/components/RegisterComponent.html",[0,0.224,99,1.015]],["body/components/RegisterComponent.html",[0,0.3,1,0.77,2,1.402,3,0.135,4,0.117,5,0.998,6,0.998,7,0.998,8,0.998,9,0.117,13,0.707,14,2.087,15,0.853,16,0.946,17,1.789,18,1.699,19,1.083,21,1.083,23,0.451,24,0.977,25,1.664,26,0.748,29,1.47,31,0.626,32,0.021,33,0.707,34,0.4,35,0.626,37,0.995,38,1.164,39,0.343,40,0.135,42,0.135,43,0.084,44,1.173,61,1.742,68,0.626,69,1.478,70,1.331,71,0.998,72,1.947,73,0.998,74,0.998,75,0.77,76,1.14,77,0.998,78,0.77,79,1.478,80,0.81,81,0.998,82,0.626,83,0.659,84,0.998,85,0.731,86,0.998,87,0.77,88,0.946,89,0.77,90,0.998,91,0.77,92,0.998,93,0.731,94,0.998,95,0.77,96,0.998,97,0.77,98,0.998,99,1.502,100,0.998,101,0.77,102,0.998,103,0.77,104,0.898,105,0.853,106,0.998,107,0.998,108,0.011,109,0.011,118,1.56,119,2.486,122,0.977,126,1.402,128,3.403,129,2.584,136,1.847,137,1.847,139,2.083,140,1.696,141,2.054,142,1.847,145,1.264,148,1.402,158,1.942,161,1.264,162,1.478,164,1.53,165,1.402,167,1.516,168,1.604,169,1.331,173,2.087,175,1.176,184,1.96,189,0.946,190,0.946,191,2.335,192,3.235,193,3.275,194,3.483,202,1.176,213,2.605,214,3.487,228,0.946,229,2.335,230,1.176,232,0.81,233,0.898,234,1.053,235,1.173,236,0.977,249,1.409,252,1.785,258,1.898,259,2.851,260,1.744,281,1.505,282,1.505,283,1.505,286,1.744,290,2.584,321,1.615,322,2.432,324,2.656,325,1.96,394,1.846,418,1.615,549,3.099,568,2.087,569,2.812,570,3.35,573,3.956,574,3.099,578,4.045,587,4.747,590,0.998,782,3.566,783,3.827,876,2.812,927,1.744,967,3.705,1119,4.082,1132,3.099,1133,2.584,1135,2.092,1136,3.483,1139,3.483,1141,2.351,1143,2.092,1145,1.898,1150,2.092,1158,1.744,1160,2.584,1161,1.505,1163,1.898,1299,2.092,1302,2.092,1303,2.092,1310,3.483,1314,5.13,1411,2.351,1412,4.843,1413,4.065,1414,5.718,1415,4.588,1416,4.843,1417,5.309,1418,2.744,1419,2.744,1420,2.744,1421,3.483,1422,3.483,1423,4.149,1424,2.744,1425,2.744,1426,2.744,1427,3.483,1428,3.483,1429,4.065,1430,4.065,1431,3.483,1432,3.483,1433,2.744,1434,2.744,1435,2.744,1436,2.744,1437,2.351,1438,2.744,1439,4.065,1440,2.744,1441,2.744,1442,3.483,1443,3.483,1444,2.744,1445,2.744,1446,2.744,1447,2.744,1448,2.744,1449,2.744,1450,2.744,1451,2.744,1452,2.351,1453,2.351,1454,2.351,1455,2.351,1456,2.351,1457,2.351,1458,2.351,1459,2.351,1460,2.744,1461,2.744,1462,2.744,1463,4.065,1464,3.483]],["title/modules/SharedModule.html",[339,0.743,351,1.551]],["body/modules/SharedModule.html",[3,0.177,4,0.155,9,0.155,32,0.021,39,0.423,40,0.177,42,0.177,43,0.111,50,0.824,68,0.824,91,2.004,97,1.84,108,0.013,109,0.013,168,1.013,230,1.548,339,0.741,341,1.122,342,1.548,343,2.719,344,1.64,345,1.741,346,1.945,351,3.062,352,2.384,353,1.741,355,1.313,356,1.798,363,3.093,364,1.854,372,1.64,704,2.712,1032,2.753,1465,3.093,1466,3.093,1467,3.093,1468,4.541,1469,3.611,1470,5.639,1471,5.639,1472,5.639,1473,3.611,1474,5.639,1475,3.611,1476,5.639,1477,3.611,1478,3.611,1479,5.639,1480,4.945,1481,5.639,1482,4.945,1483,5.639,1484,3.611,1485,5.639,1486,3.611,1487,5.639,1488,3.611,1489,5.639,1490,5.639,1491,3.611,1492,5.639,1493,3.611,1494,5.639,1495,3.611,1496,5.639,1497,3.611,1498,5.639,1499,3.611,1500,5.639,1501,3.611,1502,5.639,1503,3.611,1504,5.639,1505,3.611,1506,5.639,1507,3.611,1508,5.639,1509,3.611,1510,5.639,1511,3.611,1512,5.639,1513,3.611,1514,5.639,1515,4.945,1516,5.639,1517,5.639,1518,3.611,1519,5.639,1520,3.611,1521,5.639,1522,3.611,1523,5.639,1524,3.611,1525,5.639,1526,3.611,1527,5.639,1528,3.611,1529,5.639,1530,3.611,1531,5.639,1532,3.611,1533,5.639,1534,3.611,1535,5.639,1536,3.611,1537,5.639,1538,3.611,1539,5.639,1540,3.611,1541,5.639,1542,3.611,1543,5.639,1544,2.753,1545,2.753,1546,3.611,1547,3.611,1548,3.611,1549,3.611]],["title/components/StatsComponent.html",[0,0.224,101,1.015]],["body/components/StatsComponent.html",[0,0.264,1,0.624,2,1.195,3,0.109,4,0.095,5,0.809,6,0.809,7,0.809,8,0.809,9,0.095,13,0.836,15,0.691,16,0.767,17,1.728,18,1.641,19,0.923,21,0.923,23,0.366,24,0.833,25,1.494,26,0.638,28,1.951,29,1.402,31,0.971,32,0.021,33,0.894,34,0.914,35,0.971,37,1.037,38,1.023,39,0.266,40,0.109,41,0.853,42,0.109,43,0.068,44,1.309,45,0.901,57,2.202,62,2.833,68,0.971,69,1.26,70,1.134,71,0.809,72,1.748,73,0.809,74,0.809,75,0.624,76,0.972,77,0.809,78,0.624,79,1.26,80,0.657,81,0.809,82,0.507,83,0.534,84,0.809,85,0.593,86,0.809,87,0.624,88,0.767,89,0.624,90,0.809,91,0.624,92,0.809,93,0.593,94,0.809,95,0.624,96,0.809,97,0.624,98,0.809,99,0.624,100,0.809,101,1.348,102,0.809,103,0.624,104,0.728,105,0.691,106,0.809,107,0.809,108,0.009,109,0.009,114,2.335,118,1.329,119,2.186,122,0.833,126,2.112,133,2.858,136,1.468,137,1.658,144,2.04,145,1.946,152,1.404,158,0.624,161,1.077,162,1.26,164,0.833,165,1.195,167,0.877,185,2.007,189,2.112,190,2.112,201,1.509,204,1.844,205,1.844,228,0.767,232,1.419,235,0.986,236,1.691,252,1.194,259,1.309,266,0.953,270,2.661,293,2.318,294,3.434,295,2.053,296,1.309,297,2.397,299,2.04,301,2.318,309,2.04,310,2.637,315,2.397,327,1.779,369,1.671,382,1.413,400,1.905,425,2.202,426,1.539,427,2.945,428,3.818,429,3.604,439,2.637,440,3.249,590,2.007,591,3.055,633,1.825,659,2.402,673,2.186,687,1.725,691,2.506,704,3.161,725,2.661,759,1.779,762,1.142,763,1.142,778,2.969,790,1.695,798,1.539,807,1.695,808,1.695,813,2.706,826,3.664,834,3.788,845,1.695,848,1.695,849,1.695,850,1.695,851,1.695,854,2.642,855,1.695,927,2.202,928,1.413,963,1.539,1042,2.202,1087,1.905,1090,2.397,1099,2.397,1101,3.245,1108,1.695,1161,2.335,1204,3.647,1207,4.728,1212,1.905,1245,4.463,1321,2.969,1370,4.118,1421,2.969,1544,1.695,1545,5.006,1550,1.905,1551,4.257,1552,3.465,1553,4.257,1554,4.257,1555,4.257,1556,4.257,1557,4.257,1558,4.807,1559,3.465,1560,3.465,1561,4.807,1562,3.465,1563,4.257,1564,3.465,1565,2.224,1566,3.465,1567,4.257,1568,4.257,1569,4.257,1570,2.224,1571,3.465,1572,2.224,1573,6.644,1574,3.465,1575,2.224,1576,5.763,1577,2.224,1578,2.224,1579,3.465,1580,5.21,1581,2.224,1582,2.224,1583,4.728,1584,4.257,1585,3.465,1586,2.224,1587,2.224,1588,2.224,1589,3.465,1590,2.224,1591,2.224,1592,2.224,1593,2.224,1594,3.465,1595,3.465,1596,2.224,1597,3.465,1598,3.465,1599,2.224,1600,3.465,1601,3.465,1602,2.224,1603,2.224,1604,2.224,1605,2.224,1606,2.224,1607,2.224,1608,2.224,1609,2.224,1610,2.224,1611,2.224,1612,2.224,1613,2.224,1614,2.224,1615,2.224,1616,2.224,1617,2.224,1618,2.224,1619,3.465,1620,2.224,1621,2.224,1622,2.224,1623,2.224,1624,2.224,1625,3.465,1626,2.224,1627,2.224,1628,3.465,1629,2.224,1630,2.224,1631,2.224,1632,2.224,1633,1.905,1634,2.224,1635,2.224,1636,2.224,1637,1.905,1638,3.465,1639,2.224,1640,2.224,1641,3.465,1642,3.465,1643,2.224,1644,3.465,1645,2.224,1646,2.224,1647,3.465,1648,2.224,1649,4.118,1650,4.807,1651,3.465,1652,3.465,1653,4.257,1654,2.224,1655,2.224,1656,2.224,1657,2.969,1658,2.224,1659,2.224]],["title/modules/TrackingModule.html",[339,0.743,1660,2.504]],["body/modules/TrackingModule.html",[3,0.25,4,0.219,9,0.219,32,0.02,39,0.399,40,0.25,42,0.25,43,0.157,50,1.165,68,1.165,82,1.643,85,1.918,108,0.016,109,0.016,339,1.048,341,1.588,342,2.189,343,3.209,344,2.319,345,2.463,346,1.761,351,3.086,352,2.983,353,2.463,355,2.249,356,2.249,361,3.007,362,2.801,363,3.393,364,2.622,536,2.463,657,2.622,1660,5.194,1661,4.375,1662,4.375,1663,4.375,1664,4.576,1665,5.107,1666,4.375,1667,4.375,1668,4.375]],["title/modules/TrackingRoutingModule.html",[339,0.743,1664,2.3]],["body/modules/TrackingRoutingModule.html",[0,0.396,3,0.264,4,0.231,9,0.231,32,0.02,39,0.398,40,0.264,42,0.264,43,0.166,82,1.457,85,1.702,108,0.017,109,0.017,231,1.363,236,1.294,317,2.765,341,1.674,346,1.857,355,1.958,356,2.322,453,3.17,454,3.759,455,3.283,456,3.423,457,3.279,459,3.423,657,2.765,785,3.726,1664,4.058,1666,4.614,1667,4.614,1668,4.614,1669,5.385,1670,5.385]],["title/pipes/TrimDecimalsPipe.html",[618,1.551,1468,2.3]],["body/pipes/TrimDecimalsPipe.html",[3,0.238,4,0.208,9,0.208,13,1.045,16,1.677,24,1.169,29,1.053,31,1.11,32,0.02,33,0.951,34,0.71,35,1.11,37,1.045,39,0.269,40,0.238,42,0.238,43,0.149,108,0.016,109,0.016,118,1.866,145,1.866,189,1.677,190,2.549,201,1.721,235,1.232,236,1.169,252,1.684,293,2.895,302,2.085,404,4.167,428,3.365,618,2.915,659,2.73,667,3.082,671,3.082,687,1.971,773,2.497,973,4.577,1209,4.167,1468,3.816,1671,4.863,1672,5.143,1673,4.167,1674,6.004,1675,6.004,1676,6.004,1677,6.004,1678,6.987,1679,4.863,1680,6.004,1681,6.801,1682,6.801,1683,6.801,1684,6.004,1685,6.004,1686,4.863,1687,4.863,1688,4.863,1689,4.863,1690,4.863]],["title/components/UpdateProfileComponent.html",[0,0.224,103,1.015]],["body/components/UpdateProfileComponent.html",[0,0.258,1,0.602,2,1.162,3,0.105,4,0.092,5,0.78,6,0.78,7,0.78,8,0.78,9,0.092,13,0.586,14,1.101,15,0.667,16,0.74,17,1.717,18,1.63,19,0.898,21,0.898,23,0.353,24,0.81,25,1.465,26,0.62,28,1.927,29,1.479,31,0.489,32,0.021,33,0.607,34,0.748,35,0.489,37,1.099,38,1,39,0.336,40,0.105,41,0.823,42,0.105,43,0.066,44,1.167,45,0.869,52,1.363,61,1.783,62,1.101,65,1.101,68,0.489,69,1.225,70,1.103,71,0.78,72,1.714,73,0.78,74,0.78,75,0.602,76,0.945,77,0.78,78,0.602,79,1.225,80,0.633,81,0.78,82,0.489,83,0.516,84,0.78,85,0.572,86,0.78,87,0.602,88,0.74,89,0.602,90,0.78,91,0.602,92,0.78,93,0.572,94,0.78,95,0.602,96,0.78,97,0.602,98,0.78,99,0.602,100,0.78,101,0.602,102,0.78,103,1.322,104,2.266,105,2.124,106,0.78,107,0.78,108,0.009,109,0.009,117,2.839,118,1.293,119,2.136,122,0.81,126,2.089,128,2.644,129,2.141,136,1.626,137,1.626,138,1.982,139,1.927,140,1.569,141,1.808,142,1.626,145,1.882,148,1.162,158,1.801,161,1.465,162,1.225,163,1.444,164,1.415,165,1.162,166,1.365,167,1.49,168,1.437,169,1.103,173,1.73,175,0.92,176,1.838,184,1.625,189,0.74,190,1.162,191,2.006,192,2.92,193,2.273,200,1.73,201,1.376,202,0.92,205,1.596,209,2.886,213,2.464,214,3.343,228,0.74,229,2.006,230,0.92,231,0.543,232,0.633,233,0.702,234,0.823,235,1.167,236,1.518,249,2.136,252,1.699,259,1.983,268,0.974,269,1.363,270,2.006,276,3.564,280,1.363,281,1.848,282,1.848,283,1.848,284,1.363,286,1.363,287,1.101,290,2.141,292,1.484,293,1.035,294,1.848,295,1.035,296,1.263,297,1.484,298,1.635,299,1.263,300,1.484,301,1.035,302,0.92,303,1.838,304,2.141,305,1.635,306,1.484,307,1.101,308,1.363,309,1.263,310,1.177,311,1.363,312,1.484,313,1.838,314,1.484,315,1.484,325,1.625,418,1.263,419,1.838,464,1.363,552,2.886,563,3.261,565,1.983,568,1.73,574,3.593,578,2.644,587,4.61,590,2.531,591,3.255,602,1.484,659,1.293,687,0.869,707,1.983,782,3.399,783,3.648,871,1.635,876,2.878,927,2.141,1042,2.644,1132,1.635,1133,1.363,1135,2.568,1143,1.635,1150,1.635,1158,1.363,1160,2.141,1161,1.177,1163,2.878,1164,1.838,1202,4.144,1203,1.838,1295,3.564,1296,2.886,1299,1.635,1302,3.171,1303,1.635,1338,1.838,1345,3.564,1369,2.886,1384,4.76,1415,4.038,1417,4.871,1422,4.038,1423,3.564,1427,4.038,1428,2.886,1431,2.886,1432,2.886,1437,1.838,1442,2.886,1443,2.886,1452,1.838,1453,1.838,1454,1.838,1455,1.838,1456,1.838,1457,1.838,1458,1.838,1459,1.838,1464,3.564,1691,5.895,1692,1.838,1693,4.16,1694,4.16,1695,4.16,1696,4.16,1697,4.16,1698,4.16,1699,4.713,1700,4.713,1701,4.657,1702,4.713,1703,2.145,1704,3.369,1705,2.145,1706,4.16,1707,2.145,1708,2.145,1709,2.145,1710,2.145,1711,2.145,1712,2.145,1713,2.145,1714,2.145,1715,2.145,1716,2.145,1717,2.145,1718,2.145,1719,2.145,1720,2.145,1721,3.369,1722,2.145,1723,2.145,1724,2.145,1725,2.145,1726,2.145,1727,2.145,1728,2.145,1729,2.145,1730,2.145,1731,2.145,1732,2.145,1733,2.145,1734,5.122,1735,2.145,1736,2.145,1737,3.369,1738,4.16,1739,4.16,1740,2.145,1741,2.145,1742,2.145,1743,4.16,1744,2.145,1745,2.145,1746,2.145,1747,2.145,1748,2.145,1749,3.369,1750,2.145,1751,2.145,1752,2.145,1753,2.145,1754,3.369]],["title/interfaces/UserData.html",[367,1.248,781,2.504]],["body/interfaces/UserData.html",[0,0.149,3,0.07,4,0.061,9,0.061,13,0.248,14,0.731,15,0.974,17,0.36,18,0.342,19,0.38,21,0.38,23,0.234,25,0.443,26,0.262,28,1.207,32,0.021,33,0.352,34,0.538,37,0.545,38,0.753,39,0.278,40,0.07,41,0.546,42,0.07,43,0.044,44,0.919,45,1.27,47,1.086,48,0.838,50,0.841,57,1.992,70,0.466,83,1.615,85,0.38,104,0.466,108,0.006,109,0.006,115,1.095,118,0.546,119,1.238,122,0.579,126,1.272,136,0.831,137,0.831,138,0.789,139,1.207,140,0.983,141,0.925,142,0.831,144,1.419,145,1.81,148,0.491,149,1.086,152,0.577,158,1.716,161,0.749,162,0.518,163,0.61,164,0.991,165,0.491,166,0.577,167,1.044,168,0.879,169,0.789,173,0.731,175,1.033,177,0.905,181,0.731,182,0.985,184,1.163,185,1.341,201,1.408,202,2.543,204,1.583,207,1.419,208,1.532,214,0.731,217,2.45,220,1.893,228,0.491,232,0.421,233,0.466,234,0.546,235,1.11,236,1.735,238,0.731,249,1.238,252,1.516,260,1.532,264,1.838,266,1.92,269,0.905,270,2.52,271,0.61,275,0.985,280,0.905,281,0.781,282,0.781,283,0.781,284,0.905,295,1.163,301,1.989,302,2.385,327,2.3,367,1.423,369,2.808,372,0.647,374,1.086,392,0.838,394,1.873,396,2.389,410,1.086,416,1.838,420,1.086,424,2.749,425,1.532,439,0.781,474,3.188,524,1.086,536,0.687,571,1.838,575,0.905,585,1.163,590,1.5,599,1.893,622,0.985,631,1.873,633,2.988,634,1.609,646,1.086,655,0.781,659,2.187,660,1.322,661,1.238,662,2.457,663,0.731,664,0.781,665,2.023,667,1.609,668,3.315,670,1.719,671,1.238,673,2.118,676,1.322,679,0.781,682,1.322,683,0.781,684,1.719,685,1.322,686,2.856,687,2.894,688,1.322,689,2.45,690,1.322,691,2.589,692,1.719,693,1.322,706,0.781,708,2.867,709,0.781,725,1.163,759,1.893,760,1.322,761,1.322,762,1.893,763,1.893,764,1.322,772,0.781,773,0.731,777,1.086,779,2.065,780,1.22,781,2.854,782,2.867,783,2.953,784,1.22,785,0.985,786,1.22,787,1.22,788,1.22,789,3.16,790,1.838,791,2.685,792,2.065,793,1.22,794,1.22,795,1.22,796,2.065,797,2.685,798,1.668,799,1.22,800,1.22,801,2.685,802,1.22,803,0.985,804,1.086,805,2.389,806,1.22,807,3.824,808,1.838,809,2.685,810,1.22,811,1.22,812,2.065,813,1.532,814,5.083,815,3.534,816,1.22,817,1.22,818,1.086,819,2.065,820,1.22,821,1.22,822,1.22,823,2.685,824,1.22,825,2.065,826,1.086,827,1.22,828,2.065,829,1.22,830,2.065,831,1.086,832,1.22,833,1.22,834,2.622,835,1.668,836,1.22,837,1.086,838,1.22,839,3.534,840,1.22,841,1.22,842,1.22,843,1.22,844,2.685,845,1.838,846,1.22,847,2.685,848,1.838,849,1.838,850,2.811,851,1.838,852,2.065,853,2.065,854,1.086,855,1.086,856,1.22,857,1.22,858,1.22,859,1.22,860,1.22,861,1.22,862,1.22,863,1.22,864,1.22,865,1.22,866,1.22,867,1.22,868,2.065,869,1.22,870,2.065,871,1.838,872,1.838,873,3.16,874,4.298,875,3.837,876,1.668,877,2.065,878,2.065,879,4.298,880,2.065,881,3.837,882,3.16,883,1.22,884,1.22,885,1.22,886,1.22,887,1.22,888,2.065,889,3.16,890,2.065,891,3.534,892,2.065,893,2.065,894,1.22,895,1.22,896,3.534,897,2.065,898,1.22,899,3.837,900,3.16,901,1.22,902,1.22,903,1.22,904,3.534,905,2.065,906,1.22,907,2.065,908,1.22,909,4.885,910,1.22,911,2.685,912,1.086,913,2.685,914,1.22,915,1.22,916,2.065,917,1.22,918,2.065,919,1.22,920,1.22,921,2.065,922,1.22,923,4.298,924,3.16,925,1.22,926,1.22,927,1.992,928,0.905,929,2.685,930,1.086,931,1.22,932,1.22,933,1.22,934,1.22,935,2.685,936,1.22,937,1.22,938,1.22,939,2.065,940,1.22,941,2.065,942,2.065,943,2.065,944,1.22,945,1.22,946,1.22,947,1.22,948,1.22,949,1.22,950,1.22,951,1.22,952,1.22,953,1.086,954,1.22,955,1.22,956,1.22,957,1.22,958,4.477,959,4.298,960,2.065,961,1.22,962,1.22,963,1.668,964,1.22,965,1.22,966,2.685,967,2.168,968,3.534,969,2.065,970,2.065,971,2.685,972,1.22,973,1.838,974,1.22,975,1.22,976,1.22,977,2.065,978,1.22,979,1.22,980,2.065,981,2.065,982,2.685,983,2.065,984,1.22,985,4.477,986,4.298,987,1.22,988,1.086,989,1.22,990,2.065,991,1.22,992,2.065,993,2.065,994,1.22,995,1.22,996,1.22,997,1.22,998,1.22,999,1.22,1000,2.065,1001,1.22,1002,1.22,1003,1.22,1004,1.22,1005,1.22,1006,1.22,1007,1.22,1008,1.22,1009,1.22,1010,1.22,1011,0.985,1012,1.22,1013,2.685,1014,1.22,1015,1.22,1016,1.22,1017,1.22,1018,1.22,1019,1.22,1020,1.22,1021,1.22,1022,1.22,1023,1.22,1024,1.086,1025,1.22,1026,2.065,1027,1.22,1028,1.22,1029,1.22,1030,1.22,1031,1.22,1032,1.086,1033,2.065,1034,2.065,1035,1.22,1036,1.22,1037,1.22,1038,1.22,1039,1.22,1040,1.22,1041,1.22,1042,1.532,1043,2.065,1044,1.22,1045,1.22,1046,1.22,1047,1.22,1048,2.685,1049,2.065,1050,1.22,1051,1.22,1052,1.22,1053,1.22,1054,1.22,1055,1.22,1056,1.22,1057,1.22]],["title/guards/UserGuard.html",[316,2.131,1755,2.759]],["body/guards/UserGuard.html",[3,0.238,4,0.208,9,0.208,13,1.043,23,0.797,24,1.44,26,0.893,29,1.297,31,1.106,32,0.021,33,0.708,34,0.708,35,1.106,37,1.182,39,0.376,40,0.238,42,0.238,43,0.149,108,0.016,109,0.016,118,1.861,138,1.588,164,1.44,167,1.87,185,2.179,205,1.861,207,3.528,231,1.227,235,1.335,238,3.077,252,1.36,316,3.528,318,3.355,320,4.92,321,2.855,322,3.086,324,3.568,325,2.89,327,3.584,328,2.954,329,4.959,330,2.179,331,1.673,332,3.697,333,2.49,334,2.339,335,3.355,336,4.569,337,4.155,1755,4.569,1756,4.155,1757,4.85,1758,4.85,1759,4.85]],["title/classes/UserModule.html",[43,0.111,1760,2.504]],["body/classes/UserModule.html",[3,0.239,4,0.209,9,0.209,13,0.85,23,0.803,26,0.899,29,1.591,31,1.114,32,0.02,33,0.713,34,1.072,35,1.114,42,0.239,43,0.15,108,0.016,109,0.016,122,1.447,145,1.518,167,1.523,201,1.89,204,2.503,339,1.002,573,4.514,578,4.147,633,2.58,659,2.309,782,3.579,783,3.841,1298,5.59,1348,4.184,1350,4.184,1361,4.184,1364,4.184,1701,5.59,1760,4.839,1761,4.884,1762,4.184,1763,6.525,1764,6.019,1765,6.019,1766,4.884,1767,4.884,1768,4.884,1769,4.884,1770,4.884,1771,4.884,1772,4.884,1773,4.884,1774,4.884,1775,4.884,1776,4.884,1777,4.184,1778,4.884,1779,4.884,1780,4.884,1781,4.884,1782,4.884,1783,4.884,1784,4.884]],["title/injectables/UserService.html",[28,1.185,330,1.316]],["body/injectables/UserService.html",[3,0.176,4,0.153,9,0.153,13,0.856,23,0.589,24,1.182,26,0.905,28,1.609,29,1.499,31,0.817,32,0.021,33,0.523,34,0.925,35,0.817,37,1.22,39,0.363,40,0.176,42,0.176,43,0.11,44,1.009,108,0.013,109,0.013,122,1.182,126,2.461,136,1.937,137,2.085,138,2.294,145,1.528,158,1.004,161,1.969,162,1.788,163,2.107,164,1.182,167,1.753,184,1.727,185,1.788,201,1.696,204,2.511,205,2.657,213,1.886,228,1.235,231,0.906,235,1.152,236,1.641,252,1.695,269,2.276,270,3.156,271,1.535,280,2.276,325,2.708,327,2.524,330,1.788,331,1.235,333,1.838,334,1.727,339,1.009,382,2.276,528,4.159,550,2.108,563,4.383,565,3.305,569,4.528,570,4.528,585,2.371,590,2.548,591,4.402,602,2.477,607,3.068,622,2.477,623,3.068,626,3.068,834,3.569,835,3.402,837,2.73,1011,3.402,1042,3.125,1169,3.068,1334,5.607,1637,4.212,1760,3.885,1777,3.068,1785,3.068,1786,4.212,1787,5.615,1788,5.615,1789,5.615,1790,6.044,1791,6.044,1792,6.044,1793,4.917,1794,3.581,1795,3.581,1796,3.581,1797,4.917,1798,3.581,1799,3.581,1800,3.581,1801,3.581,1802,3.581,1803,3.581,1804,3.581,1805,3.581,1806,3.581,1807,3.581,1808,3.581,1809,3.581,1810,3.581,1811,3.581,1812,3.581,1813,3.581,1814,3.581,1815,3.581,1816,4.917,1817,3.581,1818,4.917,1819,3.581]],["title/coverage.html",[1820,4.243]],["body/coverage.html",[0,0.461,1,1.208,9,0.184,10,3.69,11,2.98,12,3.69,28,1.41,32,0.02,34,0.629,43,0.132,75,1.208,78,1.208,80,1.272,82,0.983,83,1.035,85,1.148,87,1.208,89,1.208,91,1.208,93,1.148,95,1.208,97,1.208,99,1.208,101,1.208,103,1.208,108,0.015,109,0.015,110,4.239,111,2.98,112,3.69,139,1.41,140,1.148,158,1.208,266,1.846,301,3.327,316,3.625,317,2.211,319,3.69,322,1.956,330,2.449,359,2.98,365,4.239,367,2.379,460,3.69,501,3.283,520,2.737,551,3.69,618,1.846,631,1.956,632,3.69,656,3.966,657,3.459,658,3.966,666,2.362,669,2.362,672,2.362,687,2.495,777,4.694,781,2.98,803,2.98,1109,3.69,1110,2.98,1124,3.69,1170,3.69,1232,3.69,1251,3.69,1273,3.69,1274,3.69,1292,3.69,1384,2.98,1388,3.69,1399,3.283,1400,3.69,1411,3.69,1468,2.737,1550,3.69,1657,4.763,1672,3.69,1673,3.69,1691,3.69,1692,3.69,1755,3.283,1756,3.69,1760,2.98,1762,3.69,1785,3.69,1820,3.69,1821,4.307,1822,4.307,1823,4.307,1824,4.307,1825,4.307,1826,4.307,1827,4.307,1828,6.507,1829,5.56,1830,4.307,1831,4.307,1832,5.56,1833,6.507,1834,6.507,1835,4.307,1836,4.307,1837,5.56,1838,4.307,1839,4.307,1840,4.307,1841,4.307,1842,4.307,1843,4.307,1844,6.158,1845,4.307,1846,4.307,1847,5.56,1848,4.307,1849,4.307,1850,4.307,1851,4.307,1852,4.307,1853,4.307,1854,4.307,1855,3.69,1856,4.307,1857,5.56,1858,4.307,1859,4.307,1860,3.69,1861,4.307,1862,4.307,1863,4.307]],["title/dependencies.html",[342,1.867,1864,2.299]],["body/dependencies.html",[32,0.02,40,0.249,108,0.016,109,0.016,168,1.424,230,2.176,231,1.285,232,1.499,331,1.751,342,2.176,344,2.306,364,2.607,509,5.281,510,4.699,565,2.989,663,2.607,1252,4.35,1544,3.871,1545,3.871,1865,6.291,1866,5.077,1867,6.164,1868,5.077,1869,5.077,1870,5.077,1871,5.077,1872,5.077,1873,5.077,1874,5.077,1875,5.077,1876,5.077,1877,6.164,1878,5.077,1879,5.077,1880,5.077,1881,6.164,1882,5.077,1883,6.903,1884,5.077,1885,5.077,1886,5.077,1887,5.077,1888,5.077,1889,5.077,1890,5.077,1891,5.077,1892,5.077,1893,5.077,1894,5.077,1895,5.077,1896,5.077,1897,5.077,1898,5.077,1899,5.077,1900,5.077,1901,5.077,1902,5.077,1903,5.077,1904,5.077,1905,5.077,1906,5.077]],["title/index.html",[23,0.496,1786,2.584,1907,3.016]],["body/index.html",[0,0.411,4,0.217,15,1.578,32,0.016,33,0.741,50,1.158,53,4.35,58,3.907,108,0.016,109,0.016,115,2.306,118,1.948,158,1.424,161,2.063,298,4.699,373,3.871,804,5.06,805,3.871,818,3.871,912,3.871,963,3.513,988,4.699,1024,3.871,1102,6.16,1633,4.35,1649,6.234,1864,3.871,1865,4.35,1908,5.077,1909,5.077,1910,6.638,1911,4.35,1912,5.077,1913,6.164,1914,7.072,1915,5.077,1916,5.077,1917,5.077,1918,5.077,1919,5.077,1920,5.077,1921,5.077,1922,5.077,1923,5.077,1924,6.638,1925,5.077,1926,6.903,1927,5.077,1928,5.077,1929,5.077,1930,5.077,1931,6.164,1932,6.903,1933,5.077,1934,6.164,1935,6.164,1936,5.077,1937,5.077,1938,5.077,1939,6.164,1940,5.077,1941,5.077,1942,5.077,1943,5.077,1944,3.871]],["title/modules.html",[341,1.54]],["body/modules.html",[32,0.017,108,0.017,109,0.017,340,3.714,341,1.669,350,3.412,351,2.301,475,3.714,480,3.412,481,3.412,503,3.412,510,5.653,543,3.412,872,5.552,1279,3.714,1283,3.412,1375,3.714,1379,3.412,1583,6.24,1660,3.714,1664,3.412,1945,7.415,1946,7.415,1947,7.593]],["title/overview.html",[1944,3.776]],["body/overview.html",[1,1.645,2,1.345,32,0.02,43,0.12,50,0.89,68,0.89,75,1.645,78,1.645,80,2.023,82,1.338,85,1.563,87,1.645,89,1.645,91,1.922,93,1.563,95,1.645,97,1.645,99,1.645,101,1.645,103,1.645,108,0.014,109,0.014,260,2.478,318,2.698,339,0.8,340,4.927,341,1.212,342,1.671,343,1.88,344,1.771,345,1.88,346,1.345,347,3.341,348,3.341,349,3.341,350,3.728,351,3.173,352,2.512,353,1.88,455,1.88,475,5.151,476,3.341,477,3.341,478,3.341,479,3.341,480,3.728,481,4.146,482,5.589,483,5.025,484,5.589,485,5.025,486,5.589,487,5.025,488,5.589,489,5.025,503,4.526,540,3.341,541,3.341,542,3.341,543,3.728,550,2.295,618,1.671,655,2.139,691,2.366,1279,5.004,1280,3.341,1281,3.341,1282,3.341,1283,3.728,1375,5.004,1376,3.341,1377,3.341,1378,3.341,1379,3.728,1465,3.341,1466,3.341,1467,3.341,1468,4.355,1660,4.927,1661,3.341,1662,3.341,1663,3.341,1664,3.728,1855,3.341,1944,2.973,1948,3.899,1949,3.899,1950,3.899,1951,3.899]],["title/properties.html",[122,1.047,1864,2.299]],["body/properties.html",[32,0.019,108,0.018,109,0.018,122,1.425,1911,5.08,1952,5.929]],["title/routes.html",[455,2.389]],["body/routes.html",[32,0.018,108,0.018,109,0.018,455,2.874]],["title/miscellaneous/variables.html",[291,2.565,1953,2.584]],["body/miscellaneous/variables.html",[18,1.351,23,0.924,32,0.02,34,0.82,48,4.079,49,4.794,108,0.017,109,0.017,189,1.939,190,1.939,291,3.309,501,4.992,565,3.309,928,3.573,1860,4.816,1953,4.816,1954,5.621,1955,5.621,1956,5.621,1957,5.621,1958,5.621,1959,5.621,1960,5.621,1961,5.621,1962,5.621,1963,5.621,1964,5.621,1965,5.621]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":687,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1952,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.1",{"_index":1106,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["0.12.0",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["0.125rem",{"_index":1103,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["0.1s",{"_index":1222,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.375rem",{"_index":1211,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.3s",{"_index":1218,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1599,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":315,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.58",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":445,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["0.5s",{"_index":1214,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.75rem",{"_index":305,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.8",{"_index":1596,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":1208,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1.11.3",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1231,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1/1",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":301,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["1000px",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["10px",{"_index":796,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["11.30.0",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["11/12",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1855,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["15",{"_index":1948,"title":{},"body":{"overview.html":{}}}],["15.0.1",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":1865,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":1107,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":449,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["1rem",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["1s",{"_index":1223,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1622,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":973,"title":{},"body":{"interfaces/DrinkData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["2.125rem",{"_index":1096,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2.25rem",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2.3.0",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1092,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1245,"title":{},"body":{"injectables/NavigationService.html":{},"components/StatsComponent.html":{}}}],["200ms",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["20px",{"_index":790,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["20rem",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["23/24",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1951,"title":{},"body":{"overview.html":{}}}],["2rem",{"_index":1100,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{}}}],["3",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["3.0.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1453,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["300",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["300ms",{"_index":791,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["33",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":1648,"title":{},"body":{"components/StatsComponent.html":{}}}],["368ff4",{"_index":1268,"title":{},"body":{"injectables/NotyfService.html":{}}}],["3rem",{"_index":441,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":998,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["4.0.2",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1656,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/6",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1580,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1262,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1277,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1278,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40rem",{"_index":1658,"title":{},"body":{"components/StatsComponent.html":{}}}],["4caf50",{"_index":1265,"title":{},"body":{"injectables/NotyfService.html":{}}}],["4rem",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5",{"_index":1949,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1657,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["500",{"_index":418,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["500px",{"_index":1213,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5rem",{"_index":1374,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6",{"_index":1950,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["66",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1607,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1204,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["71",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":1373,"title":{},"body":{"components/ProfileComponent.html":{}}}],["8",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["80vh",{"_index":1643,"title":{},"body":{"components/StatsComponent.html":{}}}],["88",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["8rem",{"_index":1094,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["9",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["980328026322",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["996",{"_index":1225,"title":{},"body":{"components/NavigationComponent.html":{}}}],["997",{"_index":1219,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1226,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1608,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.drinkdate.gettime",{"_index":956,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["a.payload.doc.data",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ability",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":1291,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol",{"_index":1455,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1457,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1456,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":300,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1442,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map((a",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1307,"title":{},"body":{"components/ProfileComponent.html":{}}}],["active",{"_index":1309,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":115,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["adddrinkamount",{"_index":1058,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":750,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adding",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adds",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adjustchartsizes",{"_index":1558,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":458,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["adminformcomponent",{"_index":75,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":317,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":340,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpagecomponent",{"_index":78,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":350,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["advance",{"_index":994,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["afauth",{"_index":1702,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":310,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday",{"_index":935,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.filter",{"_index":961,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.length",{"_index":987,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.sort",{"_index":954,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["allows",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":314,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["already",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["always",{"_index":646,"title":{},"body":{"injectables/DateService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["amount",{"_index":667,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":663,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":364,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1473,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":1475,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/bottom",{"_index":1477,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/button",{"_index":1480,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1484,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1486,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/chips",{"_index":1488,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1491,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1493,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":1495,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1497,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":1499,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1501,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1503,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1505,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1507,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1509,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1511,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":1513,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1515,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":1518,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1520,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1522,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":1524,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slider",{"_index":1526,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1528,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":1530,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":1532,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":1534,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1536,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1538,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1540,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tree",{"_index":1542,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["animate",{"_index":662,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animate('200ms",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animate.css",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animations",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["apikey",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":80,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1918,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":475,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":480,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximate",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["approximately",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1565,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1646,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1569,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1605,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1635,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1927,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1654,"title":{},"body":{"components/StatsComponent.html":{}}}],["assertion",{"_index":952,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["async",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["auth/invalid",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/login",{"_index":1462,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":322,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authmodule",{"_index":503,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":543,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":427,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["automatically",{"_index":1919,"title":{},"body":{"index.html":{}}}],["available",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["await",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["b",{"_index":955,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["b.drinkdate.gettime",{"_index":957,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bac",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["backdrop",{"_index":1224,"title":{},"body":{"components/NavigationComponent.html":{}}}],["background",{"_index":432,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{}}}],["bar",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1597,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1553,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1594,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["before",{"_index":1244,"title":{},"body":{"injectables/NavigationService.html":{}}}],["beforenavigate",{"_index":1236,"title":{},"body":{"injectables/NavigationService.html":{}}}],["behaviorsubject",{"_index":652,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":644,"title":{},"body":{"injectables/DateService.html":{}}}],["black",{"_index":451,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["block",{"_index":1230,"title":{},"body":{"components/NavigationComponent.html":{}}}],["blood",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["body",{"_index":978,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/DrinkData.html":{},"guards/RedirectGuard.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":434,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["bottom",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["bound",{"_index":1022,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["break",{"_index":1054,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1947,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1926,"title":{},"body":{"index.html":{}}}],["builder",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":444,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["calculate",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":1004,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["can't",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["canactivate",{"_index":320,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1941,"title":{},"body":{"index.html":{}}}],["catch",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":419,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":133,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1638,"title":{},"body":{"components/StatsComponent.html":{}}}],["cdr",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":440,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["change",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["characterse",{"_index":1450,"title":{},"body":{"components/RegisterComponent.html":{}}}],["charactersnumber",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["charactersweight",{"_index":1452,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1573,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":1545,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1633,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["checkemailexists",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkemailexists(email",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checking",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{}}}],["checks",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["checkusernameexists",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkusernameexists(username",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["child",{"_index":448,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["choice",{"_index":1938,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1761,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1910,"title":{},"body":{"index.html":{}}}],["click",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicked",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicking",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicks",{"_index":675,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicling",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["close",{"_index":1082,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["closed",{"_index":1186,"title":{},"body":{"components/NavigationComponent.html":{}}}],["closing",{"_index":1187,"title":{},"body":{"components/NavigationComponent.html":{}}}],["closingsoft",{"_index":1188,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cluster_adminmodule",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":628,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":629,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1280,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1281,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1282,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1376,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1377,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1378,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1465,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1467,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1466,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackingmodule",{"_index":1661,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_declarations",{"_index":1663,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_imports",{"_index":1662,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["code",{"_index":1922,"title":{},"body":{"index.html":{}}}],["collection",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["collection('user",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["color",{"_index":311,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":1090,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1939,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":363,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":1285,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/admin",{"_index":357,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["components/drink",{"_index":1666,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/home/home.component",{"_index":1668,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/landing",{"_index":1287,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/login/login.component",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/page",{"_index":1289,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":1381,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/register/register.component",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":1382,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/update",{"_index":1383,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["confirm('are",{"_index":413,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1721,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmed",{"_index":1439,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1417,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('invalid",{"_index":933,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["console.error('selecteddate",{"_index":934,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["console.error('user",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["console.log(boolean(drinkdata.hour",{"_index":767,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log(drinkdata.hour",{"_index":765,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log(error",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.selecteddate",{"_index":766,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.warn",{"_index":941,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["const",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":335,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/NavigationService.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1764,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":665,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":1207,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["contains",{"_index":113,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["converted",{"_index":754,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["core/core.module",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/admin.guard",{"_index":456,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["coremodule",{"_index":481,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correctly",{"_index":996,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["count",{"_index":1641,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1820,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["createuserwithemailandpassword",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":327,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentbacinternal",{"_index":958,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentemail",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentsimtime",{"_index":986,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentsimtime.gettime",{"_index":993,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currenttime",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1752,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":1095,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["d3",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":145,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":117,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":633,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date(alldrinkstoday[0].drinkdate.gettime",{"_index":991,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(currentsimtime.gettime",{"_index":1001,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(document.getelementbyid('date')!.innerhtml",{"_index":1014,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(drink.drinkdate.gettime",{"_index":972,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(selecteddateobj",{"_index":949,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1612,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1610,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1611,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1609,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":1028,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateanimationkey",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateinput",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":631,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1621,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1617,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":1031,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1681,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1678,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1675,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":1547,"title":{},"body":{"modules/SharedModule.html":{}}}],["decimals.pipe.ts",{"_index":1673,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1679,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["decoration",{"_index":1228,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":1578,"title":{},"body":{"components/StatsComponent.html":{}}}],["deep",{"_index":1650,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1191,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["delay(300",{"_index":1195,"title":{},"body":{"components/NavigationComponent.html":{}}}],["delete",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":416,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":1041,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":420,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":342,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["design",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["desired",{"_index":1239,"title":{},"body":{"injectables/NavigationService.html":{}}}],["destination",{"_index":1183,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["detail.alcohol",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":1089,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map((detail",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1916,"title":{},"body":{"index.html":{}}}],["development",{"_index":1912,"title":{},"body":{"index.html":{}}}],["direction",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["directive",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1925,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1930,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1266,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1256,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1929,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1642,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["doc(currentuserid",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["doc(drinkid",{"_index":415,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc(this.editingdrinkid",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["doc.data",{"_index":1630,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1629,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1631,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":1055,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1618,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid",{"_index":1355,"title":{},"body":{"components/ProfileComponent.html":{}}}],["document.getelementbyid('profile",{"_index":1735,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["documentation",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["don't",{"_index":1200,"title":{},"body":{"components/NavigationComponent.html":{}}}],["drankdrinksref",{"_index":1625,"title":{},"body":{"components/StatsComponent.html":{}}}],["drankform",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink",{"_index":83,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":968,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":1085,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.alcohol",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.calories",{"_index":1007,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":1083,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.category",{"_index":1087,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":1052,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":1086,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":421,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":745,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":939,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.time.includes",{"_index":940,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.time.split(':').map(number",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":666,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamounts",{"_index":673,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":1046,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":669,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1619,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":266,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.amount",{"_index":768,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.drinkamounts",{"_index":1043,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkdata.hour",{"_index":769,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.minute",{"_index":770,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1634,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1636,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":1670,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["drinklistcomponent",{"_index":82,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkname",{"_index":1044,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimes",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["due",{"_index":943,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["duration",{"_index":1261,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1937,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["edit",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["effect",{"_index":999,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["element",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["element's",{"_index":1023,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":779,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{}}}],["emits",{"_index":649,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["encapsulation",{"_index":1172,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1102,"title":{},"body":{"components/DrinkListComponent.html":{},"index.html":{}}}],["ended",{"_index":1180,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ensure",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entries",{"_index":1045,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entries.findindex",{"_index":1050,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":1053,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":1048,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":1051,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entryindex",{"_index":1049,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1254,"title":{},"body":{"injectables/NotyfService.html":{}}}],["error.code",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["estimate",{"_index":984,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["estimatedsobertime",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["event.stoppropagation",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["events",{"_index":307,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["execute",{"_index":1934,"title":{},"body":{"index.html":{}}}],["existing",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["exists",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{}}}],["extras",{"_index":1235,"title":{},"body":{"injectables/NavigationService.html":{}}}],["f44336",{"_index":1267,"title":{},"body":{"injectables/NotyfService.html":{}}}],["fallback",{"_index":1003,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"interfaces/UserData.html":{}}}],["fb",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1464,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":410,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fff",{"_index":1105,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["field",{"_index":1032,"title":{},"body":{"interfaces/DrinkData.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["fields",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1921,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1651,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["filling",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["fills",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filter",{"_index":953,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["filter((drink",{"_index":951,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["filter((event",{"_index":1194,"title":{},"body":{"components/NavigationComponent.html":{}}}],["filterdrinks",{"_index":740,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":739,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["finally",{"_index":1250,"title":{},"body":{"injectables/NavigationService.html":{}}}],["find",{"_index":1047,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":672,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":963,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["firstvaluefrom(this.auth.authstate",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["fixed",{"_index":1209,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["flat",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["font",{"_index":1098,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{}}}],["form",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1425,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":358,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["form.component.html",{"_index":121,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":120,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":112,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:107",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:114",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:121",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:128",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:135",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:142",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:157",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:27",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:45",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:49",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:94",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":111,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["format",{"_index":944,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["formatpassword",{"_index":1451,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formats",{"_index":1026,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":773,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":759,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formbuilder",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontrol",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol(false",{"_index":1431,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol(null",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formdata",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":1471,"title":{},"body":{"modules/SharedModule.html":{}}}],["formula",{"_index":975,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["forrmatpassword",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["forward",{"_index":1018,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["found",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["found.component.html",{"_index":1276,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1275,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1274,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1242,"title":{},"body":{"injectables/NavigationService.html":{}}}],["further",{"_index":1942,"title":{},"body":{"index.html":{}}}],["future",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["g/100ml",{"_index":976,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1108,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["gender",{"_index":783,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1693,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["gendertemp",{"_index":1359,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1362,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1363,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1924,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1909,"title":{},"body":{"index.html":{}}}],["get's",{"_index":1706,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getabv",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getamount",{"_index":1076,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getauth",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["getcaloriesperserving",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getcategory",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getconfirmpassword",{"_index":1437,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1334,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["getdate",{"_index":764,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["getdrinks",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate(date",{"_index":1027,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1299,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1698,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["gethour",{"_index":1078,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getminute",{"_index":1080,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getml",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getname",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getpassword",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1300,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1699,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1301,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":636,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1786,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1302,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1303,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":599,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["grams",{"_index":977,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["graph",{"_index":1583,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1554,"title":{},"body":{"components/StatsComponent.html":{}}}],["grey",{"_index":313,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["group",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":316,"title":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["h1.landing",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["habits",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1206,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handle",{"_index":936,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["handles",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["happen",{"_index":1002,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["happened",{"_index":1405,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["height",{"_index":429,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["help",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["help_outline",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["hidden",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["hidedelay",{"_index":1198,"title":{},"body":{"components/NavigationComponent.html":{}}}],["hides",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["hidetotals",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["highlight_remove",{"_index":422,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["hint",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["hints",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["history.state.drink",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":647,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":785,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"modules/TrackingRoutingModule.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":786,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":787,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1588,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1579,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1562,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["hours",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourselapsed",{"_index":969,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourselapsedsincelastdrink",{"_index":983,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourstodrink",{"_index":992,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourstosober",{"_index":1000,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1356,"title":{},"body":{"components/ProfileComponent.html":{}}}],["htmlinputelement",{"_index":1736,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1917,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1358,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":405,"title":{},"body":{"components/AdminPageComponent.html":{},"components/NavigationComponent.html":{}}}],["iconfont",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["icons",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":407,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["img",{"_index":1372,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":118,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./admin/admin.module').then((m",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then((m",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then((m",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tracking/tracking.module').then((m",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1653,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["including",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["increased",{"_index":1199,"title":{},"body":{"components/NavigationComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":775,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["info(message",{"_index":1257,"title":{},"body":{"injectables/NotyfService.html":{}}}],["initialization",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initialize",{"_index":962,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["initializeapp",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":330,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1229,"title":{},"body":{"components/NavigationComponent.html":{}}}],["input",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["input.search",{"_index":1088,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["instanceof",{"_index":930,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["instantly",{"_index":650,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":367,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":655,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":927,"title":{},"body":{"interfaces/DrinkData.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["isadmin",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isnan(hours",{"_index":946,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["isnan(minutes",{"_index":947,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["isnan(selecteddateobj.gettime",{"_index":932,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["isnan(this.selecteddate.gettime",{"_index":931,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["istotalsshown",{"_index":802,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["isuser",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RedirectComponent.html":{}}}],["it's",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{}}}],["itdelete",{"_index":403,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["items",{"_index":439,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":1101,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["karma",{"_index":1936,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["kcal/100",{"_index":1084,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["key",{"_index":670,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1369,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["kilograms",{"_index":1454,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingpagecomponent",{"_index":87,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":982,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["last7days",{"_index":1604,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1616,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["lastprocesseddrinktimeforbac",{"_index":959,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["lastprocesseddrinktimeforbac.gettime",{"_index":970,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["latest",{"_index":648,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":443,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["legend",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1584,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1585,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1555,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1606,"title":{},"body":{"components/StatsComponent.html":{}}}],["li",{"_index":438,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["list",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":1667,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["list.component.html",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":658,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:102",{"_index":1073,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:106",{"_index":1074,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:110",{"_index":1071,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:126",{"_index":1062,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:149",{"_index":1066,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:159",{"_index":1077,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:163",{"_index":1079,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:167",{"_index":1081,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:175",{"_index":1065,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:195",{"_index":1068,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:208",{"_index":1067,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:217",{"_index":1069,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:224",{"_index":1064,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:236",{"_index":1063,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:38",{"_index":776,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:77",{"_index":1070,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:94",{"_index":1072,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:98",{"_index":1075,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":657,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["listens",{"_index":1567,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":674,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":778,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1559,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1571,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadchildren",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":337,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["loadpiechartdata",{"_index":1560,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1574,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["loaidng",{"_index":1704,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["log",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":591,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":548,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":90,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":592,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1371,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":589,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["m.adminmodule",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trackingmodule",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{}}}],["map(([name",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["map((actions",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map((drink",{"_index":938,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["map((user",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{},"guards/RedirectGuard.html":{}}}],["margin",{"_index":436,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["matautocompletemodule",{"_index":1472,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":1474,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbottomsheetmodule",{"_index":1476,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":1479,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1481,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1483,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matcheckboxmodule",{"_index":1485,"title":{},"body":{"modules/SharedModule.html":{}}}],["matches",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1487,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdatepickermodule",{"_index":1492,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogmodule",{"_index":1494,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":1496,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["matexpansionmodule",{"_index":1498,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1500,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":1502,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.max",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(...pastdrinks.map((drink",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(0",{"_index":971,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(currentsimtime.gettime",{"_index":997,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(earliestalldrinktime.gettime",{"_index":922,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1598,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1595,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.min(...drinktimes.map((drink",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["maticonmodule",{"_index":1504,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1506,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1508,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1510,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1489,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginatormodule",{"_index":1512,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1514,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1516,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":1517,"title":{},"body":{"modules/SharedModule.html":{}}}],["matripplemodule",{"_index":1490,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1519,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1521,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidermodule",{"_index":1525,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1523,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbarmodule",{"_index":1527,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsortmodule",{"_index":1529,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":1531,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":1533,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1535,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1537,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1539,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattreemodule",{"_index":1541,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":428,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["maxheight",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["media",{"_index":1212,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["menu",{"_index":1171,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menu_open",{"_index":1205,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menustate",{"_index":1176,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":1056,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["message",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["messages",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["metabolize",{"_index":966,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":1011,"title":{},"body":{"interfaces/DrinkData.html":{},"injectables/NavigationService.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1429,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1953,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":945,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ml",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["mm",{"_index":1030,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["mode",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":116,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":339,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":341,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1943,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["mouseevent",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ms",{"_index":430,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"injectables/NavigationService.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":1037,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/NavigationService.html":{},"index.html":{}}}],["navigate(path",{"_index":1234,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigate(typeof",{"_index":1249,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigates",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["navigatewithmenuclose",{"_index":1177,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigatewithmenuclose(path",{"_index":1181,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["navigation'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1175,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1174,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":1548,"title":{},"body":{"modules/SharedModule.html":{}}}],["navigation?.extras?.state",{"_index":239,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":91,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["navigationerror",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationextras",{"_index":1246,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigationservice",{"_index":140,"title":{"injectables/NavigationService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["navigationstart",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":1024,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["needed",{"_index":114,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1743,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":747,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1749,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newprofilepicurl",{"_index":1734,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1739,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["nextday",{"_index":1019,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["nextday.setdate(originaldate.getdate",{"_index":1020,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ng",{"_index":1649,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":356,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["ngneat/hot",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":1543,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngxspinnermodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["no_drinks",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":308,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["not(:last",{"_index":447,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["notification",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1310,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1252,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":139,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["null",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["null/undefined",{"_index":937,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":659,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["number(drink.alcohol",{"_index":950,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["numbers",{"_index":755,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["object",{"_index":928,"title":{},"body":{"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map",{"_index":1640,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1747,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1632,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1620,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":328,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1614,"title":{},"body":{"components/StatsComponent.html":{}}}],["oncloseclick",{"_index":1059,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["oncloseclick(event",{"_index":737,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ondatechange(direction",{"_index":1012,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":1060,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["ondrinkclick(event",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["oninit",{"_index":119,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1561,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["open",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":1035,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":1033,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["originaldate",{"_index":1013,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["otherwise",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":784,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":425,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["overview",{"_index":1944,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1864,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":763,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":360,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["page.component.html",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:26",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts:33",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:49",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:57",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:66",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:83",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:91",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:99",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":359,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":93,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{}}}],["pages/components/page",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/landing",{"_index":1344,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pagesmodule",{"_index":1279,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":1283,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["panel",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["param",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1332,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1687,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["parsing",{"_index":948,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["passed",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1459,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1422,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsdontmatch",{"_index":1458,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1415,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["past",{"_index":981,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastandcurrentdrinks",{"_index":960,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastandcurrentdrinks[0].drinkdate.gettime",{"_index":965,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastdrinks",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":457,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["pathmatch",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["personal",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":1387,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["picker",{"_index":1034,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1202,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1352,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1576,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1556,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1601,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1557,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1600,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":618,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(take(1",{"_index":1395,"title":{},"body":{"components/RedirectComponent.html":{}}}],["pipes",{"_index":1671,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":1546,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1685,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1682,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["pointer",{"_index":306,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["preparedhour",{"_index":774,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["present",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["prevday",{"_index":1015,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["prevday.setdate(originaldate.getdate",{"_index":1016,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["processing",{"_index":980,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["profile",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":1385,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profile.component.html",{"_index":1296,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1295,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1692,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:102",{"_index":1720,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:108",{"_index":1722,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":1723,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:122",{"_index":1710,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:142",{"_index":1708,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:153",{"_index":1707,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:170",{"_index":1705,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:187",{"_index":1711,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:197",{"_index":1712,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":1716,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1714,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1717,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1713,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:47",{"_index":1715,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:56",{"_index":1703,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:81",{"_index":1709,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1718,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":1719,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/personalstats",{"_index":1366,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":1203,"title":{},"body":{"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":1384,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":95,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":1375,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepichtml",{"_index":1354,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1357,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1701,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1694,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profileroutingmodule",{"_index":1379,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesub",{"_index":1297,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":988,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["projectid",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1624,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1615,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":671,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":772,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provde",{"_index":752,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["provide",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["provideauth",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":594,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":333,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["providestorage",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":677,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{}}}],["querysnapshot",{"_index":1627,"title":{},"body":{"components/StatsComponent.html":{}}}],["r",{"_index":979,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["radius",{"_index":435,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{}}}],["ran",{"_index":1243,"title":{},"body":{"injectables/NavigationService.html":{}}}],["ratio",{"_index":1655,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1568,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":1470,"title":{},"body":{"modules/SharedModule.html":{}}}],["record",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":446,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["redirect",{"_index":1389,"title":{},"body":{"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{}}}],["redirect'},{'name",{"_index":98,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["redirect.component.html",{"_index":1391,"title":{},"body":{"components/RedirectComponent.html":{}}}],["redirect.component.scss",{"_index":1390,"title":{},"body":{"components/RedirectComponent.html":{}}}],["redirect/redirect/redirect.component",{"_index":1549,"title":{},"body":{"modules/SharedModule.html":{}}}],["redirectcomponent",{"_index":97,"title":{"components/RedirectComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["redirectguard",{"_index":1399,"title":{"guards/RedirectGuard.html":{}},"body":{"guards/RedirectGuard.html":{},"coverage.html":{}}}],["redirecting",{"_index":1403,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["redirects",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"interfaces/UserData.html":{}}}],["redirecttoadminformadddrink",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1304,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":1038,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1305,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1306,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["ref.where('email",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["ref.where('username",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reference",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":549,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":100,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1413,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1412,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1763,"title":{},"body":{"classes/UserModule.html":{}}}],["registercomponent",{"_index":99,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1298,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1414,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.value.gender",{"_index":1463,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":598,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1416,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":596,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1314,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":1097,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["relevant",{"_index":964,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["reload",{"_index":1920,"title":{},"body":{"index.html":{}}}],["remixicon",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":404,"title":{},"body":{"components/AdminPageComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":1040,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["result",{"_index":1337,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":108,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rgba($color",{"_index":312,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["right",{"_index":304,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1263,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":334,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":336,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":454,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":459,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":455,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":361,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["routing.module.ts",{"_index":453,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["row",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["run",{"_index":1914,"title":{},"body":{"index.html":{}}}],["running",{"_index":1931,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":331,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1192,"title":{},"body":{"components/NavigationComponent.html":{}}}],["same",{"_index":995,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["scaffolding",{"_index":1923,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["scale(0.8",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["scale(0.9",{"_index":794,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["scale(1",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["scrollbar",{"_index":431,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["search",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1647,"title":{},"body":{"components/StatsComponent.html":{}}}],["see",{"_index":1201,"title":{},"body":{"components/NavigationComponent.html":{}}}],["selectdrink",{"_index":1061,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":738,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":634,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["selecteddateobj",{"_index":929,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":635,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1915,"title":{},"body":{"index.html":{}}}],["server",{"_index":1913,"title":{},"body":{"index.html":{}}}],["serves",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":332,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["services/navigation.service",{"_index":1406,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["serving",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":639,"title":{},"body":{"injectables/DateService.html":{}}}],["sets",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":637,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":640,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":417,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{}}}],["shape",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["shared/navigation/navigation.component",{"_index":1288,"title":{},"body":{"modules/PagesModule.html":{}}}],["shared/redirect/redirect/redirect.component",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":362,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["sharedmodule",{"_index":351,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":1478,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":1613,"title":{},"body":{"components/StatsComponent.html":{}}}],["showhint",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["showing",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["shows",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["showtotals",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simulatedbac",{"_index":985,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["simulation",{"_index":990,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["size",{"_index":1099,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["skipping",{"_index":942,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["smoothly",{"_index":1240,"title":{},"body":{"injectables/NavigationService.html":{}}}],["snapshot",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["snapshot.empty",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["snapshotchanges",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["sober",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":450,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1645,"title":{},"body":{"components/StatsComponent.html":{}}}],["span",{"_index":442,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["specific",{"_index":676,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["spinnerhidedelay",{"_index":1237,"title":{},"body":{"injectables/NavigationService.html":{}}}],["spinnerservice",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/.../environment.ts",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin",{"_index":452,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/admin/admin.module.ts",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/components/admin",{"_index":110,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":547,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/login/login.component.ts",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/login/login.component.ts:23",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:26",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:44",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:49",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:55",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:62",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:72",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/register/register.component.ts",{"_index":1411,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/register/register.component.ts:104",{"_index":1426,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:113",{"_index":1420,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:134",{"_index":1424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:28",{"_index":1433,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:44",{"_index":1418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:62",{"_index":1419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:67",{"_index":1434,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:73",{"_index":1435,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:79",{"_index":1436,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:85",{"_index":1438,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:91",{"_index":1440,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:97",{"_index":1441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":630,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:25",{"_index":326,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/redirect.guard.ts",{"_index":1400,"title":{},"body":{"guards/RedirectGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/redirect.guard.ts:10",{"_index":1401,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["src/app/core/guards/redirect.guard.ts:26",{"_index":1402,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1756,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1757,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:25",{"_index":1758,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/services/authentication.service",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:105",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:119",{"_index":593,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:126",{"_index":595,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:23",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:42",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:49",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:56",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:67",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:78",{"_index":597,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:91",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/date.service",{"_index":664,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/date.service.ts",{"_index":632,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":645,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":643,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:24",{"_index":641,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:32",{"_index":638,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/navigation.service",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/navigation.service.ts",{"_index":1232,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/core/services/navigation.service.ts:23",{"_index":1238,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:8",{"_index":1233,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/notyf/notyf.service",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/notyf/notyf.service.ts",{"_index":1251,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:10",{"_index":1253,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:16",{"_index":1269,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:46",{"_index":1260,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:54",{"_index":1255,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:58",{"_index":1258,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/user/user.module.ts",{"_index":1762,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.module.ts:10",{"_index":1771,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:11",{"_index":1767,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:12",{"_index":1765,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:5",{"_index":1768,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:6",{"_index":1772,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:7",{"_index":1766,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:8",{"_index":1769,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:9",{"_index":1770,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:22",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:26",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:36",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:43",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:61",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:74",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:87",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/landing",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/page",{"_index":1273,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages",{"_index":1290,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1284,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/profile/components/profile/profile.component.ts",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/profile/profile.component.ts:115",{"_index":1315,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:124",{"_index":1313,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:133",{"_index":1312,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:148",{"_index":1311,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:158",{"_index":1316,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:167",{"_index":1320,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:180",{"_index":1322,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:187",{"_index":1319,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:24",{"_index":1323,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:28",{"_index":1328,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:32",{"_index":1327,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:36",{"_index":1326,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:40",{"_index":1324,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:44",{"_index":1308,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:71",{"_index":1318,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:94",{"_index":1317,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts",{"_index":1550,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/stats/stats.component.ts:124",{"_index":1575,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:18",{"_index":1581,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:22",{"_index":1587,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:26",{"_index":1586,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:31",{"_index":1582,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:35",{"_index":1564,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:51",{"_index":1566,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:59",{"_index":1577,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:72",{"_index":1570,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:90",{"_index":1572,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/update",{"_index":1691,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1386,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1380,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/navigation/navigation.component.ts",{"_index":1170,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/shared/navigation/navigation.component.ts:16",{"_index":1179,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:39",{"_index":1189,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:44",{"_index":1184,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:59",{"_index":1182,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/pipes/trim",{"_index":1672,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts",{"_index":1388,"title":{},"body":{"components/RedirectComponent.html":{},"coverage.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts:12",{"_index":1392,"title":{},"body":{"components/RedirectComponent.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts:18",{"_index":1393,"title":{},"body":{"components/RedirectComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1469,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tracking/components/drink",{"_index":656,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts",{"_index":777,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/tracking/tracking",{"_index":1669,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["src/app/tracking/tracking.module.ts",{"_index":1665,"title":{},"body":{"modules/TrackingModule.html":{}}}],["src/environments/environment.ts",{"_index":1860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":989,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["started",{"_index":1907,"title":{"index.html":{}},"body":{}}],["state",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1321,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1370,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":102,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1552,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1551,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":101,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stops",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["storagebucket",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1928,"title":{},"body":{"index.html":{}}}],["stores",{"_index":746,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["strings",{"_index":753,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["style",{"_index":424,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["submitted",{"_index":749,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["subscribe",{"_index":408,"title":{},"body":{"components/AdminPageComponent.html":{},"components/NavigationComponent.html":{}}}],["subscribe((user",{"_index":1396,"title":{},"body":{"components/RedirectComponent.html":{}}}],["subscribers",{"_index":651,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1325,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1259,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["sum",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1945,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":414,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["svg",{"_index":1946,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1544,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{}}}],["take(1",{"_index":1408,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["tap",{"_index":402,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["tempstring",{"_index":1336,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":741,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every((term",{"_index":744,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1933,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1940,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1932,"title":{},"body":{"index.html":{}}}],["text",{"_index":309,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["then((result",{"_index":1335,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.adjustchartsizes",{"_index":1589,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1751,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1626,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(this.currentuserid",{"_index":1346,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.afs.collection('user').doc(userid).ref",{"_index":1733,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.auth.currentuser",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.pipe(take(1)).topromise",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice",{"_index":1394,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.authservice.isadmin",{"_index":338,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1759,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.isuser().pipe",{"_index":1407,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.authservice.login(email",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1461,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1343,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1602,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1331,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateanimationkey",{"_index":1025,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":1036,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe((date",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(nextday",{"_index":1021,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(prevday",{"_index":1017,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drankform.get('amount",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.get('hour",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.get('minute",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.valid",{"_index":751,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.amount",{"_index":756,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.hour",{"_index":757,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.minute",{"_index":758,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkform",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('abv",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('caloriesperserving",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('category",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('ml",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('name",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":409,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":1009,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce",{"_index":1006,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter((drink",{"_index":743,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1776,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1361,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1744,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1745,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe((drinks",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1341,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getgenderandweight",{"_index":1724,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1340,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicurl",{"_index":1725,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1339,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1338,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.getweight",{"_index":1342,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1623,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1773,"title":{},"body":{"classes/UserModule.html":{}}}],["this.iseditmode",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.istotalsshown",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1590,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1591,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menustate",{"_index":1197,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigationservice.navigate",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.navigationservice.navigate('/admin/admin",{"_index":1368,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.navigationservice.navigate('/admin/adminform",{"_index":411,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.navigationservice.navigate('/auth/login",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.navigationservice.navigate('/auth/register",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.navigationservice.navigate('/pages/landing",{"_index":1398,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.navigationservice.navigate('/profile/profile",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.navigationservice.navigate('/profile/updateprofile",{"_index":1367,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.navigationservice.navigate('/tracking/drinklist",{"_index":1039,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.navigationservice.navigate('/tracking/home",{"_index":1397,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.navigationservice.navigate(['/admin/adminform",{"_index":412,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.notyf.error(message",{"_index":1271,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.open",{"_index":1272,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1270,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('invalid",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyfservice.error('no",{"_index":1057,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('please",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.error('something",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('user",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.info",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notyfservice.success('drink",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1738,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1460,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.password?.value",{"_index":1750,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.passwordsmatchvalidator",{"_index":1432,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1639,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1603,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1778,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilepicurlfromdb",{"_index":1737,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.profilesub",{"_index":1329,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.registerageindays",{"_index":1780,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1350,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.registerform.get('confirmpassword",{"_index":1447,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('email",{"_index":1445,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('gender",{"_index":1449,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password",{"_index":1446,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username",{"_index":1444,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('weight",{"_index":1448,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1330,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router",{"_index":1248,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.router.createurltree(['/pages/landing",{"_index":1410,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.router.createurltree(['/tracking/home",{"_index":1409,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.router.events",{"_index":1193,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate(['/pages/landing",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":742,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selectdrink(drink",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":760,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":761,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":642,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":653,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":654,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":923,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.spinner.hide",{"_index":1196,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["this.spinner.show",{"_index":1247,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.spinnerservice.hide",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.spinnerservice.show",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.totalcalories",{"_index":1005,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":1008,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.updateprofileform.get('confirmpassword",{"_index":1728,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('gender",{"_index":1730,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('password",{"_index":1727,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('profilepicurl",{"_index":1726,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('weight",{"_index":1729,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.invalid",{"_index":1731,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdata",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.userdata.gender",{"_index":926,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.userdata.weight",{"_index":925,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1348,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice",{"_index":1333,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.userservice.getuserid",{"_index":1732,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weight",{"_index":1364,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1740,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1741,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["throw",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":668,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NavigationService.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":1482,"title":{},"body":{"modules/SharedModule.html":{}}}],["togglemenu",{"_index":1178,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1185,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":1093,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{}}}],["topromise",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tostring",{"_index":762,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["total",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totals",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":748,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{}}}],["tracking/home",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["trackingmodule",{"_index":1660,"title":{"modules/TrackingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingroutingmodule",{"_index":1664,"title":{"modules/TrackingRoutingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trailing",{"_index":1689,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":302,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["transform(value",{"_index":1677,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":661,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["transition(':enter",{"_index":684,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["transition(':leave",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["translatex",{"_index":1217,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1221,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatey",{"_index":789,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["translatey(0",{"_index":792,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["translatey(55",{"_index":303,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["trigger",{"_index":660,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["trigger('fadedate",{"_index":793,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trigger('scale",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["trigger('slide",{"_index":788,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trigger('slidegrow",{"_index":795,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":1010,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1676,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimalspipe",{"_index":1468,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1683,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1684,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1674,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1680,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["try",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":771,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["two",{"_index":1421,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["typeof",{"_index":924,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["types",{"_index":1264,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":1227,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ul.drink",{"_index":423,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["undefined",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unit",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{},"index.html":{}}}],["unknown",{"_index":1637,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1688,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":967,"title":{},"body":{"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["update",{"_index":104,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["update(drinkdata",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["update(updates",{"_index":1748,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/ProfileRoutingModule.html":{}}}],["updateprofile(user",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":103,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1695,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofileform.value.gender",{"_index":1754,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1700,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["updates.gender",{"_index":1746,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1742,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1753,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["urltree",{"_index":329,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":1286,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["used",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":590,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1777,"title":{},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user.gender",{"_index":1783,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1774,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1779,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1781,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1782,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1775,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1784,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":781,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1360,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1353,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1351,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1349,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1365,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1345,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1347,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocs",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["userguard",{"_index":1755,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":1042,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1760,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1696,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["valid",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["validation",{"_index":1430,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1443,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1423,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.max(23",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.max(59",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(0",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(1",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(30",{"_index":1428,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1427,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1686,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["valuechanges",{"_index":406,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["variables",{"_index":291,"title":{"miscellaneous/variables.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1911,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1659,"title":{},"body":{"components/StatsComponent.html":{}}}],["via",{"_index":1935,"title":{},"body":{"index.html":{}}}],["view",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":780,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1190,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1173,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visibility",{"_index":1220,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visible",{"_index":1215,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["watches",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["webkit",{"_index":437,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["weight",{"_index":782,"title":{},"body":{"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1697,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1628,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":1652,"title":{},"body":{"components/StatsComponent.html":{}}}],["widmark",{"_index":974,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.innerheight",{"_index":1593,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1592,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1563,"title":{},"body":{"components/StatsComponent.html":{}}}],["works",{"_index":1404,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["wrap",{"_index":1644,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrong",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NotyfService.html":{}}}],["y",{"_index":426,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{}}}],["yes",{"_index":1241,"title":{},"body":{"injectables/NavigationService.html":{}}}],["yyyy",{"_index":1029,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":1091,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["zero",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1690,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1908,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["zt",{"_index":1104,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["ztblack",{"_index":1216,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ztgray",{"_index":433,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["ztwhite",{"_index":1210,"title":{},"body":{"components/NavigationComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        About Us\n\n  Thank you for using Zero Tolerance!\n  Out goal is to provide you with a platform where you can track your drinking\n  habits.\n  This app is for personal use only and should not be used commercially in any\n  form.\n\n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                * {\n  width: 20rem;\n}\n\nh1 {\n  padding-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'About Us  Thank you for using Zero Tolerance!  Out goal is to provide you with a platform where you can track your drinking  habits.  This app is for personal use only and should not be used commercially in any  form.'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    abv\n                                \n                                \n                                    caloriesPerServing\n                                \n                                \n                                    ml\n                                \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:49\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Shows hints for filling out the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    abv: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(100),\n    ]),\n    caloriesPerServing: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n    ]),\n    ml: new FormControl(null, [Validators.required, Validators.min(1)]),\n    category: new FormControl('', Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:27\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:45\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:49\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:107\n                                \n                            \n                    \n                        \n                                Gets the input drink name.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        abv\n                    \n                \n\n                \n                    \n                        getabv()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:114\n                                \n                            \n                    \n                        \n                                Gets the input alcohol %.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        caloriesPerServing\n                    \n                \n\n                \n                    \n                        getcaloriesPerServing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:121\n                                \n                            \n                    \n                        \n                                Gets the input calories per serving.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ml\n                    \n                \n\n                \n                    \n                        getml()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:128\n                                \n                            \n                    \n                        \n                                Gets the input volume.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n                \n                    \n                        getcategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:135\n                                \n                            \n                    \n                        \n                                Gets the input category.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss'],\n})\nexport class AdminFormComponent implements OnInit {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    abv: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(100),\n    ]),\n    caloriesPerServing: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n    ]),\n    ml: new FormControl(null, [Validators.required, Validators.min(1)]),\n    category: new FormControl('', Validators.required),\n  });\n\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [\n          caloriesPerServing,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Gets the input drink name.\n   */\n  get name() {\n    return this.drinkForm.get('name');\n  }\n\n  /**\n   * Gets the input alcohol %.\n   */\n  get abv() {\n    return this.drinkForm.get('abv');\n  }\n\n  /**\n   * Gets the input calories per serving.\n   */\n  get caloriesPerServing() {\n    return this.drinkForm.get('caloriesPerServing');\n  }\n\n  /**\n   * Gets the input volume.\n   */\n  get ml() {\n    return this.drinkForm.get('ml');\n  }\n\n  /**\n   * Gets the input category.\n   */\n  get category() {\n    return this.drinkForm.get('category');\n  }\n\n  /**\n   * Shows hints for filling out the form.\n   */\n  showHint() {\n    this.notyfService.info(\n      \"Drink name: min. 3 charactersNumber fields can't be negative\"\n    );\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   *\n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      this.spinnerService.show();\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs\n            .collection('drink')\n            .doc(this.editingDrinkId)\n            .update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.navigationService.navigate('/profile/profile');\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n        this.spinnerService.hide();\n      }\n    } else {\n      this.notyfService.error('Please provide valid data');\n    }\n  }\n}\n\n    \n\n    \n        {{ isEditMode ? \"Update drink\" : \"Add drink\" }}\n\n\n  \n\n  \n    \n    %\n  \n\n  \n    \n    kcal\n  \n\n  \n    \n    ml\n  \n\n  \n\n  \n    Submit\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                @use \"variables\" as *;\n\n.drink-form > div {\n  display: flex;\n  flex-direction: row-reverse;\n  .unit {\n    position: absolute;\n    width: 100%;\n    transform: translateY(55%);\n    padding-right: 0.75rem;\n    pointer-events: none;\n    text-align: right;\n    color: rgba($color: grey, $alpha: 0.5);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ isEditMode ? \"Update drink\" : \"Add drink\" }}            %            kcal            ml          Submit        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService) {}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isAdmin();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_declarations\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AdminFormComponent, AdminPageComponent],\n  imports: [SharedModule, AdminRoutingModule, CommonModule],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : Service for loading spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Shows hints for filling out the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:26\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss'],\n})\nexport class AdminPageComponent {\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   * @param navigationService: Service for loading spinner navigation.\n   * @param spinnerService: Service for loading spinner.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Shows hints for filling out the form.\n   */\n  showHint() {\n    this.notyfService.info(\n      'Tap a drink to edit itDelete with the remove icon'\n    );\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs\n      .collection('drink')\n      .valueChanges({ idField: 'id' })\n      .subscribe(\n        (drinks) => {\n          this.drinks = drinks;\n        },\n        (error) => {\n          console.error('Error fetching drinks', error);\n        }\n      );\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.navigationService.navigate('/admin/adminform');\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.navigationService.navigate(['/admin/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.spinnerService.show();\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n          setTimeout(() => this.spinnerService.hide(), 500);\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        All Drinks\n\n  \n    {{\n      drink.name\n    }}\n    \n      highlight_remove\n    \n  \n\n\n  \n    Add New Drink\n  \n\n\n  help_outline\n\n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                @use \"variables\" as *;\n\nul.drink-list {\n  list-style: none;\n  overflow-y: auto;\n  max-height: 20rem;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  background-color: $ztGray;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 20rem;\n    height: 3rem;\n\n    span {\n      width: 100%;\n      text-align: left;\n      padding-left: 1rem;\n    }\n\n    button {\n      padding-right: 0.5rem;\n      display: flex;\n      color: red;\n    }\n\n    &:not(:last-child) {\n      border-bottom: 1px solid black;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'All Drinks      {{      drink.name    }}          highlight_remove            Add New Drink    help_outline'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from \"@angular/router\";\nimport { AdminPageComponent } from \"./components/admin-page/admin-page.component\";\nimport { AdminFormComponent } from \"./components/admin-form/admin-form.component\";\nimport { NgModule } from \"@angular/core\";\nimport { AdminGuard } from \"../core/guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard] },\n  { path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth, AuthModule } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/components/page-not-found/page-not-found.component';\nimport { RedirectComponent } from './shared/redirect/redirect/redirect.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: RedirectComponent,\n  },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'pages',\n    loadChildren: () =>\n      \"import('./pages/pages.module').then((m) => m.PagesModule)\",\n  },\n  {\n    path: 'profile',\n    loadChildren: () =>\n      \"import('./profile/profile.module').then((m) => m.ProfileModule)\",\n  },\n  {\n    path: 'tracking',\n    loadChildren: () =>\n      \"import('./tracking/tracking.module').then((m) => m.TrackingModule)\",\n  },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [SharedModule, AuthRoutingModule, CommonModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmailExists\n                            \n                            \n                                    Async\n                                checkUsernameExists\n                            \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Checks if e-mail already exists in database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input e-mail.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Returns if there is a match found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUsernameExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsernameExists(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Checks if username already exists in database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input username.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Returns true if there is a match found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:23\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport {\n  Auth,\n  signInWithEmailAndPassword,\n  authState,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from '@angular/fire/auth';\nimport { firstValueFrom, from, map, Observable, switchMap } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n\n  /**\n   *\n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(\n    private auth: Auth,\n    private fireAuth: AngularFireAuth,\n    private afs: AngularFirestore\n  ) {}\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string) {\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser() {\n    return this.currentUser$;\n  }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable {\n    return this.fireAuth.user.pipe(\n      map((user) => {\n        return user?.email == this.auth.currentUser?.email;\n      })\n    );\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable {\n    return this.fireAuth.user.pipe(\n      map((user) => {\n        return user?.email == 'admin@zt.com';\n      })\n    );\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string) {\n    return from(\n      createUserWithEmailAndPassword(this.auth, email, password)\n    ).pipe(\n      switchMap(({ user }) => updateProfile(user, { displayName: username }))\n    );\n  }\n\n  /**\n   * Checks if username already exists in database.\n   * @param username The input username.\n   * @returns Returns true if there is a match found.\n   */\n  async checkUsernameExists(username: string): Promise {\n    const snapshot = await firstValueFrom(\n      this.afs\n        .collection('user', (ref) => ref.where('username', '==', username))\n        .get()\n    );\n    return !snapshot.empty;\n  }\n\n  /**\n   * Checks if e-mail already exists in database.\n   * @param email The input e-mail.\n   * @returns Returns if there is a match found.\n   */\n  async checkEmailExists(email: string): Promise {\n    const snapshot = await firstValueFrom(\n      this.afs\n        .collection('user', (ref) => ref.where('email', '==', email))\n        .get()\n    );\n    return !snapshot.empty;\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string) {\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser() {\n    return from(this.auth.signOut());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('slide', [\n      transition(':enter', [\n        style({ transform: 'translateY(-20px)', opacity: 0 }),\n        animate(\n          '300ms ease-out',\n          style({ transform: 'translateY(0)', opacity: 1 })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '300ms ease-in',\n          style({ transform: 'translateY(-20px)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('fadeDate', [\n      transition('* => *', [\n        style({ opacity: 0, transform: 'scale(0.9)' }),\n        animate('200ms ease-out', style({ opacity: 1, transform: 'scale(1)' })),\n      ]),\n    ]),\n    trigger('slideGrow', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-10px)',\n          maxHeight: '0',\n          overflow: 'hidden',\n        }),\n        animate(\n          '300ms ease-out',\n          style({\n            opacity: 1,\n            transform: 'translateY(0)',\n            maxHeight: '1000px',\n          })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({\n            opacity: 0,\n            transform: 'translateY(-10px)',\n            maxHeight: '0',\n            overflow: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Boolean for showing totals.\n   */\n  isTotalsShown: Boolean = false;\n  /**\n   * Variable to help date change animation.\n   */\n  dateAnimationKey = 0;\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Shows the totals panel.\n   */\n  showTotals() {\n    this.isTotalsShown = true;\n  }\n\n  /**\n   * Hides the totals panel.\n   */\n  hideTotals() {\n    this.isTotalsShown = false;\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  // calculateBAC(): void {\n  //   if (!this.userData) {\n  //     console.error('User data not available for BAC calculation');\n  //     this.bac = 0;\n  //     return;\n  //   }\n\n  //   const { weight, gender } = this.userData;\n  //   const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n  //   const metabolismRate = 0.015;\n  //   const weightInGrams = weight * 1000;\n  //   const currentTime = new Date();\n  //   // Construct full date objects for drink times\n  //   const drinkTimes = this.drinksForTheDay.map((drink) => {\n  //     const [hours, minutes] = drink.time.split(':').map(Number);\n  //     const drinkDate = new Date(this.selectedDate);\n  //     drinkDate.setHours(hours, minutes, 0, 0);\n  //     return { ...drink, drinkDate };\n  //   });\n\n  //   const pastDrinks = drinkTimes.filter(\n  //     (drink) => drink.drinkDate  drink.drinkDate > currentTime\n  //   );\n\n  //   const totalPastAlcoholGrams = pastDrinks.reduce(\n  //     (sum, drink) => sum + (drink.alcohol || 0),\n  //     0\n  //   );\n\n  //   if (pastDrinks.length > 0) {\n  //     const lastDrinkTime = new Date(\n  //       Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n  //     );\n  //     const timeElapsedHours = Math.max(\n  //       0,\n  //       (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n  //     );\n\n  //     this.bac =\n  //       (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n  //       metabolismRate * timeElapsedHours;\n  //     this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n  //   } else {\n  //     this.bac = 0;\n  //   }\n\n  //   // Calculate sober time (including future drinks)\n  //   const allAlcoholGrams = drinkTimes.reduce(\n  //     (sum, drink) => sum + (drink.alcohol || 0),\n  //     0\n  //   );\n  //   const soberHours =\n  //     allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n  //   const earliestAllDrinkTime = new Date(\n  //     Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n  //   );\n  //   const estimatedSoberTime = new Date(\n  //     Math.max(earliestAllDrinkTime.getTime()) +\n  //       soberHours * 100 * 60 * 60 * 1000\n  //   );\n\n  //   this.soberTime = estimatedSoberTime;\n  // }\n  calculateBAC(): void {\n    if (\n      !this.userData ||\n      typeof this.userData.weight !== 'number' ||\n      !this.userData.gender\n    ) {\n      console.error('User data not available or invalid for BAC calculation.');\n      this.bac = 0;\n      this.soberTime = null;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n\n    // Ensure selectedDate is a valid Date object\n    let selectedDateObj: Date;\n    if (\n      this.selectedDate instanceof Date &&\n      !isNaN(this.selectedDate.getTime())\n    ) {\n      selectedDateObj = this.selectedDate;\n    } else if (\n      typeof this.selectedDate === 'string' ||\n      typeof this.selectedDate === 'number'\n    ) {\n      selectedDateObj = new Date(this.selectedDate);\n      if (isNaN(selectedDateObj.getTime())) {\n        console.error('Invalid selectedDate for BAC calculation.');\n        this.bac = 0;\n        this.soberTime = null;\n        return;\n      }\n    } else {\n      console.error('selectedDate is not a valid type for BAC calculation.');\n      this.bac = 0;\n      this.soberTime = null;\n      return;\n    }\n\n    const allDrinksToday = (this.drinksForTheDay || []) // Handle if drinksForTheDay is null/undefined\n      .map((drink) => {\n        if (\n          !drink ||\n          typeof drink.time !== 'string' ||\n          !drink.time.includes(':')\n        ) {\n          console.warn(\n            'Skipping drink due to invalid format or missing time:',\n            drink\n          );\n          return null;\n        }\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        if (isNaN(hours) || isNaN(minutes)) {\n          console.warn(\n            'Skipping drink due to invalid time parsing:',\n            drink.time\n          );\n          return null;\n        }\n        const drinkDate = new Date(selectedDateObj);\n        drinkDate.setHours(hours, minutes, 0, 0);\n        return { ...drink, drinkDate, alcohol: Number(drink.alcohol) || 0 };\n      })\n      .filter((drink) => drink !== null) as {\n      alcohol: number;\n      drinkDate: Date;\n      [key: string]: any;\n    }[]; // Type assertion after filter\n\n    allDrinksToday.sort(\n      (a, b) => a.drinkDate.getTime() - b.drinkDate.getTime()\n    );\n\n    // --- Calculate Current BAC ---\n    let currentBacInternal = 0;\n    let lastProcessedDrinkTimeForBac: Date | null = null;\n\n    const pastAndCurrentDrinks = allDrinksToday.filter(\n      (drink) => drink.drinkDate  0) {\n      // Initialize with the time of the first relevant drink\n      lastProcessedDrinkTimeForBac = new Date(\n        pastAndCurrentDrinks[0].drinkDate.getTime()\n      );\n\n      for (const drink of pastAndCurrentDrinks) {\n        // 1. Metabolize BAC from lastProcessedDrinkTimeForBac up to current drink's time\n        if (\n          currentBacInternal > 0 &&\n          drink.drinkDate > lastProcessedDrinkTimeForBac\n        ) {\n          const hoursElapsed =\n            (drink.drinkDate.getTime() -\n              lastProcessedDrinkTimeForBac.getTime()) /\n            (1000 * 60 * 60);\n          currentBacInternal -= metabolismRate * hoursElapsed;\n          currentBacInternal = Math.max(0, currentBacInternal);\n        }\n\n        // Update lastProcessedDrinkTimeForBac to current drink's time\n        lastProcessedDrinkTimeForBac = new Date(drink.drinkDate.getTime());\n\n        // 2. Add BAC from the current drink\n        // Widmark formula: BAC (g/100mL or %) = (Alcohol in grams / (Body weight in grams * r)) * 100\n        currentBacInternal +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // 3. After processing all past drinks, metabolize from the time of the *last consumed past drink* up to current time\n      if (\n        currentBacInternal > 0 &&\n        lastProcessedDrinkTimeForBac &&\n        currentTime > lastProcessedDrinkTimeForBac\n      ) {\n        const hoursElapsedSinceLastDrink =\n          (currentTime.getTime() - lastProcessedDrinkTimeForBac.getTime()) /\n          (1000 * 60 * 60);\n        currentBacInternal -= metabolismRate * hoursElapsedSinceLastDrink;\n      }\n    }\n    this.bac = Math.max(0, currentBacInternal); // Ensure BAC is not negative\n\n    // --- Estimate Sober Time (using all drinks for the day) ---\n    let simulatedBac = 0;\n    let currentSimTime: Date | null = null;\n\n    if (allDrinksToday.length === 0) {\n      this.soberTime = null; // No drinks, no sober time to project based on them.\n    } else {\n      // Start simulation from the time of the first drink\n      currentSimTime = new Date(allDrinksToday[0].drinkDate.getTime());\n      // simulatedBac is already 0\n\n      for (const drink of allDrinksToday) {\n        // 1. Metabolize existing BAC from currentSimTime up to this drink's time\n        if (simulatedBac > 0 && drink.drinkDate > currentSimTime) {\n          const hoursToDrink =\n            (drink.drinkDate.getTime() - currentSimTime.getTime()) /\n            (1000 * 60 * 60);\n          simulatedBac -= metabolismRate * hoursToDrink;\n          simulatedBac = Math.max(0, simulatedBac);\n        }\n\n        // 2. Advance simulation time to the current drink's time (handles drinks at same time correctly)\n        currentSimTime = new Date(\n          Math.max(currentSimTime.getTime(), drink.drinkDate.getTime())\n        );\n\n        // 3. Add BAC from this drink\n        simulatedBac +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // 4. After all drinks, if BAC > 0, calculate time to zero from currentSimTime (time of last drink's effect)\n      if (simulatedBac > 0 && currentSimTime) {\n        const hoursToSober = simulatedBac / metabolismRate;\n        this.soberTime = new Date(\n          currentSimTime.getTime() + hoursToSober * 60 * 60 * 1000\n        );\n      } else if (currentSimTime) {\n        // Already sober by the time of (or after processing) the last drink\n        this.soberTime = new Date(currentSimTime.getTime());\n      } else {\n        // Should not happen if allDrinksToday has items, but as a fallback:\n        this.soberTime = null;\n      }\n    }\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(direction: string) {\n    const originalDate = new Date(document.getElementById('date')!.innerHTML);\n\n    if (direction === 'back') {\n      const prevDay = originalDate;\n      prevDay.setDate(originalDate.getDate() - 1);\n      this.dateService.setSelectedDate(prevDay);\n    } else if (direction === 'forward') {\n      const nextDay = originalDate;\n      nextDay.setDate(originalDate.getDate() + 1);\n      this.dateService.setSelectedDate(nextDay);\n    }\n    // Since angular animations only trigger when the bound element's state changes\n    // we need this key to always change\n    this.dateAnimationKey++;\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.navigationService.navigate('/tracking/drinklist');\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\nAnimation for drink list form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drankForm\n                            \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseClick\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    amount\n                                \n                                \n                                    hour\n                                \n                                \n                                    minute\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:126\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:236\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently selected drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the data submitted is not valid.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseClick\n                        \n                    \n                \n            \n            \n                \nonCloseClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:208\n                        \n                    \n\n\n            \n                \n                        Adds back the ability to click on the X.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event for clicking the X.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(event: MouseEvent, drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:195\n                        \n                    \n\n\n            \n                \n                        Stops mouse events on the drink when overlay is open.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event for clicling on a drink.\n\n                                            \n                                        \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                When a drink is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drankForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:77\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:110\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:94\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:102\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:106\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:126\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:98\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        amount\n                    \n                \n\n                \n                    \n                        getamount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:159\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hour\n                    \n                \n\n                \n                    \n                        gethour()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minute\n                    \n                \n\n                \n                    \n                        getminute()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:167\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n    \n        Add Drink\n\n\n\n\n  \n    {{ drink.name }}\n    \n      \n        close\n        {{ drink.name }}\n      \n      \n        {{ drink.caloriesPerServing }} kcal/100 ml\n        {{ drink.abv }} %\n        {{ drink.ml }} ml\n        {{ drink.category }}\n        \n          \n          \n            \n            \n          \n          \n            Add\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                @use \"variables\" as *;\n\ninput.search {\n  margin-bottom: 1rem;\n}\n\nul.drink-list {\n  list-style: none;\n  overflow-y: auto;\n  max-height: 20rem;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  background-color: $ztGray;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 20rem;\n    height: 3rem;\n    padding-right: 0.5rem;\n\n    span {\n      width: 100%;\n      text-align: center;\n      padding-left: 1rem;\n    }\n\n    &:not(:last-child) {\n      border-bottom: 1px solid black;\n    }\n\n    .drink-details {\n      display: flex;\n      flex-direction: column;\n      background-color: $ztGray;\n      position: absolute;\n      z-index: 20;\n      top: 8rem;\n      width: 20rem;\n      border-radius: 1rem;\n      cursor: default;\n\n      .drink-details-top {\n        display: flex;\n        flex-direction: row-reverse;\n        .drink-name {\n          padding-top: 1rem;\n          padding-bottom: 1rem;\n          width: 100%;\n          padding-left: 2.125rem;\n        }\n\n        .close-button {\n          position: relative;\n          right: 0;\n          color: red;\n          font-size: 2rem;\n          display: flex;\n          justify-content: flex-end;\n          cursor: pointer;\n          padding-top: 0.125rem;\n          padding-right: 0.125rem;\n        }\n      }\n\n      .drink-details-content {\n        padding-left: 1rem;\n        padding-right: 1rem;\n\n        .zt-input {\n          background-color: rgba($color: #fff, $alpha: 0.1);\n          width: 18rem;\n          width: 100%;\n        }\n\n        .drink-form {\n          padding-top: 1rem;\n        }\n\n        .time-div {\n          display: flex;\n          flex-direction: row;\n          column-gap: 0.5rem;\n        }\n\n        .zt-button-div {\n          padding-bottom: 1rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Drink      {{ drink.name }}                  close        {{ drink.name }}                    {{ drink.caloriesPerServing }} kcal/100 ml        {{ drink.abv }} %        {{ drink.ml }} ml        {{ drink.category }}                                                                                    Add                              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/landing-page/landing-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  /**\n   *\n   * @param router Router for routing.\n   */\n  constructor(\n    private router: Router,\n    private navigationService: NavigationService\n  ) {}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister() {\n    this.navigationService.navigate('/auth/register');\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin() {\n    this.navigationService.navigate('/auth/login');\n  }\n}\n\n    \n\n    \n        \n  Welcome to\n  Zero Tolerance\n  no_drinks\n\n\n  Sign In\n  Sign Up\n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                h1.landing {\n  font-size: 2.25rem;\n  font-weight: bold;\n  padding-bottom: 1rem;\n}\n\ni {\n  font-size: 4rem;\n  padding-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome to  Zero Tolerance  no_drinks  Sign In  Sign Up'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showHint\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/login/login.component.ts:23\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:49\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:55\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { take } from 'rxjs';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email() {\n    return this.loginForm.get('email');\n  }\n  /**\n   * Gets the password input.\n   */\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Displays hint message.\n   */\n  showHint() {\n    this.notyfService.info(\n      'E-mail: valid forrmatPassword: min. 8 characters'\n    );\n  }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit() {\n    if (!this.loginForm.valid) {\n      this.notyfService.error('Please provide valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: async () => {\n        const user = await this.auth.user.pipe(take(1)).toPromise();\n        if (user) {\n          this.navigationService.navigate(\n            'tracking/home',\n            undefined,\n            undefined,\n            500,\n            300\n          );\n          this.notyfService.success('Logged in successfully');\n        } else {\n          this.notyfService.error('User not found');\n          this.spinnerService.hide();\n        }\n      },\n      error: (error) => {\n        this.spinnerService.hide();\n        console.log(error);\n        if (error.code === 'auth/invalid-login-credentials') {\n          this.notyfService.error('Invalid e-mail or password');\n        } else {\n          this.notyfService.error('Something went wrong');\n          console.error(error);\n        }\n      },\n    });\n  }\n}\n\n    \n\n    \n        Sign In\n\n\n  \n  \n\n  \n    Sign In\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sign In          Sign In        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateWithMenuClose\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, spinner: NgxSpinnerService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navigation/navigation.component.ts:16\n                            \n                        \n\n                \n                    \n                            Hides the loading spinner when the navigation has ended.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateWithMenuClose\n                        \n                    \n                \n            \n            \n                \nnavigateWithMenuClose(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Navigates to destination after navigation menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The path of the destination page.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Toggles the navigation menu\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"closed\" | \"open\" | \"closing\" | \"closingSoft\"\n\n                    \n                \n                \n                    \n                        Default value : 'closed'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navigation/navigation.component.ts:39\n                        \n                    \n\n            \n                \n                    State variable for menu state.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { delay, filter } from 'rxjs/operators';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NavigationComponent {\n  /**\n   * Hides the loading spinner when the navigation has ended.\n   * @param router Router for routing.\n   */\n  constructor(\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private navigationService: NavigationService\n  ) {\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        delay(300)\n      )\n      .subscribe(() => {\n        this.spinner.hide();\n      });\n  }\n\n  /**\n   * State variable for menu state.\n   */\n  menuState: 'closed' | 'open' | 'closing' | 'closingSoft' = 'closed';\n\n  /**\n   * Toggles the navigation menu\n   */\n  toggleMenu() {\n    if (this.menuState === 'closed') {\n      this.menuState = 'open';\n    } else if (this.menuState === 'open') {\n      this.menuState = 'closing';\n      setTimeout(() => {\n        this.menuState = 'closed';\n      }, 500);\n    }\n  }\n\n  /**\n   * Navigates to destination after navigation menu.\n   * @param path The path of the destination page.\n   */\n  navigateWithMenuClose(path: string) {\n    let hideDelay = 300;\n\n    // Increased delay so we don't see the profile picture loading in.\n    if (path === '/profile/profile') {\n      hideDelay = 700;\n    }\n\n    this.navigationService.navigate(\n      path,\n      undefined,\n      () => {\n        this.menuState = 'closingSoft';\n        setTimeout(() => (this.menuState = 'closed'), 500);\n      },\n      hideDelay,\n      500\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home\n      \n      \n        About Us\n      \n      \n        Profile\n      \n    \n  \n\n\n\n  \n    menu\n    menu_open\n  \n\n\n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @use \"variables\" as *;\n\n.hamburger-icon-container {\n  padding-top: 0rem;\n\n  .hamburger-icon {\n    position: fixed;\n    background: none;\n    border: none;\n    color: $ztWhite;\n    cursor: pointer;\n    z-index: 1000;\n    padding-top: 0.375rem;\n    padding-left: 0.375rem;\n\n    @media (min-width: 500px) {\n      padding-left: 0.75rem;\n    }\n  }\n\n  i {\n    position: absolute;\n    transition: opacity 0.5s ease;\n  }\n\n  .icon-visible {\n    opacity: 1;\n    pointer-events: auto;\n  }\n\n  .icon-hidden {\n    opacity: 0;\n    pointer-events: none;\n  }\n}\n\n.hamburger-menu-container {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background: rgba($color: $ztBlack, $alpha: 1);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  z-index: 997;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n\n  &.open {\n    transform: translateX(0);\n    transition: transform 0.3s ease-out, opacity 0.1s ease-out;\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &.closing {\n    transform: translateX(-100%);\n    transition: transform 0.5s ease-in, opacity 0.5s ease-in;\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 0;\n  }\n\n  &.closingSoft {\n    transform: translateX(-100%);\n    opacity: 1;\n    visibility: visible;\n    pointer-events: auto;\n    transition: transform 1s ease-in;\n  }\n}\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba($color: $ztBlack, $alpha: 0.5);\n  z-index: 996;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 1;\n\n  &.closing {\n    opacity: 0;\n  }\n}\n\n.menu-content {\n  color: $ztWhite;\n  z-index: 999;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n    padding: 0;\n    margin-top: 3rem;\n    margin-left: 1rem;\n    margin-right: 1rem;\n    row-gap: 0.5rem;\n  }\n\n  li {\n    cursor: pointer;\n    width: 100%;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n\n  a {\n    color: $ztWhite;\n    text-decoration: none;\n    width: 100%;\n    display: inline-block;\n    text-align: center;\n    font-size: 1.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home                    About Us                    Profile                  menu    menu_open  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Loading spinner service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(path: string | any[], extras?: any, beforeNavigate?: () => void, delay: number, spinnerHideDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Navigates to the desired path smoothly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                        string | any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The destination path.\n\n                                            \n                                        \n                                        \n                                                extras\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                beforeNavigate\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Optional method to be ran before navigation.\n\n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    300\n                                            \n\n                                            \n                                                    Delay time in ms.\n\n                                            \n                                        \n                                        \n                                                spinnerHideDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    200\n                                            \n\n                                            \n                                                    Delay time in ms for the spinner.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  /**\n   *\n   * @param router Router for routing.\n   * @param spinner Loading spinner service.\n   */\n  constructor(private router: Router, private spinner: NgxSpinnerService) {}\n\n  /**\n   * Navigates to the desired path smoothly.\n   * @param path The destination path.\n   * @param beforeNavigate Optional method to be ran before navigation.\n   * @param delay Delay time in ms.\n   * @param spinnerHideDelay Delay time in ms for the spinner.\n   */\n  navigate(\n    path: string | any[],\n    extras?: any,\n    beforeNavigate?: () => void,\n    delay: number = 300,\n    spinnerHideDelay: number = 200\n  ) {\n    this.spinner.show();\n\n    if (beforeNavigate) {\n      beforeNavigate();\n    }\n\n    setTimeout(() => {\n      this.router\n        .navigate(typeof path === 'string' ? [path] : path, extras)\n        .finally(() => {\n          setTimeout(() => this.spinner.hide(), spinnerHideDelay);\n        });\n    }, delay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true,\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true,\n      },\n      {\n        type: 'info',\n        background: '#368FF4',\n        dismissible: true,\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotyfService {\n  constructor() {}\n\n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true,\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true,\n      },\n      {\n        type: 'info',\n        background: '#368FF4',\n        dismissible: true,\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n\n  info(message: string): void {\n    this.notyf.open({\n      type: 'info',\n      message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { NavigationComponent } from '../shared/navigation/navigation.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AboutUsComponent, LandingPageComponent, PageNotFoundComponent],\n  imports: [SharedModule, PagesRoutingModule, CommonModule],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  { path: 'aboutus', component: AboutUsComponent },\n  { path: 'landing', component: LandingPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/profile/profile.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:40\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:36\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:32\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:28\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:44\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for the spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit() {\n    this.profileSub = this.route.paramMap.subscribe((params) => {\n      this.currentUserID = params.get('id') as string;\n      if (!this.currentUserID) {\n        this.userService\n          .getCurrentUserId()\n          .then((result: string | undefined) => {\n            const tempString: string = result || '';\n            this.currentUserID = tempString;\n\n            this.getUsername();\n            this.getRegisterDate();\n            this.getProfilePicture();\n            this.getGender();\n            this.getWeight();\n          });\n      }\n    });\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser() {\n    this.spinnerService.show();\n\n    setTimeout(() => {\n      this.authService.logoutUser().subscribe({\n        next: () => {\n          this.navigationService.navigate(\n            '/pages/landing',\n            undefined,\n            () => this.notyfService.success('Logged out successfully'),\n            500,\n            300\n          );\n        },\n      });\n    }, 300);\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\n      'profile-picture'\n    ) as HTMLImageElement;\n    profilePicHtml.src = picUrl\n      ? picUrl\n      : 'https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&';\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats() {\n    this.navigationService.navigate(\n      '/profile/personalstats',\n      undefined,\n      undefined,\n      1000,\n      500\n    );\n  }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile() {\n    this.navigationService.navigate('/profile/updateprofile');\n  }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() {\n    this.navigationService.navigate('/admin/admin');\n  }\n}\n\n    \n\n    \n        \n  \n  {{ username }}\n  {{ registerDate }}\n  {{ gender }} - {{ weight }} kg\n\n\n  \n    Admin Page\n  \n  \n    Personal Stats\n  \n  \n    Update Profile\n  \n  Logout\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .info-div {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n\n  img {\n    width: 7rem;\n    border-radius: 5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ username }}  {{ registerDate }}  {{ gender }} - {{ weight }} kg      Admin Page        Personal Stats        Update Profile    Logout'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ProfileComponent, StatsComponent, UpdateProfileComponent],\n  imports: [SharedModule, ProfileRoutingModule, CommonModule],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'personalstats', component: StatsComponent },\n  { path: 'updateprofile', component: UpdateProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RedirectComponent.html":{"url":"components/RedirectComponent.html","title":"component - RedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/redirect/redirect/redirect.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-redirect\n            \n\n\n\n            \n                styleUrls\n                ./redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/redirect/redirect/redirect.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/redirect/redirect/redirect.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n@Component({\n  selector: 'app-redirect',\n  templateUrl: './redirect.component.html',\n  styleUrls: ['./redirect.component.scss'],\n})\nexport class RedirectComponent {\n  constructor(\n    private authService: AuthenticationService,\n    private navigationService: NavigationService\n  ) {}\n\n  ngOnInit() {\n    this.authService\n      .isUser()\n      .pipe(take(1))\n      .subscribe((user) => {\n        if (user) {\n          this.navigationService.navigate('/tracking/home');\n        } else {\n          this.navigationService.navigate('/pages/landing');\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./redirect.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RedirectGuard.html":{"url":"guards/RedirectGuard.html","title":"guard - RedirectGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RedirectGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/redirect.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, navigationService: NavigationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/redirect.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/redirect.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Redirects a UrlTree so redirecting to it works.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                Returns if no redirect happened.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { map, Observable, take } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { NavigationService } from '../services/navigation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedirectGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param navigationService Service for loading spinner navigation.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private navigationService: NavigationService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirects a UrlTree so redirecting to it works.\n   * @returns Returns if no redirect happened.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isUser().pipe(\n      take(1),\n      map((user) => {\n        if (user) {\n          return this.router.createUrlTree(['/tracking/home']);\n        } else {\n          return this.router.createUrlTree(['/pages/landing']);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                    Async\n                                registerSubmit\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, afs: AngularFirestore, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/register/register.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl(false, Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/register/register.component.ts:28\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:67\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:73\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:79\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:85\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:91\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:97\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user registration.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  /**\n   * Form for user registration.\n   */\n  registerForm = new FormGroup(\n    {\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl(false, Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param afs Angular Firestore.\n   * @param notyfService Service for displaying notifications.\n   * @param navigationService Service for loading spinner navigation.\n   * @param spinnerService Service for spinner.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private afs: AngularFirestore,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the input username.\n   */\n  get username() {\n    return this.registerForm.get('username');\n  }\n  /**\n   * Gets the input e-mail.\n   */\n  get email() {\n    return this.registerForm.get('email');\n  }\n  /**\n   * Gets the input password.\n   */\n  get password() {\n    return this.registerForm.get('password');\n  }\n  /**\n   * Gets the input confirmed password.\n   */\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n  /**\n   * Gets the input weight.\n   */\n  get weight() {\n    return this.registerForm.get('weight');\n  }\n  /**\n   * Gets the input gender.\n   */\n  get gender() {\n    return this.registerForm.get('gender');\n  }\n\n  /**\n   * Displays hint message.\n   */\n  showHint() {\n    this.notyfService.info(\n      'Username: min. 3 charactersE-mail: valid formatPassword: min. 8 charactersWeight: min. 30 kilograms'\n    );\n  }\n\n  /**\n   * Checks if the two passwords typed in the `registerForm` match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length  {\n          this.notyfService.success('Registered successfully');\n          this.authService.logoutUser();\n          this.navigationService.navigate(\n            'auth/login',\n            undefined,\n            undefined,\n            500,\n            300\n          );\n        },\n        error: (error) => {\n          this.spinnerService.hide();\n          this.notyfService.error('Something went wrong');\n        },\n      });\n  }\n}\n\n    \n\n    \n        Sign Up\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n  \n    \n      \n        {{ !!registerForm.value.gender ? \"female\" : \"male\" }}\n      \n    \n  \n\n  \n    Sign Up\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sign Up                                {{ !!registerForm.value.gender ? \"female\" : \"male\" }}                  Sign Up        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nRedirectComponent\n\nRedirectComponent\n\nSharedModule -->\n\nRedirectComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            RedirectComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { RedirectComponent } from './redirect/redirect/redirect.component';\n\n@NgModule({\n  declarations: [TrimDecimalsPipe, NavigationComponent, RedirectComponent],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  exports: [\n    CommonModule,\n    TrimDecimalsPipe,\n    NavigationComponent,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [200, 200]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss'],\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [200, 200];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n\n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {\n        drinkAmounts?: Record;\n      };\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return {\n        name: `${day.date.getMonth() + 1}.${day.date.getDate()}`,\n        value: drinkCount,\n      };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as {\n        drinkAmounts?: Record;\n      };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(\n      ([category, count]) => ({\n        name: category,\n        value: count,\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n  \n    Distribution of Drinks (by category)\n  \n\n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                // .stats-container {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 20px;\n//   overflow-y: auto;\n//   height: 80vh;\n// }\n\n// .chart-container {\n//   display: flex;\n//   flex-wrap: wrap;\n//   justify-content: space-around;\n//   align-items: center;\n// }\n\n// .chart-section {\n//   flex: 1 1 auto;\n//   max-width: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   max-height: 35vh;\n// }\n\n// ::ng-deep .ngx-charts text {\n//   fill: white !important;\n// }\n\n// @media (min-aspect-ratio: 4/3) {\n//   .stats-container {\n//     flex-direction: row;\n//     justify-content: center;\n//   }\n\n//   .chart-section {\n//     flex: 1 1 50%;\n//     max-width: 50%;\n//   }\n// }\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n.charts-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 100%;\n  max-height: 40rem;\n  overflow: hidden;\n}\n\n.chart-container ::ng-deep ngx-charts-bar-vertical,\n.chart-container ::ng-deep ngx-charts-pie-chart {\n  width: 100% !important;\n  max-width: 100%;\n  height: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Distribution of Drinks (by category)  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingModule.html":{"url":"modules/TrackingModule.html","title":"module - TrackingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_imports\n\n\n\ncluster_TrackingModule_declarations\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrackingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrackingRoutingModule } from './tracking-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DrinkListComponent, HomeComponent],\n  imports: [SharedModule, TrackingRoutingModule, CommonModule],\n})\nexport class TrackingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingRoutingModule.html":{"url":"modules/TrackingRoutingModule.html","title":"module - TrackingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'drinklist', component: DrinkListComponent },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrackingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                showHint\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loaidng navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:42\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:34\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.minLength(8)]),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl(false, Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:47\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:30\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:38\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:90\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:96\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:102\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:108\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:114\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Handles user profile update.\n */\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.scss'],\n})\nexport class UpdateProfileComponent implements OnInit {\n  /**\n   * User's username from the database.\n   */\n  usernameFromDB: string;\n  /**\n   * User's profile picture from the database.\n   */\n  profilePicUrlFromDB: string;\n  /**\n   * User's weight from the database.\n   */\n  weightFromDB: number;\n  /**\n   * User's gender from the database.\n   */\n  genderFromDB: string;\n\n  /**\n   * Form group for profile update data.\n   */\n  updateProfileForm = new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.minLength(8)]),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl(false, Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param router Router for routing.\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param afAuth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loaidng navigation.\n   * @param spinnerService Service for loading spinner.\n   */\n  constructor(\n    private router: Router,\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private afAuth: AngularFireAuth,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets user's data on initialization.\n   */\n  ngOnInit(): void {\n    this.getUsername();\n    this.getGenderAndWeight();\n    this.getProfilePicUrl();\n  }\n\n  /**\n   * Gets user's input profile picture.\n   */\n  get profilePicUrl() {\n    return this.updateProfileForm.get('profilePicUrl');\n  }\n  /**\n   * Gets user's input password.\n   */\n  get password() {\n    return this.updateProfileForm.get('password');\n  }\n  /**\n   * Gets user' input password confirmation.\n   */\n  get confirmPassword() {\n    return this.updateProfileForm.get('confirmPassword');\n  }\n  /**\n   * Gets user's input weight.\n   */\n  get weight() {\n    return this.updateProfileForm.get('weight');\n  }\n  /**\n   * Gets user's input gender.\n   */\n  get gender() {\n    return this.updateProfileForm.get('gender');\n  }\n\n  /**\n   * Checks if the input passwords match.\n   * @returns True flag if passwords match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length Password: min. 8 charactersWeight: min. 30 kilograms'\n    );\n  }\n\n  /**\n   * Submits data for profile update.\n   * @returns If userID is invalid returns.\n   */\n  async updateProfileSubmit() {\n    const user = this.userService.getCurrentUserId();\n    if (!user) {\n      console.error('User not logged in');\n      this.notyfService.error('User is not logged in');\n      return;\n    }\n\n    if (this.updateProfileForm.invalid) {\n      this.notyfService.error('Please provide valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    const updates: any = {};\n    const userId = await this.userService.getUserId();\n    const userDocRef = this.afs.collection('user').doc(userId).ref;\n\n    const newProfilePicUrl = (\n      document.getElementById('profile-picture-input') as HTMLInputElement\n    ).value;\n    if (\n      newProfilePicUrl !== this.profilePicUrlFromDB &&\n      newProfilePicUrl != ''\n    ) {\n      this.profilePicUrlFromDB = newProfilePicUrl;\n      userDocRef\n        .update({ profilePicUrl: newProfilePicUrl })\n        .then(() => this.notyfService.success('Profile updated successfully'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = !!this.gender?.value ? 'female' : 'male';\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef\n        .update(updates)\n        .then(() => this.notyfService.success('Profile updated successfully'));\n    }\n\n    const newPassword = this.password?.value;\n    if (newPassword) {\n      try {\n        const currentUser = await this.afAuth.currentUser;\n        if (currentUser) {\n          await currentUser.updatePassword(newPassword);\n          this.notyfService.success('Profile updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating password: ', error);\n        this.notyfService.error('Something went wrong');\n        // this.spinnerService.hide();\n      }\n    }\n\n    this.navigationService.navigate(\n      'profile/profile',\n      undefined,\n      undefined,\n      500,\n      300\n    );\n  }\n}\n\n    \n\n    \n        Update Profile\n\n\n  \n\n  \n\n  \n\n  \n    \n    kg\n  \n\n  \n  \n    \n      \n        {{ !!updateProfileForm.value.gender ? \"female\" : \"male\" }}\n      \n    \n  \n\n  \n    Update Profile\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .update-form > div {\n  display: flex;\n  flex-direction: row-reverse;\n  .unit {\n    position: absolute;\n    width: 100%;\n    transform: translateY(55%);\n    padding-right: 0.75rem;\n    pointer-events: none;\n    text-align: right;\n    color: rgba($color: grey, $alpha: 0.5);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Update Profile                kg                        {{ !!updateProfileForm.value.gender ? \"female\" : \"male\" }}                  Update Profile        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('slide', [\n      transition(':enter', [\n        style({ transform: 'translateY(-20px)', opacity: 0 }),\n        animate(\n          '300ms ease-out',\n          style({ transform: 'translateY(0)', opacity: 1 })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '300ms ease-in',\n          style({ transform: 'translateY(-20px)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('fadeDate', [\n      transition('* => *', [\n        style({ opacity: 0, transform: 'scale(0.9)' }),\n        animate('200ms ease-out', style({ opacity: 1, transform: 'scale(1)' })),\n      ]),\n    ]),\n    trigger('slideGrow', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-10px)',\n          maxHeight: '0',\n          overflow: 'hidden',\n        }),\n        animate(\n          '300ms ease-out',\n          style({\n            opacity: 1,\n            transform: 'translateY(0)',\n            maxHeight: '1000px',\n          })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({\n            opacity: 0,\n            transform: 'translateY(-10px)',\n            maxHeight: '0',\n            overflow: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Boolean for showing totals.\n   */\n  isTotalsShown: Boolean = false;\n  /**\n   * Variable to help date change animation.\n   */\n  dateAnimationKey = 0;\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Shows the totals panel.\n   */\n  showTotals() {\n    this.isTotalsShown = true;\n  }\n\n  /**\n   * Hides the totals panel.\n   */\n  hideTotals() {\n    this.isTotalsShown = false;\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  // calculateBAC(): void {\n  //   if (!this.userData) {\n  //     console.error('User data not available for BAC calculation');\n  //     this.bac = 0;\n  //     return;\n  //   }\n\n  //   const { weight, gender } = this.userData;\n  //   const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n  //   const metabolismRate = 0.015;\n  //   const weightInGrams = weight * 1000;\n  //   const currentTime = new Date();\n  //   // Construct full date objects for drink times\n  //   const drinkTimes = this.drinksForTheDay.map((drink) => {\n  //     const [hours, minutes] = drink.time.split(':').map(Number);\n  //     const drinkDate = new Date(this.selectedDate);\n  //     drinkDate.setHours(hours, minutes, 0, 0);\n  //     return { ...drink, drinkDate };\n  //   });\n\n  //   const pastDrinks = drinkTimes.filter(\n  //     (drink) => drink.drinkDate  drink.drinkDate > currentTime\n  //   );\n\n  //   const totalPastAlcoholGrams = pastDrinks.reduce(\n  //     (sum, drink) => sum + (drink.alcohol || 0),\n  //     0\n  //   );\n\n  //   if (pastDrinks.length > 0) {\n  //     const lastDrinkTime = new Date(\n  //       Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n  //     );\n  //     const timeElapsedHours = Math.max(\n  //       0,\n  //       (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n  //     );\n\n  //     this.bac =\n  //       (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n  //       metabolismRate * timeElapsedHours;\n  //     this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n  //   } else {\n  //     this.bac = 0;\n  //   }\n\n  //   // Calculate sober time (including future drinks)\n  //   const allAlcoholGrams = drinkTimes.reduce(\n  //     (sum, drink) => sum + (drink.alcohol || 0),\n  //     0\n  //   );\n  //   const soberHours =\n  //     allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n  //   const earliestAllDrinkTime = new Date(\n  //     Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n  //   );\n  //   const estimatedSoberTime = new Date(\n  //     Math.max(earliestAllDrinkTime.getTime()) +\n  //       soberHours * 100 * 60 * 60 * 1000\n  //   );\n\n  //   this.soberTime = estimatedSoberTime;\n  // }\n  calculateBAC(): void {\n    if (\n      !this.userData ||\n      typeof this.userData.weight !== 'number' ||\n      !this.userData.gender\n    ) {\n      console.error('User data not available or invalid for BAC calculation.');\n      this.bac = 0;\n      this.soberTime = null;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n\n    // Ensure selectedDate is a valid Date object\n    let selectedDateObj: Date;\n    if (\n      this.selectedDate instanceof Date &&\n      !isNaN(this.selectedDate.getTime())\n    ) {\n      selectedDateObj = this.selectedDate;\n    } else if (\n      typeof this.selectedDate === 'string' ||\n      typeof this.selectedDate === 'number'\n    ) {\n      selectedDateObj = new Date(this.selectedDate);\n      if (isNaN(selectedDateObj.getTime())) {\n        console.error('Invalid selectedDate for BAC calculation.');\n        this.bac = 0;\n        this.soberTime = null;\n        return;\n      }\n    } else {\n      console.error('selectedDate is not a valid type for BAC calculation.');\n      this.bac = 0;\n      this.soberTime = null;\n      return;\n    }\n\n    const allDrinksToday = (this.drinksForTheDay || []) // Handle if drinksForTheDay is null/undefined\n      .map((drink) => {\n        if (\n          !drink ||\n          typeof drink.time !== 'string' ||\n          !drink.time.includes(':')\n        ) {\n          console.warn(\n            'Skipping drink due to invalid format or missing time:',\n            drink\n          );\n          return null;\n        }\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        if (isNaN(hours) || isNaN(minutes)) {\n          console.warn(\n            'Skipping drink due to invalid time parsing:',\n            drink.time\n          );\n          return null;\n        }\n        const drinkDate = new Date(selectedDateObj);\n        drinkDate.setHours(hours, minutes, 0, 0);\n        return { ...drink, drinkDate, alcohol: Number(drink.alcohol) || 0 };\n      })\n      .filter((drink) => drink !== null) as {\n      alcohol: number;\n      drinkDate: Date;\n      [key: string]: any;\n    }[]; // Type assertion after filter\n\n    allDrinksToday.sort(\n      (a, b) => a.drinkDate.getTime() - b.drinkDate.getTime()\n    );\n\n    // --- Calculate Current BAC ---\n    let currentBacInternal = 0;\n    let lastProcessedDrinkTimeForBac: Date | null = null;\n\n    const pastAndCurrentDrinks = allDrinksToday.filter(\n      (drink) => drink.drinkDate  0) {\n      // Initialize with the time of the first relevant drink\n      lastProcessedDrinkTimeForBac = new Date(\n        pastAndCurrentDrinks[0].drinkDate.getTime()\n      );\n\n      for (const drink of pastAndCurrentDrinks) {\n        // 1. Metabolize BAC from lastProcessedDrinkTimeForBac up to current drink's time\n        if (\n          currentBacInternal > 0 &&\n          drink.drinkDate > lastProcessedDrinkTimeForBac\n        ) {\n          const hoursElapsed =\n            (drink.drinkDate.getTime() -\n              lastProcessedDrinkTimeForBac.getTime()) /\n            (1000 * 60 * 60);\n          currentBacInternal -= metabolismRate * hoursElapsed;\n          currentBacInternal = Math.max(0, currentBacInternal);\n        }\n\n        // Update lastProcessedDrinkTimeForBac to current drink's time\n        lastProcessedDrinkTimeForBac = new Date(drink.drinkDate.getTime());\n\n        // 2. Add BAC from the current drink\n        // Widmark formula: BAC (g/100mL or %) = (Alcohol in grams / (Body weight in grams * r)) * 100\n        currentBacInternal +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // 3. After processing all past drinks, metabolize from the time of the *last consumed past drink* up to current time\n      if (\n        currentBacInternal > 0 &&\n        lastProcessedDrinkTimeForBac &&\n        currentTime > lastProcessedDrinkTimeForBac\n      ) {\n        const hoursElapsedSinceLastDrink =\n          (currentTime.getTime() - lastProcessedDrinkTimeForBac.getTime()) /\n          (1000 * 60 * 60);\n        currentBacInternal -= metabolismRate * hoursElapsedSinceLastDrink;\n      }\n    }\n    this.bac = Math.max(0, currentBacInternal); // Ensure BAC is not negative\n\n    // --- Estimate Sober Time (using all drinks for the day) ---\n    let simulatedBac = 0;\n    let currentSimTime: Date | null = null;\n\n    if (allDrinksToday.length === 0) {\n      this.soberTime = null; // No drinks, no sober time to project based on them.\n    } else {\n      // Start simulation from the time of the first drink\n      currentSimTime = new Date(allDrinksToday[0].drinkDate.getTime());\n      // simulatedBac is already 0\n\n      for (const drink of allDrinksToday) {\n        // 1. Metabolize existing BAC from currentSimTime up to this drink's time\n        if (simulatedBac > 0 && drink.drinkDate > currentSimTime) {\n          const hoursToDrink =\n            (drink.drinkDate.getTime() - currentSimTime.getTime()) /\n            (1000 * 60 * 60);\n          simulatedBac -= metabolismRate * hoursToDrink;\n          simulatedBac = Math.max(0, simulatedBac);\n        }\n\n        // 2. Advance simulation time to the current drink's time (handles drinks at same time correctly)\n        currentSimTime = new Date(\n          Math.max(currentSimTime.getTime(), drink.drinkDate.getTime())\n        );\n\n        // 3. Add BAC from this drink\n        simulatedBac +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // 4. After all drinks, if BAC > 0, calculate time to zero from currentSimTime (time of last drink's effect)\n      if (simulatedBac > 0 && currentSimTime) {\n        const hoursToSober = simulatedBac / metabolismRate;\n        this.soberTime = new Date(\n          currentSimTime.getTime() + hoursToSober * 60 * 60 * 1000\n        );\n      } else if (currentSimTime) {\n        // Already sober by the time of (or after processing) the last drink\n        this.soberTime = new Date(currentSimTime.getTime());\n      } else {\n        // Should not happen if allDrinksToday has items, but as a fallback:\n        this.soberTime = null;\n      }\n    }\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(direction: string) {\n    const originalDate = new Date(document.getElementById('date')!.innerHTML);\n\n    if (direction === 'back') {\n      const prevDay = originalDate;\n      prevDay.setDate(originalDate.getDate() - 1);\n      this.dateService.setSelectedDate(prevDay);\n    } else if (direction === 'forward') {\n      const nextDay = originalDate;\n      nextDay.setDate(originalDate.getDate() + 1);\n      this.dateService.setSelectedDate(nextDay);\n    }\n    // Since angular animations only trigger when the bound element's state changes\n    // we need this key to always change\n    this.dateAnimationKey++;\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.navigationService.navigate('/tracking/drinklist');\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/user.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService) {}\n\n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isUser();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:36\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    const user = await firstValueFrom(this.auth.authState);\n    if (user) {\n      const userDocs = await this.afs\n        .collection('user', (ref) => ref.where('email', '==', user.email))\n        .get()\n        .toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/pages/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId() {\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail() {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userRef = this.afs.collection('user').doc(await this.getUserId());\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString() {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/admin/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/redirect.guard.ts\n            \n            guard\n            RedirectGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/profile/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profile/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/shared/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/redirect/redirect/redirect.component.ts\n            \n            component\n            RedirectComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (23/24)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            animate.css : ^4.1.1\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            material-design-icons-iconfont : ^6.7.0\n        \n            ngx-spinner : ^15.0.1\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nRedirectComponent\n\nRedirectComponent\n\nSharedModule -->\n\nRedirectComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        29 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
