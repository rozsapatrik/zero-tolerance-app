var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.185,1,0.977]],["body/components/AboutUsComponent.html",[0,0.311,1,1.736,2,1.825,3,0.214,4,0.187,5,1.478,6,1.478,7,1.478,8,1.478,9,0.187,10,5.14,11,4.138,12,3.544,13,0.726,14,3.156,15,1.823,16,1.4,17,1.802,18,1.725,19,1.396,20,6.011,21,1.396,22,5.402,23,0.726,24,1.396,25,1.932,26,1.123,27,4.144,28,2.055,29,1.254,30,4.144,31,1.071,32,0.021,33,0.933,34,0.684,35,1.071,36,4.144,37,0.769,38,1.015,39,0.316,40,0.214,41,1.478,42,0.214,43,0.134,44,1.015,45,1.652,46,5.402,47,5.402,48,4.62,49,5.402,50,4.62,51,4.62,52,6.369,53,5.402,54,5.402,55,5.402,56,3.156,57,4.62,58,5.402,59,5.402,60,3.156,61,6.011,62,1.652,63,3.544,64,1.652,65,1.13,66,1.652,67,1.652,68,1.562,69,2.282,70,1.75,71,2.282,72,1.857,73,2.421,74,2.421,75,3.544,76,2.253,77,2.282,78,2.154,79,1.975,80,2.853,81,3.544,82,1.857,83,0.911,84,1.927,85,1.729,86,1.478,87,2.272,88,1.478,89,1.478,90,1.13,91,1.473,92,1.478,93,1.13,94,1.927,95,1.192,96,1.478,97,0.911,98,0.962,99,1.478,100,1.015,101,1.478,102,1.071,103,1.4,104,1.13,105,1.478,106,1.13,107,1.478,108,1.13,109,1.478,110,1.13,111,1.478,112,1.13,113,1.478,114,1.13,115,1.478,116,1.13,117,1.478,118,1.257,119,1.478,120,1.478,121,0.015,122,0.015]],["title/components/AdminFormComponent.html",[0,0.185,90,0.977]],["body/components/AdminFormComponent.html",[0,0.271,1,0.624,2,1.194,3,0.118,4,0.103,5,0.817,6,0.817,7,0.817,8,0.817,9,0.103,13,0.619,15,1.474,16,0.774,17,1.654,18,1.567,19,0.914,21,0.914,23,0.401,24,0.914,25,1.474,26,0.735,28,1.812,29,1.342,31,0.592,32,0.021,33,0.972,34,0.802,35,0.592,37,0.802,38,1.19,39,0.324,40,0.118,41,0.817,42,0.118,43,0.074,44,1.286,45,0.913,60,4.176,62,2.094,64,2.094,65,1.178,66,1.937,67,2.094,68,1.979,69,2.218,70,0.967,71,1.825,72,1.027,73,1.585,74,1.585,76,1.245,77,1.825,78,1.723,79,1.685,82,1.585,83,0.503,84,1.261,85,1.132,86,0.817,87,1.733,88,0.817,89,0.817,90,1.325,91,1.879,92,0.817,93,0.624,94,1.261,95,0.659,96,0.817,97,0.503,98,1.654,99,0.817,100,0.561,101,0.817,102,0.592,103,0.774,104,0.624,105,0.817,106,0.624,107,0.817,108,0.624,109,0.817,110,0.624,111,0.817,112,0.624,113,0.817,114,0.624,115,0.817,116,0.624,117,1.541,118,0.695,119,0.817,120,0.817,121,0.01,122,0.01,123,4.539,124,4.114,125,1.959,126,3.537,127,3.024,128,2.315,129,3.537,130,1.797,131,4.32,132,3.537,133,0.777,134,4.32,135,5.785,136,5.251,137,4.858,138,1.628,139,4.858,140,2.29,141,4.858,142,1.641,143,1.641,144,2.234,145,1.812,146,3.537,147,2.382,148,1.596,149,3.537,150,3.537,151,3.694,152,2.435,153,3.537,154,4.858,155,1.333,156,3.024,157,4.858,158,3.537,159,3.537,160,3.537,161,1.495,162,4.32,163,3.537,164,1.017,165,1.459,166,1.494,167,1.19,168,1.132,169,1.333,170,0.914,171,2.29,172,1.641,173,3.537,174,3.024,175,3.537,176,2.29,177,3.537,178,2.29,179,2.066,180,3.537,181,4.746,182,4.32,183,2.195,184,4.32,185,4.155,186,4.32,187,4.32,188,3.345,189,4.858,190,1.874,191,1.333,192,2.974,193,2.29,194,3.282,195,0.914,196,2.307,197,0.964,198,2.29,199,1.733,200,1.494,201,3.537,202,2.435,203,2.234,204,2.687,205,2.687,206,0.774,207,1.577,208,1.338,209,0.561,210,0.817,211,1.154,212,1.219,213,2.29,214,2.234,215,2.29,216,3.537,217,3.145,218,3.145,219,3.068,220,3.38,221,4.32,222,4.32,223,4.32,224,4.608,225,5.55,226,5.55,227,2.29,228,3.537,229,2.29,230,2.29,231,0.863,232,2.29,233,2.29,234,2.29,235,3.537,236,2.29,237,2.29,238,2.29,239,0.913,240,2.29,241,0.967,242,1.333,243,0.967,244,1.245,245,2.29,246,2.29,247,1.585,248,1.245,249,2.29,250,1.338,251,1.959,252,0.967,253,0.863,254,0.863,255,0.863,256,0.967,257,1.338,258,1.685,259,4.858,260,1.685,261,3.537,262,3.537,263,3.024,264,2.066,265,1.923,266,1.027,267,0.967,268,1.164,269,1.825,270,1.027,271,1.74,272,1.245,273,1.959,274,1.245,275,1.825,276,2.177,277,1.338,278,1.494,279,1.936,280,1.936,281,3.084,282,1.245,283,1.338,284,1.178,285,2.435,286,1.447,287,1.092,288,1.585,289,1.685,290,1.585,291,1.585,292,1.585,293,1.092,294,1.092,295,2.29,296,1.577,297,2.29,298,2.29,299,1.245,300,2.29]],["title/guards/AdminGuard.html",[301,2.263,302,1.82]],["body/guards/AdminGuard.html",[3,0.24,4,0.209,9,0.209,13,1.11,23,0.812,24,1.5,26,0.964,29,1.347,31,1.5,32,0.021,33,0.901,34,0.958,35,1.5,37,1.233,39,0.388,40,0.24,42,0.24,43,0.15,91,1.902,121,0.016,122,0.016,144,2.07,167,1.422,170,1.803,191,2.188,200,2.452,202,3.996,209,1.136,211,1.392,214,4.405,301,3.666,302,2.949,303,3.523,304,3.965,305,5.195,306,3.192,307,3.374,308,4.637,309,4.002,310,2.949,311,3.965,312,5.679,313,5.679,314,4.637,315,4.075,316,5.195,317,4.964,318,3.02,319,5.418,320,2.452,321,1.849,322,3.965,323,2.709,324,2.21,325,1.849,326,2.709,327,1.333,328,4.637]],["title/modules/AdminModule.html",[329,0.704,330,2.467]],["body/modules/AdminModule.html",[3,0.261,4,0.227,9,0.227,32,0.021,39,0.416,40,0.261,42,0.261,43,0.163,83,1.107,90,1.941,91,1.374,93,1.941,121,0.017,122,0.017,124,3.469,329,0.99,330,5.111,331,1.528,332,2.128,333,3.133,334,2.258,335,2.401,336,1.702,337,4.309,338,4.309,339,4.309,340,4.495,341,3.006,342,2.912,343,2.401,344,1.449,345,5.039,346,2.179,347,2.179,348,5.224,349,4.309,350,3.469,351,3.182,352,2.943,353,2.739,354,3.321,355,2.56]],["title/components/AdminPageComponent.html",[0,0.185,93,0.977]],["body/components/AdminPageComponent.html",[0,0.243,1,0.718,2,1.329,3,0.136,4,0.119,5,0.94,6,0.94,7,0.94,8,0.94,9,0.119,13,0.914,15,1.428,16,0.89,17,1.694,18,1.605,19,1.017,21,1.017,23,0.462,24,1.017,25,1.584,26,0.818,28,1.893,29,1.409,31,1.217,32,0.021,33,0.867,34,0.967,35,1.217,37,1.037,38,1.591,39,0.327,40,0.136,41,0.94,42,0.136,43,0.085,44,1.279,45,1.051,60,3.423,62,1.877,64,1.877,65,1.073,66,1.051,67,1.051,68,0.993,69,2.475,70,1.113,71,1.662,72,1.181,73,1.763,74,1.763,76,1.432,77,1.662,78,1.569,79,2.488,82,1.181,83,0.579,84,1.403,85,1.259,86,0.94,87,1.862,88,0.94,89,0.94,90,0.718,91,1.936,92,0.94,93,1.423,94,1.403,95,0.758,96,0.94,97,0.579,98,1.654,99,0.94,100,0.645,101,0.94,102,0.681,103,0.89,104,0.718,105,0.94,106,0.718,107,0.94,108,0.718,109,0.94,110,0.718,111,0.94,112,0.718,113,0.94,114,0.718,115,0.94,116,0.718,117,0.94,118,0.799,119,0.94,120,0.94,121,0.011,122,0.011,123,4.742,128,2.792,130,2.653,133,0.864,142,1.59,143,1.763,144,2.317,145,1.893,147,1.569,148,1.501,156,5.011,161,1.349,164,1.131,165,1.763,166,1.662,167,1.279,168,1.259,169,1.483,170,1.349,172,0.89,183,1.999,190,1.59,195,1.217,197,0.718,199,2.166,206,0.89,209,0.645,210,0.94,211,1.287,214,1.664,243,1.662,244,2.139,247,1.181,253,0.993,254,0.993,255,0.993,256,1.662,264,3.05,265,2.139,266,1.763,267,1.662,268,1.339,269,2.205,270,1.763,275,1.662,276,2.34,278,1.113,279,2.34,280,1.763,281,2.488,284,1.073,285,2.708,286,3.297,288,1.181,289,1.256,290,1.181,291,1.181,292,1.181,293,1.256,294,1.256,296,2.708,299,1.432,315,2.298,350,4.297,356,2.002,357,3.934,358,1.259,359,3.934,360,3.169,361,3.934,362,3.934,363,1.988,364,3.364,365,4.297,366,3.934,367,4.026,368,3.364,369,3.934,370,3.934,371,5.221,372,5.221,373,1.539,374,3.934,375,3.934,376,2.635,377,3.934,378,3.934,379,3.934,380,3.846,381,3.934,382,2.635,383,3.05,384,3.934,385,1.662,386,2.635,387,2.708,388,2.635,389,2.635,390,3.364,391,3.934,392,2.635,393,2.635,394,2.635,395,2.635,396,1.814,397,3.934,398,2.635,399,1.814,400,2.635,401,1.814,402,2.253,403,1.814,404,2.485,405,3.934,406,2.635,407,4.708,408,2.253,409,2.635,410,2.002,411,2.635,412,2.635,413,2.708,414,1.999,415,2.485,416,1.814,417,1.814,418,2.002,419,3.528,420,2.989,421,2.989,422,2.989,423,2.989,424,2.989,425,1.664,426,2.002,427,1.664,428,1.814,429,1.539]],["title/modules/AdminRoutingModule.html",[329,0.704,340,2.263]],["body/modules/AdminRoutingModule.html",[0,0.325,3,0.273,4,0.238,9,0.238,32,0.021,39,0.415,40,0.273,42,0.273,43,0.171,90,1.713,91,1.439,93,1.713,121,0.018,122,0.018,124,3.634,209,1.293,212,1.225,302,3.408,305,4.773,331,1.601,336,1.783,340,3.968,346,1.883,347,2.241,348,5.373,349,4.514,350,3.634,351,3.334,430,5.279,431,3.084,432,3.67,433,3.197,434,3.334,435,3.192,436,5.279,437,3.334]],["title/components/AppComponent.html",[0,0.185,95,1.03]],["body/components/AppComponent.html",[0,0.317,1,1.177,2,1.873,3,0.223,4,0.195,5,1.539,6,1.539,7,1.539,8,1.539,9,0.195,15,1.309,16,1.458,17,1.81,18,1.724,19,1.433,21,1.433,23,0.756,24,1.433,25,1.962,26,0.897,29,1.501,31,1.115,32,0.021,33,0.951,34,0.915,35,1.115,37,0.801,38,1.057,39,0.324,40,0.223,42,0.223,43,0.14,44,1.057,83,0.948,84,1.978,85,1.775,86,1.539,87,2.307,88,1.539,89,1.539,90,1.177,91,1.512,92,1.539,93,1.177,94,1.978,95,1.86,96,1.539,97,0.948,98,1.002,99,1.539,100,1.057,101,1.539,102,1.115,103,1.458,104,1.177,105,1.539,106,1.177,107,1.539,108,1.177,109,1.539,110,1.177,111,1.539,112,1.177,113,1.539,114,1.177,115,1.539,116,1.177,117,1.539,118,1.309,119,1.539,120,1.539,121,0.015,122,0.015,133,1.219,144,2.442,172,1.873,195,1.115,197,1.512,203,2.726,209,1.057,231,2.091,324,2.643,325,2.212,326,2.521,438,3.691,439,3.114,440,6.129,441,5.546,442,6.129,443,6.129,444,3.279,445,6.129,446,6.468,447,5.546,448,4.316,449,4.214,450,4.214,451,4.316,452,4.316,453,4.316,454,4.316,455,4.316,456,4.316,457,2.726]],["title/modules/AppModule.html",[329,0.704,458,2.467]],["body/modules/AppModule.html",[3,0.214,4,0.186,9,0.186,18,0.959,32,0.021,39,0.427,40,0.214,42,0.214,43,0.134,50,3.535,83,0.908,95,2.079,121,0.015,122,0.015,329,0.813,331,1.254,332,1.746,333,2.861,334,2.691,335,2.57,336,1.396,341,2.859,342,2.57,343,1.97,344,1.189,346,1.924,347,1.924,352,2.415,353,2.247,458,5.127,459,3.535,460,3.535,461,3.535,462,3.535,463,4.275,464,4.275,465,5.979,466,5.645,467,5.788,468,5.645,469,5.979,470,5.645,471,5.979,472,5.645,473,4.134,474,4.134,475,4.134,476,4.134,477,4.134,478,5.394,479,5.394,480,4.134,481,4.134,482,4.134,483,4.134,484,3.141,485,4.134,486,2.611,487,3.535,488,4.134,489,4.134,490,4.134,491,5.394,492,4.612,493,3.141,494,5.394,495,4.134,496,4.134,497,4.134,498,4.134,499,4.134]],["title/modules/AppRoutingModule.html",[329,0.704,463,2.263]],["body/modules/AppRoutingModule.html",[0,0.262,3,0.262,4,0.228,9,0.228,32,0.021,39,0.385,40,0.262,42,0.262,43,0.164,91,1.38,102,1.583,118,1.535,121,0.017,122,0.017,209,1.24,212,1.174,331,1.535,336,1.709,346,1.805,347,2.185,351,3.196,431,2.956,432,3.579,433,3.139,435,3.62,463,3.869,500,5.061,501,5.061,502,3.196,503,7.011,504,5.061,505,5.061,506,3.196,507,5.061,508,5.061,509,4.328,510,5.061,511,5.061,512,5.061,513,5.061,514,2.268,515,5.061,516,5.061,517,5.061]],["title/modules/AuthModule.html",[329,0.704,486,2.263]],["body/modules/AuthModule.html",[3,0.262,4,0.229,9,0.229,32,0.021,39,0.417,40,0.262,42,0.262,43,0.164,83,1.114,104,1.943,112,1.943,121,0.017,122,0.017,329,0.996,331,1.537,332,2.141,333,3.141,334,2.272,335,2.415,336,1.712,341,3.011,342,2.922,343,2.415,344,1.457,346,2.187,347,2.187,352,2.961,353,2.755,354,3.333,355,2.575,486,4.692,506,3.201,518,4.334,519,4.334,520,4.334,521,4.501,522,5.068,523,4.334,524,4.334]],["title/modules/AuthRoutingModule.html",[329,0.704,521,2.263]],["body/modules/AuthRoutingModule.html",[0,0.327,3,0.276,4,0.241,9,0.241,32,0.021,39,0.416,40,0.276,42,0.276,43,0.173,104,1.726,112,1.726,121,0.018,122,0.018,209,1.309,212,1.24,302,2.716,331,1.621,336,1.805,346,1.906,347,2.257,431,3.122,432,3.697,433,3.214,434,3.376,435,3.216,437,3.376,521,3.997,523,4.571,524,4.571,525,5.345,526,3.68,527,4.061]],["title/injectables/AuthenticationService.html",[307,1.82,320,1.513]],["body/injectables/AuthenticationService.html",[3,0.174,4,0.152,9,0.152,13,1.025,23,0.59,24,1.214,26,0.7,29,1.572,31,1.512,32,0.021,33,0.989,34,0.965,35,1.512,37,1.274,39,0.342,40,0.174,42,0.174,43,0.109,44,0.825,91,1.595,121,0.013,122,0.013,133,1.032,155,1.77,161,1.214,164,1.35,167,1.15,170,1.893,172,1.137,183,2.386,195,1.888,197,0.918,200,2.818,205,3.568,211,1.4,214,2.966,307,2.386,310,3.238,315,3.897,318,3.229,320,1.984,321,1.343,323,1.967,324,1.605,326,1.967,327,1.949,344,1.35,487,2.879,506,4.28,526,3.233,528,2.127,529,2.879,530,4.624,531,5.851,532,5.851,533,5.851,534,4.696,535,5.003,536,4.696,537,3.367,538,5.851,539,4.387,540,4.696,541,2.743,542,3.367,543,4.696,544,3.367,545,4.445,546,6.373,547,3.271,548,4.696,549,3.367,550,2.105,551,4.696,552,5.042,553,3.367,554,5.45,555,4.53,556,2.253,557,4.025,558,4.696,559,3.367,560,5.851,561,3.367,562,4.696,563,3.367,564,4.696,565,2.238,566,2.386,567,4.696,568,1.873,569,4.696,570,2.318,571,3.367,572,3.367,573,3.367,574,2.879,575,1.967,576,3.367,577,3.367,578,3.367,579,4.696,580,4.696,581,3.367,582,3.367,583,3.367,584,3.367,585,3.367,586,3.367,587,3.367,588,3.367]],["title/modules/CoreModule.html",[329,0.704,464,2.263]],["body/modules/CoreModule.html",[3,0.28,4,0.244,9,0.244,32,0.021,39,0.396,40,0.28,42,0.28,43,0.175,83,1.189,121,0.018,122,0.018,329,1.064,331,1.642,332,2.286,333,2.579,334,2.426,335,2.579,336,1.828,341,3.056,342,3.039,343,2.579,344,1.556,346,2.274,347,2.274,353,2.942,354,3.466,355,2.75,464,4.569,589,5.412,590,5.412,591,5.412]],["title/injectables/DateService.html",[320,1.513,592,1.513]],["body/injectables/DateService.html",[3,0.237,4,0.207,9,0.207,13,1.01,17,1.412,23,0.803,24,1.49,29,1.535,31,1.186,32,0.021,33,0.712,34,0.757,35,1.186,37,1.171,38,1.412,39,0.337,40,0.237,42,0.237,43,0.148,44,1.544,121,0.016,122,0.016,133,1.267,155,2.173,161,1.49,167,1.412,172,1.947,196,2.299,197,1.803,211,1.008,318,2.748,320,2.435,321,1.829,323,2.68,324,2.186,327,1.319,385,2.938,528,2.897,568,2.299,592,2.435,593,3.923,594,3.003,595,3.005,596,6.305,597,6.615,598,5.765,599,4.587,600,5.765,601,5.765,602,4.587,603,5.765,604,4.587,605,5.765,606,4.587,607,5.765,608,5.765,609,5.765,610,5.765,611,5.765,612,5.765,613,4.587,614,4.587,615,4.587]],["title/interfaces/Drink.html",[98,0.831,358,1.147]],["body/interfaces/Drink.html",[0,0.206,3,0.138,4,0.121,9,0.121,13,0.469,17,0.656,18,0.621,19,0.692,21,0.692,23,0.469,25,0.812,26,0.556,28,1.596,32,0.021,33,0.873,34,0.972,37,0.497,38,1.164,39,0.344,40,0.138,41,0.955,42,0.206,43,0.087,44,1.289,45,1.587,65,1.085,97,0.588,98,1.699,121,0.011,122,0.013,128,1.275,130,2.414,133,0.874,138,1.009,142,1.344,143,1.344,145,1.596,147,1.067,148,1.842,155,1.009,161,1.228,164,0.77,165,1.777,167,1.164,168,0.856,169,1.009,170,1.029,183,1.36,190,1.344,191,1.009,195,1.78,196,1.894,197,0.73,199,1.694,206,0.904,210,0.955,211,1.341,212,1.598,217,3.317,218,3.317,219,3.073,220,3.073,231,1.009,239,1.587,241,1.13,242,1.983,243,1.13,244,1.455,247,1.199,248,1.455,250,1.563,252,1.13,253,1.009,254,1.009,255,1.009,256,1.13,257,1.563,258,2.808,260,2.808,284,1.664,318,1.897,321,1.067,327,1.144,344,0.77,358,2.05,360,2.871,363,2.007,385,2.375,514,1.784,547,1.275,550,1.199,556,0.904,565,1.897,568,1.587,575,3.285,592,2.222,594,2.433,595,1.275,616,1.455,617,1.563,618,1.36,619,1.563,620,2.575,621,1.36,622,2.857,623,2.163,624,2.264,625,2.994,626,2.583,627,2.022,628,1.897,629,2.163,630,2.264,631,1.69,632,1.69,633,1.36,634,1.69,635,1.69,636,1.69,637,1.69,638,1.69,639,1.69,640,3.322,641,3.001,642,1.69,643,1.455,644,1.69,645,3.001,646,1.69,647,3.001,648,1.36,649,1.563,650,2.414,651,1.36,652,1.69,653,1.69,654,2.513,655,1.69,656,1.69,657,1.36,658,1.69,659,2.513,660,1.69,661,1.69,662,1.275,663,1.69,664,1.69,665,1.69,666,1.69,667,1.69,668,2.513,669,1.69,670,1.69,671,1.69,672,1.69,673,1.69,674,1.69,675,1.69,676,2.513,677,1.69,678,1.69,679,1.69,680,1.69,681,2.513,682,2.264,683,1.36,684,1.36,685,1.067,686,1.897,687,1.897,688,1.36,689,3.551,690,1.69,691,3.001,692,1.69,693,1.69,694,1.69,695,1.69,696,1.69,697,1.69,698,2.022,699,2.513,700,1.69,701,2.513,702,1.69,703,1.681,704,1.275,705,1.275,706,1.275,707,1.897,708,1.275,709,3.001,710,1.36,711,2.513,712,1.36,713,1.69,714,1.69,715,1.69,716,1.69,717,1.69,718,1.69,719,3.322,720,1.69,721,1.69,722,2.513,723,1.69,724,2.325,725,1.69,726,1.69,727,1.36,728,1.69,729,1.36,730,1.36,731,1.69]],["title/interfaces/DrinkAmount.html",[358,1.147,623,1.948]],["body/interfaces/DrinkAmount.html",[0,0.205,3,0.138,4,0.12,9,0.12,13,0.466,17,0.651,18,0.617,19,0.687,21,0.687,23,0.466,25,0.807,26,0.553,28,1.591,32,0.021,33,0.615,34,1.005,37,0.494,38,1.159,39,0.344,40,0.138,41,0.949,42,0.205,43,0.086,44,1.285,45,1.58,65,1.08,97,0.584,98,1.695,121,0.011,122,0.013,128,1.268,130,2.405,133,0.87,138,1.002,142,1.338,143,1.338,145,1.591,147,1.061,148,1.839,155,1.002,161,1.223,164,0.765,165,1.771,167,1.159,168,0.851,169,1.002,170,1.024,183,1.351,190,1.338,191,1.002,195,1.802,196,1.887,197,0.725,199,2.097,206,0.898,210,0.949,211,1.338,212,1.596,217,2.851,218,3.311,219,1.554,220,1.554,231,1.002,239,1.58,241,1.123,242,1.977,243,1.123,244,1.446,247,1.192,248,1.446,250,1.554,252,1.123,253,1.002,254,1.002,255,1.002,256,1.123,257,1.554,258,3.048,260,3.048,284,1.66,318,1.888,321,1.061,327,1.139,344,0.765,358,2.047,360,2.866,363,1.999,385,2.369,514,1.775,547,1.268,550,1.192,556,0.898,565,1.888,568,1.58,575,3.276,592,2.215,594,2.428,595,1.268,616,1.446,617,1.554,618,1.351,619,1.554,620,2.572,621,1.351,622,2.987,623,2.573,624,2.802,625,3.25,626,2.573,627,2.013,628,1.888,629,2.153,630,2.256,631,1.68,632,1.68,633,1.351,634,1.68,635,1.68,636,1.68,637,1.68,638,1.68,639,1.68,640,3.312,641,2.989,642,1.68,643,1.446,644,1.68,645,2.989,646,1.68,647,2.989,648,1.351,649,1.554,650,2.405,651,1.351,652,1.68,653,1.68,654,2.502,655,1.68,656,1.68,657,1.351,658,1.68,659,2.502,660,1.68,661,1.68,662,1.268,663,1.68,664,1.68,665,1.68,666,1.68,667,1.68,668,2.502,669,1.68,670,1.68,671,1.68,672,1.68,673,1.68,674,1.68,675,1.68,676,2.502,677,1.68,678,1.68,679,1.68,680,1.68,681,2.502,682,2.256,683,1.351,684,1.351,685,1.061,686,1.888,687,1.888,688,1.351,689,3.542,690,1.68,691,2.989,692,1.68,693,1.68,694,1.68,695,1.68,696,1.68,697,1.68,698,2.013,699,2.502,700,1.68,701,2.502,702,1.68,703,1.673,704,1.268,705,1.268,706,1.268,707,1.888,708,1.268,709,2.989,710,1.351,711,2.502,712,1.351,713,1.68,714,1.68,715,1.68,716,1.68,717,1.68,718,1.68,719,3.312,720,1.68,721,1.68,722,2.502,723,1.68,724,2.314,725,1.68,726,1.68,727,1.351,728,1.68,729,1.351,730,1.351,731,1.68]],["title/interfaces/DrinkAmountsMap.html",[358,1.147,626,1.948]],["body/interfaces/DrinkAmountsMap.html",[0,0.209,3,0.141,4,0.123,9,0.123,13,0.479,17,0.67,18,0.635,19,0.707,21,0.707,25,0.83,26,0.569,28,1.613,29,0.635,32,0.021,33,0.628,34,0.452,37,0.508,38,1.179,39,0.347,40,0.141,41,0.976,42,0.209,43,0.089,44,1.303,45,1.613,65,1.103,97,0.601,98,1.696,121,0.011,122,0.013,128,1.304,130,2.446,138,1.031,142,1.366,143,1.366,145,1.613,147,1.091,148,1.853,155,1.031,161,1.244,164,0.787,165,1.796,167,1.179,168,0.876,169,1.031,170,1.046,183,1.39,190,1.366,191,1.031,195,1.739,196,1.919,197,0.746,199,1.717,206,0.924,210,0.976,211,1.351,212,1.604,217,2.891,218,2.891,219,1.598,220,1.598,231,1.031,239,1.613,241,1.156,242,2.004,243,1.156,244,1.487,247,1.226,248,1.487,250,1.598,252,1.156,253,1.031,254,1.031,255,1.031,256,1.156,257,1.598,258,2.831,260,2.831,284,1.676,318,1.928,321,1.091,327,1.163,344,0.787,358,2.062,360,2.938,363,2.033,385,2.397,514,1.813,547,1.304,550,1.226,556,0.924,565,1.928,568,1.613,575,3.47,592,2.246,594,2.451,595,1.304,616,1.487,617,2.363,618,2.056,619,1.598,620,2.378,621,1.39,622,3.018,623,2.616,624,2.294,625,3.018,626,2.891,627,2.446,628,1.928,629,2.199,630,2.294,631,1.728,632,1.728,633,1.39,634,1.728,635,1.728,636,1.728,637,1.728,638,1.728,639,1.728,640,3.359,641,3.04,642,1.728,643,1.487,644,1.728,645,3.04,646,1.728,647,3.04,648,1.39,649,1.598,650,2.446,651,1.39,652,1.728,653,1.728,654,2.555,655,1.728,656,1.728,657,1.39,658,1.728,659,2.555,660,1.728,661,1.728,662,1.304,663,1.728,664,1.728,665,1.728,666,1.728,667,1.728,668,2.555,669,1.728,670,1.728,671,1.728,672,1.728,673,1.728,674,1.728,675,1.728,676,2.555,677,1.728,678,1.728,679,1.728,680,1.728,681,2.555,682,2.294,683,1.39,684,1.39,685,1.091,686,1.928,687,1.928,688,1.39,689,3.584,690,1.728,691,3.04,692,1.728,693,1.728,694,1.728,695,1.728,696,1.728,697,1.728,698,2.056,699,2.555,700,1.728,701,2.555,702,1.728,703,1.709,704,1.304,705,1.304,706,1.304,707,1.928,708,1.304,709,3.04,710,1.39,711,2.555,712,1.39,713,1.728,714,1.728,715,1.728,716,1.728,717,1.728,718,1.728,719,3.359,720,1.728,721,1.728,722,2.555,723,1.728,724,2.363,725,1.728,726,1.728,727,1.39,728,1.728,729,1.39,730,1.39,731,1.728,732,2.736,733,2.736]],["title/interfaces/DrinkData.html",[239,1.429,358,1.147]],["body/interfaces/DrinkData.html",[0,0.178,3,0.114,4,0.1,9,0.1,13,0.386,14,1.289,15,1.28,17,0.54,18,0.512,19,0.57,21,0.57,23,0.386,25,0.669,26,0.459,28,1.445,32,0.022,33,0.533,34,0.696,37,0.783,38,1.034,39,0.32,40,0.114,41,0.787,42,0.114,43,0.071,44,1.264,45,1.682,56,2.007,65,0.937,85,0.706,98,1.568,100,0.54,121,0.01,122,0.01,133,0.755,138,1.795,142,1.16,143,1.16,144,1.841,145,1.445,147,1.37,148,1.844,152,1.519,155,0.832,161,1.475,164,0.634,165,0.745,166,0.932,167,1.034,168,0.706,169,0.832,170,1.334,188,1.519,190,1.16,191,1.795,195,1.334,196,1.37,199,1.841,200,0.932,206,0.745,209,0.54,210,0.787,211,1.332,212,1.68,231,0.832,239,2.276,241,0.932,242,2.285,243,0.932,247,0.989,252,0.932,253,0.832,254,0.832,255,0.832,256,0.932,258,2.27,260,2.27,274,1.199,284,1.879,288,2.134,325,0.88,327,1.369,358,1.652,360,2.645,363,0.932,365,2.365,380,1.519,383,1.289,385,2.18,387,2.905,396,1.519,399,1.519,401,2.365,403,1.519,404,1.393,439,1.746,457,2.665,514,0.989,550,0.989,556,1.608,565,2.27,592,2.18,594,2.811,595,1.052,616,1.199,620,2.151,621,1.121,622,2.42,624,2.011,625,2.42,627,1.121,628,1.637,630,2.813,633,1.746,648,1.121,650,2.777,651,1.121,657,1.121,682,2.27,683,1.746,684,1.746,685,1.899,686,2.27,687,2.27,688,1.746,703,1.451,704,1.637,705,1.637,706,1.637,707,2.27,708,1.637,710,1.746,712,1.746,727,2.144,729,1.121,730,1.121,734,1.519,735,2.61,736,2.61,737,1.676,738,3.008,739,2.144,740,2.294,741,1.676,742,1.393,743,1.676,744,1.676,745,3.929,746,1.519,747,3.206,748,1.676,749,1.676,750,2.61,751,1.868,752,3.206,753,2.61,754,1.676,755,1.676,756,1.519,757,2.61,758,1.676,759,1.676,760,1.676,761,3.618,762,1.676,763,1.676,764,1.519,765,1.676,766,1.676,767,3.015,768,2.17,769,1.519,770,1.676,771,1.519,772,1.676,773,3.206,774,1.676,775,1.676,776,1.676,777,2.61,778,1.676,779,1.519,780,1.519,781,1.676,782,1.676,783,1.676,784,1.676,785,1.676,786,1.676,787,1.676,788,1.676,789,1.676,790,1.676,791,1.676,792,1.676,793,2.61,794,1.676,795,1.676,796,1.676,797,1.519,798,1.676,799,3.618,800,3.206,801,1.393,802,1.676,803,1.676,804,3.206,805,1.676,806,3.206,807,2.61,808,1.676,809,1.676,810,1.676,811,1.676,812,1.676,813,1.676,814,1.676,815,2.61,816,1.676,817,2.61,818,1.676,819,1.676,820,1.676,821,1.676,822,2.61,823,2.61,824,1.676,825,4.153,826,2.61,827,1.676,828,1.676,829,1.676,830,2.61,831,2.61,832,1.676,833,1.676,834,1.676,835,1.676,836,1.676,837,1.519,838,1.676,839,1.676,840,1.676,841,1.676,842,2.61,843,1.676,844,2.61,845,1.676,846,1.676,847,2.61,848,1.676,849,1.676,850,1.676,851,1.676,852,1.676,853,1.676,854,1.676,855,1.676,856,1.519,857,2.365,858,1.676,859,1.519,860,1.676,861,1.676,862,1.676,863,2.61,864,1.676,865,1.519,866,1.676,867,1.676,868,1.676,869,1.676,870,1.676,871,1.519,872,2.61,873,2.61,874,1.676,875,1.676,876,1.676,877,1.676,878,1.676,879,1.676,880,1.676,881,1.676,882,1.676,883,2.61,884,1.676,885,1.676,886,1.676,887,1.676,888,2.61,889,1.676,890,1.676,891,1.676,892,3.206,893,2.61,894,1.676,895,1.676,896,1.676,897,1.676,898,1.676,899,1.676,900,1.676,901,1.519]],["title/components/DrinkListComponent.html",[0,0.185,97,0.787]],["body/components/DrinkListComponent.html",[0,0.187,1,0.477,2,0.965,3,0.091,4,0.079,5,0.624,6,0.624,7,0.624,8,0.624,9,0.079,13,0.806,15,0.531,16,0.591,17,1.565,18,1.482,19,0.738,21,0.738,23,0.5,24,0.738,25,1.267,26,0.594,28,1.647,29,1.446,31,1.079,32,0.021,33,0.897,34,1.028,35,1.079,37,0.966,38,1.275,39,0.288,40,0.091,41,0.624,42,0.148,43,0.057,44,1.023,45,1.139,62,1.834,64,1.834,65,1.254,66,1.834,67,1.834,68,1.734,69,2.498,70,1.207,71,1.207,73,2.062,74,2.212,76,0.952,77,1.207,78,1.665,79,2.352,82,0.785,83,0.385,84,1.019,85,0.914,86,0.624,87,1.489,88,0.624,89,0.624,90,0.477,91,0.779,92,0.624,93,0.477,94,1.019,95,0.503,96,0.624,97,0.917,98,1.711,99,0.624,100,0.429,101,0.624,102,0.452,103,0.591,104,0.477,105,0.624,106,0.477,107,0.624,108,0.477,109,0.624,110,0.477,111,0.624,112,0.477,113,0.624,114,0.477,115,0.624,116,0.477,117,0.624,118,0.531,119,0.624,120,0.624,121,0.008,122,0.012,128,2.481,130,2.508,133,0.628,138,1.364,142,1.222,143,1.41,145,1.647,147,1.139,148,1.765,155,1.077,161,1.079,164,0.821,165,1.667,167,1.209,168,0.914,169,1.077,170,1.079,172,1.667,183,0.889,190,0.965,191,1.077,195,1.61,196,1.834,197,1.48,199,1.291,206,0.591,210,0.624,211,1.144,212,1.465,217,2.951,218,2.683,219,1.023,220,2.114,231,0.66,239,1.139,241,0.739,242,1.574,243,0.739,244,0.952,247,0.785,248,0.952,250,1.023,252,0.739,253,0.66,254,0.66,255,0.66,256,0.739,257,1.023,258,2.352,260,2.352,265,0.952,266,1.28,267,1.207,268,0.889,269,2.199,270,1.28,272,0.952,275,1.943,276,2.589,277,2.114,278,1.764,279,2.517,280,2.062,281,2.875,282,1.553,283,1.669,284,1.699,285,1.205,288,0.785,289,0.834,290,0.785,291,0.785,292,0.785,293,0.834,294,0.834,296,2.875,299,0.952,318,1.724,321,0.698,327,0.821,344,0.821,358,1.737,360,2.792,363,2.498,373,1.023,385,2.44,404,2.637,413,1.967,414,2.337,415,2.285,416,1.205,417,1.205,418,1.33,419,3.547,420,3.172,421,3.172,422,3.172,423,3.172,424,3.172,425,1.106,426,1.33,427,1.106,428,1.205,429,1.023,514,1.871,547,0.834,550,1.28,556,0.965,565,1.99,568,1.665,575,3.172,592,2.293,594,2.239,595,1.724,617,3.688,618,3.208,619,1.023,620,2.046,621,0.889,622,2.645,623,1.553,624,2.192,625,2.759,626,1.967,627,1.451,628,1.724,629,1.553,630,2.192,631,1.804,632,1.804,633,1.451,634,1.804,635,1.804,636,1.804,637,2.285,638,2.285,639,2.285,640,3.547,641,3.117,642,2.285,643,1.967,644,2.285,645,2.905,646,2.285,647,2.285,648,1.451,649,1.669,650,1.839,651,0.889,652,1.106,653,1.106,654,1.804,655,1.804,656,1.804,657,1.451,658,1.804,659,1.804,660,2.637,661,1.106,662,0.834,663,1.106,664,1.106,665,1.106,666,1.804,667,1.106,668,1.804,669,1.804,670,2.637,671,1.106,672,1.106,673,1.106,674,1.106,675,1.106,676,2.285,677,1.804,678,1.804,679,1.804,680,1.804,681,1.804,682,1.724,683,0.889,684,0.889,685,0.698,686,1.361,687,1.361,688,0.889,689,2.905,690,1.106,691,2.285,692,1.106,693,1.106,694,1.106,695,1.106,696,1.106,697,1.106,698,1.451,699,1.804,700,1.106,701,1.804,702,1.106,703,1.207,704,0.834,705,0.834,706,0.834,707,1.361,708,0.834,709,2.285,710,0.889,711,1.804,712,0.889,713,1.106,714,2.285,715,2.285,716,1.106,717,1.106,718,1.106,719,2.637,720,1.106,721,1.106,722,1.804,723,1.106,724,2.439,725,1.106,726,1.106,727,0.889,728,1.106,729,0.889,730,0.889,731,1.106,735,1.33,902,2.856,903,2.856,904,2.856,905,2.856,906,1.75,907,1.75,908,1.75,909,1.75,910,1.75,911,1.75,912,1.75,913,1.75,914,1.75,915,1.75,916,1.75,917,1.75,918,2.856,919,2.856,920,1.497,921,1.497,922,2.856,923,2.443,924,1.33,925,1.75,926,1.75,927,2.856,928,1.205,929,1.75,930,1.75,931,2.856,932,1.75,933,1.75,934,1.75,935,1.75,936,1.75,937,1.497,938,1.205]],["title/interfaces/FirestoreDocumentData.html",[358,1.147,629,1.948]],["body/interfaces/FirestoreDocumentData.html",[0,0.209,3,0.141,4,0.123,9,0.123,13,0.478,17,0.669,18,0.633,19,0.705,21,0.705,23,0.478,25,0.828,26,0.567,28,1.611,32,0.021,33,0.627,34,0.793,37,0.507,38,1.177,39,0.347,40,0.141,41,0.973,42,0.209,43,0.088,44,1.301,45,1.61,65,1.101,97,0.6,98,1.696,121,0.011,122,0.013,128,1.301,130,2.442,133,0.887,138,1.029,142,1.364,143,1.364,145,1.611,147,1.088,148,1.852,155,1.029,161,1.242,164,0.785,165,1.794,167,1.177,168,0.873,169,1.029,170,1.044,183,1.387,190,1.364,191,1.029,195,1.717,196,1.917,197,0.744,199,1.714,206,0.922,210,0.973,211,1.349,212,1.603,217,2.887,218,2.887,219,1.595,220,1.595,231,1.029,239,1.61,241,1.153,242,2.002,243,1.153,244,1.484,247,1.223,248,1.484,250,1.595,252,1.153,253,1.029,254,1.029,255,1.029,256,1.153,257,1.595,258,2.829,260,2.829,284,1.674,318,1.925,321,1.088,327,1.161,344,0.785,358,2.061,360,2.936,363,2.03,385,2.395,514,1.81,547,1.301,550,1.223,556,0.922,565,1.925,568,1.61,575,3.312,592,2.244,594,2.449,595,1.301,616,1.484,617,1.595,618,1.387,619,1.595,620,2.377,621,1.387,622,3.016,623,2.195,624,2.291,625,3.016,626,3.082,627,2.052,628,2.291,629,2.613,630,2.829,631,1.724,632,1.724,633,1.387,634,1.724,635,1.724,636,1.724,637,1.724,638,1.724,639,1.724,640,3.355,641,3.036,642,1.724,643,1.484,644,1.724,645,3.036,646,1.724,647,3.036,648,1.387,649,1.595,650,2.442,651,1.387,652,1.724,653,1.724,654,2.55,655,1.724,656,1.724,657,1.387,658,1.724,659,2.55,660,1.724,661,1.724,662,1.301,663,1.724,664,1.724,665,1.724,666,1.724,667,1.724,668,2.55,669,1.724,670,1.724,671,1.724,672,1.724,673,1.724,674,1.724,675,1.724,676,2.55,677,1.724,678,1.724,679,1.724,680,1.724,681,2.55,682,2.291,683,1.387,684,1.387,685,1.088,686,1.925,687,1.925,688,1.387,689,3.58,690,1.724,691,3.036,692,1.724,693,1.724,694,1.724,695,1.724,696,1.724,697,1.724,698,2.052,699,2.55,700,1.724,701,2.55,702,1.724,703,1.706,704,1.301,705,1.301,706,1.301,707,1.925,708,1.301,709,3.036,710,1.387,711,2.55,712,1.387,713,1.724,714,1.724,715,1.724,716,1.724,717,1.724,718,1.724,719,3.355,720,1.724,721,1.724,722,2.55,723,1.724,724,2.359,725,1.724,726,1.724,727,1.387,728,1.724,729,1.387,730,1.387,731,1.724]],["title/components/HomeComponent.html",[0,0.185,100,0.878]],["body/components/HomeComponent.html",[0,0.165,1,0.4,2,0.833,3,0.165,4,0.066,5,0.523,6,0.523,7,0.523,8,0.523,9,0.066,13,0.792,14,1.441,15,1.459,16,0.495,17,1.499,18,1.42,19,0.638,21,0.638,23,0.257,24,0.638,25,1.136,26,0.513,28,1.532,29,1.482,31,1.079,32,0.021,33,0.816,34,0.963,35,1.079,37,1.12,38,1.287,39,0.264,40,0.076,41,0.523,42,0.076,43,0.047,44,1.023,45,1.273,56,1.865,62,1.493,64,1.665,65,1.021,66,1.493,67,1.804,68,1.705,69,2.032,70,0.62,71,1.581,72,1.872,73,1.872,74,1.106,77,0.62,78,0.585,82,0.657,83,0.322,84,0.88,85,1.198,86,0.523,87,1.335,88,0.523,89,0.523,90,0.4,91,0.673,92,0.523,93,0.4,94,0.88,95,0.422,96,0.523,97,0.322,98,1.575,99,0.523,100,0.917,101,0.523,102,0.379,103,0.495,104,0.4,105,0.523,106,0.4,107,0.523,108,0.4,109,0.523,110,0.4,111,0.523,112,0.4,113,0.523,114,0.4,115,0.523,116,0.4,117,0.523,118,0.445,119,0.523,120,0.523,121,0.007,122,0.007,128,1.784,133,0.542,138,2.154,142,1.078,143,1.264,144,1.936,145,1.532,147,1.273,148,1.781,152,1.699,155,0.93,161,1.243,164,0.709,165,0.833,166,1.042,167,1.108,168,0.79,169,0.93,170,1.358,172,1.41,188,1.699,190,0.833,191,1.904,195,1.169,196,1.493,197,1.139,199,1.489,200,1.042,206,0.495,209,0.359,210,0.523,211,1.154,212,1.604,217,1.341,231,0.553,239,1.804,241,0.62,242,1.98,243,0.62,247,0.657,252,0.62,253,0.553,254,0.553,255,0.553,256,0.62,258,2.156,260,2.407,264,2.81,265,0.797,266,1.106,267,1.042,268,0.745,269,1.764,270,1.106,272,0.797,274,1.341,275,1.349,276,1.872,277,0.857,278,1.042,279,1.872,280,1.431,281,2.407,282,0.797,283,0.857,284,1.851,285,1.01,287,1.176,288,1.678,289,0.699,290,0.657,291,0.657,292,0.657,293,0.699,294,0.699,296,1.699,299,1.341,325,0.984,327,1.077,358,1.198,360,2.808,363,1.349,365,1.699,373,0.857,380,1.01,383,1.441,385,2.133,387,2.875,396,1.01,399,1.01,401,2.198,403,1.01,404,2.017,408,2.11,410,1.114,413,2.198,414,1.622,415,1.558,416,1.01,417,1.01,418,1.114,419,2.857,420,1.874,421,1.874,422,1.874,423,1.874,424,1.874,425,0.926,426,1.114,427,0.926,428,1.699,429,1.441,439,1.622,457,2.017,514,1.106,550,0.657,556,1.625,565,2.407,566,1.254,592,2.219,594,2.824,595,1.99,620,2.238,621,0.745,622,2.122,624,1.784,625,2.122,627,0.745,628,1.784,630,1.99,633,1.254,648,1.254,650,2.299,651,0.745,657,0.745,682,1.784,683,1.254,684,1.254,685,1.493,686,1.784,687,1.784,688,1.254,698,1.254,703,1.042,704,1.176,705,1.176,706,1.176,707,1.784,708,1.176,710,1.254,712,1.254,727,1.622,729,0.745,730,0.745,734,1.01,736,2.426,737,1.114,738,3.038,739,1.622,740,1.736,741,1.874,742,2.637,743,1.874,744,2.426,745,4.212,746,2.198,747,3.837,748,3.173,749,3.173,750,2.844,751,2.035,752,3.992,753,3.173,754,1.874,755,3.173,756,1.699,757,3.173,758,1.874,759,1.114,760,1.114,761,2.844,762,1.114,763,1.114,764,1.01,765,1.114,766,2.844,767,2.439,768,1.558,769,1.01,770,1.114,771,1.01,772,1.114,773,2.426,774,1.114,775,2.844,776,1.114,777,1.874,778,1.114,779,1.01,780,1.01,781,1.114,782,1.114,783,1.114,784,1.114,785,1.114,786,1.114,787,1.114,788,1.114,789,1.114,790,1.114,791,1.114,792,1.114,793,2.844,794,1.874,795,2.844,796,1.114,797,1.01,798,1.114,799,2.844,800,2.426,801,0.926,802,1.114,803,1.114,804,2.426,805,1.114,806,2.426,807,1.874,808,1.114,809,1.114,810,1.114,811,1.114,812,1.114,813,1.114,814,1.114,815,1.874,816,1.114,817,1.874,818,1.114,819,1.114,820,1.114,821,1.114,822,1.874,823,1.874,824,1.114,825,3.437,826,1.874,827,1.114,828,1.114,829,1.114,830,1.874,831,1.874,832,1.114,833,1.114,834,1.114,835,1.114,836,1.114,837,1.01,838,1.114,839,1.114,840,1.114,841,1.114,842,1.874,843,1.114,844,1.874,845,1.114,846,1.114,847,1.874,848,1.114,849,1.114,850,2.844,851,1.114,852,1.114,853,2.426,854,1.114,855,1.114,856,1.699,857,2.577,858,1.874,859,1.699,860,1.874,861,1.114,862,1.114,863,2.426,864,1.874,865,1.699,866,1.874,867,1.114,868,3.173,869,2.426,870,3.173,871,1.699,872,2.426,873,3.173,874,2.844,875,1.114,876,1.114,877,2.844,878,1.114,879,1.874,880,1.874,881,1.874,882,1.874,883,1.874,884,1.114,885,1.114,886,1.874,887,1.874,888,1.874,889,1.114,890,1.114,891,1.114,892,2.426,893,1.874,894,1.114,895,1.114,896,1.114,897,1.114,898,1.114,899,1.114,900,1.114,901,1.01,921,1.254,923,1.254,938,1.01,939,2.467,940,2.467,941,2.467,942,2.467,943,2.467,944,1.467,945,1.467,946,1.467,947,1.467,948,1.467,949,1.467,950,1.467,951,1.467,952,1.467,953,1.467,954,1.467,955,1.467,956,1.254,957,1.467,958,1.467,959,1.467,960,1.467,961,1.467,962,1.467,963,2.467,964,2.467,965,3.744,966,3.744,967,2.467,968,2.467,969,2.467,970,2.467,971,2.467,972,2.467,973,1.558,974,1.114,975,1.114,976,1.114,977,1.558,978,1.467,979,1.254,980,1.467,981,1.114,982,1.467]],["title/components/LandingPageComponent.html",[0,0.185,102,0.926]],["body/components/LandingPageComponent.html",[0,0.292,1,0.999,2,1.682,3,0.19,4,0.165,5,1.307,6,1.307,7,1.307,8,1.307,9,0.165,13,0.872,14,2.909,15,2.094,16,1.238,17,1.776,18,1.683,19,1.287,21,1.287,23,0.642,24,1.287,26,0.762,29,1.312,31,0.947,32,0.021,33,0.878,34,0.605,35,0.947,37,0.924,38,1.22,39,0.291,40,0.19,42,0.19,43,0.119,62,1.985,64,2.254,65,1.541,66,2.254,67,2.418,68,2.286,69,2.679,70,1.548,71,2.388,72,1.643,75,4.258,76,1.993,77,2.679,78,2.418,79,1.747,81,3.135,82,2.231,83,0.805,84,1.776,85,1.593,86,1.307,87,2.163,88,1.307,89,1.307,90,0.999,91,1.357,92,1.307,93,0.999,94,1.776,95,1.054,96,1.307,97,0.805,98,0.851,99,1.307,100,0.898,101,1.307,102,1.568,103,2.357,104,0.999,105,1.307,106,0.999,107,1.307,108,0.999,109,1.307,110,0.999,111,1.307,112,0.999,113,1.307,114,0.999,115,1.307,116,0.999,117,1.307,118,1.112,119,1.307,120,1.307,121,0.014,122,0.014,144,2.462,166,2.103,209,0.898,211,0.805,264,3.303,266,1.643,267,1.548,269,2.388,270,1.643,272,1.993,275,2.103,276,2.231,278,2.103,279,2.231,280,2.231,281,3.244,284,1.357,286,3.144,287,1.747,289,2.373,290,2.231,291,2.231,292,2.231,293,1.747,294,1.747,326,2.141,356,2.785,367,4.835,368,4.258,383,3.543,444,2.785,449,3.783,450,3.783,502,3.831,526,3.428,527,3.783,739,1.863,977,2.315,983,5.187,984,6.065,985,6.065,986,3.666,987,3.666,988,3.666,989,3.666,990,3.135,991,4.979,992,4.608,993,4.258,994,5.654,995,3.666,996,3.666,997,3.666,998,3.666,999,3.666,1000,3.135,1001,3.135]],["title/components/LoginComponent.html",[0,0.185,104,0.977]],["body/components/LoginComponent.html",[0,0.26,1,0.804,2,1.443,3,0.152,4,0.133,5,1.051,6,1.051,7,1.051,8,1.051,9,0.133,13,0.748,15,0.894,16,0.996,17,1.724,18,1.634,19,1.104,21,1.104,23,0.516,24,1.104,25,1.671,26,0.888,29,1.415,31,0.762,32,0.021,33,0.78,34,0.965,35,0.762,37,0.933,38,1.231,39,0.357,40,0.152,42,0.152,43,0.095,44,1.35,60,2.496,62,2.332,64,2.432,65,1.595,66,2.004,67,2.197,68,2.077,69,2.327,70,1.245,71,2.122,72,1.321,73,1.915,74,1.321,76,1.602,77,1.804,78,1.703,79,1.405,80,2.941,82,1.321,83,0.648,84,1.524,85,1.367,86,1.051,87,1.965,88,1.051,89,1.051,90,0.804,91,1.165,92,1.051,93,0.804,94,1.524,95,0.848,96,1.051,97,0.648,98,0.684,99,1.051,100,0.722,101,1.051,102,0.762,103,0.996,104,1.502,105,1.051,106,0.804,107,1.051,108,0.804,109,1.051,110,0.804,111,1.051,112,0.804,113,1.051,114,0.804,115,1.051,116,0.804,117,1.051,118,0.894,119,1.051,120,1.051,121,0.012,122,0.012,133,0.939,144,2.379,145,1.954,148,1.229,161,1.576,164,1.229,166,1.804,167,1.35,168,1.367,169,1.61,170,1.576,172,0.996,179,2.496,190,1.697,192,3.459,194,3.246,195,0.762,197,0.804,207,2.029,208,1.722,209,0.722,210,1.051,211,1.211,212,0.684,224,3.793,253,1.111,254,1.111,255,1.111,263,4.712,265,1.602,266,1.321,267,1.245,268,1.498,269,2.122,270,1.321,272,1.602,274,2.995,275,2.122,276,2.469,277,1.722,278,1.804,279,1.915,280,1.915,281,3.071,282,2.731,283,1.722,284,1.37,287,1.405,288,1.321,289,1.405,290,1.915,291,1.915,292,1.915,293,2.036,294,2.036,306,2.029,307,2.8,309,3.173,310,2.8,324,1.405,325,1.703,327,1.445,410,2.239,439,2.553,506,3.48,526,3.793,539,3.793,541,2.496,547,2.907,552,4.651,556,1.443,568,2.197,570,2.029,977,1.862,992,4.186,1002,2.521,1003,4.272,1004,5.025,1005,4.272,1006,5.51,1007,3.246,1008,2.948,1009,2.948,1010,2.948,1011,3.246,1012,3.653,1013,4.272,1014,4.272,1015,4.444,1016,3.653,1017,2.948,1018,2.521,1019,2.948,1020,4.634,1021,4.634,1022,2.239,1023,2.948,1024,2.239,1025,2.948,1026,2.948,1027,2.948,1028,2.948,1029,2.948,1030,2.948,1031,2.948,1032,2.521,1033,2.948,1034,2.948,1035,4.712,1036,2.941,1037,2.521,1038,2.521,1039,2.521,1040,2.521,1041,2.521,1042,2.521,1043,3.246,1044,2.521,1045,2.948,1046,2.948,1047,3.246,1048,2.239,1049,2.239,1050,2.239,1051,4.272,1052,2.239,1053,2.948]],["title/components/NavigationComponent.html",[0,0.185,106,0.977]],["body/components/NavigationComponent.html",[0,0.287,1,0.965,2,1.642,3,0.183,4,0.16,5,1.263,6,1.263,7,1.263,8,1.263,9,0.16,13,0.62,15,1.074,16,1.196,17,1.769,18,1.676,19,1.257,21,1.257,23,1.097,24,1.257,29,1.128,32,0.021,33,0.755,37,0.657,38,0.867,39,0.207,40,0.183,42,0.183,43,0.115,62,2.214,64,1.939,65,1.708,66,1.939,67,1.939,68,2.093,69,2.054,70,2.646,72,2.489,73,3.107,74,2.179,77,2.054,78,1.939,83,0.778,84,1.734,85,1.556,86,1.263,87,2.132,88,1.263,89,1.263,90,0.965,91,1.326,92,1.263,93,0.965,94,1.734,95,1.018,96,1.263,97,0.778,98,0.822,99,1.263,100,0.867,101,1.263,102,0.915,103,1.196,104,0.965,105,1.263,106,1.63,107,1.263,108,0.965,109,1.263,110,0.965,111,1.263,112,0.965,113,1.263,114,0.965,115,1.263,116,0.965,117,1.263,118,1.684,119,1.263,120,1.263,121,0.014,122,0.014,133,1.068,151,5.535,172,1.196,179,2.841,197,0.965,203,3.071,204,3.694,264,2.069,269,2.8,272,2.643,273,3.028,275,2.525,276,2.489,278,2.346,279,2.179,280,1.587,284,1.908,287,1.687,290,1.587,291,1.587,292,1.587,299,2.643,344,1.018,363,1.496,413,2.438,414,2.822,416,2.438,417,4.116,419,3.071,428,2.438,429,2.841,457,2.236,566,2.471,742,3.071,751,3.406,924,4.219,928,4.116,937,3.028,973,3.071,974,2.69,975,2.69,1054,3.028,1055,7.107,1056,4.862,1057,4.862,1058,5.553,1059,4.862,1060,5.553,1061,5.978,1062,3.541,1063,4.862,1064,3.541,1065,3.694,1066,4.862,1067,3.541,1068,4.862,1069,5.553,1070,3.541,1071,4.862,1072,3.541,1073,4.862,1074,3.541,1075,4.749,1076,3.541,1077,2.69,1078,3.541,1079,2.69,1080,3.541,1081,3.541,1082,3.541,1083,3.541,1084,3.541,1085,3.541,1086,4.749,1087,5.978,1088,3.541,1089,2.438,1090,4.862,1091,3.541,1092,3.541,1093,3.541,1094,3.541,1095,3.541,1096,3.541,1097,3.541,1098,2.69,1099,2.69,1100,3.541]],["title/injectables/NotyfService.html",[145,1.087,320,1.513]],["body/injectables/NotyfService.html",[3,0.223,4,0.195,9,0.195,13,1.073,23,0.756,24,1.433,26,1.274,29,1.501,31,1.433,32,0.021,33,0.861,34,1.186,35,1.433,37,1.03,38,1.584,39,0.324,40,0.223,42,0.223,43,0.14,44,1.501,68,2.091,121,0.015,122,0.015,133,1.219,145,1.682,155,2.438,161,1.433,167,1.359,168,1.775,169,2.091,172,1.458,185,5.856,190,2.313,195,1.77,197,1.177,203,3.503,211,1.219,231,2.438,267,2.343,269,2.343,275,2.732,320,2.343,323,2.521,324,2.057,414,2.818,528,2.726,1101,3.691,1102,6.094,1103,4.316,1104,5.546,1105,4.316,1106,6.221,1107,6.468,1108,5.546,1109,4.316,1110,5.546,1111,5.546,1112,5.546,1113,5.546,1114,5.546,1115,5.546,1116,6.468,1117,5.546,1118,4.316,1119,4.214,1120,4.316,1121,4.316]],["title/components/PageNotFoundComponent.html",[0,0.185,108,0.977]],["body/components/PageNotFoundComponent.html",[0,0.33,1,1.281,2,1.977,3,0.243,4,0.212,5,1.676,6,1.676,7,1.676,8,1.676,9,0.212,13,0.823,14,3.42,15,2.222,16,1.587,17,1.826,18,1.73,19,1.513,21,1.513,32,0.021,33,0.909,39,0.275,40,0.243,42,0.243,43,0.152,83,1.033,84,2.088,85,1.873,86,1.676,87,2.38,88,1.676,89,1.676,90,1.281,91,1.596,92,1.676,93,1.281,94,2.088,95,1.352,96,1.676,97,1.033,98,1.091,99,1.676,100,1.151,101,1.676,102,1.215,103,1.587,104,1.281,105,1.676,106,1.281,107,1.676,108,1.819,109,1.676,110,1.281,111,1.676,112,1.281,113,1.676,114,1.281,115,1.676,116,1.281,117,1.676,118,1.426,119,1.676,120,1.676,121,0.016,122,0.016,901,4.819,1106,5.006,1122,4.019,1123,3.236,1124,4.019,1125,6.376,1126,5.854,1127,4.7,1128,4.7]],["title/modules/PagesModule.html",[329,0.704,1129,2.467]],["body/modules/PagesModule.html",[1,1.927,3,0.253,4,0.221,9,0.221,11,3.37,32,0.021,39,0.423,40,0.253,42,0.253,43,0.158,83,1.076,102,1.827,106,1.335,108,1.927,121,0.017,122,0.017,329,0.962,331,1.485,332,2.068,333,3.094,334,2.194,335,2.333,336,1.653,341,2.986,342,2.861,343,2.333,344,1.408,346,2.141,347,2.141,351,3.091,352,2.859,353,2.661,354,3.263,355,2.487,502,3.091,509,4.186,1123,3.37,1129,5.127,1130,4.186,1131,4.186,1132,4.186,1133,4.464,1134,4.895,1135,4.186,1136,4.186,1137,4.186,1138,4.895,1139,4.186,1140,4.186]],["title/modules/PagesRoutingModule.html",[329,0.704,1133,2.263]],["body/modules/PagesRoutingModule.html",[0,0.345,1,1.699,3,0.269,4,0.235,9,0.235,11,3.585,32,0.021,39,0.419,40,0.269,42,0.269,43,0.168,102,1.611,103,1.759,108,1.699,121,0.017,122,0.017,209,1.275,212,1.208,302,2.646,331,1.579,336,1.759,346,1.857,347,2.222,351,3.288,431,3.042,432,3.64,433,3.178,434,3.288,435,3.388,437,3.288,502,3.288,1123,3.585,1133,3.935,1135,4.453,1136,4.453,1137,4.453,1139,4.453,1140,4.453,1141,5.207,1142,5.207]],["title/components/ProfileComponent.html",[0,0.185,110,0.977]],["body/components/ProfileComponent.html",[0,0.217,1,0.595,2,1.151,3,0.113,4,0.098,5,0.778,6,0.778,7,0.778,8,0.778,9,0.098,13,0.597,15,1.833,16,0.737,17,1.639,18,1.552,19,0.88,21,0.88,23,0.382,24,0.88,25,1.436,26,0.708,28,1.784,29,1.565,31,0.564,32,0.021,33,0.65,34,0.938,35,1.083,37,1.147,38,1.258,39,0.344,40,0.113,41,0.778,42,0.113,43,0.071,44,1.333,56,2.766,62,2.047,64,2.047,65,1.603,66,1.671,67,1.888,68,1.784,69,2.484,70,1.439,71,2.298,72,1.527,73,0.978,74,0.978,76,1.186,77,2.169,78,2.047,79,1.624,82,2.122,83,0.48,84,1.215,85,1.09,86,0.778,87,1.689,88,0.778,89,0.778,90,0.595,91,1.483,92,0.778,93,0.595,94,1.215,95,0.628,96,0.778,97,0.48,98,0.506,99,0.778,100,0.535,101,0.778,102,0.564,103,0.737,104,0.595,105,0.778,106,0.595,107,0.778,108,0.595,109,0.778,110,1.291,111,0.778,112,0.595,113,0.778,114,0.595,115,0.778,116,0.595,117,1.831,118,2.011,119,0.778,120,0.778,121,0.01,122,0.01,133,0.749,138,2.499,142,1.415,143,1.599,144,2.204,145,1.784,147,1.358,148,1.361,164,0.98,165,1.151,166,1.439,167,1.333,168,1.09,170,1.52,179,1.99,195,1.562,199,1.215,200,2.984,206,0.737,209,0.834,210,0.778,211,1.196,212,1.522,242,1.935,251,1.866,266,1.527,267,1.439,268,1.109,269,2,270,2.122,271,1.658,275,2,276,2.122,278,2,279,2.301,280,2.301,281,3.278,284,1.291,287,1.04,289,2.256,290,2.122,291,2.122,292,2.122,293,1.04,294,1.04,307,2.406,309,2.99,310,1.731,316,4.134,321,0.87,344,1.205,373,1.275,383,3.179,535,4.049,554,2.913,555,3.816,556,2.368,557,4.428,566,1.731,568,2.464,594,2.17,620,1.284,739,3.07,740,3.285,767,2.448,768,3.243,1000,1.866,1001,1.866,1024,1.658,1032,1.866,1143,1.866,1144,3.407,1145,3.407,1146,3.583,1147,2.913,1148,4.19,1149,4.391,1150,3.597,1151,4.734,1152,4.734,1153,3.597,1154,3.597,1155,4.734,1156,4.734,1157,4.734,1158,4.734,1159,3.407,1160,3.407,1161,2.913,1162,2.183,1163,2.183,1164,2.913,1165,2.183,1166,4.049,1167,2.183,1168,2.183,1169,2.183,1170,2.183,1171,2.183,1172,2.183,1173,2.913,1174,2.183,1175,2.183,1176,2.183,1177,5.135,1178,2.183,1179,2.183,1180,2.183,1181,2.183,1182,2.183,1183,4.19,1184,2.183,1185,2.183,1186,1.866,1187,2.183,1188,2.183,1189,3.407,1190,2.183,1191,1.866,1192,2.183,1193,2.183,1194,2.183,1195,2.183,1196,2.183,1197,2.183,1198,4.391,1199,5.135,1200,5.135,1201,1.866,1202,2.183,1203,1.866,1204,2.183,1205,4.19,1206,2.183,1207,2.183,1208,2.183,1209,2.183,1210,2.183,1211,2.183,1212,2.183,1213,2.183,1214,2.183,1215,1.866,1216,2.183,1217,2.183,1218,1.866,1219,2.183,1220,2.183,1221,2.183,1222,3.407,1223,2.913,1224,3.407,1225,2.183,1226,3.407,1227,2.183,1228,2.183,1229,2.183,1230,2.183,1231,2.183,1232,2.183,1233,2.183,1234,2.183,1235,2.183,1236,2.183,1237,2.183]],["title/modules/ProfileModule.html",[329,0.704,1238,2.467]],["body/modules/ProfileModule.html",[3,0.256,4,0.224,9,0.224,32,0.021,39,0.42,40,0.256,42,0.256,43,0.16,83,1.09,110,1.933,114,1.933,116,1.933,118,1.504,121,0.017,122,0.017,329,0.975,331,1.504,332,2.094,333,3.112,334,2.222,335,2.363,336,1.675,341,2.995,342,2.883,343,2.363,344,1.426,346,2.158,347,2.158,352,2.897,353,2.695,354,3.289,355,2.519,1238,5.134,1239,4.24,1240,4.24,1241,4.24,1242,4.478,1243,4.959,1244,4.24,1245,4.24,1246,4.24,1247,3.414,1248,4.24]],["title/modules/ProfileRoutingModule.html",[329,0.704,1242,2.263]],["body/modules/ProfileRoutingModule.html",[0,0.346,3,0.271,4,0.236,9,0.236,32,0.021,39,0.42,40,0.271,42,0.271,43,0.17,110,1.705,114,1.705,116,1.705,118,1.589,121,0.017,122,0.017,209,1.283,212,1.216,302,2.662,331,1.589,336,1.769,346,1.868,347,2.231,431,3.06,432,3.654,433,3.186,434,3.308,435,3.397,437,3.308,574,4.48,1242,3.95,1244,4.48,1245,4.48,1246,4.48,1247,3.607,1248,4.48,1249,5.239,1250,5.239]],["title/components/RegisterComponent.html",[0,0.185,112,0.977]],["body/components/RegisterComponent.html",[0,0.221,1,0.615,2,1.18,3,0.117,4,0.102,5,0.804,6,0.804,7,0.804,8,0.804,9,0.102,13,0.612,15,0.684,16,0.761,17,1.649,18,1.562,19,0.903,21,0.903,23,0.612,24,0.903,25,1.461,26,0.726,29,1.473,31,0.583,32,0.021,33,0.664,34,0.706,35,0.583,37,0.894,38,1.048,39,0.322,40,0.117,42,0.117,43,0.073,44,1.18,60,2.041,62,2.199,64,2.293,65,1.568,66,2.078,67,2.199,68,2.168,69,2.511,70,1.807,71,2.202,72,1.566,73,1.917,74,1.01,77,1.476,78,1.393,79,1.074,80,2.405,82,1.01,83,0.495,84,1.246,85,1.118,86,0.804,87,1.718,88,0.804,89,0.804,90,0.615,91,0.952,92,0.804,93,0.615,94,1.246,95,0.648,96,0.804,97,0.495,98,0.523,99,0.804,100,0.552,101,0.804,102,0.583,103,0.761,104,0.615,105,0.804,106,0.615,107,0.804,108,0.615,109,0.804,110,0.615,111,0.804,112,1.313,113,0.804,114,0.615,115,0.804,116,0.615,117,0.804,118,0.684,119,0.804,120,0.804,121,0.01,122,0.01,133,0.768,142,1.627,143,1.627,144,2.224,145,1.803,148,1.005,161,1.707,164,1.005,165,1.18,166,1.476,167,1.18,168,1.118,170,1.425,172,0.761,174,2.987,179,2.041,181,2.987,190,1.445,192,2.945,196,0.899,197,0.615,206,0.761,207,2.945,208,1.317,209,0.552,210,0.804,211,1.059,212,0.811,224,4.438,231,0.85,253,0.85,254,0.85,255,0.85,265,1.225,266,1.566,267,0.952,268,1.145,269,2.035,270,1.01,272,1.225,274,3.504,275,2.329,276,2.578,277,2.499,278,2.035,279,2.159,280,2.159,281,2.833,282,2.325,283,1.317,284,1.862,286,1.424,287,1.074,288,1.01,289,1.074,290,1.917,291,2.159,292,2.159,293,1.665,294,1.665,299,1.225,306,1.552,307,2.448,309,2.701,310,1.775,324,1.074,325,1.393,327,1.709,385,1.476,414,1.775,415,1.424,427,2.206,429,1.317,435,1.145,439,2.173,527,2.654,545,2.654,547,2.484,552,4.733,555,3.854,556,0.761,566,1.775,568,2.57,685,0.899,739,3.319,740,3.451,751,1.225,801,2.206,928,1.552,938,1.552,973,2.206,976,2.654,977,1.424,981,1.713,990,1.928,992,3.66,993,4.12,1007,2.654,1011,1.713,1012,2.987,1015,4.823,1016,2.987,1018,1.928,1020,4.189,1021,4.189,1022,1.713,1024,1.713,1035,2.987,1036,1.552,1037,1.928,1038,1.928,1039,1.928,1040,1.928,1041,1.928,1042,1.928,1043,1.713,1044,1.928,1047,1.713,1048,1.713,1049,1.713,1050,1.713,1052,1.713,1077,1.713,1079,1.713,1089,1.552,1098,1.713,1099,3.249,1150,1.713,1153,1.713,1154,1.713,1161,2.987,1166,4.715,1251,1.928,1252,4.277,1253,3.493,1254,5.514,1255,4.12,1256,4.277,1257,4.919,1258,2.254,1259,2.254,1260,2.254,1261,2.987,1262,4.12,1263,4.12,1264,3.658,1265,2.254,1266,2.254,1267,2.987,1268,2.987,1269,3.493,1270,3.493,1271,2.987,1272,2.254,1273,2.254,1274,2.254,1275,2.254,1276,1.928,1277,2.254,1278,3.493,1279,2.254,1280,2.254,1281,2.987,1282,2.987,1283,2.254,1284,2.254,1285,2.254,1286,2.254,1287,2.254,1288,2.254,1289,1.928,1290,1.928,1291,1.928,1292,1.928,1293,1.928,1294,2.254,1295,2.254,1296,2.254,1297,5.649,1298,5.083,1299,3.493,1300,2.987,1301,2.987,1302,2.987,1303,2.987,1304,2.987,1305,2.987,1306,1.928,1307,2.254,1308,2.254,1309,2.254,1310,2.254,1311,4.12,1312,2.254,1313,2.254,1314,2.654,1315,1.928,1316,1.928,1317,2.987,1318,1.928,1319,1.928,1320,2.987,1321,1.713,1322,1.928,1323,1.928,1324,2.987,1325,2.987,1326,2.987,1327,2.987,1328,1.928,1329,1.928,1330,1.928,1331,1.928,1332,1.928,1333,1.928,1334,1.928,1335,1.928,1336,1.928,1337,1.928,1338,4.12,1339,1.928]],["title/modules/SharedModule.html",[329,0.704,341,1.513]],["body/modules/SharedModule.html",[3,0.187,4,0.163,9,0.163,32,0.021,39,0.441,40,0.187,42,0.187,43,0.117,83,0.796,106,1.931,121,0.014,122,0.014,208,2.117,329,0.712,331,1.099,332,1.53,333,2.678,334,1.624,335,1.727,336,1.898,341,2.941,342,2.354,343,1.727,344,1.042,346,1.292,347,1.762,354,3.055,355,1.841,363,1.53,643,2.685,871,2.494,1340,3.098,1341,3.098,1342,3.098,1343,4.474,1344,3.623,1345,5.62,1346,5.62,1347,5.62,1348,3.623,1349,5.62,1350,3.623,1351,5.62,1352,3.623,1353,3.623,1354,5.62,1355,4.939,1356,5.62,1357,4.939,1358,5.62,1359,3.623,1360,5.62,1361,3.623,1362,5.62,1363,3.623,1364,5.62,1365,5.62,1366,3.623,1367,5.62,1368,3.623,1369,5.62,1370,3.623,1371,5.62,1372,3.623,1373,5.62,1374,3.623,1375,5.62,1376,3.623,1377,5.62,1378,3.623,1379,5.62,1380,3.623,1381,5.62,1382,3.623,1383,5.62,1384,3.623,1385,5.62,1386,3.623,1387,5.62,1388,3.623,1389,5.62,1390,4.939,1391,5.62,1392,3.623,1393,5.62,1394,3.623,1395,5.62,1396,3.623,1397,5.62,1398,3.623,1399,5.62,1400,3.623,1401,5.62,1402,3.623,1403,5.62,1404,3.623,1405,5.62,1406,3.623,1407,5.62,1408,3.623,1409,5.62,1410,3.623,1411,5.62,1412,3.623,1413,5.62,1414,3.623,1415,5.62,1416,3.623,1417,5.62,1418,3.623,1419,5.62,1420,2.753,1421,2.753,1422,3.623,1423,3.623,1424,3.623]],["title/components/StatsComponent.html",[0,0.185,114,0.977]],["body/components/StatsComponent.html",[0,0.227,1,0.642,2,1.221,3,0.122,4,0.106,5,0.84,6,0.84,7,0.84,8,0.84,9,0.106,13,0.864,15,0.715,16,0.796,17,1.662,18,1.575,19,0.934,21,0.934,23,0.413,24,0.934,25,1.496,26,0.49,28,1.829,29,1.512,31,1.137,32,0.021,33,0.96,34,1.041,35,1.137,37,1.12,38,1.077,39,0.288,40,0.122,41,0.84,42,0.122,43,0.076,44,1.546,45,0.94,56,2.112,62,1.754,64,1.754,65,0.642,66,0.94,67,1.754,68,2.005,71,1.527,78,1.441,83,0.966,84,1.289,85,1.157,86,0.84,87,1.759,88,0.84,89,0.84,90,0.642,91,0.986,92,0.84,93,0.642,94,1.289,95,0.678,96,0.84,97,0.518,98,0.547,99,0.84,100,0.577,101,0.84,102,0.609,103,0.796,104,0.642,105,0.84,106,0.642,107,0.84,108,0.642,109,0.84,110,0.642,111,0.84,112,0.642,113,0.84,114,1.345,115,0.84,116,0.642,117,0.84,118,0.715,119,0.84,120,0.84,121,0.01,122,0.01,127,3.761,133,0.794,138,2.331,142,1.485,143,1.666,147,1.441,148,1.815,155,1.363,161,0.609,164,1.04,165,1.221,167,0.885,168,1.157,170,0.934,172,2.088,191,2.116,195,1.559,197,1.686,199,1.759,200,2.083,206,0.796,211,1.084,212,1.63,218,2.681,239,0.94,242,2.116,264,2.569,266,1.056,267,0.995,278,0.995,282,1.281,284,1.199,287,2.096,315,2.112,325,1.441,326,1.377,327,1.265,360,1.62,373,1.377,390,2.015,414,1.837,419,1.488,425,2.777,439,2.235,556,1.896,557,3.115,566,2.235,594,1.754,620,2.379,630,2.096,643,3.051,682,1.723,685,2.238,686,1.123,687,1.123,703,1.527,704,1.123,705,1.123,706,1.123,707,1.123,708,1.123,724,1.377,735,2.746,745,1.622,746,1.622,751,2.391,764,3.395,767,3.523,779,2.489,780,1.622,857,3.865,920,2.015,956,2.015,973,3.808,974,2.746,975,1.79,1036,2.489,1065,1.79,1086,3.091,1089,3.028,1119,1.79,1173,3.091,1223,4.217,1261,3.091,1314,2.746,1321,1.79,1420,1.79,1421,4.698,1425,2.015,1426,4.398,1427,3.615,1428,4.398,1429,4.398,1430,4.398,1431,4.398,1432,4.398,1433,4.932,1434,3.615,1435,3.615,1436,4.932,1437,3.615,1438,4.398,1439,3.615,1440,2.356,1441,3.615,1442,4.398,1443,4.398,1444,4.398,1445,2.356,1446,3.615,1447,2.356,1448,6.42,1449,3.615,1450,2.356,1451,5.613,1452,2.356,1453,3.615,1454,4.398,1455,6.183,1456,2.356,1457,2.356,1458,4.8,1459,4.398,1460,3.615,1461,2.356,1462,2.356,1463,2.356,1464,3.615,1465,2.356,1466,2.356,1467,2.356,1468,2.356,1469,3.615,1470,3.615,1471,2.356,1472,4.398,1473,3.615,1474,3.615,1475,2.356,1476,2.356,1477,3.615,1478,3.615,1479,2.356,1480,2.356,1481,2.356,1482,2.356,1483,2.356,1484,2.356,1485,2.356,1486,2.356,1487,2.356,1488,2.356,1489,2.356,1490,3.615,1491,2.356,1492,2.356,1493,2.015,1494,2.356,1495,2.356,1496,2.356,1497,2.356,1498,3.615,1499,2.356,1500,2.356,1501,2.356,1502,2.356,1503,2.356,1504,3.615,1505,2.356,1506,2.356,1507,3.615,1508,2.356,1509,2.356,1510,2.356,1511,2.356,1512,2.356,1513,2.356,1514,2.356,1515,2.015,1516,3.615,1517,2.356,1518,2.356,1519,3.615,1520,3.615,1521,2.356,1522,2.356,1523,2.356,1524,3.615,1525,2.015,1526,2.356,1527,2.356,1528,2.356,1529,2.356,1530,2.356,1531,2.356,1532,2.356,1533,2.356,1534,2.356,1535,3.091]],["title/modules/TrackingModule.html",[329,0.704,1536,2.467]],["body/modules/TrackingModule.html",[3,0.261,4,0.228,9,0.228,32,0.021,39,0.416,40,0.261,42,0.261,43,0.164,83,1.11,97,1.565,100,1.745,121,0.017,122,0.017,329,0.993,331,1.533,332,2.135,333,3.137,334,2.265,335,2.408,336,1.707,341,3.009,342,2.917,343,2.408,344,1.453,346,2.183,347,2.183,352,2.952,353,2.747,354,3.327,355,2.568,514,2.265,618,2.568,1536,5.113,1537,4.321,1538,4.321,1539,4.321,1540,4.498,1541,5.053,1542,4.321,1543,4.321,1544,4.321]],["title/modules/TrackingRoutingModule.html",[329,0.704,1540,2.263]],["body/modules/TrackingRoutingModule.html",[0,0.327,3,0.275,4,0.24,9,0.24,32,0.021,39,0.416,40,0.275,42,0.275,43,0.172,97,1.388,100,1.547,121,0.018,122,0.018,209,1.305,212,1.236,302,2.707,331,1.616,336,1.8,346,1.9,347,2.253,431,3.113,432,3.691,433,3.209,434,3.365,435,3.21,437,3.365,618,2.707,742,3.365,1540,3.99,1542,4.556,1543,4.556,1544,4.556,1545,5.328,1546,5.328]],["title/pipes/TrimDecimalsPipe.html",[662,1.707,1343,2.263]],["body/pipes/TrimDecimalsPipe.html",[3,0.249,4,0.217,9,0.217,13,1.04,16,1.625,24,1.244,29,1.117,31,1.244,32,0.021,33,1,34,0.794,35,1.244,37,1.103,39,0.281,40,0.249,42,0.249,43,0.156,121,0.017,122,0.017,148,1.708,172,1.625,195,1.739,197,1.993,211,1.305,212,1.117,284,1.312,325,1.919,327,1.708,425,3.039,566,3.018,620,2.653,624,2.831,628,2.831,662,3.207,698,3.018,865,3.313,924,3.656,979,4.115,1075,4.115,1343,3.751,1547,4.812,1548,5.08,1549,4.115,1550,5.94,1551,5.94,1552,5.94,1553,5.94,1554,6.912,1555,4.812,1556,5.94,1557,6.728,1558,6.728,1559,6.728,1560,5.94,1561,5.94,1562,4.812,1563,4.812,1564,4.812,1565,4.812,1566,4.812]],["title/components/UpdateProfileComponent.html",[0,0.185,116,0.977]],["body/components/UpdateProfileComponent.html",[0,0.204,1,0.541,2,1.068,3,0.103,4,0.09,5,0.708,6,0.708,7,0.708,8,0.708,9,0.09,13,0.554,15,0.602,16,0.671,17,1.608,18,1.523,19,0.817,21,0.817,23,0.554,24,0.817,25,1.363,26,0.657,28,1.726,29,1.55,31,0.513,32,0.021,33,0.612,34,0.862,35,0.513,37,1.056,38,0.774,39,0.32,40,0.103,41,0.708,42,0.103,43,0.064,44,1.202,60,1.847,62,2.084,64,2.186,65,1.425,66,1.791,67,1.956,68,1.97,69,2.315,70,1.336,71,1.664,72,0.89,73,1.766,74,0.89,77,1.336,78,1.261,79,1.878,80,2.177,82,0.89,83,0.436,84,1.128,85,1.012,86,0.708,87,1.602,88,0.708,89,0.708,90,0.541,91,0.862,92,0.708,93,0.541,94,1.128,95,0.571,96,0.708,97,0.436,98,0.461,99,0.708,100,0.486,101,0.708,102,0.513,103,0.671,104,0.541,105,0.708,106,0.541,107,0.708,108,0.541,109,0.708,110,0.541,111,0.708,112,0.541,113,0.708,114,0.541,115,0.708,116,1.225,117,2.363,118,2.01,119,0.708,120,0.708,121,0.009,122,0.009,130,2.891,133,0.695,138,2.145,142,1.517,143,1.517,144,2.091,145,1.726,148,1.576,161,1.614,164,1.292,165,1.068,166,1.336,167,1.1,168,1.012,169,1.192,170,1.351,172,1.068,179,1.847,190,1.331,192,2.712,194,2.402,195,1.351,196,0.792,197,0.862,200,1.664,202,2.177,203,1.254,204,3.413,205,2.402,206,0.671,207,2.712,208,1.16,209,0.486,210,0.708,211,1.078,212,1.213,224,3.093,231,1.97,241,0.839,242,1.192,248,2.142,252,0.839,253,1.192,254,1.192,255,1.192,256,0.839,265,1.719,266,1.417,267,0.839,268,1.009,269,2.072,270,0.89,271,1.508,274,3.395,275,2.207,276,2.457,277,2.302,278,1.898,279,2.014,280,2.014,281,2.712,282,2.142,283,1.16,284,1.834,286,1.254,287,0.946,288,0.89,289,0.946,290,1.766,291,2.014,292,2.014,293,1.507,294,1.507,299,1.079,310,1.607,325,1.261,327,1.576,402,1.698,414,1.607,415,1.254,427,1.997,429,1.16,435,1.009,439,2.002,444,1.508,530,2.704,539,3.093,541,1.847,545,2.402,552,4.598,555,2.488,556,2.302,557,2.488,566,1.607,568,2.49,570,1.367,620,1.192,649,1.847,685,0.792,703,0.839,739,3.264,740,3.395,751,1.079,801,1.997,928,1.367,938,1.367,973,1.997,976,2.402,977,1.254,981,1.508,1007,2.402,1011,1.508,1015,4.662,1022,1.508,1036,1.367,1043,1.508,1047,1.508,1048,1.508,1049,1.508,1050,1.508,1052,1.508,1077,1.508,1079,1.508,1089,1.367,1098,1.508,1099,2.993,1146,3.369,1147,2.704,1150,1.508,1153,2.993,1154,1.508,1164,4.195,1191,1.698,1198,1.698,1247,4.632,1255,3.842,1257,4.687,1262,4.469,1263,4.866,1264,3.369,1267,2.704,1268,2.704,1271,2.704,1276,1.698,1281,2.704,1282,2.704,1289,1.698,1290,1.698,1291,1.698,1292,1.698,1293,1.698,1297,3.842,1298,2.704,1300,2.704,1301,2.704,1302,2.704,1303,2.704,1304,2.704,1305,2.704,1306,1.698,1311,3.369,1314,2.402,1315,1.698,1316,1.698,1317,2.704,1318,1.698,1319,1.698,1320,2.704,1321,1.508,1322,1.698,1323,1.698,1324,2.704,1325,2.704,1326,2.704,1327,2.704,1328,1.698,1329,1.698,1330,1.698,1331,1.698,1332,1.698,1333,1.698,1334,1.698,1335,1.698,1336,1.698,1337,1.698,1338,3.842,1339,1.698,1567,5.754,1568,1.698,1569,3.94,1570,3.94,1571,3.94,1572,3.94,1573,3.94,1574,3.94,1575,3.94,1576,4.493,1577,3.94,1578,4.195,1579,4.493,1580,1.986,1581,1.986,1582,3.94,1583,1.986,1584,1.986,1585,1.986,1586,1.986,1587,1.986,1588,1.986,1589,1.986,1590,1.986,1591,1.986,1592,1.986,1593,1.986,1594,1.986,1595,1.986,1596,1.986,1597,3.162,1598,1.986,1599,1.986,1600,1.986,1601,1.986,1602,1.986,1603,1.986,1604,1.986,1605,1.986,1606,1.986,1607,1.986,1608,3.94,1609,1.986,1610,1.986,1611,1.986,1612,3.94,1613,1.986,1614,1.986,1615,1.986,1616,1.986,1617,1.986,1618,1.986,1619,3.162,1620,1.986,1621,1.986,1622,1.986,1623,3.94,1624,1.986,1625,1.986,1626,1.986,1627,1.986,1628,1.986,1629,1.986,1630,1.986,1631,1.986]],["title/interfaces/UserData.html",[358,1.147,738,2.263]],["body/interfaces/UserData.html",[0,0.177,3,0.114,4,0.099,9,0.099,13,0.385,14,1.285,15,1.277,17,0.539,18,0.51,19,0.568,21,0.568,23,0.385,25,0.667,26,0.457,28,1.442,32,0.022,33,0.532,34,0.566,37,0.782,38,1.031,39,0.319,40,0.114,41,0.784,42,0.114,43,0.071,44,1.262,45,1.679,56,2.46,65,0.934,85,0.704,98,1.555,100,0.539,121,0.01,122,0.01,133,0.753,138,1.792,142,1.157,143,1.157,144,1.838,145,1.442,147,1.367,148,1.843,152,1.514,155,0.829,161,1.473,164,0.632,165,0.743,166,0.929,167,1.031,168,0.704,169,0.829,170,1.332,188,1.514,190,1.157,191,1.792,195,1.473,196,1.367,199,1.838,200,0.929,206,0.743,209,0.539,210,0.784,211,1.331,212,1.679,231,0.829,239,2.177,241,0.929,242,2.283,243,0.929,247,0.986,252,0.929,253,0.829,254,0.829,255,0.829,256,0.929,258,2.266,260,2.266,274,1.196,284,1.878,288,2.131,325,0.877,327,1.367,358,1.649,360,2.642,363,0.929,365,2.359,380,1.514,383,1.285,385,2.177,387,2.899,396,1.514,399,1.514,401,2.359,403,1.514,404,1.389,439,1.741,457,2.659,514,0.986,550,0.986,556,1.74,565,2.266,592,2.177,594,2.809,595,1.048,616,1.196,620,2.283,621,1.118,622,2.139,624,2.007,625,2.416,627,1.118,628,1.633,630,2.456,633,1.741,648,1.118,650,2.774,651,1.118,657,1.118,682,2.266,683,1.741,684,1.741,685,1.896,686,2.266,687,2.266,688,1.741,703,1.448,704,1.633,705,1.633,706,1.633,707,2.266,708,1.633,710,1.741,712,1.741,727,2.139,729,1.118,730,1.118,734,1.514,736,2.604,737,1.671,738,3.254,739,2.774,740,2.967,741,1.671,742,1.389,743,1.671,744,1.671,745,3.924,746,1.514,747,3.199,748,1.671,749,1.671,750,2.604,751,1.863,752,3.199,753,2.604,754,1.671,755,1.671,756,1.514,757,2.604,758,1.671,759,1.671,760,1.671,761,3.612,762,1.671,763,1.671,764,1.514,765,1.671,766,1.671,767,3.01,768,2.164,769,1.514,770,1.671,771,1.514,772,1.671,773,3.199,774,1.671,775,1.671,776,1.671,777,2.604,778,1.671,779,1.514,780,1.514,781,1.671,782,1.671,783,1.671,784,1.671,785,1.671,786,1.671,787,1.671,788,1.671,789,1.671,790,1.671,791,1.671,792,1.671,793,2.604,794,1.671,795,1.671,796,1.671,797,1.514,798,1.671,799,3.612,800,3.199,801,1.389,802,1.671,803,1.671,804,3.199,805,1.671,806,3.199,807,2.604,808,1.671,809,1.671,810,1.671,811,1.671,812,1.671,813,1.671,814,1.671,815,2.604,816,1.671,817,2.604,818,1.671,819,1.671,820,1.671,821,1.671,822,2.604,823,2.604,824,1.671,825,4.147,826,2.604,827,1.671,828,1.671,829,1.671,830,2.604,831,2.604,832,1.671,833,1.671,834,1.671,835,1.671,836,1.671,837,1.514,838,1.671,839,1.671,840,1.671,841,1.671,842,2.604,843,1.671,844,2.604,845,1.671,846,1.671,847,2.604,848,1.671,849,1.671,850,1.671,851,1.671,852,1.671,853,1.671,854,1.671,855,1.671,856,1.514,857,2.359,858,1.671,859,1.514,860,1.671,861,1.671,862,1.671,863,2.604,864,1.671,865,1.514,866,1.671,867,1.671,868,1.671,869,1.671,870,1.671,871,1.514,872,2.604,873,2.604,874,1.671,875,1.671,876,1.671,877,1.671,878,1.671,879,1.671,880,1.671,881,1.671,882,1.671,883,2.604,884,1.671,885,1.671,886,1.671,887,1.671,888,2.604,889,1.671,890,1.671,891,1.671,892,3.199,893,2.604,894,1.671,895,1.671,896,1.671,897,1.671,898,1.671,899,1.671,900,1.671,901,1.514]],["title/guards/UserGuard.html",[301,2.263,1632,2.722]],["body/guards/UserGuard.html",[3,0.24,4,0.21,9,0.21,13,1.111,23,0.814,24,1.503,26,0.967,29,1.349,31,1.503,32,0.021,33,0.903,34,0.959,35,1.503,37,1.234,39,0.389,40,0.24,42,0.24,43,0.15,121,0.016,122,0.016,144,2.074,167,1.424,170,1.879,191,2.191,200,2.456,202,4.003,209,1.139,211,1.394,214,4.408,301,3.672,303,3.532,305,5.199,306,3.201,307,3.377,309,4.007,310,2.954,311,3.976,312,5.684,313,5.684,315,4.078,316,5.199,317,4.972,318,3.023,319,5.425,320,2.456,321,1.854,322,3.976,323,2.716,324,2.216,325,1.854,326,2.716,327,1.337,1632,4.417,1633,3.976,1634,4.649,1635,4.649,1636,4.649]],["title/classes/UserModule.html",[43,0.116,1637,2.467]],["body/classes/UserModule.html",[3,0.25,4,0.218,9,0.218,13,0.846,23,0.846,26,1.005,29,1.687,31,1.249,32,0.021,33,0.75,34,1.2,35,1.249,42,0.25,43,0.156,121,0.017,122,0.017,133,1.309,148,1.39,170,1.539,195,1.909,199,2.302,329,0.95,547,3.076,555,4.077,594,2.375,620,2.245,739,3.28,740,3.509,1149,5.52,1201,4.133,1203,4.133,1215,4.133,1218,4.133,1578,5.52,1637,4.764,1638,4.833,1639,4.133,1640,6.456,1641,5.956,1642,5.956,1643,4.833,1644,4.833,1645,4.833,1646,4.833,1647,4.833,1648,4.833,1649,4.833,1650,4.833,1651,4.833,1652,4.833,1653,4.833,1654,4.133,1655,4.833,1656,4.833,1657,4.833,1658,4.833,1659,4.833,1660,4.833,1661,4.833]],["title/injectables/UserService.html",[28,1.087,320,1.513]],["body/injectables/UserService.html",[3,0.183,4,0.16,9,0.16,13,0.852,23,0.621,24,1.258,26,1.012,28,1.476,29,1.59,31,0.916,32,0.021,33,0.55,34,1.034,35,0.916,37,1.287,39,0.379,40,0.183,42,0.183,43,0.115,44,1.192,121,0.014,122,0.014,133,1.069,138,2.661,142,1.877,143,2.02,144,2.473,148,1.399,161,0.916,164,1.802,165,1.643,166,2.055,167,1.192,170,1.771,190,1.197,191,1.834,195,1.714,199,2.309,200,2.895,206,1.197,209,0.868,211,1.221,212,1.567,241,1.497,242,2.441,243,1.497,252,1.497,310,2.823,315,2.843,320,2.055,321,1.413,323,2.071,324,1.689,327,1.72,329,0.956,373,2.071,506,4.089,528,2.239,539,4.315,541,3.246,550,2.181,556,2.342,557,4.328,568,1.94,570,2.44,703,2.055,767,3.246,768,3.073,769,2.44,771,2.44,859,3.35,1020,4.919,1021,4.919,1186,5.537,1515,4.161,1637,3.825,1654,3.031,1662,3.031,1663,4.161,1664,5.556,1665,5.556,1666,5.556,1667,5.981,1668,5.981,1669,5.981,1670,4.866,1671,3.545,1672,3.545,1673,3.545,1674,4.866,1675,3.545,1676,3.545,1677,3.545,1678,3.545,1679,3.545,1680,3.545,1681,3.545,1682,3.545,1683,3.545,1684,3.545,1685,3.545,1686,3.545,1687,3.545,1688,3.545,1689,3.545,1690,3.545,1691,3.545,1692,3.545,1693,3.545,1694,3.545,1695,3.545,1696,3.545,1697,4.866,1698,3.545,1699,4.866,1700,3.545]],["title/coverage.html",[1701,4.192]],["body/coverage.html",[0,0.38,1,1.189,9,0.197,10,3.728,11,3.002,12,3.728,28,1.322,32,0.021,34,0.719,43,0.141,63,3.728,65,1.872,90,1.189,93,1.189,95,1.254,97,0.958,98,1.012,100,1.068,102,1.127,104,1.189,106,1.189,108,1.189,110,1.189,112,1.189,114,1.189,116,1.189,121,0.016,122,0.016,123,4.241,124,3.002,125,3.728,145,1.322,161,1.127,239,1.738,270,1.954,284,1.522,288,1.954,301,3.526,302,2.215,304,3.728,307,2.215,320,2.742,350,3.002,356,4.241,358,2.197,438,3.728,484,3.312,502,2.754,529,3.728,592,1.842,593,3.728,617,3.921,618,3.41,619,3.921,623,2.37,626,2.37,629,2.37,662,2.078,734,4.24,738,2.754,983,3.728,1002,3.728,1054,3.728,1101,3.728,1122,3.728,1123,3.002,1124,3.728,1143,3.728,1247,3.002,1251,3.728,1343,2.754,1425,3.728,1535,4.774,1548,3.728,1549,3.728,1567,3.728,1568,3.728,1632,3.312,1633,3.728,1637,3.002,1639,3.728,1662,3.728,1701,3.728,1702,4.36,1703,4.36,1704,4.36,1705,4.36,1706,4.36,1707,4.36,1708,4.36,1709,4.36,1710,6.158,1711,4.36,1712,5.583,1713,5.583,1714,5.583,1715,4.36,1716,4.36,1717,4.36,1718,5.583,1719,5.583,1720,4.36,1721,4.36,1722,6.158,1723,4.36,1724,4.36,1725,5.583,1726,4.36,1727,4.36,1728,4.36,1729,4.36,1730,4.36,1731,4.36,1732,4.36,1733,3.728,1734,4.36,1735,5.583,1736,4.36,1737,4.36,1738,3.728,1739,4.36,1740,4.36,1741,4.36,1742,4.36]],["title/dependencies.html",[332,1.821,1743,2.269]],["body/dependencies.html",[32,0.021,40,0.265,121,0.017,122,0.017,208,2.992,209,1.254,321,2.042,332,2.163,334,2.295,355,2.602,492,5.276,493,4.687,541,2.992,1102,4.38,1420,3.891,1421,3.891,1744,5.121,1745,6.233,1746,5.121,1747,6.17,1748,5.121,1749,5.121,1750,5.121,1751,5.121,1752,5.121,1753,5.121,1754,5.121,1755,5.121,1756,5.121,1757,6.17,1758,5.121,1759,5.121,1760,5.121,1761,6.873,1762,5.121,1763,5.121,1764,5.121,1765,5.121,1766,5.121,1767,5.121,1768,5.121,1769,5.121,1770,5.121,1771,5.121,1772,5.121,1773,5.121,1774,5.121,1775,5.121,1776,5.121,1777,5.121,1778,5.121,1779,5.121]],["title/index.html",[23,0.523,1663,2.553,1780,2.986]],["body/index.html",[0,0.34,4,0.227,15,1.524,32,0.017,33,0.78,48,4.296,51,4.296,57,5.615,121,0.017,122,0.017,128,2.394,161,1.298,164,1.888,325,2.003,344,1.445,364,4.296,756,3.459,837,3.459,856,3.459,1065,3.817,1493,4.296,1525,6.156,1743,3.817,1745,4.296,1781,5.024,1782,6.099,1783,5.024,1784,6.567,1785,4.296,1786,5.024,1787,6.099,1788,6.996,1789,5.024,1790,5.024,1791,5.024,1792,5.024,1793,5.024,1794,5.024,1795,5.024,1796,5.024,1797,6.567,1798,5.024,1799,6.829,1800,5.024,1801,5.024,1802,5.024,1803,5.024,1804,6.099,1805,6.099,1806,6.829,1807,5.024,1808,6.099,1809,6.099,1810,5.024,1811,7.113,1812,5.024,1813,5.024,1814,6.099,1815,5.024,1816,5.024,1817,5.024,1818,5.024,1819,6.567,1820,5.024,1821,3.817]],["title/modules.html",[331,1.487]],["body/modules.html",[32,0.018,121,0.018,122,0.018,330,3.657,331,1.611,340,3.355,341,2.244,458,3.657,463,3.355,464,3.355,486,3.355,493,5.573,521,3.355,797,4.96,1129,3.657,1133,3.355,1238,3.657,1242,3.355,1458,6.161,1536,3.657,1540,3.355,1822,7.336,1823,7.336,1824,7.511]],["title/overview.html",[1821,3.724]],["body/overview.html",[1,1.588,2,1.312,32,0.021,43,0.126,83,0.854,90,1.588,93,1.588,95,1.953,97,1.28,100,1.426,102,1.505,104,1.588,106,1.852,108,1.588,110,1.588,112,1.588,114,1.588,116,1.588,121,0.014,122,0.014,303,2.952,329,0.764,330,4.857,331,1.179,332,1.641,333,1.852,334,1.742,335,1.852,336,1.312,337,3.323,338,3.323,339,3.323,340,3.678,341,3.073,342,2.468,343,1.852,344,1.117,433,1.852,458,5.075,459,3.323,460,3.323,461,3.323,462,3.323,463,3.678,464,4.085,465,5.532,466,4.98,467,5.532,468,4.98,469,5.532,470,4.98,471,5.532,472,4.98,486,4.456,518,3.323,519,3.323,520,3.323,521,3.678,528,2.454,616,2.112,662,1.852,685,2.065,698,1.974,1129,4.932,1130,3.323,1131,3.323,1132,3.323,1133,3.678,1238,4.932,1239,3.323,1240,3.323,1241,3.323,1242,3.678,1340,3.323,1341,3.323,1342,3.323,1343,4.289,1536,4.857,1537,3.323,1538,3.323,1539,3.323,1540,3.678,1733,4.428,1821,2.952,1825,3.886,1826,3.886,1827,3.886]],["title/properties.html",[133,0.948,1743,2.269]],["body/properties.html",[32,0.02,121,0.019,122,0.019,133,1.289,1785,5.016,1828,5.866]],["title/routes.html",[433,2.336]],["body/routes.html",[32,0.019,121,0.019,122,0.019,433,2.81]],["title/miscellaneous/variables.html",[1829,2.553,1830,3.688]],["body/miscellaneous/variables.html",[18,1.291,23,0.974,32,0.021,34,0.918,121,0.018,122,0.018,172,1.878,197,1.516,449,5.208,450,5.208,484,4.922,541,3.249,1119,4.225,1738,4.756,1829,4.756,1830,4.756,1831,5.561,1832,5.561,1833,5.561,1834,5.561,1835,5.561,1836,5.561,1837,5.561,1838,5.561,1839,5.561,1840,5.561,1841,5.561,1842,5.561]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1828,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.0625em",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.12.0",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":423,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.2vh",{"_index":420,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.375em",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.3s",{"_index":1078,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1475,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":1086,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["0.58",{"_index":802,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.789",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["0.8",{"_index":1471,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["000436",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["0004ff",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["00076e",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["00115c",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["002fff",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["003c6e",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0099ff",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["01",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["01t${drinkdata.time}:00",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["05em",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0625em",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1.11.3",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.2rem",{"_index":1096,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1.5vh",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["100",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["100vh",{"_index":1073,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":1084,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":1100,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10vh",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["11.30.0",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["12/13",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["12vh",{"_index":1090,"title":{},"body":{"components/NavigationComponent.html":{}}}],["13/14",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1733,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14/15",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["15.2.0",{"_index":1745,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["155",{"_index":1094,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":1087,"title":{},"body":{"components/NavigationComponent.html":{}}}],["16",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["1970",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1vh",{"_index":923,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1501,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"overview.html":{}}}],["2.3.0",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":933,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["20/21",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1476,"title":{},"body":{"components/StatsComponent.html":{}}}],["201",{"_index":927,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20px",{"_index":419,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["21",{"_index":406,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["212121",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["21212180",{"_index":418,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["255",{"_index":1092,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25vh",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["28vh",{"_index":925,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2rem",{"_index":1072,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2vh",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["3.0.0",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3/3",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1827,"title":{},"body":{"overview.html":{}}}],["300",{"_index":1472,"title":{},"body":{"components/StatsComponent.html":{}}}],["30kg",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["30vh",{"_index":921,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["33",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":920,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["375em",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3vh",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":1825,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1533,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/5",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":937,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["400",{"_index":1455,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1111,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1127,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1128,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40vh",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["48009b",{"_index":1001,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["4caf50",{"_index":1115,"title":{},"body":{"injectables/NotyfService.html":{}}}],["5",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5.0.2",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1535,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["50px",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["50vh",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5px",{"_index":1071,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5s",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5vh",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["6",{"_index":1826,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["65",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["6e0065",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6f00ff",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6vh",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["7",{"_index":1484,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["700",{"_index":1454,"title":{},"body":{"components/StatsComponent.html":{}}}],["75",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["75em",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["80vh",{"_index":1522,"title":{},"body":{"components/StatsComponent.html":{}}}],["8400ff",{"_index":1000,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["85vh",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["87",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["87008b",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["9",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["95vh",{"_index":995,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["980328026322",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["997",{"_index":1080,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1088,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1485,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.payload.doc.data",{"_index":665,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":1142,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":938,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1145,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map((a",{"_index":664,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1158,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":312,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["active",{"_index":1160,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["adddrinkamount",{"_index":902,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adding",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["address",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adjustchartsizes",{"_index":1433,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":91,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":436,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["adminformcomponent",{"_index":90,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":302,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":330,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpagecomponent",{"_index":93,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":340,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["afauth",{"_index":1579,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["alert",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["allowed",{"_index":300,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["allows",{"_index":361,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":422,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["always",{"_index":607,"title":{},"body":{"injectables/DateService.html":{}}}],["amount",{"_index":624,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1348,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":1350,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/bottom",{"_index":1352,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/button",{"_index":1355,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1359,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1361,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/chips",{"_index":1363,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1366,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1368,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":1370,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1372,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":1374,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1378,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":1400,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slider",{"_index":1402,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1404,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":1406,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":1408,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":1410,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1412,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1416,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tree",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["apikey",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":95,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":458,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":463,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximate",{"_index":794,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["approximately",{"_index":754,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1440,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1523,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1444,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1482,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1513,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1800,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1531,"title":{},"body":{"components/StatsComponent.html":{}}}],["async",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":310,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":307,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authmodule",{"_index":486,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":521,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":309,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["automatically",{"_index":1792,"title":{},"body":{"index.html":{}}}],["available",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["await",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["bac",{"_index":752,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["background",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bar",{"_index":643,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1473,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1428,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1469,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":613,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":605,"title":{},"body":{"injectables/DateService.html":{}}}],["block",{"_index":1098,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["blood",{"_index":750,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":996,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bottom",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["box",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["break",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1824,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1799,"title":{},"body":{"index.html":{}}}],["builder",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["button:disabled",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button:first",{"_index":409,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:last",{"_index":411,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:not(:disabled",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["buttons",{"_index":407,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["calculate",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":795,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":793,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["canactivate",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":311,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1817,"title":{},"body":{"index.html":{}}}],["catch",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":402,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1516,"title":{},"body":{"components/StatsComponent.html":{}}}],["ccblue",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpink",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpurple",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cdr",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["change",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":763,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1448,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1065,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["checking",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["checks",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["child",{"_index":427,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["choice",{"_index":1813,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1638,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1784,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["clicks",{"_index":632,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clip",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["close",{"_index":934,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["cluster_adminmodule",{"_index":337,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":338,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":339,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":589,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":590,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1130,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1131,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1132,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1239,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1241,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1240,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1340,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1342,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1341,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackingmodule",{"_index":1537,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_declarations",{"_index":1539,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_imports",{"_index":1538,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["code",{"_index":1795,"title":{},"body":{"index.html":{}}}],["collection",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["collection('user",{"_index":769,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["color",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1814,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":1135,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/admin",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["components/drink",{"_index":1542,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/home/home.component",{"_index":1544,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/landing",{"_index":1137,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/login/login.component",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/page",{"_index":1139,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":1244,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/register/register.component",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":1245,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/update",{"_index":1246,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["confirm",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm('are",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1597,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmdelete",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["confirmed",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1257,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('invalid",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.error('user",{"_index":796,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":306,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":140,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1641,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":622,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["container.open",{"_index":1081,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contains",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":751,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["core/core.module",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/admin.guard",{"_index":434,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["coremodule",{"_index":464,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1519,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1701,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cps",{"_index":647,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["create",{"_index":778,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["createuserwithemailandpassword",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":315,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentemail",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currenttime",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1622,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":767,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["d3",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":594,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date().gettime",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(event.target.value",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1489,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1487,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1488,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1486,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateinput",{"_index":757,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":592,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":745,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1500,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1496,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1557,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1554,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1551,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["decimals.pipe.ts",{"_index":1549,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1555,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":333,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["decoration",{"_index":1095,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":956,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["deep",{"_index":1526,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":403,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletion",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":935,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detail.alcohol",{"_index":788,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":786,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":787,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":785,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":789,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":922,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":783,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map((detail",{"_index":784,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1790,"title":{},"body":{"index.html":{}}}],["development",{"_index":1786,"title":{},"body":{"index.html":{}}}],["digit",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["direction",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["directive",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1798,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1803,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1116,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1107,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1802,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1520,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["div.drink",{"_index":929,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["div:last",{"_index":930,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["doc(currentuserid",{"_index":770,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["doc(drinkid",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc(this.editingdrinkid",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["doc.data",{"_index":1509,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1508,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1510,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set(drinkamountdata",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["docsnapshot",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1497,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["drankdrinksref",{"_index":1504,"title":{},"body":{"components/StatsComponent.html":{}}}],["drink",{"_index":98,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink.abv",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.alcohol",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.amount",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.calories",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.category",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":919,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":404,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":675,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.time.split(':').map(number",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":623,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamountdata",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkamounts",{"_index":630,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":626,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1498,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":239,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.drinkamounts",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdata.ml",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.time",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":780,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1512,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1514,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":1546,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["drinklistcomponent",{"_index":97,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkmlinput",{"_index":931,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinkname",{"_index":657,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":360,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":746,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":638,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimeinput",{"_index":932,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinktimes",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1110,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1812,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":1079,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["edit",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["eee",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":736,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{}}}],["emits",{"_index":610,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["encapsulation",{"_index":1056,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1811,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["enter",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["entries",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.findindex",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entryid",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["entryindex",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1104,"title":{},"body":{"injectables/NotyfService.html":{}}}],["estimated",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["estimatedsobertime",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["execute",{"_index":1808,"title":{},"body":{"index.html":{}}}],["existing",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata.drinkamounts",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{}}}],["f44336",{"_index":1117,"title":{},"body":{"injectables/NotyfService.html":{}}}],["f700ff",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["false",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{}}}],["fb",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":775,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":766,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ff00dd",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ff00ff",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1794,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1528,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fills",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filterdrinks",{"_index":670,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":642,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":669,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["find",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":629,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":1493,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["firstvaluefrom(this.auth.authstate",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["fixed",{"_index":924,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["flat",{"_index":790,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["float",{"_index":408,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1266,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["form.component.html",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:115",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:20",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:24",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:28",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:79",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:93",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["formats",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formattedtime",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formbuilder",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontainer",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontainer>h1",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol('male",{"_index":1270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formdata",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":1346,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":1140,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["found.component.html",{"_index":1126,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1125,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1124,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1123,"title":{},"body":{"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["further",{"_index":1818,"title":{},"body":{"index.html":{}}}],["future",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1521,"title":{},"body":{"components/StatsComponent.html":{}}}],["gb",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["gender",{"_index":740,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1569,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["genderselection",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["genderselection>label",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genderselection>label>input",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gendertemp",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1797,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1783,"title":{},"body":{"index.html":{}}}],["generates",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["get's",{"_index":1582,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getauth",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["getconfirmpassword",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["getdate",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getdrinks",{"_index":660,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{}}}],["getformatteddate(date",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1150,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1575,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getpassword",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1151,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1576,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1152,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":597,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1663,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1153,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1154,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["gradient(135deg",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["graph",{"_index":1458,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1429,"title":{},"body":{"components/StatsComponent.html":{}}}],["gray",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["green",{"_index":412,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["group",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":301,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["habits",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1069,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handles",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["headercontainer",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["help",{"_index":1819,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidden",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["history.state.drink",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":608,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":742,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/TrackingRoutingModule.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":743,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":744,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1463,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1453,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1437,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["hours",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1791,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":1070,"title":{},"body":{"components/NavigationComponent.html":{}}}],["icons",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["image",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["img",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./admin/admin.module').then((m",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then((m",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then((m",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tracking/tracking.module').then((m",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1529,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["including",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":732,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["infocontainer",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["initialization",{"_index":649,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initializeapp",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializedrinkdata",{"_index":903,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["initializedrinkdata(drinkname",{"_index":658,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initializeform",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":320,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1097,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inner",{"_index":994,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["innercontainer",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["input",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["input[type=\"radio",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["input[type=\"radio\"]:checked+span",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inputfieldzt",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inset(100",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["instantly",{"_index":611,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":358,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":616,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["isadmin",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isopen",{"_index":1060,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isuser",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["it's",{"_index":1144,"title":{},"body":{"components/ProfileComponent.html":{}}}],["items",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["justify",{"_index":1089,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["karma",{"_index":1810,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["kcal/serving",{"_index":918,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["keep",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["key",{"_index":627,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:first",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:last",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":103,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingbuttondiv",{"_index":997,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landinglogin",{"_index":999,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landingpagecomponent",{"_index":102,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["landingregister",{"_index":998,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["large",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["last7days",{"_index":1481,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1495,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["later",{"_index":656,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["latest",{"_index":609,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1459,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1460,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1430,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1483,"title":{},"body":{"components/StatsComponent.html":{}}}],["letter",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["li",{"_index":428,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["li:not(:last",{"_index":426,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["lightgray",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["linear",{"_index":291,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list",{"_index":363,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":1543,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["list.component.html",{"_index":636,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":637,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":619,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:114",{"_index":910,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:128",{"_index":909,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:138",{"_index":908,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:156",{"_index":911,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:164",{"_index":907,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:175",{"_index":906,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:34",{"_index":733,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:58",{"_index":913,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:62",{"_index":916,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:66",{"_index":914,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:70",{"_index":915,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:74",{"_index":912,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:89",{"_index":917,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:95",{"_index":905,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":618,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["listens",{"_index":1442,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":631,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":735,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1434,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1446,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadchildren",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":317,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpiechartdata",{"_index":1435,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1449,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":764,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["log",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":526,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttondiv",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":104,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["m.adminmodule",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trackingmodule",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":359,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map(([name",{"_index":782,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["map((actions",{"_index":663,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["margin",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["mat",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matautocompletemodule",{"_index":1347,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":1349,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbottomsheetmodule",{"_index":1351,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":1354,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1356,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1358,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":1263,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matcheckboxmodule",{"_index":1360,"title":{},"body":{"modules/SharedModule.html":{}}}],["matches",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1362,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdatepickermodule",{"_index":1367,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogmodule",{"_index":1369,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":1371,"title":{},"body":{"modules/SharedModule.html":{}}}],["materror",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["matexpansionmodule",{"_index":1373,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldupdate",{"_index":1628,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformfieldupdate>mat",{"_index":1629,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformlogin",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformregister",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matformregister>mat",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matgridlistmodule",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.max",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(...pastdrinks.map((drink",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(earliestalldrinktime.gettime",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1474,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1470,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.min(...drinktimes.map((drink",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.random",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["maticonmodule",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1364,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginatormodule",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["matripplemodule",{"_index":1365,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidermodule",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1399,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbarmodule",{"_index":1403,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsortmodule",{"_index":1405,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":1407,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":1409,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1411,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1415,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattreemodule",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":425,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["mdc",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["media",{"_index":1530,"title":{},"body":{"components/StatsComponent.html":{}}}],["menu",{"_index":1055,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["merging",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["message",{"_index":1106,"title":{},"body":{"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{}}}],["messages",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1829,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ml",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{}}}],["mm",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mmm",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":329,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1820,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":364,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["navigates",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigation",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1059,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1058,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["navigation?.extras?.state",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":106,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":405,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["necessary",{"_index":635,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":1815,"title":{},"body":{"index.html":{}}}],["needed",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1612,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":677,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1619,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1608,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":1525,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["ngneat/hot",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":1527,"title":{},"body":{"components/StatsComponent.html":{}}}],["ngxchartsmodule",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["none",{"_index":417,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["notification",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1161,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1102,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":145,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["nowrap",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["null",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":620,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["object",{"_index":1119,"title":{},"body":{"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map(([category",{"_index":1518,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts",{"_index":781,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1616,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1511,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1499,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1492,"title":{},"body":{"components/StatsComponent.html":{}}}],["ondatechange",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondatechange(event",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondrinkclick(drink",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["oninit",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1436,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":139,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":1066,"title":{},"body":{"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":741,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":266,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["overlay",{"_index":1083,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":1821,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["package",{"_index":1743,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":687,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":351,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["page.component.html",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":367,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":356,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":986,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:22",{"_index":988,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:24",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:29",{"_index":987,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:43",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:51",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:68",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:76",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:84",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":350,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":108,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{}}}],["pages/components/landing",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesmodule",{"_index":1129,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":1133,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["param",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1184,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1563,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1262,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsdontmatch",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1255,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pastdrinks",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":435,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{}}}],["per",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["personal",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":1250,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["picker",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1164,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1451,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1431,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1478,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1432,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1477,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":662,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap(({user",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipes",{"_index":1547,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1561,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1558,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["please",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pointer",{"_index":429,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":414,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["present",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":776,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":118,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":111,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":1248,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profile.component.html",{"_index":1147,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1146,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1568,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:100",{"_index":1596,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:106",{"_index":1598,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:112",{"_index":1599,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:120",{"_index":1586,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:140",{"_index":1584,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:151",{"_index":1583,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:168",{"_index":1581,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:186",{"_index":1587,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":1592,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:32",{"_index":1589,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1593,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1588,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1590,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1591,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:58",{"_index":1580,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:79",{"_index":1585,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:88",{"_index":1594,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1595,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":1247,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profileadminbtn",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilebuttondiv",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecontainer",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilelogoutbtn",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilemodule",{"_index":1238,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1578,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1570,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profileroutingmodule",{"_index":1242,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilestatsbtn",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilesub",{"_index":1148,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileupdatebtn",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1782,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1503,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1494,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":628,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{}}}],["provideauth",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":335,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["providestorage",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":634,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["pwcheck",{"_index":1571,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["querysnapshot",{"_index":1506,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ratio",{"_index":1532,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1443,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":1345,"title":{},"body":{"modules/SharedModule.html":{}}}],["record",{"_index":779,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["recorded",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["rect(0",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["red",{"_index":410,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttoadminformadddrink",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1155,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":984,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1156,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":985,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1157,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('email",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["reference",{"_index":756,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":527,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":113,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1253,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1252,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1640,"title":{},"body":{"classes/UserModule.html":{}}}],["registerbutton",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerbuttondiv",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":112,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1149,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1254,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1256,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1166,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":415,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["reload",{"_index":1793,"title":{},"body":{"index.html":{}}}],["remixicon",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["result",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":327,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1490,"title":{},"body":{"components/StatsComponent.html":{}}}],["rgb(20",{"_index":1074,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgb(201",{"_index":926,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgb(255",{"_index":936,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgba($color",{"_index":421,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["rgba(0",{"_index":1085,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(132",{"_index":1091,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(72",{"_index":1093,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1113,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":316,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":432,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":437,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":313,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":433,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["routing.module.ts",{"_index":431,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["row",{"_index":1534,"title":{},"body":{"components/StatsComponent.html":{}}}],["rules",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["run",{"_index":1788,"title":{},"body":{"index.html":{}}}],["running",{"_index":1804,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1796,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":640,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":644,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1524,"title":{},"body":{"components/StatsComponent.html":{}}}],["select",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["selectdrink",{"_index":904,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":666,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":595,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":596,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":639,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1789,"title":{},"body":{"index.html":{}}}],["server",{"_index":1787,"title":{},"body":{"index.html":{}}}],["serves",{"_index":357,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":322,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["serving",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":600,"title":{},"body":{"injectables/DateService.html":{}}}],["sets",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":598,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":601,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["shape",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["shared/navigation/navigation.component",{"_index":1138,"title":{},"body":{"modules/PagesModule.html":{}}}],["shared/shared.module",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["sharedmodule",{"_index":341,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":1353,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":1491,"title":{},"body":{"components/StatsComponent.html":{}}}],["shows",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":992,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["snapshotchanges",{"_index":661,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["sober",{"_index":753,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":755,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":424,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["spacing",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["span",{"_index":1099,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["specific",{"_index":633,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/.../environment.ts",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin",{"_index":430,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/admin/admin.module.ts",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/components/admin",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":525,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/login/login.component.ts",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/login/login.component.ts:20",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:23",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:39",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:44",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:50",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:58",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/register/register.component.ts",{"_index":1251,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/register/register.component.ts:119",{"_index":1265,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:27",{"_index":1272,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:40",{"_index":1258,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:56",{"_index":1259,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:61",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:67",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:73",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:79",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:85",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:91",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:98",{"_index":1260,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":591,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":304,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":308,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:26",{"_index":314,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1633,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1634,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:26",{"_index":1635,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/services/authentication.service",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:17",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:32",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:40",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:45",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:52",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:59",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:69",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:76",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/date.service",{"_index":621,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/date.service.ts",{"_index":593,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":606,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":604,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:24",{"_index":602,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:32",{"_index":599,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/notyf/notyf.service",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/notyf/notyf.service.ts",{"_index":1101,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:10",{"_index":1103,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:16",{"_index":1118,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:41",{"_index":1109,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:49",{"_index":1105,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/user/user.module.ts",{"_index":1639,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.module.ts:10",{"_index":1648,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:11",{"_index":1644,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:12",{"_index":1642,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:5",{"_index":1645,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:6",{"_index":1649,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:7",{"_index":1643,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:8",{"_index":1646,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:9",{"_index":1647,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:22",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:26",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:36",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:43",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:61",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:74",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:87",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/landing",{"_index":983,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/page",{"_index":1122,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages",{"_index":1141,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1134,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/profile/components/profile/profile.component.ts",{"_index":1143,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/profile/profile.component.ts:107",{"_index":1165,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:116",{"_index":1163,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:131",{"_index":1162,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:141",{"_index":1168,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:150",{"_index":1172,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:157",{"_index":1174,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:164",{"_index":1171,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:22",{"_index":1175,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:26",{"_index":1180,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:30",{"_index":1179,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:34",{"_index":1178,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:38",{"_index":1176,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:42",{"_index":1159,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:65",{"_index":1170,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:88",{"_index":1169,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:98",{"_index":1167,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts",{"_index":1425,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/stats/stats.component.ts:116",{"_index":1450,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:18",{"_index":1456,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:22",{"_index":1462,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:26",{"_index":1461,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:31",{"_index":1457,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:35",{"_index":1439,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:48",{"_index":1441,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:56",{"_index":1452,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:69",{"_index":1445,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:87",{"_index":1447,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/update",{"_index":1567,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1249,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1243,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/navigation/navigation.component.ts",{"_index":1054,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/shared/navigation/navigation.component.ts:16",{"_index":1064,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:21",{"_index":1062,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/pipes/trim",{"_index":1548,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1344,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tracking/components/drink",{"_index":617,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts",{"_index":734,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts:117",{"_index":948,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:134",{"_index":947,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:192",{"_index":944,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:263",{"_index":945,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:275",{"_index":951,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:286",{"_index":949,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:293",{"_index":953,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:300",{"_index":954,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:308",{"_index":952,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:321",{"_index":946,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:43",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:47",{"_index":958,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:51",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:55",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:59",{"_index":955,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:63",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:67",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:88",{"_index":957,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/components/home/home.component.ts:93",{"_index":950,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/tracking/tracking",{"_index":1545,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["src/app/tracking/tracking.module.ts",{"_index":1541,"title":{},"body":{"modules/TrackingModule.html":{}}}],["src/environments/environment.ts",{"_index":1738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1780,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1173,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":115,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1427,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1426,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":114,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storagebucket",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":655,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["stored",{"_index":1801,"title":{},"body":{"index.html":{}}}],["stores",{"_index":676,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["style",{"_index":416,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["subscribe",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["subscribers",{"_index":612,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1177,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1108,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sum",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1822,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["svg",{"_index":1823,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["tempamounts",{"_index":646,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["temporary",{"_index":645,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tempstring",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":641,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":671,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every((term",{"_index":674,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1807,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1816,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1806,"title":{},"body":{"index.html":{}}}],["text",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["then((result",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.adjustchartsizes",{"_index":1464,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1621,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1505,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(this.currentuserid",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.currentuser",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.subscribe(async",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isadmin",{"_index":328,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1636,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.login(email",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1479,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":792,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":791,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1183,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":651,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe((date",{"_index":765,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(this.selecteddate",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.deletedrinkfromfirestore(drink",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkform",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":777,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":653,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter((drink",{"_index":673,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1653,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":761,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":760,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":654,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe(map(user",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1613,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1614,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe((drinks",{"_index":652,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getgenderandweight",{"_index":1600,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicurl",{"_index":1601,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.getweight",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1502,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1650,"title":{},"body":{"classes/UserModule.html":{}}}],["this.initializedrinkdata(drink.name",{"_index":667,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.initializeform",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.iseditmode",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.isopen",{"_index":1068,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1465,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1466,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyf.error(message",{"_index":1121,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1120,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('no",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('something",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('drink",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('password",{"_index":1624,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1618,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.notyfservice.success('url",{"_index":1607,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.password?.value",{"_index":1620,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.passwordsmatchvalidator",{"_index":1271,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1517,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1480,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1655,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilesub",{"_index":1181,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pwcheck",{"_index":1623,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.registerageindays",{"_index":1657,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.registerform.get('confirmpassword",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('email",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('gender",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('weight",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1182,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/admin",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin/adminform",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":990,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/auth/register",{"_index":989,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.router.navigate(['/pages/landing",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate(['/profile/personalstats",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/profile/profile",{"_index":1626,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.router.navigate(['/profile/updateprofile",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/tracking/drinklist",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.router.navigate(['/tracking/home",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":672,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":650,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":684,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":603,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":614,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":615,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":668,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.tempamounts[drink.name",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.tempamounts[drinkname",{"_index":659,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.totalcalories",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.updateprofileform.get('confirmpassword",{"_index":1604,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('gender",{"_index":1606,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('password",{"_index":1603,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('profilepicurl",{"_index":1602,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('weight",{"_index":1605,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdata",{"_index":773,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuseremailstring",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.weight",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1609,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1610,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["throw",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":625,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":759,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":1357,"title":{},"body":{"modules/SharedModule.html":{}}}],["togglemenu",{"_index":1061,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1063,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tolocaletimestring('en",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tools",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["topromise",{"_index":771,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tostring",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["total",{"_index":747,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":748,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":749,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{}}}],["trackingmodule",{"_index":1536,"title":{"modules/TrackingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingroutingmodule",{"_index":1540,"title":{"modules/TrackingRoutingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trailing",{"_index":1565,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":1075,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["transform(value",{"_index":1553,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":1077,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["translatex",{"_index":1076,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1082,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["triggers",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1552,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimals:2",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["trimdecimalspipe",{"_index":1343,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1559,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1560,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1550,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1556,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["try",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1261,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["types",{"_index":1114,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":413,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["undefined",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unelevated",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unique",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["unit",{"_index":1805,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1515,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1564,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":993,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":117,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["update(drinkdata",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["update(updates",{"_index":1617,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebutton",{"_index":1631,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebuttondiv",{"_index":1630,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["updateddrinkamounts",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name].push",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateform",{"_index":1627,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/ProfileRoutingModule.html":{}}}],["updateprofile(user",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":116,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1572,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1577,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["updates.gender",{"_index":1615,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1611,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1625,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["uploaded",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["urltree",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":1136,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":648,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["used",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1654,"title":{},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user.gender",{"_index":1660,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1651,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1656,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1658,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1659,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1652,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1661,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":738,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":768,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":774,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":772,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocs",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["userguard",{"_index":1632,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1637,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1573,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1264,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(0",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(1",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(30",{"_index":1268,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.minlength(8",{"_index":1267,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1562,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["valuechanges",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["values",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1830,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1785,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1809,"title":{},"body":{"index.html":{}}}],["view",{"_index":362,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":737,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":758,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1067,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1057,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["watches",{"_index":762,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["weight",{"_index":739,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1574,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":991,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1507,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.confirm",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["window.innerheight",{"_index":1468,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1467,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1438,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrap",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["wrong",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":1112,"title":{},"body":{"injectables/NotyfService.html":{}}}],["y",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["yyyy",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":928,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["zero",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1566,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1781,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        \n    About Us\n    Thank you for using our application! \n        The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits. \n        This app is for personal use only and should not be used commercially in any form.\n    \n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                .innerContainer {\n    width: 80%;\n    height: 100%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 70%;\n}\n\n.innerContainer > h1 {\n    font-size: 5vh;\n    padding-bottom: 10vh;\n}\n\n.innerContainer > p {\n    font-size: large;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Thank you for using our application!         The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits.         This app is for personal use only and should not be used commercially in any form.    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the form with default values and validation rules.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:20\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss'],\n})\nexport class AdminFormComponent {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm: FormGroup;\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [\n          caloriesPerServing,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    } else {\n      this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        ml: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: ['', Validators.required],\n        caloriesPerServing: [\n          '',\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.initializeForm();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Initializes the form with default values and validation rules.\n   */\n  initializeForm(): void {\n    this.drinkForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      abv: [\n        null,\n        [Validators.required, Validators.min(0), Validators.max(100)],\n      ],\n      caloriesPerServing: [null, [Validators.required, Validators.min(0)]],\n      ml: [null, [Validators.required, Validators.min(1)]],\n      category: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   *\n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs\n            .collection('drink')\n            .doc(this.editingDrinkId)\n            .update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.router.navigate(['/admin/admin']);\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Update drink' : 'Add a new drink' }}\n\n  \n\n    \n      Name\n      \n    \n\n    \n      Alcohol by Volume (ABV %)\n      \n    \n\n    \n      Calories per Serving\n      \n    \n\n    \n      Volume (ml)\n      \n    \n\n    \n      Category\n      \n    \n\n    \n      Submit\n    \n  \n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                .admin-form-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-form-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n}\n\n.drink-form {\n  width: 40vh;\n  height: 25vh;\n  padding-top: 2vh;\n}\n\n.form-group {\n  text-align: center;\n  margin-bottom: 3vh;\n}\n\n.drink-form input {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.admin-form-button-div {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n}\n\n.admin-form-button {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.admin-form-button:disabled {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: gray;\n  background-image: linear-gradient(135deg, #00115c 0%, #000436 100%);\n  cursor: not-allowed;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Update drink\\' : \\'Add a new drink\\' }}            Name                    Alcohol by Volume (ABV %)                    Calories per Serving                    Volume (ml)                    Category                    Submit      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    \n      return this.authService.isAdmin();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AdminFormComponent, AdminPageComponent],\n  imports: [SharedModule, AdminRoutingModule, CommonModule],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss'],\n})\nexport class AdminPageComponent {\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs\n      .collection('drink')\n      .valueChanges({ idField: 'id' })\n      .subscribe(\n        (drinks) => {\n          this.drinks = drinks;\n        },\n        (error) => {\n          console.error('Error fetching drinks', error);\n        }\n      );\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.router.navigate(['/admin/adminform']);\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.router.navigate(['/admin/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  All Drinks\n  \n    \n      {{ drink.name }}\n      \n        Delete &nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp; Edit\n      \n    \n  \n  \n    Add New Drink\n  \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                .admin-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.add-drink-button {\n  margin-left: 21%;\n  margin-top: 10%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.buttons-div {\n  float: right;\n}\n\n.buttons-div > button:first-of-type {\n  color: red;\n}\n\n.buttons-div > button:last-of-type {\n  color: green;\n}\n\n.add-drink-button-div {\n  width: 100%;\n}\n\n.admin-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.admin-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All Drinks            {{ drink.name }}              Delete                Edit                  Add New Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from \"@angular/router\";\nimport { AdminPageComponent } from \"./components/admin-page/admin-page.component\";\nimport { AdminFormComponent } from \"./components/admin-form/admin-form.component\";\nimport { NgModule } from \"@angular/core\";\nimport { AdminGuard } from \"../core/guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard] },\n  { path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth, AuthModule } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingPageComponent } from './pages/components/landing-page/landing-page.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingPageComponent },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'pages',\n    loadChildren: () =>\n      \"import('./pages/pages.module').then((m) => m.PagesModule)\",\n  },\n  {\n    path: 'profile',\n    loadChildren: () =>\n      \"import('./profile/profile.module').then((m) => m.ProfileModule)\",\n  },\n  {\n    path: 'tracking',\n    loadChildren: () =>\n      \"import('./tracking/tracking.module').then((m) => m.TrackingModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [SharedModule, AuthRoutingModule, CommonModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Auth, signInWithEmailAndPassword, authState, createUserWithEmailAndPassword, updateProfile } from '@angular/fire/auth';\nimport { from, map, Observable, switchMap } from 'rxjs';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n  \n  /**\n   * \n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(private auth: Auth, private fireAuth: AngularFireAuth) { }\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string){\n    return from(\n      signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser(){ return this.currentUser$; }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == this.auth.currentUser?.email;}));\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == \"admin@zt.com\"}));\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string){\n    return from(createUserWithEmailAndPassword(this.auth, email, password))\n    .pipe(switchMap(({user}) => updateProfile(user, {displayName: username})));\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string){\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser(){ return from(this.auth.signOut()); }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      if (updatedDrinkAmounts[drink.name]) {\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      if (updatedDrinkAmounts[drink.name]) {\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      if (updatedDrinkAmounts[drink.name]) {\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0);\n      return { ...drink, drinkDate };\n    });\n\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0;\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                            \n                                tempAmounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                initializeDrinkData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink tracking to be uploaded\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDrinkData\n                        \n                    \n                \n            \n            \n                \ninitializeDrinkData(drinkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Initializes a temporary value to store drink data later\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the given drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:74\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:58\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:66\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:70\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:95\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:62\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:89\n                        \n                    \n\n            \n                \n                    Temporary data for consumed drink.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      if (updatedDrinkAmounts[drink.name]) {\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n    \n        \n  Add Drink\n\n  \n\n  \n    \n      {{ drink.name }}\n      \n        \n        {{drink.name}}\n        ABV: {{ drink.abv}}\n        Kcal/Serving: {{ drink.caloriesPerServing}}\n        Category: {{ drink.category}}\n        Size: {{ drink.ml}} ml\n        \n          Amount (ml)\n          \n          Time\n          \n          Add\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                .drink-list {\n  width: 35vh;\n  position: relative;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.drink-list ul {\n  position: relative; \n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\n.drink-list > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.drink-list li {\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  padding: 20px;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drink-details {\n  padding: 1vh;\n  position: fixed;\n  top: 0;\n  margin-top: 28vh;\n  margin-left: -5vh;\n  width: 40vh;\n  color: rgb(201, 201, 201);\n\n  z-index: 10;\n  background-color: #212121;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  text-align: center;\n}\n\n.drink-name {\n  margin-bottom: 2vh;\n  color: white;\n}\n\ndiv.drink-details div:last-of-type {\n  margin-top: 5vh;\n}\n\n.search-bar {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.drinkMlInput,\n.drinkTimeInput {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drinkMlInput {\n  margin-bottom: 1vh;\n}\n\n.add-drink-button {\n  margin-top: 20%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.close-drink-detail {\n  color: rgb(255, 0, 0);\n  margin-left: 40%;\n  position: absolute;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Drink              {{ drink.name }}                      {{drink.name}}        ABV: {{ drink.abv}}        Kcal/Serving: {{ drink.caloriesPerServing}}        Category: {{ drink.category}}        Size: {{ drink.ml}} ml                  Amount (ml)                    Time                    Add                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n})\nexport class DrinkListComponent {\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: {\n    [key: string]: { ml: number; cps: number; time: string; date: string };\n  } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(\n        `1970-01-01T${drinkData.time}:00`\n      ).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n\n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = (drink.abv / 100) * drinkData.ml * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      if (updatedDrinkAmounts[drink.name]) {\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category,\n        });\n      } else {\n        updatedDrinkAmounts[drink.name] = [\n          {\n            id: entryId,\n            amount: drinkData.ml,\n            calories: calories,\n            alcohol: alcohol,\n            time: formattedTime,\n            category: drink.category,\n          },\n        ];\n      }\n\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts,\n      };\n\n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n\n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.error('Invalid data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the drink tracking page and the overall data.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bac\n                            \n                            \n                                    \n                                dateInput\n                            \n                            \n                                drinksForTheDay\n                            \n                            \n                                selectedDate\n                            \n                            \n                                soberTime\n                            \n                            \n                                totalCalories\n                            \n                            \n                                totalDrinks\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateBAC\n                            \n                            \n                                calculateTotals\n                            \n                            \n                                    Async\n                                deleteDrinkFromFirestore\n                            \n                            \n                                    Async\n                                fetchDrinksForTheDay\n                            \n                            \n                                    Async\n                                fetchUserData\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                redirectToDrinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService, dateService: DateService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBAC\n                        \n                    \n                \n            \n            \n                \ncalculateBAC()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Calculates approximate blood alcohol content for given day.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If user data is not present then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotals\n                        \n                    \n                \n            \n            \n                \ncalculateTotals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Calculates total calories and drinks for the day.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDrinkFromFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDrinkFromFirestore(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:321\n                        \n                    \n\n\n            \n                \n                        Removes the selected drink from the user's consumed drinks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchDrinksForTheDay\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDrinksForTheDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Fetches the user's consumed drinks for the day.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Fetches user data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:286\n                        \n                    \n\n\n            \n                \n                        Formats the given date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The given date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The given date but properly formatted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Initializes the page.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:275\n                        \n                    \n\n\n            \n                \n                        Sets proper data on date change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event that triggers this method.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:308\n                        \n                    \n\n\n            \n                \n                        Shows alert for drink deletion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:293\n                        \n                    \n\n\n            \n                \n                        Opens the date picker.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToDrinks\n                        \n                    \n                \n            \n            \n                \nredirectToDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/home/home.component.ts:300\n                        \n                    \n\n\n            \n                \n                        Redirects to drink list page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bac\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:59\n                        \n                    \n\n            \n                \n                    Blood alcohol content for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:88\n                        \n                    \n\n            \n                \n                    Reference to the dateInput element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksForTheDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:47\n                        \n                    \n\n            \n                \n                    Drinks for the selected day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        soberTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    The time by the user will be sober approximately.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:51\n                        \n                    \n\n            \n                \n                    Total calories for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:55\n                        \n                    \n\n            \n                \n                    Total amount of drinks for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/home/home.component.ts:67\n                        \n                    \n\n            \n                \n                    The user's personal data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0);\n      return { ...drink, drinkDate };\n    });\n\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0;\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    \n\n    \n      \n    \n  \n\n   0\">\n    \n      \n        {{ drink.name }}\n        \n         {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |\n        trimDecimals:2 }} kcal\n      \n    \n  \n  \n    No drinks recorded for this day\n  \n\n  \n    \n      Total calories:{{ totalCalories | trimDecimals:2 }} kcal\n    \n    \n      Number of drinks:{{ totalDrinks }}\n    \n\n    \n      Estimated BAC:{{ bac | number: '1.2-2' }}%\n      Sober:~ {{ soberTime | date: 'EEE MMM dd yyyy HH:mm:ss'\n          }}\n    \n  \n  \n    Add Drink\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.date-picker-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.date-display-box {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding: 20px;\n  cursor: pointer;\n}\n\n.info-container {\n  padding-top: 5%;\n}\n\n.info-container-right {\n  float: right;\n}\n\nul > li {\n  text-align: center;\n}\n\n.add-drink-container {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2vh;\n}\n\n.add-drink-button {\n  margin-top: 5%;\n  width: 65%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.no-drinks {\n  text-align: center;\n}\n\n.home-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.home-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n.remove-drink {\n  color: red;\n  float: right;\n  margin-right: -1vh;\n  margin-top: -1.5vh;\n}\n\n.hidden-date-input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n}\n\n.date-picker-field {\n  padding-bottom: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedDate | date: \\'yyyy-MM-dd\\' }}                       0\">                  {{ drink.name }}                 {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |        trimDecimals:2 }} kcal                  No drinks recorded for this day              Total calories:{{ totalCalories | trimDecimals:2 }} kcal              Number of drinks:{{ totalDrinks }}              Estimated BAC:{{ bac | number: \\'1.2-2\\' }}%      Sober:~ {{ soberTime | date: \\'EEE MMM dd yyyy HH:mm:ss\\'          }}            Add Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/landing-page/landing-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:22\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  /**\n   *\n   * @param router Router for routing.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister() {\n    this.router.navigate(['/auth/register']);\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin() {\n    this.router.navigate(['/auth/login']);\n  }\n}\n\n    \n\n    \n        \n    \n        Welcome To\n        Zero Tolerance\n    \n    \n        Sign Up\n        Sign In\n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                .inner-container {\n    margin-top: 100%;\n    overflow-y: auto;\n    height: 95vh;\n\n  }\n\n  .inner-container > div > p {\n    text-align: center;\n    font-size: 2vh;\n  }\n\n  .inner-container > div > h1 {\n    text-align: center;\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  .landingButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  #landingRegister {\n    width: 70%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n    color: white;\n  }\n\n  #landingLogin {\n    margin-top: 5%;\n    width: 70%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n    color: white;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To        Zero Tolerance                Sign Up        Sign In    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:50\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email() {\n    return this.loginForm.get('email');\n  }\n  /**\n   * Gets the password input.\n   */\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: () => {\n        this.notyfService.success('Logged in');\n        this.auth.user.subscribe(async (user) => {\n          if (user) {\n            this.router.navigate(['/tracking/home']);\n          }\n        });\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  Sign In\n  \n\n    \n      \n      Type in an e-mail address\n      Invalid e-mail address\n    \n    \n    \n      \n      Type in your password\n      \n    \n    \n\n    \n      Sign In\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n  }\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.loginForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.loginButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.loginButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormLogin {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormLogin > mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.matError {\n    color: red;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign In                  Type in an e-mail address      Invalid e-mail address                        Type in your password                        Sign In      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Toggles navigation menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navigation/navigation.component.ts:16\n                        \n                    \n\n            \n                \n                    Flag to check if menu is open.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NavigationComponent {\n  /**\n   * Flag to check if menu is open.\n   */\n  isOpen = false;\n\n  /**\n   * Toggles navigation menu.\n   */\n  toggleMenu() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home\n      \n      \n        About Us\n      \n      \n        Profile\n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .hamburger-icon {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.hamburger-menu-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: rgb(20, 0, 40);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  z-index: 997;\n}\n\n.hamburger-menu-container.open {\n  transform: translateX(0);\n}\n\n.menu-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.menu-content {\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: white;\n  z-index: 999;\n}\n\n.menu-content ul {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 3vh;\n}\n\n.menu-content li {\n  margin-top: 15px;\n  padding-right: 12vh;\n  padding-left: 12vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  border-radius: 15px;\n  cursor: pointer;\n  background-image: linear-gradient(135deg, rgba(132, 0, 255, 0.5) 0%, rgba(72, 0, 155, 0.5) 100%);\n  width: 100%;\n}\n\n.menu-content a {\n  color: white;\n  text-decoration: none;\n  font-size: 1.2rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n\na > span {\n  padding-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home                    About Us                    Profile              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyfService {\n  constructor() { }\n  \n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { NavigationComponent } from '../shared/navigation/navigation.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AboutUsComponent, LandingPageComponent, PageNotFoundComponent],\n  imports: [SharedModule, PagesRoutingModule, CommonModule],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  { path: 'aboutus', component: AboutUsComponent },\n  { path: 'landing', component: LandingPageComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:38\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:30\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:42\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit() {\n    this.profileSub = this.route.paramMap.subscribe((params) => {\n      this.currentUserID = params.get('id') as string;\n      if (!this.currentUserID) {\n        this.userService\n          .getCurrentUserId()\n          .then((result: string | undefined) => {\n            const tempString: string = result || '';\n            this.currentUserID = tempString;\n\n            this.getUsername();\n            this.getRegisterDate();\n            this.getProfilePicture();\n            this.getGender();\n            this.getWeight();\n          });\n      }\n    });\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser() {\n    this.authService.logoutUser().subscribe(() => {\n      this.notyfService.success('Logged out');\n      this.router.navigate(['']);\n    });\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\n      'profilePic'\n    ) as HTMLImageElement;\n    profilePicHtml.src = picUrl\n      ? picUrl\n      : 'https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&';\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats() {\n    this.router.navigate(['/profile/personalstats']);\n  }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile() {\n    this.router.navigate(['/profile/updateprofile']);\n  }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() {\n    this.router.navigate(['/admin/admin']);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        {{username}}\n    \n    \n        {{registerDate}}\n        {{gender}} - \n        {{weight}} kg\n    \n    \n        Admin Page\n        Personal Stats\n        Update Profile\n        Logout\n    \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .profileContainer {\n    width: 25vh;\n    overflow-y: auto;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.headerContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.headerContainer > img {\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50px 50px 50px 50px;\n}\n\n.infoContainer {\n    text-align: center;\n    padding-bottom: 5vh;\n}\n\n.profileButtonDiv {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.profileStatsBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n  color: white;\n}\n\n.profileUpdateBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n  color: white;\n}\n\n.profileLogoutBtn {\n    width: 100%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #ff00ff 0%, #6e0065 100%);\n    color: white;\n  }\n\n  .profileAdminBtn {\n    width: 100%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #0099ff 0%, #003c6e 100%);\n    color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}                {{registerDate}}        {{gender}} -         {{weight}} kg                Admin Page        Personal Stats        Update Profile        Logout    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ProfileComponent, StatsComponent, UpdateProfileComponent],\n  imports: [SharedModule, ProfileRoutingModule, CommonModule],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'personalstats', component: StatsComponent },\n  { path: 'updateprofile', component: UpdateProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                registerSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/register/register.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \nregisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl('male', Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/register/register.component.ts:27\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:61\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:67\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:73\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:79\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:85\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:91\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user registration.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  /**\n   * Form for user registration.\n   */\n  registerForm = new FormGroup(\n    {\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl('male', Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param afs Angular Firestore.\n   * @param notyfService Service for displaying notifications.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private afs: AngularFirestore,\n    private notyfService: NotyfService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the input username.\n   */\n  get username() {\n    return this.registerForm.get('username');\n  }\n  /**\n   * Gets the input e-mail.\n   */\n  get email() {\n    return this.registerForm.get('email');\n  }\n  /**\n   * Gets the input password.\n   */\n  get password() {\n    return this.registerForm.get('password');\n  }\n  /**\n   * Gets the input confirmed password.\n   */\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n  /**\n   * Gets the input weight.\n   */\n  get weight() {\n    return this.registerForm.get('weight');\n  }\n  /**\n   * Gets the input gender.\n   */\n  get gender() {\n    return this.registerForm.get('gender');\n  }\n\n  /**\n   * Checks if the two passwords typed in the `registerForm` match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length  {\n          this.notyfService.success('Registered successfully');\n          this.authService.logoutUser();\n          this.router.navigate(['/auth/login']);\n        },\n        error: (error) => {\n          this.notyfService.error('Something went wrong');\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  Sign Up\n  \n  \n    \n      \n      Please enter a username! \n\n    \n      \n      Please enter an e-mail!\n      Please enter a valid e-mail address!\n    \n\n    \n      \n      Please type in a password! \n\n    \n      \n      Please confirm your password!\n    \n\n    The passwords do not match\n    Password must be at least 8 characters!\n\n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg! \n\n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n    \n\n    \n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n}\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.registerForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.registerButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.registerButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormRegister {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormRegister>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.genderSelection,\n.genderSelection>label,\n.genderSelection>label>input {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign Up                    Please enter a username!                 Please enter an e-mail!      Please enter a valid e-mail address!                    Please type in a password!                 Please confirm your password!        The passwords do not match    Password must be at least 8 characters!                Please enter your weight!      Weight must be at least 30kg!                                         Male                                      Female                Please select your gender!                                Sign Up            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [TrimDecimalsPipe, NavigationComponent],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  exports: [\n    CommonModule,\n    TrimDecimalsPipe,\n    NavigationComponent,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [400, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [400, 400];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n  \n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(private afs: AngularFirestore, private userService: UserService) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {drinkAmounts?: Record};\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return { name: `${day.date.getMonth() + 1}.${day.date.getDate()}`, value: drinkCount };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as { drinkAmounts?: Record };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(([category, count]) => ({\n      name: category,\n      value: count,\n    }));\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n  Distribution of Drinks (by category)\n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                .stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  overflow-y: auto;\n  height: 80vh;\n}\n\n.chart-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.chart-section {\n  flex: 1 1 auto;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 35vh;\n}\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n@media (min-aspect-ratio: 4/3) {\n  .stats-container {\n    flex-direction: row;\n    justify-content: center;\n  }\n\n  .chart-section {\n    flex: 1 1 50%;\n    max-width: 50%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Distribution of Drinks (by category)'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingModule.html":{"url":"modules/TrackingModule.html","title":"module - TrackingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_imports\n\n\n\ncluster_TrackingModule_declarations\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrackingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrackingRoutingModule } from './tracking-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DrinkListComponent, HomeComponent],\n  imports: [SharedModule, TrackingRoutingModule, CommonModule],\n})\nexport class TrackingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingRoutingModule.html":{"url":"modules/TrackingRoutingModule.html","title":"module - TrackingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'drinklist', component: DrinkListComponent },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrackingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                pwCheck\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:40\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:32\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pwCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:44\n                        \n                    \n\n            \n                \n                    Flag for checking if password match.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl(''),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl('', Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:49\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:28\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:36\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:88\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:94\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:100\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:112\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user profile update.\n */\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.scss'],\n})\nexport class UpdateProfileComponent implements OnInit {\n  /**\n   * User's username from the database.\n   */\n  usernameFromDB: string;\n  /**\n   * User's profile picture from the database.\n   */\n  profilePicUrlFromDB: string;\n  /**\n   * User's weight from the database.\n   */\n  weightFromDB: number;\n  /**\n   * User's gender from the database.\n   */\n  genderFromDB: string;\n  /**\n   * Flag for checking if password match.\n   */\n  pwCheck: boolean = true;\n\n  /**\n   * Form group for profile update data.\n   */\n  updateProfileForm = new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl(''),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl('', Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param router Router for routing.\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param afAuth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private router: Router,\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private afAuth: AngularFireAuth,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Gets user's data on initialization.\n   */\n  ngOnInit(): void {\n    this.getUsername();\n    this.getGenderAndWeight();\n    this.getProfilePicUrl();\n  }\n\n  /**\n   * Gets user's input profile picture.\n   */\n  get profilePicUrl() {\n    return this.updateProfileForm.get('profilePicUrl');\n  }\n  /**\n   * Gets user's input password.\n   */\n  get password() {\n    return this.updateProfileForm.get('password');\n  }\n  /**\n   * Gets user' input password confirmation.\n   */\n  get confirmPassword() {\n    return this.updateProfileForm.get('confirmPassword');\n  }\n  /**\n   * Gets user's input weight.\n   */\n  get weight() {\n    return this.updateProfileForm.get('weight');\n  }\n  /**\n   * Gets user's input gender.\n   */\n  get gender() {\n    return this.updateProfileForm.get('gender');\n  }\n\n  /**\n   * Checks if the input passwords match.\n   * @returns True flag if passwords match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length  this.notyfService.success('URL updated'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = this.gender?.value;\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef\n        .update(updates)\n        .then(() => this.notyfService.success('Profile updated'));\n    }\n\n    const newPassword = this.password?.value;\n    if (newPassword) {\n      try {\n        const currentUser = await this.afAuth.currentUser;\n        if (currentUser) {\n          await currentUser.updatePassword(newPassword);\n          this.pwCheck = true;\n          this.notyfService.success('Password updated');\n        }\n      } catch (error) {\n        console.error('Error updating password: ', error);\n        this.pwCheck = false;\n        this.notyfService.error('Something went wrong');\n      }\n    }\n\n    if (this.pwCheck) {\n      this.router.navigate(['/profile/profile']);\n    }\n  }\n}\n\n    \n\n    \n        \n  Update Profile\n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    The passwords do not match\n    Password must be at least 8\n      characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg!\n    \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n\n    \n      \n        Update Profile\n      \n    \n  \n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .formContainer {\n    width: 40vh;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.updateForm {\n    width: 40vh;\n    height: 25vh;\n    padding-top: 5vh;\n}\n\n.matFormFieldUpdate {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormFieldUpdate>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.updateButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5vh;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.updateButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Profile                                                The passwords do not match    Password must be at least 8      characters!                    Please enter your weight!      Weight must be at least 30kg!                                                Male                                      Female                Please select your gender!                            Update Profile            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n    const drinkTimes = this.drinksForTheDay.map((drink) => {\n      const [hours, minutes] = drink.time.split(':').map(Number);\n      const drinkDate = new Date(this.selectedDate);\n      drinkDate.setHours(hours, minutes, 0, 0);\n      return { ...drink, drinkDate };\n    });\n\n    const pastDrinks = drinkTimes.filter(\n      (drink) => drink.drinkDate  drink.drinkDate > currentTime\n    );\n\n    const totalPastAlcoholGrams = pastDrinks.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n\n    if (pastDrinks.length > 0) {\n      const lastDrinkTime = new Date(\n        Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime()))\n      );\n      const timeElapsedHours = Math.max(\n        0,\n        (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60)\n      );\n\n      this.bac =\n        (totalPastAlcoholGrams / (weightInGrams * bodyWaterConstant)) * 100 -\n        metabolismRate * timeElapsedHours;\n      this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n    } else {\n      this.bac = 0;\n    }\n\n    // Calculate sober time (including future drinks)\n    const allAlcoholGrams = drinkTimes.reduce(\n      (sum, drink) => sum + (drink.alcohol || 0),\n      0\n    );\n    const soberHours =\n      allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n    const earliestAllDrinkTime = new Date(\n      Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime()))\n    );\n    const estimatedSoberTime = new Date(\n      Math.max(earliestAllDrinkTime.getTime()) +\n        soberHours * 100 * 60 * 60 * 1000\n    );\n\n    this.soberTime = estimatedSoberTime;\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.router.navigate(['/tracking/drinklist']);\n  }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete the drink ${drink.name}?`\n    );\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/user.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n  \n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n           \n      return this.authService.isUser();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:36\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    const user = await firstValueFrom(this.auth.authState);\n    if (user) {\n      const userDocs = await this.afs\n        .collection('user', (ref) => ref.where('email', '==', user.email))\n        .get()\n        .toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/pages/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId() {\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail() {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userRef = this.afs.collection('user').doc(await this.getUserId());\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString() {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/admin/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/profile/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profile/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/shared/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
