var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.066,1,0.737]],["body/components/AboutUsComponent.html",[0,0.111,1,1.306,2,1.468,3,0.324,4,0.285,5,1.212,6,1.212,7,1.212,8,1.212,9,0.285,10,4.763,11,3.754,12,3.312,13,2.61,14,5.084,15,1.629,16,1.133,17,1.397,18,1.215,19,1.035,20,5.641,21,1.035,22,5.084,23,0.405,24,1.035,25,1.503,26,1.035,27,3.922,28,1.386,29,0.891,30,3.922,31,0.799,32,0.027,33,0.523,34,0.448,35,0.799,36,3.922,37,0.538,38,0.742,39,0.471,40,1.717,41,0.324,42,1.058,43,0.324,44,0.285,45,0.687,46,1.389,47,5.084,48,5.084,49,4.293,50,5.084,51,4.293,52,4.293,53,5.968,54,5.084,55,5.084,56,5.084,57,4.293,58,4.293,59,5.084,60,5.084,61,3.772,62,5.641,63,1.389,64,3.922,65,1.389,66,0.858,67,1.389,68,1.389,69,1.298,70,1.93,71,1.489,72,1.93,73,1.598,74,2.071,75,2.071,76,3.312,77,2,78,1.93,79,1.93,80,1.717,81,2.61,82,3.312,83,1.598,84,1.058,85,1.571,86,1.571,87,1.212,88,1.844,89,1.212,90,1.212,91,0.858,92,1.371,93,1.212,94,0.858,95,1.571,96,0.921,97,1.212,98,0.635,99,0.687,100,1.212,101,0.742,102,1.212,103,0.858,104,1.133,105,0.858,106,1.212,107,0.921,108,1.212,109,0.858,110,1.212,111,0.858,112,1.212,113,0.858,114,1.212,115,0.858,116,1.212,117,0.858,118,1.058,119,1.133,120,1.212,121,1.212,122,0.019,123,0.019]],["title/components/AdminFormComponent.html",[0,0.066,91,0.737]],["body/components/AdminFormComponent.html",[0,0.098,1,0.484,2,0.978,3,0.183,4,0.161,5,0.684,6,0.684,7,0.684,8,0.684,9,0.161,13,2.254,15,1.332,16,0.639,17,1.288,18,1.109,19,0.69,21,0.69,23,0.228,24,0.69,25,1.161,26,0.69,28,1.232,29,0.956,31,0.451,32,0.027,33,0.546,34,0.526,35,0.451,37,0.564,38,0.872,39,0.486,41,0.183,42,0.597,43,0.183,44,0.161,45,0.871,46,0.784,61,4.959,63,1.761,65,1.761,66,0.901,67,1.634,68,1.761,69,1.645,70,1.888,71,0.84,72,1.563,73,0.902,74,1.38,75,1.38,77,1.128,78,1.563,79,1.563,80,1.483,83,1.38,84,0.597,85,1.047,86,1.047,87,0.684,88,1.426,89,0.684,90,0.684,91,1.009,92,1.741,93,0.684,94,0.484,95,1.047,96,0.52,97,0.684,98,0.358,99,1.168,100,0.684,101,0.418,102,0.684,103,0.484,104,0.639,105,0.484,106,0.684,107,0.52,108,0.684,109,0.484,110,0.684,111,0.484,112,0.684,113,0.484,114,0.684,115,0.484,116,0.684,117,0.484,118,1.11,119,0.639,120,0.684,121,0.684,122,0.013,123,0.013,124,4.177,125,3.746,126,1.869,127,3.388,128,3.388,129,2.02,130,3.388,131,1.727,132,4.117,133,3.388,134,0.549,135,4.117,136,5.458,137,4.972,138,4.613,139,1.362,140,4.613,141,2.213,142,4.613,143,1.083,144,1.083,145,1.82,146,1.418,147,3.388,148,3.116,149,2.136,150,3.388,151,2.254,152,3.476,153,3.388,154,3.388,155,4.613,156,1.727,157,2.861,158,4.613,159,3.388,160,3.388,161,3.388,162,1.111,163,4.117,164,3.388,165,2.861,166,1.677,167,3.388,168,4.613,169,3.388,170,3.388,171,1.121,172,2.213,173,1.332,174,3.388,175,2.861,176,3.388,177,2.213,178,3.388,179,2.213,180,3.388,181,3.388,182,4.429,183,4.117,184,1.942,185,4.117,186,3.895,187,4.117,188,4.117,189,4.613,190,4.613,191,1.514,192,1.121,193,2.739,194,2.213,195,4.117,196,0.69,197,1.934,198,0.741,199,2.213,200,1.634,201,2.514,202,3.388,203,2.254,204,2.047,205,3.388,206,2.861,207,0.484,208,1.473,209,1.225,210,0.969,211,0.597,212,0.684,213,2.535,214,1.252,215,2.213,216,2.047,217,2.213,218,3.388,219,2.783,220,2.783,221,2.752,222,3.021,223,4.117,224,4.117,225,4.117,226,4.176,227,5.245,228,5.245,229,2.213,230,3.388,231,2.213,232,2.213,233,0.732,234,2.213,235,2.213,236,2.213,237,3.388,238,2.213,239,2.213,240,2.213,241,0.784,242,2.213,243,0.84,244,1.121,245,2.213,246,1.38,247,1.128,248,2.213,249,1.225,250,1.869,251,0.84,252,0.732,253,0.732,254,0.732,255,0.84,256,1.225,257,1.483,258,4.613,259,1.483,260,2.254,261,3.388,262,2.861,263,1.875,264,1.727,265,0.902,266,0.84,267,1.044,268,1.563,269,0.969,270,1.642,271,1.128,272,1.869,273,1.337,274,1.563,275,1.879,276,1.225,277,1.286,278,1.677,279,1.677,280,2.661,281,1.128,282,1.225,283,0.901,284,2.254,285,1.337,286,0.969,287,1.483,288,1.483,289,1.38,290,1.38,291,1.38,292,0.969,293,0.969,294,2.213,295,1.473,296,2.213,297,2.213,298,1.128,299,2.213]],["title/guards/AdminGuard.html",[300,2.498,301,2.24]],["body/guards/AdminGuard.html",[3,0.387,4,0.341,9,0.341,23,0.483,24,1.157,26,0.953,29,0.995,31,1.157,32,0.027,33,0.527,34,0.648,35,1.157,37,0.642,39,0.59,41,0.387,43,0.387,44,0.341,45,0.82,122,0.022,123,0.022,145,2.072,192,1.879,203,3.78,210,2.487,211,1.262,216,3.696,301,3.78,302,3.473,303,3.953,304,4.834,305,2.829,306,1.494,307,4.681,308,2.314,309,3.953,310,5.371,311,5.371,312,4.681,313,2.885,314,5.165,315,2.157,316,1.777,317,3.473,318,2.591,319,2.05,320,1.658,321,1.907,322,1.099,323,4.681]],["title/components/AdminPageComponent.html",[0,0.066,94,0.737]],["body/components/AdminPageComponent.html",[0,0.114,1,0.577,2,1.116,3,0.218,4,0.192,5,0.815,6,0.815,7,0.815,8,0.815,9,0.192,13,3.043,15,1.547,16,0.761,17,1.326,18,1.142,19,0.787,21,0.787,23,0.272,24,0.787,25,1.268,26,0.787,28,1.266,29,1.014,31,0.931,32,0.027,33,0.497,34,0.639,35,0.931,37,0.735,38,1.163,39,0.497,41,0.218,42,0.711,43,0.218,44,0.192,45,0.882,46,0.934,61,4.155,63,1.62,65,1.62,66,0.845,67,0.934,68,0.934,69,0.872,70,2.126,71,1.001,72,1.467,73,1.074,74,1.574,75,1.574,77,1.344,78,1.467,79,1.467,80,2.204,83,1.074,84,0.711,85,1.194,86,1.194,87,0.815,88,1.556,89,0.815,90,0.815,91,0.577,92,1.811,93,0.815,94,1.102,95,1.194,96,0.619,97,0.815,98,0.427,99,1.173,100,0.815,101,0.499,102,0.815,103,0.577,104,0.761,105,0.577,106,0.815,107,0.619,108,0.815,109,0.577,110,0.815,111,0.577,112,0.815,113,0.577,114,0.815,115,0.577,116,0.815,117,0.577,118,0.711,119,0.761,120,0.815,121,0.815,122,0.015,123,0.015,124,4.402,129,2.452,131,2.567,134,0.626,143,0.907,144,1.182,145,1.788,146,1.457,149,1.574,157,4.729,162,1.025,166,1.574,173,0.761,184,1.822,191,1.32,196,0.931,198,0.577,200,1.783,207,0.577,211,0.711,212,0.815,213,1.97,216,1.593,246,1.074,252,0.872,253,0.872,254,0.872,255,1.467,263,2.786,264,1.97,265,1.574,266,1.467,267,1.244,268,1.911,269,1.692,274,1.467,275,2.051,277,1.001,278,2.051,279,1.574,280,2.204,283,0.845,284,2.571,285,3.042,287,1.155,288,1.155,289,1.074,290,1.074,291,1.074,292,1.155,293,1.155,295,2.571,298,1.344,324,3.948,325,1.956,326,3.863,327,1.042,328,3.863,329,2.654,330,3.863,331,3.863,332,2.002,333,3.262,334,3.948,335,3.863,336,3.861,337,3.262,338,3.863,339,3.863,340,5.034,341,5.034,342,1.344,343,3.262,344,3.863,345,2.637,346,3.863,347,3.863,348,3.863,349,3.566,350,3.863,351,2.637,352,5.034,353,3.863,354,1.574,355,2.637,356,3.863,357,2.637,358,2.637,359,3.863,360,2.637,361,2.637,362,2.637,363,1.755,364,3.863,365,2.637,366,1.755,367,2.637,368,2.637,369,2.637,370,1.755,371,2.227,372,1.755,373,2.335,374,3.863,375,2.637,376,4.572,377,2.227,378,2.637,379,1.956,380,2.637,381,2.637,382,2.571,383,1.97,384,2.335,385,1.755,386,1.755,387,1.956,388,3.238,389,2.866,390,2.866,391,2.866,392,2.866,393,2.866,394,1.593,395,1.956,396,1.593,397,1.755,398,1.459]],["title/components/AppComponent.html",[0,0.066,96,0.791]],["body/components/AppComponent.html",[0,0.113,1,0.893,2,1.506,3,0.337,4,0.297,5,1.262,6,1.262,7,1.262,8,1.262,9,0.297,15,1.179,16,1.179,17,1.403,18,1.214,19,1.062,21,1.062,23,0.422,24,1.062,25,1.525,26,0.831,29,1.062,31,0.831,32,0.027,33,0.533,34,0.595,35,0.831,37,0.56,38,0.772,39,0.484,40,2.517,41,0.337,43,0.337,44,0.297,45,0.715,84,1.101,85,1.612,86,1.612,87,1.262,88,1.872,89,1.262,90,1.262,91,0.893,92,1.407,93,1.262,94,0.893,95,1.612,96,1.423,97,1.262,98,0.661,99,0.715,100,1.262,101,0.772,102,1.262,103,0.893,104,1.179,105,0.893,106,1.262,107,0.959,108,1.262,109,0.893,110,1.262,111,0.893,112,1.262,113,0.893,114,1.262,115,0.893,116,1.262,117,0.893,118,1.101,119,1.179,120,1.262,121,1.262,122,0.02,123,0.02,134,0.845,145,1.979,173,1.506,196,0.831,198,1.142,204,2.467,211,1.101,233,1.726,319,2.284,320,1.848,321,1.663,399,3.448,400,5.749,401,5.217,402,5.749,403,5.749,404,4.083,405,5.749,406,6.059,407,5.217,408,4.083,409,3.871,410,3.871,411,4.083,412,4.083,413,4.083,414,4.083,415,4.083,416,4.083,417,2.467]],["title/modules/AppModule.html",[418,2.24,419,2.24]],["body/modules/AppModule.html",[1,1.226,3,0.218,4,0.192,9,0.192,11,1.757,18,0.463,32,0.027,39,0.653,41,0.218,43,0.218,44,0.192,51,2.23,84,0.712,91,1.226,94,1.226,96,1.482,98,0.908,101,1.059,103,1.226,105,1.226,107,1.316,109,1.226,111,1.226,113,1.226,115,1.226,117,1.226,122,0.015,123,0.015,125,1.757,207,0.578,209,2.141,324,1.757,332,1.156,418,1.757,419,4.628,420,1.596,421,1.757,422,3.865,423,3.396,424,3.266,425,1.959,426,2.23,427,2.23,428,2.23,429,2.23,430,3.386,431,3.386,432,4.888,433,4.254,434,4.731,435,4.254,436,4.888,437,4.254,438,4.888,439,4.254,440,3.266,441,2.23,442,1.003,443,2.641,444,3.266,445,2.641,446,2.641,447,2.641,448,2.641,449,3.266,450,3.266,451,2.87,452,1.757,453,3.868,454,3.868,455,3.868,456,2.641,457,2.641,458,2.641,459,2.23,460,2.641,461,2.23,462,2.23,463,2.23,464,3.266,465,3.266,466,2.641,467,2.641,468,1.959,469,2.641,470,2.641,471,2.23,472,2.641,473,2.641,474,2.641,475,2.641,476,2.23,477,1.757,478,2.23,479,3.868,480,2.641,481,3.868,482,2.641,483,3.868,484,2.641,485,3.868,486,3.868,487,3.868,488,2.641,489,1.757,490,3.868,491,2.641,492,3.868,493,2.641,494,3.868,495,2.641,496,3.868,497,2.641,498,3.868,499,2.641,500,3.868,501,3.868,502,2.641,503,3.868,504,2.641,505,3.868,506,2.641,507,3.868,508,2.641,509,3.868,510,2.641,511,3.868,512,2.641,513,3.868,514,2.641,515,3.868,516,2.641,517,3.868,518,2.641,519,3.868,520,2.641,521,3.868,522,2.641,523,3.868,524,3.868,525,3.868,526,3.868,527,2.641,528,3.868,529,2.641,530,3.868,531,2.641,532,3.868,533,3.868,534,2.641,535,3.868,536,3.266,537,3.868,538,3.868,539,2.641,540,2.641,541,3.868,542,2.641,543,3.868,544,2.641,545,3.868,546,2.641,547,3.868,548,2.641,549,3.868,550,2.641,551,3.868,552,2.641,553,3.868,554,3.868,555,3.868,556,2.641,557,2.23,558,2.23,559,1.596,560,2.23,561,2.23,562,1.757,563,2.23,564,1.246,565,2.23,566,2.23,567,3.868,568,1.959,569,1.959,570,2.641,571,2.641,572,2.23,573,2.23,574,2.641,575,2.641,576,2.641,577,2.641]],["title/modules/AppRoutingModule.html",[418,2.24,431,2.034]],["body/modules/AppRoutingModule.html",[0,0.134,1,1.152,3,0.342,4,0.301,9,0.301,11,2.757,32,0.027,39,0.643,41,0.342,43,0.342,44,0.301,91,1.152,92,1.117,94,1.152,98,0.853,101,0.996,103,1.152,104,1.52,105,1.152,109,1.152,111,1.152,113,1.152,115,1.152,117,1.152,119,1.196,122,0.02,123,0.02,125,2.757,211,1.117,214,1.043,301,3.852,304,4.904,324,2.757,420,2.504,425,3.074,431,3.182,444,3.498,449,4.447,450,4.447,451,3.074,452,2.757,459,3.498,461,3.498,462,3.498,463,3.498,464,4.447,465,4.447,476,3.498,477,2.757,478,3.498,557,3.498,558,3.498,559,2.504,560,3.498,561,3.498,562,2.757,563,3.498,564,1.954,565,3.498,566,3.498,572,3.498,573,3.498,578,4.143,579,4.143,580,5.266,581,3.852,582,5.266,583,3.498,584,4.143,585,4.345,586,4.143,587,5.07,588,4.143,589,2.757,590,4.143,591,2.504,592,4.143,593,3.074,594,3.498,595,4.143,596,3.498,597,4.143,598,4.143,599,4.143]],["title/injectables/AuthenticationService.html",[306,0.791,315,1.278]],["body/injectables/AuthenticationService.html",[3,0.305,4,0.269,9,0.269,23,0.382,24,0.995,26,0.752,29,1.144,31,1.187,32,0.027,33,0.562,34,0.665,35,1.187,37,0.885,39,0.562,41,0.305,43,0.305,44,0.269,45,0.857,92,1.319,122,0.019,123,0.019,134,0.792,143,1.287,144,1.37,156,1.884,162,0.752,171,2.135,173,1.067,184,1.743,196,1.407,198,0.809,201,4.327,206,3.121,207,0.809,216,2.233,306,1.148,313,2.998,315,1.856,316,1.403,318,2.045,319,1.618,321,1.505,322,1.534,442,1.403,471,3.121,593,3.628,596,3.121,600,2.233,601,3.121,602,4.627,603,5.832,604,5.832,605,5.832,606,4.89,607,4.924,608,4.89,609,3.696,610,2.998,611,5.48,612,2.656,613,4.89,614,3.696,615,3.696,616,3.696,617,4.89,618,4.5,619,3.696,620,4.294,621,4.89,622,3.696,623,3.696,624,4.89,625,2.589,626,3.696,627,4.89,628,1.618,629,3.696,630,3.696,631,3.696,632,1.884,633,3.696,634,1.884,635,4.129,636,4.129,637,3.696,638,3.696,639,3.696,640,3.696,641,2.493,642,5.48,643,1.618,644,3.696,645,4.89,646,4.89,647,3.696,648,3.696,649,3.696,650,3.696,651,2.045,652,2.045,653,4.89,654,3.696,655,3.696,656,3.696,657,3.696,658,4.89,659,3.696,660,3.696]],["title/injectables/DateService.html",[315,1.278,661,1.278]],["body/injectables/DateService.html",[3,0.391,4,0.345,9,0.345,23,0.489,24,1.165,29,1.119,31,0.965,32,0.027,33,0.44,34,0.541,35,0.965,37,0.785,38,1.082,39,0.531,41,0.391,43,0.391,44,0.345,45,1.078,122,0.022,123,0.022,134,0.927,162,1.165,173,1.653,197,2.028,198,1.253,315,2.173,316,1.8,318,2.623,319,2.075,322,1.113,600,2.864,661,2.173,662,4.003,663,2.692,664,6.15,665,6.387,666,5.724,667,4.74,668,2.402,669,5.724,670,4.74,671,5.724,672,4.74,673,5.724,674,4.74,675,4.74,676,4.74,677,4.74]],["title/interfaces/Drink.html",[99,0.59,327,0.908]],["body/interfaces/Drink.html",[0,0.078,3,0.224,4,0.198,9,0.198,17,0.553,18,0.476,19,0.553,21,0.553,23,0.281,25,0.684,28,1.018,32,0.027,33,0.503,34,0.619,37,0.373,38,0.88,39,0.542,41,0.224,42,0.733,43,0.326,44,0.198,45,0.815,46,1.399,66,0.595,98,0.44,99,1.202,122,0.015,123,0.015,129,1.729,131,2.013,134,0.64,139,0.899,143,0.638,144,0.927,146,1.171,148,1.504,149,2.305,156,1.385,162,1.104,166,2.08,171,1.306,184,1.282,191,1.14,192,0.899,196,1.324,197,1.648,198,0.595,200,1.809,207,0.595,212,0.84,213,2.372,214,1.638,219,2.977,220,2.977,221,2.826,222,2.826,233,0.899,241,1.399,243,1.032,244,1.689,246,1.107,247,1.385,249,1.504,251,1.032,252,0.899,253,0.899,254,0.899,255,1.032,256,1.504,257,2.478,259,2.478,283,1.278,306,0.638,313,1.863,316,1.032,321,1.107,322,0.927,327,1.377,329,2.21,332,1.729,354,1.609,442,1.032,564,1.282,625,1.107,632,2.603,634,2.013,641,1.385,643,1.729,651,2.185,661,1.766,663,1.19,668,1.922,678,1.385,679,1.504,680,1.504,681,2.137,682,0.963,683,1.282,684,2.013,685,2.194,686,2.67,687,2.372,688,1.863,689,2.013,690,2.037,691,1.642,692,1.642,693,1.282,694,2.386,695,1.642,696,1.642,697,1.642,698,1.642,699,1.642,700,1.642,701,1.642,702,2.811,703,1.642,704,1.863,705,1.282,706,1.642,707,1.642,708,2.386,709,2.386,710,1.642,711,1.642,712,1.282,713,1.642,714,2.386,715,1.642,716,1.642,717,1.642,718,1.642,719,1.642,720,1.642,721,1.642,722,2.386,723,1.642,724,1.642,725,1.642,726,1.642,727,1.642,728,1.642,729,1.642,730,1.642,731,1.642,732,2.811,733,1.642,734,1.642,735,1.642,736,1.642,737,2.386,738,2.037,739,1.282,740,1.282,741,1.282,742,1.282,743,3.278,744,1.642,745,2.811,746,1.642,747,1.642,748,1.642,749,1.642,750,1.282,751,1.863,752,2.386,753,1.642,754,2.386,755,1.642,756,1.729,757,2.386,758,2.386,759,1.863,760,1.19,761,1.19,762,1.19,763,1.729,764,1.19,765,2.811,766,1.282,767,2.386,768,1.282,769,1.642,770,1.642,771,1.642,772,1.642,773,1.642,774,3.086,775,1.642,776,1.642,777,1.642,778,2.386,779,1.19,780,2.386,781,1.642,782,1.863,783,2.185,784,1.642,785,2.185,786,1.642,787,1.642,788,1.385,789,1.642,790,1.642,791,1.642,792,1.282,793,1.642,794,1.642]],["title/interfaces/DrinkAmount.html",[327,0.908,684,1.716]],["body/interfaces/DrinkAmount.html",[0,0.077,3,0.223,4,0.197,9,0.197,17,0.55,18,0.473,19,0.55,21,0.55,23,0.279,25,0.68,28,1.015,32,0.027,33,0.365,34,0.645,37,0.37,38,0.877,39,0.541,41,0.223,42,0.729,43,0.325,44,0.197,45,0.813,46,1.393,66,0.591,98,0.438,99,1.199,122,0.015,123,0.015,129,1.722,131,2.005,134,0.637,139,0.894,143,0.635,144,0.924,146,1.168,148,1.495,149,2.301,156,1.378,162,1.102,166,2.075,171,1.301,184,1.275,191,1.136,192,0.894,196,1.339,197,1.643,198,0.591,200,2.065,207,0.591,212,0.835,213,2.364,214,1.636,219,2.597,220,2.972,221,1.495,222,1.495,233,0.894,241,1.393,243,1.026,244,1.685,246,1.101,247,1.378,249,1.495,251,1.026,252,0.894,253,0.894,254,0.894,255,1.026,256,1.495,257,2.667,259,2.667,283,1.276,306,0.635,313,1.855,316,1.026,321,1.101,322,0.924,327,1.374,329,2.205,332,1.722,354,1.602,442,1.026,564,1.275,625,1.101,632,2.597,634,2.005,641,1.378,643,1.722,651,2.177,661,1.76,663,1.183,668,1.917,678,1.378,679,1.495,680,1.495,681,2.135,682,0.957,683,1.275,684,2.364,685,2.664,686,2.873,687,2.364,688,1.855,689,2.005,690,2.03,691,1.633,692,1.633,693,1.275,694,2.377,695,1.633,696,1.633,697,1.633,698,1.633,699,1.633,700,1.633,701,1.633,702,2.802,703,1.633,704,1.855,705,1.275,706,1.633,707,1.633,708,2.377,709,2.377,710,1.633,711,1.633,712,1.275,713,1.633,714,2.377,715,1.633,716,1.633,717,1.633,718,1.633,719,1.633,720,1.633,721,1.633,722,2.377,723,1.633,724,1.633,725,1.633,726,1.633,727,1.633,728,1.633,729,1.633,730,1.633,731,1.633,732,2.802,733,1.633,734,1.633,735,1.633,736,1.633,737,2.377,738,2.03,739,1.275,740,1.275,741,1.275,742,1.275,743,3.271,744,1.633,745,2.802,746,1.633,747,1.633,748,1.633,749,1.633,750,1.275,751,1.855,752,2.377,753,1.633,754,2.377,755,1.633,756,1.722,757,2.377,758,2.377,759,1.855,760,1.183,761,1.183,762,1.183,763,1.722,764,1.183,765,2.802,766,1.275,767,2.377,768,1.275,769,1.633,770,1.633,771,1.633,772,1.633,773,1.633,774,3.078,775,1.633,776,1.633,777,1.633,778,2.377,779,1.183,780,2.377,781,1.633,782,1.855,783,2.177,784,1.633,785,2.177,786,1.633,787,1.633,788,1.378,789,1.633,790,1.633,791,1.633,792,1.275,793,1.633,794,1.633]],["title/interfaces/DrinkAmountsMap.html",[327,0.908,687,1.716]],["body/interfaces/DrinkAmountsMap.html",[0,0.079,3,0.23,4,0.203,9,0.203,17,0.567,18,0.488,19,0.567,21,0.567,25,0.701,28,1.032,29,0.488,32,0.027,33,0.373,37,0.382,38,0.892,39,0.546,41,0.23,42,0.751,43,0.332,44,0.203,45,0.827,46,1.424,66,0.609,98,0.451,99,1.202,122,0.015,123,0.015,129,1.76,131,2.049,139,0.921,143,0.654,144,0.944,146,1.188,148,1.541,149,2.325,156,1.42,162,1.115,166,2.104,171,1.33,184,1.313,191,1.161,192,0.921,196,1.298,197,1.671,198,0.609,200,1.83,207,0.609,212,0.86,213,2.405,214,1.644,219,2.633,220,2.633,221,1.541,222,1.541,233,0.921,241,1.424,243,1.057,244,1.709,246,1.134,247,1.42,249,1.541,251,1.057,252,0.921,253,0.921,254,0.921,255,1.057,256,1.541,257,2.499,259,2.499,283,1.287,306,0.654,313,1.896,316,1.057,321,1.134,322,0.944,327,1.393,329,2.231,332,1.76,354,1.637,442,1.057,564,1.896,625,1.134,632,2.633,634,2.049,641,1.42,643,1.76,651,2.224,661,1.791,663,1.219,668,1.94,678,1.42,679,2.224,680,1.541,681,1.993,682,0.986,683,1.313,684,2.405,685,2.225,686,2.692,687,2.633,688,2.225,689,2.049,690,2.065,691,1.683,692,1.683,693,1.313,694,2.429,695,1.683,696,1.683,697,1.683,698,1.683,699,1.683,700,1.683,701,1.683,702,2.85,703,1.683,704,1.896,705,1.313,706,1.683,707,1.683,708,2.429,709,2.429,710,1.683,711,1.683,712,1.313,713,1.683,714,2.429,715,1.683,716,1.683,717,1.683,718,1.683,719,1.683,720,1.683,721,1.683,722,2.429,723,1.683,724,1.683,725,1.683,726,1.683,727,1.683,728,1.683,729,1.683,730,1.683,731,1.683,732,2.85,733,1.683,734,1.683,735,1.683,736,1.683,737,2.429,738,2.065,739,1.313,740,1.313,741,1.313,742,1.313,743,3.31,744,1.683,745,2.85,746,1.683,747,1.683,748,1.683,749,1.683,750,1.313,751,1.896,752,2.429,753,1.683,754,2.429,755,1.683,756,1.76,757,2.429,758,2.429,759,1.896,760,1.219,761,1.219,762,1.219,763,1.76,764,1.219,765,2.85,766,1.313,767,2.429,768,1.313,769,1.683,770,1.683,771,1.683,772,1.683,773,1.683,774,3.121,775,1.683,776,1.683,777,1.683,778,2.429,779,1.219,780,2.429,781,1.683,782,1.896,783,2.224,784,1.683,785,2.224,786,1.683,787,1.683,788,1.42,789,1.683,790,1.683,791,1.683,792,1.313,793,1.683,794,1.683,795,2.784,796,2.784]],["title/interfaces/DrinkData.html",[241,1.193,327,0.908]],["body/interfaces/DrinkData.html",[0,0.069,3,0.192,4,0.169,9,0.169,17,0.473,18,0.407,19,0.473,21,0.473,23,0.24,25,0.585,26,0.473,28,0.928,32,0.027,33,0.393,34,0.484,38,0.802,39,0.53,40,1.539,41,0.192,42,0.626,43,0.192,44,0.169,45,1.002,46,1.502,66,0.508,99,1.089,101,0.439,118,0.626,122,0.013,123,0.013,134,0.569,139,1.564,143,0.545,144,0.825,145,1.31,146,1.068,149,1.727,151,1.545,162,1.13,166,0.946,171,0.768,191,1.015,192,1.564,196,1.034,197,1.245,200,1.893,207,0.508,210,1.017,211,0.626,212,0.718,214,1.715,233,0.768,241,2.025,243,0.882,244,1.973,246,0.946,251,0.882,252,0.768,253,0.768,254,0.768,255,0.882,257,2.07,259,1.539,260,1.545,273,1.403,283,1.423,287,2.07,306,0.825,308,0.946,320,0.823,322,1.111,327,0.948,329,2.43,334,3.146,349,1.545,354,1.727,363,1.545,366,1.545,370,2.339,372,1.545,373,2.124,417,2.562,489,1.545,589,1.545,591,1.403,610,1.095,612,1.539,628,1.017,643,1.539,661,1.795,663,1.017,668,2.243,678,1.184,681,1.836,682,0.823,683,1.095,685,1.658,686,2.521,688,1.095,690,2.503,693,1.658,704,2.231,705,1.095,712,1.095,738,2.224,739,1.658,740,1.658,741,1.658,742,1.658,750,1.095,756,1.857,759,2.396,760,1.539,761,1.539,762,1.539,763,2.07,764,1.539,766,1.658,768,1.658,779,1.017,782,1.658,792,1.095,797,1.545,798,2.608,799,2.608,800,1.723,801,1.945,802,2.857,803,2,804,2.162,805,1.723,806,1.723,807,1.545,808,1.723,809,1.723,810,3.965,811,1.723,812,1.723,813,1.723,814,1.723,815,1.723,816,1.723,817,1.723,818,3.508,819,1.723,820,1.723,821,2.608,822,1.723,823,1.723,824,1.723,825,1.723,826,2.811,827,2.124,828,1.723,829,1.723,830,3.508,831,1.723,832,1.723,833,2.608,834,1.723,835,1.723,836,1.723,837,1.545,838,1.545,839,1.723,840,1.723,841,1.723,842,1.723,843,1.723,844,1.723,845,1.723,846,1.723,847,1.723,848,1.723,849,1.723,850,1.723,851,1.723,852,1.545,853,1.723,854,3.769,855,1.723,856,3.146,857,1.403,858,1.723,859,1.723,860,3.146,861,1.723,862,1.723,863,1.723,864,1.723,865,3.146,866,2.608,867,1.723,868,1.723,869,2.608,870,2.608,871,1.723,872,3.508,873,3.146,874,1.723,875,2.608,876,1.723,877,1.723,878,1.723,879,1.723,880,1.723,881,1.723,882,3.769,883,3.146,884,2.608,885,1.723,886,2.608,887,1.723,888,1.723,889,1.723,890,2.608,891,2.608,892,1.723,893,3.146,894,2.608,895,1.723,896,2.608,897,1.723,898,2.608,899,3.146,900,1.723,901,1.723,902,1.723,903,1.723,904,1.723,905,1.723,906,1.723,907,1.723,908,1.723,909,1.545,910,1.723,911,1.723,912,3.146,913,1.723,914,3.146,915,1.723,916,1.723,917,1.723,918,1.723,919,2.608,920,2.608,921,1.723,922,1.723,923,2.608,924,1.723,925,2.608,926,1.723,927,1.723,928,1.723,929,1.723,930,1.723,931,1.723,932,1.723,933,1.723,934,1.723,935,1.723,936,1.723,937,1.723,938,1.723,939,1.723,940,1.723,941,1.723,942,1.723,943,1.723,944,1.723,945,1.723,946,1.723,947,1.723,948,1.723,949,2.608,950,1.723,951,1.723,952,1.723,953,1.723,954,1.723,955,1.723,956,2.608,957,1.723,958,2.608,959,2.608,960,1.723,961,1.723,962,2.608,963,1.723,964,1.723,965,1.723,966,1.792,967,1.723,968,1.723,969,1.723,970,1.723,971,1.723,972,1.723,973,1.723,974,1.723,975,1.723,976,1.545,977,1.723,978,1.723,979,2.339,980,1.723]],["title/components/DrinkListComponent.html",[0,0.066,98,0.545]],["body/components/DrinkListComponent.html",[0,0.071,1,0.393,2,0.83,3,0.148,4,0.131,5,0.555,6,0.555,7,0.555,8,0.555,9,0.131,13,2.737,15,0.518,16,0.518,17,1.237,18,1.065,19,0.585,21,0.585,23,0.297,24,0.585,25,1.036,26,0.365,28,1.104,29,1.041,31,0.837,32,0.027,33,0.514,34,0.669,35,0.837,37,0.692,38,0.954,39,0.468,41,0.148,42,0.484,43,0.237,44,0.131,45,0.63,46,1.018,63,1.594,65,1.594,66,0.9,67,1.594,68,1.594,69,1.489,70,2.151,71,1.091,72,1.091,74,1.833,75,1.956,77,0.915,78,1.091,79,1.561,80,2.103,83,0.731,84,0.484,85,0.888,86,0.888,87,0.555,88,1.271,89,0.555,90,0.555,91,0.393,92,0.775,93,0.555,94,0.393,95,0.888,96,0.421,97,0.555,98,0.666,99,1.208,100,0.555,101,0.339,102,0.555,103,0.393,104,0.518,105,0.393,106,0.555,107,0.421,108,0.555,109,0.393,110,0.555,111,0.393,112,0.555,113,0.393,114,0.555,115,0.393,116,0.555,117,0.393,118,0.484,119,0.518,120,0.555,121,0.555,122,0.011,123,0.011,129,2.295,131,2.097,134,0.466,139,1.19,143,0.675,144,0.966,146,1.27,148,1.591,149,2.055,156,1.466,162,0.978,166,1.833,171,1.19,173,1.387,184,0.847,191,0.83,192,0.951,196,1.209,197,1.594,198,1.147,200,1.457,207,0.393,212,0.555,213,1.834,214,1.513,219,2.672,220,2.448,221,0.993,222,1.99,233,0.594,241,1.018,243,0.681,244,1.361,246,0.731,247,0.915,249,0.993,251,0.681,252,0.594,253,0.594,254,0.594,255,0.681,256,0.993,257,2.103,259,2.103,264,0.915,265,1.171,266,1.091,267,0.847,268,1.915,269,1.259,271,0.915,274,1.709,275,2.259,276,1.99,277,1.561,278,2.202,279,1.833,280,2.526,281,1.466,282,1.591,283,1.3,284,1.194,287,0.786,288,0.786,289,0.731,290,0.731,291,0.731,292,0.786,293,0.786,295,2.737,298,0.915,306,0.421,313,1.697,316,0.681,321,0.731,322,0.675,327,1.109,329,2.135,332,2.367,342,0.915,354,1.675,373,2.485,382,1.913,383,2.294,384,2.173,385,1.194,386,1.194,387,1.331,388,3.267,389,3.052,390,3.052,391,3.052,392,3.052,393,3.052,394,1.084,395,1.331,396,1.084,397,1.194,398,0.993,442,1.091,536,1.515,564,2.836,625,0.731,632,2.448,634,2.097,641,0.915,643,1.575,651,2.276,661,1.915,663,1.575,668,1.594,679,3.327,680,0.993,681,1.734,682,0.636,683,0.847,684,1.466,685,2.123,686,2.472,687,1.834,688,1.356,689,1.466,690,1.97,691,1.737,692,1.737,693,1.356,694,2.485,695,1.737,696,2.173,697,2.173,698,2.173,699,2.173,700,2.173,701,2.173,702,2.173,703,1.737,704,1.356,705,0.847,706,1.084,707,1.084,708,1.737,709,2.173,710,1.737,711,1.737,712,1.356,713,1.737,714,1.737,715,2.485,716,1.084,717,1.084,718,1.084,719,1.084,720,1.737,721,1.084,722,1.737,723,1.737,724,2.173,725,1.737,726,2.485,727,1.084,728,1.084,729,1.084,730,1.084,731,1.084,732,2.485,733,1.737,734,1.737,735,1.737,736,1.737,737,1.737,738,1.575,739,0.847,740,0.847,741,0.847,742,0.847,743,2.72,744,1.084,745,2.173,746,1.084,747,1.084,748,1.084,749,1.084,750,0.847,751,1.356,752,1.737,753,1.084,754,1.737,755,1.084,756,1.259,757,1.737,758,1.737,759,1.356,760,0.786,761,0.786,762,0.786,763,1.259,764,0.786,765,2.173,766,0.847,767,1.737,768,0.847,769,1.084,770,2.173,771,1.084,772,1.084,773,1.084,774,2.485,775,1.084,776,1.084,777,1.084,778,1.737,779,0.786,780,1.737,781,1.084,782,1.356,783,1.591,784,1.084,785,2.276,786,1.084,787,1.084,788,0.915,789,1.084,790,1.084,791,1.084,792,0.847,793,1.084,794,1.084,798,1.331,981,2.875,982,2.875,983,2.875,984,2.875,985,1.795,986,1.795,987,1.795,988,1.795,989,1.795,990,1.795,991,1.795,992,1.795,993,1.795,994,1.795,995,1.795,996,1.795,997,2.875,998,2.875,999,2.875,1000,1.515,1001,1.515,1002,2.875,1003,2.428,1004,1.331,1005,1.795,1006,1.795,1007,2.875,1008,1.194,1009,1.795,1010,1.795,1011,2.875,1012,1.795,1013,1.795,1014,1.795,1015,1.795,1016,1.795,1017,1.515,1018,1.194]],["title/interfaces/FirestoreDocumentData.html",[327,0.908,689,1.716]],["body/interfaces/FirestoreDocumentData.html",[0,0.079,3,0.23,4,0.202,9,0.202,17,0.566,18,0.487,19,0.566,21,0.566,23,0.287,25,0.7,28,1.031,32,0.027,33,0.372,34,0.317,37,0.381,38,0.891,39,0.545,41,0.23,42,0.75,43,0.332,44,0.202,45,0.826,46,1.422,66,0.608,98,0.45,99,1.202,122,0.015,123,0.015,129,1.758,131,2.047,134,0.65,139,0.92,143,0.653,144,0.943,146,1.186,148,1.538,149,2.323,156,1.417,162,1.114,166,2.102,171,1.328,184,1.311,191,1.159,192,0.92,196,1.284,197,1.669,198,0.608,200,1.828,207,0.608,212,0.859,213,2.402,214,1.644,219,2.631,220,2.631,221,1.538,222,1.538,233,0.92,241,1.422,243,1.055,244,1.707,246,1.132,247,1.417,249,1.538,251,1.055,252,0.92,253,0.92,254,0.92,255,1.055,256,1.538,257,2.497,259,2.497,283,1.287,306,0.653,313,1.894,316,1.055,321,1.132,322,0.943,327,1.392,329,2.23,332,1.758,354,1.635,442,1.055,564,1.311,625,1.132,632,2.631,634,2.047,641,1.417,643,1.758,651,2.222,661,1.789,663,1.217,668,1.939,678,1.417,679,1.538,680,1.538,681,1.992,682,0.985,683,1.311,684,2.047,685,2.223,686,2.691,687,2.791,688,1.894,689,2.402,690,2.497,691,1.68,692,1.68,693,1.311,694,2.426,695,1.68,696,1.68,697,1.68,698,1.68,699,1.68,700,1.68,701,1.68,702,2.848,703,1.68,704,1.894,705,1.311,706,1.68,707,1.68,708,2.426,709,2.426,710,1.68,711,1.68,712,1.311,713,1.68,714,2.426,715,1.68,716,1.68,717,1.68,718,1.68,719,1.68,720,1.68,721,1.68,722,2.426,723,1.68,724,1.68,725,1.68,726,1.68,727,1.68,728,1.68,729,1.68,730,1.68,731,1.68,732,2.848,733,1.68,734,1.68,735,1.68,736,1.68,737,2.426,738,2.063,739,1.311,740,1.311,741,1.311,742,1.311,743,3.308,744,1.68,745,2.848,746,1.68,747,1.68,748,1.68,749,1.68,750,1.311,751,1.894,752,2.426,753,1.68,754,2.426,755,1.68,756,1.758,757,2.426,758,2.426,759,1.894,760,1.217,761,1.217,762,1.217,763,1.758,764,1.217,765,2.848,766,1.311,767,2.426,768,1.311,769,1.68,770,1.68,771,1.68,772,1.68,773,1.68,774,3.119,775,1.68,776,1.68,777,1.68,778,2.426,779,1.217,780,2.426,781,1.68,782,1.894,783,2.222,784,1.68,785,2.222,786,1.68,787,1.68,788,1.417,789,1.68,790,1.68,791,1.68,792,1.311,793,1.68,794,1.68]],["title/components/HomeComponent.html",[0,0.066,101,0.637]],["body/components/HomeComponent.html",[0,0.063,1,0.334,2,0.728,3,0.266,4,0.111,5,0.472,6,0.472,7,0.472,8,0.472,9,0.111,15,0.441,16,0.441,17,1.193,18,1.026,19,0.513,21,0.513,23,0.158,24,0.513,25,0.941,26,0.513,28,1.031,29,1.067,31,0.842,32,0.027,33,0.488,34,0.64,35,0.842,37,0.74,38,0.966,39,0.457,40,1.41,41,0.126,42,0.412,43,0.126,44,0.111,45,0.863,46,1.14,63,1.324,65,1.465,66,0.704,67,1.324,68,1.578,69,1.473,70,1.789,71,0.58,72,1.419,73,1.685,74,1.685,75,1.027,78,0.58,79,0.58,83,0.622,84,0.412,85,0.779,86,0.779,87,0.472,88,1.155,89,0.472,90,0.472,91,0.334,92,0.68,93,0.472,94,0.334,95,0.779,96,0.359,97,0.472,98,0.247,99,1.075,100,0.472,101,0.707,102,0.472,103,0.334,104,0.441,105,0.334,106,0.472,107,0.359,108,0.472,109,0.334,110,0.472,111,0.334,112,0.472,113,0.334,114,0.472,115,0.334,116,0.472,117,0.334,118,0.68,119,0.441,120,0.472,121,0.472,122,0.01,123,0.01,129,1.636,134,0.408,139,1.823,143,0.592,144,0.878,145,1.456,146,1.186,149,1.311,151,1.016,162,0.959,166,0.622,171,0.505,173,1.194,191,0.728,192,1.63,196,0.907,197,1.324,198,0.905,200,1.578,207,0.334,210,1.41,211,0.412,212,0.472,214,1.643,219,1.285,233,0.505,241,1.669,243,0.58,244,1.74,246,0.622,251,0.58,252,0.505,253,0.505,254,0.505,255,0.58,257,1.636,259,1.95,260,1.016,263,2.608,264,0.778,265,1.027,266,0.957,267,0.72,268,1.57,269,1.104,271,0.778,273,1.523,274,1.222,275,1.685,276,0.845,277,0.957,278,1.685,279,1.311,280,2.157,281,0.778,282,0.845,283,1.4,284,1.016,286,1.104,287,1.636,288,0.668,289,0.622,290,0.622,291,0.622,292,0.668,293,0.668,295,1.677,298,1.285,306,0.878,308,1.311,320,0.893,322,0.878,327,0.68,329,2.413,332,0.668,334,2.487,342,0.778,349,1.016,354,1.311,363,1.016,366,1.016,370,1.677,372,1.016,373,2.258,377,2.129,379,1.133,382,2.142,383,1.641,384,1.523,385,1.016,386,1.016,387,1.133,388,2.691,389,1.87,390,1.87,391,1.87,392,1.87,393,1.87,394,0.923,395,1.133,396,0.923,397,1.677,398,1.395,417,1.945,489,1.677,589,1.016,591,2.5,610,1.519,612,1.636,628,0.668,643,1.104,652,1.395,661,1.87,663,2.362,668,2.276,681,1.938,682,0.541,683,0.72,685,1.189,686,2.101,688,0.72,690,1.811,693,1.189,704,1.763,705,0.72,712,0.72,738,1.811,739,1.189,740,1.189,741,1.189,742,1.189,750,0.72,751,1.189,756,1.41,759,1.951,760,1.104,761,1.104,762,1.104,763,1.636,764,1.104,766,1.189,768,1.189,779,1.41,782,1.189,792,0.72,797,1.016,799,2.389,800,1.133,801,2.068,802,2.847,803,1.519,804,1.641,805,1.87,806,2.389,807,2.142,808,3.496,809,3.496,810,4.088,811,3.069,812,1.87,813,2.389,814,1.133,815,1.133,816,1.133,817,1.133,818,2.773,819,1.133,820,1.133,821,1.87,822,1.133,823,1.133,824,1.133,825,2.773,826,2.289,827,1.523,828,1.133,829,1.133,830,2.773,831,1.133,832,2.773,833,1.87,834,1.133,835,1.133,836,1.133,837,1.016,838,1.016,839,1.133,840,1.133,841,1.133,842,1.133,843,1.133,844,1.133,845,1.133,846,1.133,847,1.133,848,1.133,849,1.133,850,2.773,851,1.133,852,1.016,853,1.133,854,3.069,855,1.133,856,2.389,857,0.923,858,1.133,859,1.133,860,2.389,861,1.133,862,1.133,863,1.133,864,1.133,865,2.389,866,1.87,867,1.133,868,1.133,869,1.87,870,1.87,871,1.133,872,2.773,873,2.389,874,1.133,875,1.87,876,1.133,877,1.133,878,1.133,879,1.133,880,1.133,881,1.133,882,3.069,883,2.389,884,1.87,885,1.133,886,1.87,887,1.133,888,1.133,889,1.133,890,1.87,891,1.87,892,1.133,893,2.389,894,1.87,895,1.133,896,1.87,897,1.133,898,1.87,899,2.389,900,1.133,901,1.133,902,1.133,903,1.133,904,1.133,905,1.133,906,1.133,907,1.133,908,1.133,909,1.016,910,1.133,911,1.133,912,3.069,913,1.133,914,2.389,915,1.133,916,1.133,917,1.133,918,1.133,919,1.87,920,1.87,921,1.133,922,1.133,923,1.87,924,1.133,925,1.87,926,2.773,927,1.133,928,1.133,929,2.389,930,1.133,931,1.133,932,1.87,933,1.133,934,1.133,935,1.87,936,1.133,937,1.133,938,3.496,939,3.789,940,4.002,941,2.773,942,1.133,943,1.133,944,1.133,945,2.389,946,2.773,947,1.133,948,1.87,949,1.87,950,1.133,951,1.133,952,1.87,953,1.133,954,1.133,955,1.133,956,1.87,957,1.133,958,1.87,959,1.87,960,1.133,961,1.133,962,1.87,963,1.133,964,1.133,965,1.133,966,1.285,967,1.133,968,1.133,969,1.133,970,1.133,971,1.133,972,1.133,973,1.133,974,1.133,975,2.389,976,1.016,977,1.133,978,1.133,979,1.677,980,1.133,1001,1.289,1003,1.289,1018,1.016,1019,2.521,1020,2.521,1021,2.521,1022,2.521,1023,2.521,1024,1.527,1025,1.527,1026,1.527,1027,1.527,1028,1.527,1029,1.527,1030,1.527,1031,1.527,1032,1.289,1033,1.527,1034,1.527,1035,1.527,1036,1.527,1037,1.289,1038,1.527,1039,1.527,1040,1.527,1041,1.527,1042,1.527,1043,1.527,1044,2.521,1045,4.454,1046,3.737,1047,2.521,1048,3.737,1049,2.521,1050,2.521,1051,2.521,1052,2.521,1053,2.521,1054,2.521,1055,1.523,1056,1.133,1057,1.133,1058,1.133,1059,1.523,1060,1.527,1061,1.289,1062,1.527,1063,1.133,1064,1.527,1065,2.521]],["title/components/LandingPageComponent.html",[0,0.066,103,0.737]],["body/components/LandingPageComponent.html",[0,0.104,1,0.751,2,1.344,3,0.284,4,0.25,5,1.061,6,1.061,7,1.061,8,1.061,9,0.25,15,1.525,16,0.991,17,1.376,18,1.184,19,0.948,21,0.948,23,0.354,24,0.948,26,0.948,28,1.365,29,0.925,31,0.699,32,0.027,33,0.49,34,0.392,35,0.699,37,0.638,38,0.88,39,0.566,41,0.284,42,0.926,43,0.284,44,0.25,45,1.069,63,1.649,65,1.871,66,1.155,67,1.871,68,2.005,69,1.873,70,2.246,71,1.303,72,2.005,73,1.399,76,3.93,77,1.75,78,2.246,79,2.149,80,1.503,82,2.899,83,1.896,84,0.926,85,1.438,86,1.438,87,1.061,88,1.75,89,1.061,90,1.061,91,0.751,92,1.255,93,1.061,94,0.751,95,1.438,96,0.806,97,1.061,98,0.556,99,0.602,100,1.061,101,0.649,102,1.061,103,1.239,104,1.833,105,0.751,106,1.061,107,0.806,108,1.061,109,0.751,110,1.061,111,0.751,112,1.061,113,0.751,114,1.061,115,0.751,116,1.061,117,0.751,118,0.926,119,0.991,120,1.061,121,1.061,122,0.018,123,0.018,143,1.093,144,1.33,145,1.928,207,0.751,210,2.312,211,0.926,263,2.922,265,1.399,266,1.303,268,2.005,269,1.503,271,1.75,274,1.767,275,1.896,277,1.767,278,1.896,279,1.896,280,2.779,283,1.018,285,2.813,286,1.503,288,2.038,289,1.896,290,1.896,291,1.896,292,1.503,293,1.503,306,1.33,308,2.151,325,2.547,336,4.459,337,3.93,342,1.75,343,2.899,409,3.453,410,3.453,562,3.767,610,2.491,612,2.479,628,1.503,682,1.216,801,3.133,803,1.62,1059,2.075,1066,4.78,1067,5.661,1068,5.661,1069,3.433,1070,3.433,1071,3.433,1072,2.899,1073,4.654,1074,4.2,1075,3.93,1076,5.28,1077,3.433,1078,3.433,1079,3.433,1080,3.433,1081,3.433,1082,2.899,1083,2.899]],["title/components/LoginComponent.html",[0,0.066,105,0.737]],["body/components/LoginComponent.html",[0,0.097,1,0.658,2,1.227,3,0.249,4,0.219,5,0.93,6,0.93,7,0.93,8,0.93,9,0.219,15,0.869,16,0.869,17,1.352,18,1.164,19,0.865,21,0.865,23,0.311,24,0.865,25,1.347,26,0.865,28,1.317,29,1.026,31,0.613,32,0.027,33,0.457,34,0.644,35,0.613,37,0.583,38,0.931,39,0.58,40,2.156,41,0.249,42,0.812,43,0.249,44,0.219,45,1.026,63,1.999,65,2.075,66,1.235,67,1.745,68,1.895,69,1.77,70,2.031,71,1.142,72,1.87,73,1.226,74,1.731,75,1.226,77,1.534,78,1.613,79,1.613,80,1.318,81,2.827,83,1.226,84,0.812,85,1.313,86,1.313,87,0.93,88,1.654,89,0.93,90,0.93,91,0.658,92,1.146,93,0.93,94,0.658,95,1.313,96,0.707,97,0.93,98,0.487,99,0.527,100,0.93,101,0.569,102,0.93,103,0.658,104,0.869,105,1.171,106,0.93,107,0.707,108,0.93,109,0.658,110,0.93,111,0.658,112,0.93,113,0.658,114,0.93,115,0.658,116,0.93,117,0.658,118,0.812,119,0.869,120,0.93,121,0.93,122,0.016,123,0.016,134,0.688,143,1.157,144,1.257,145,1.86,146,1.516,162,1.192,171,0.996,173,0.869,191,1.422,193,3.277,196,0.613,198,0.658,207,0.658,208,2.002,209,1.665,211,0.812,212,0.93,214,0.758,226,3.56,252,0.996,253,0.996,254,0.996,262,4.518,264,1.534,265,1.226,266,1.142,267,1.42,268,1.87,269,1.318,271,1.534,274,1.87,275,2.179,276,1.665,277,1.613,278,1.731,279,1.731,280,2.692,281,2.511,282,1.665,283,1.078,286,1.318,287,1.318,288,1.318,289,1.731,290,1.731,291,1.731,292,1.86,293,1.86,305,1.819,306,1.257,308,1.731,317,2.233,319,1.318,320,1.505,322,1.157,379,2.233,593,3.152,610,2.323,612,2.343,618,4.159,625,2.386,628,1.318,1059,1.819,1074,3.97,1084,2.541,1085,4.925,1086,4.249,1087,5.35,1088,3.152,1089,3.009,1090,3.009,1091,3.009,1092,4.187,1093,3.588,1094,3.009,1095,2.541,1096,3.009,1097,2.233,1098,3.009,1099,2.233,1100,3.009,1101,3.009,1102,3.009,1103,3.009,1104,3.009,1105,3.009,1106,3.009,1107,3.009,1108,3.009,1109,2.541,1110,3.009,1111,2.541,1112,3.009,1113,3.97,1114,3.97,1115,4.518,1116,4.249,1117,2.541,1118,2.541,1119,2.541,1120,2.541,1121,2.541,1122,2.541,1123,3.152,1124,2.541,1125,3.009,1126,3.009,1127,3.152,1128,2.233,1129,2.233,1130,2.233,1131,4.249,1132,2.233,1133,3.009]],["title/components/NavigationComponent.html",[0,0.066,107,0.791]],["body/components/NavigationComponent.html",[0,0.104,1,0.761,2,1.356,3,0.287,4,0.253,5,1.075,6,1.075,7,1.075,8,1.075,9,0.253,15,1.005,16,1.005,17,1.378,18,1.186,19,0.956,21,0.956,23,0.614,24,0.956,29,0.823,32,0.027,33,0.436,37,0.477,38,0.658,39,0.323,41,0.287,43,0.287,44,0.253,63,1.883,65,1.664,66,1.301,67,1.664,68,1.664,69,1.759,70,1.783,71,2.257,73,2.166,74,2.657,75,1.913,78,1.783,79,1.783,84,0.938,85,1.451,86,1.451,87,1.075,88,1.759,89,1.075,90,1.075,91,0.761,92,1.267,93,1.075,94,0.761,95,1.451,96,0.817,97,1.075,98,0.564,99,0.61,100,1.075,101,0.658,102,1.075,103,0.761,104,1.005,105,0.761,106,1.075,107,1.337,108,1.075,109,0.761,110,1.075,111,0.761,112,1.075,113,0.761,114,1.075,115,0.761,116,1.075,117,0.761,118,0.938,119,1.535,120,1.075,121,1.075,122,0.018,123,0.018,134,0.761,152,3.966,173,1.005,198,0.761,204,2.838,263,1.925,268,2.377,271,2.394,272,2.938,274,2.161,275,2.166,277,2.018,278,1.913,279,1.417,283,1.44,286,1.523,289,1.417,290,1.417,291,1.417,298,2.394,332,1.523,382,2.315,383,2.71,385,2.315,386,3.788,388,2.838,397,2.315,398,2.599,417,2.102,442,1.321,591,2.838,652,2.599,1004,3.944,1008,3.788,1017,2.938,1055,2.838,1056,2.581,1057,2.581,1134,2.938,1135,4.696,1136,4.696,1137,5.316,1138,4.696,1139,5.316,1140,5.692,1141,3.479,1142,3.479,1143,3.479,1144,4.696,1145,5.316,1146,3.479,1147,4.696,1148,3.479,1149,6.261,1150,4.696,1151,3.479,1152,4.489,1153,3.479,1154,2.581,1155,3.479,1156,2.581,1157,3.479,1158,3.479,1159,3.479,1160,3.479,1161,3.479,1162,3.479,1163,4.489,1164,3.955,1165,5.692,1166,3.479,1167,2.315,1168,4.696,1169,3.479,1170,3.479,1171,3.479,1172,3.479,1173,3.479,1174,3.479,1175,3.479,1176,2.581,1177,2.581,1178,3.479]],["title/injectables/NotyfService.html",[146,0.848,315,1.278]],["body/injectables/NotyfService.html",[3,0.361,4,0.318,9,0.318,23,0.451,24,1.109,26,1.208,29,1.088,31,1.109,32,0.027,33,0.505,34,0.744,35,1.109,37,0.747,38,1.174,39,0.505,41,0.361,43,0.361,44,0.318,45,1.04,69,1.802,122,0.021,123,0.021,134,0.883,146,1.372,162,1.109,173,1.263,186,5.245,191,1.793,196,1.326,198,0.957,204,3.292,233,2.055,266,2.068,268,2.068,274,2.358,315,2.068,318,2.42,319,1.915,383,2.777,600,2.643,1179,3.693,1180,5.58,1181,4.373,1182,5.448,1183,4.373,1184,5.448,1185,5.448,1186,4.373,1187,5.448,1188,5.448,1189,5.448,1190,5.448,1191,5.448,1192,5.448,1193,6.211,1194,5.448,1195,4.373,1196,4.373,1197,4.373]],["title/components/PageNotFoundComponent.html",[0,0.066,109,0.737]],["body/components/PageNotFoundComponent.html",[0,0.118,1,0.985,2,1.601,3,0.372,4,0.327,5,1.391,6,1.391,7,1.391,8,1.391,9,0.327,15,1.954,16,1.3,17,1.417,18,1.22,19,1.129,21,1.129,32,0.026,33,0.514,39,0.417,41,0.372,43,0.372,44,0.327,84,1.214,85,1.714,86,1.714,87,1.391,88,1.939,89,1.391,90,1.391,91,0.985,92,1.496,93,1.391,94,0.985,95,1.714,96,1.057,97,1.391,98,0.729,99,0.789,100,1.391,101,0.851,102,1.391,103,0.985,104,1.3,105,0.985,106,1.391,107,1.057,108,1.391,109,1.373,110,1.391,111,0.985,112,1.391,113,0.985,114,1.391,115,0.985,116,1.391,117,0.985,118,1.214,119,1.3,120,1.391,121,1.391,122,0.021,123,0.021,477,2.995,979,4.175,1198,3.801,1199,3.801,1200,6.011,1201,5.546,1202,4.501,1203,4.501]],["title/components/ProfileComponent.html",[0,0.066,111,0.737]],["body/components/ProfileComponent.html",[0,0.087,1,0.543,2,1.067,3,0.205,4,0.181,5,0.767,6,0.767,7,0.767,8,0.767,9,0.181,15,1.274,16,0.717,17,1.314,18,1.131,19,0.752,21,0.752,23,0.256,24,0.752,25,1.231,26,0.752,28,1.242,29,1.144,31,0.505,32,0.027,33,0.409,34,0.665,35,0.899,37,0.832,38,0.988,39,0.553,41,0.205,42,0.669,43,0.205,44,0.181,45,0.994,57,3.12,63,1.852,65,1.852,66,1.276,67,1.564,68,1.732,69,1.617,70,2.214,71,1.403,72,2.08,73,1.505,74,1.011,75,1.011,77,1.266,78,1.984,79,1.984,80,1.618,83,1.992,84,0.669,85,1.142,86,1.142,87,0.767,88,1.511,89,0.767,90,0.767,91,0.543,92,1.319,93,0.767,94,0.543,95,1.142,96,0.583,97,0.767,98,0.402,99,0.435,100,0.767,101,0.469,102,0.767,103,0.543,104,0.717,105,0.543,106,0.767,107,0.583,108,0.767,109,0.543,110,0.767,111,1.07,112,0.767,113,0.543,114,0.767,115,0.543,116,0.767,117,0.543,118,1.19,119,1.509,120,0.767,121,0.767,122,0.014,123,0.014,134,0.599,139,2.135,143,0.868,144,1.148,145,1.754,146,1.429,196,1.253,207,0.543,210,1.932,211,0.996,212,0.767,214,1.625,244,1.813,250,2.096,265,1.505,266,1.403,267,1.171,268,1.856,269,2.141,270,1.842,274,1.856,275,1.992,277,1.856,278,2.129,279,2.129,280,2.887,283,1.07,286,1.087,288,2.141,289,1.992,290,1.992,291,1.992,292,1.087,293,1.087,306,1.148,308,1.798,316,0.942,342,1.266,442,0.942,607,4.128,610,2.082,612,2.141,620,3.478,628,1.087,668,1.309,681,1.222,682,0.879,801,2.706,803,2.466,804,2.665,826,2.443,827,3.311,1082,2.096,1083,2.096,1109,2.096,1204,2.096,1205,3.727,1206,3.12,1207,3.727,1208,4.414,1209,4.414,1210,3.627,1211,4.889,1212,4.889,1213,3.627,1214,3.627,1215,4.889,1216,4.889,1217,4.889,1218,3.695,1219,2.482,1220,2.482,1221,2.482,1222,2.482,1223,2.482,1224,2.482,1225,2.482,1226,2.482,1227,2.482,1228,2.482,1229,2.482,1230,2.482,1231,2.482,1232,4.414,1233,2.482,1234,2.482,1235,2.482,1236,2.482,1237,2.482,1238,3.695,1239,2.482,1240,2.482,1241,2.482,1242,2.482,1243,3.695,1244,2.482,1245,2.482,1246,2.482,1247,2.482,1248,2.482,1249,2.482,1250,2.482,1251,2.482,1252,2.482,1253,5.479,1254,5.479,1255,5.479,1256,2.096,1257,2.482,1258,2.482,1259,2.096,1260,2.482,1261,2.096,1262,2.482,1263,4.414,1264,2.482,1265,2.482,1266,2.482,1267,2.482,1268,2.482,1269,2.482,1270,2.482,1271,2.482,1272,2.096,1273,2.482,1274,2.482,1275,2.096,1276,2.482,1277,2.482,1278,2.482,1279,3.695,1280,3.12,1281,3.695,1282,2.482,1283,3.695,1284,2.482,1285,2.482,1286,2.482,1287,2.482,1288,2.482,1289,2.482,1290,2.482,1291,2.482,1292,2.482,1293,2.482,1294,2.482]],["title/components/RegisterComponent.html",[0,0.066,113,0.737]],["body/components/RegisterComponent.html",[0,0.075,1,0.569,2,1.105,3,0.215,4,0.189,5,0.804,6,0.804,7,0.804,8,0.804,9,0.189,15,0.751,16,0.751,17,1.315,18,1.132,19,0.53,21,0.53,23,0.395,24,0.779,25,1.142,26,0.53,29,1.075,31,0.53,32,0.027,33,0.421,34,0.518,35,0.53,37,0.525,38,0.723,39,0.517,40,1.675,41,0.215,43,0.215,63,1.975,65,2.041,66,1.261,67,1.888,68,1.975,69,1.906,70,2.244,71,1.723,72,2.024,73,1.559,74,1.848,75,1.06,78,1.453,79,1.453,80,1.139,81,2.546,83,1.06,84,0.702,85,1.183,86,1.183,87,0.804,88,1.546,89,0.804,90,0.804,91,0.569,92,1.032,93,0.804,94,0.569,95,1.183,96,0.611,97,0.804,98,0.422,99,0.456,100,0.804,101,0.492,102,0.804,103,0.569,104,0.751,105,0.569,106,0.804,107,0.611,108,0.804,109,0.569,110,0.804,111,0.569,112,0.804,113,0.993,114,0.804,115,0.569,116,0.804,117,0.569,118,0.702,119,0.751,120,0.804,121,0.804,122,0.015,123,0.015,134,0.62,143,0.899,144,1.066,145,1.647,146,1.342,162,1.173,173,0.751,175,2.198,182,3.231,191,1.31,193,2.546,197,0.922,198,0.569,207,0.569,208,2.546,209,1.44,211,0.702,212,0.804,214,0.963,226,3.709,233,0.861,252,0.861,253,0.861,254,0.861,264,1.327,265,1.559,266,0.988,267,1.228,268,1.899,269,1.139,271,1.327,274,2.116,275,2.347,276,2.511,277,1.899,278,2.038,279,2.038,280,2.588,281,2.313,282,1.44,283,1.439,285,1.573,286,1.139,287,1.139,288,1.139,289,1.848,290,2.038,291,2.038,292,1.675,293,1.675,298,1.327,305,1.573,306,1.066,308,1.06,319,1.139,320,0.922,322,0.611,354,1.06,383,1.951,384,1.573,396,2.312,398,1.44,587,1.931,594,2.198,618,4.139,620,3.547,625,1.848,641,1.327,652,2.118,682,0.922,803,2.788,804,2.842,857,2.312,966,1.327,1008,1.732,1018,1.732,1055,2.312,1058,2.839,1059,1.573,1063,1.931,1072,2.198,1074,3.712,1075,4.224,1088,2.839,1092,4.136,1093,2.198,1095,2.198,1097,1.931,1113,3.712,1114,3.712,1115,3.231,1117,2.198,1118,2.198,1119,2.198,1120,2.198,1121,2.198,1122,2.198,1123,1.931,1124,2.198,1127,1.931,1128,1.931,1129,1.931,1130,1.931,1132,1.931,1154,1.931,1156,1.931,1164,1.732,1167,1.732,1176,1.931,1177,3.367,1210,1.931,1213,1.931,1214,1.931,1295,1.931,1296,3.826,1297,2.602,1298,5.003,1299,4.538,1300,4.501,1301,2.602,1302,2.602,1303,2.602,1304,2.198,1305,2.198,1306,2.602,1307,2.602,1308,2.546,1309,2.602,1310,2.602,1311,2.602,1312,2.602,1313,2.198,1314,2.602,1315,2.602,1316,2.602,1317,3.231,1318,3.231,1319,2.839,1320,2.602,1321,3.832,1322,2.602,1323,3.832,1324,1.931,1325,2.198,1326,2.198,1327,2.198,1328,3.231,1329,2.198,1330,2.198,1331,2.602,1332,2.602,1333,2.602,1334,5.413,1335,4.992,1336,3.826,1337,3.231,1338,3.231,1339,3.231,1340,3.231,1341,3.231,1342,3.231,1343,2.198,1344,2.602,1345,2.602,1346,2.602,1347,2.602,1348,4.224,1349,2.602,1350,2.602,1351,2.839,1352,2.198,1353,2.198,1354,3.231,1355,2.198,1356,2.198,1357,3.231,1358,1.931,1359,2.198,1360,2.198,1361,3.231,1362,3.231,1363,3.231,1364,3.231,1365,2.198,1366,2.198,1367,2.198,1368,2.198,1369,2.198,1370,2.198,1371,2.198,1372,2.198,1373,2.198,1374,2.198,1375,4.224,1376,2.198]],["title/components/StatsComponent.html",[0,0.066,115,0.737]],["body/components/StatsComponent.html",[0,0.088,1,0.562,2,1.094,3,0.212,4,0.187,5,0.793,6,0.793,7,0.793,8,0.793,9,0.187,15,0.741,16,0.741,17,1.321,18,1.137,19,0.771,21,0.771,23,0.265,24,0.771,25,1.251,26,0.523,28,1.255,29,1.1,31,0.916,32,0.027,33,0.558,34,0.698,35,0.916,37,0.727,38,0.851,39,0.461,40,1.971,41,0.212,42,0.692,43,0.212,44,0.187,45,1.071,46,0.909,63,1.595,65,1.595,66,0.562,67,0.909,68,1.595,69,1.753,72,1.438,84,0.692,85,1.171,86,1.171,87,0.793,88,1.536,89,0.793,90,0.793,91,0.562,92,1.022,93,0.793,94,0.562,95,1.171,96,0.603,97,0.793,98,0.416,99,0.45,100,0.793,101,0.485,102,0.793,103,0.562,104,0.741,105,0.562,106,0.793,107,0.603,108,0.793,109,0.562,110,0.793,111,0.562,112,0.793,113,0.562,114,0.793,115,1.087,116,0.793,117,0.562,118,0.692,119,0.741,120,0.793,121,0.793,122,0.015,123,0.015,134,0.614,139,1.989,143,0.89,144,1.167,162,0.523,173,1.53,192,1.835,196,1.199,198,1.315,207,0.562,214,1.68,220,2.534,241,0.909,244,1.835,263,2.491,265,1.046,266,0.975,277,0.975,281,1.309,283,0.985,286,1.971,320,1.342,321,1.046,322,1.057,329,1.543,342,1.309,388,1.551,394,2.72,568,1.905,569,2.81,652,2.491,668,1.595,681,2.023,690,1.971,738,1.658,760,1.124,761,1.124,762,1.124,763,1.124,764,1.124,779,1.124,783,1.421,785,1.421,788,1.309,798,2.81,807,1.708,826,3.07,837,2.52,838,1.708,966,2.828,1000,2.168,1032,3.801,1037,2.168,1055,3.558,1056,2.81,1057,1.905,1163,3.199,1164,2.995,1167,2.995,1280,4.197,1351,2.81,1358,1.905,1377,2.168,1378,4.502,1379,3.788,1380,4.502,1381,4.502,1382,4.502,1383,4.502,1384,4.502,1385,4.97,1386,3.788,1387,3.788,1388,4.97,1389,3.788,1390,4.502,1391,3.788,1392,2.567,1393,3.788,1394,2.567,1395,3.788,1396,2.567,1397,3.788,1398,2.567,1399,2.567,1400,3.788,1401,4.502,1402,6.012,1403,2.567,1404,2.567,1405,4.502,1406,3.788,1407,2.567,1408,2.567,1409,2.567,1410,3.788,1411,2.567,1412,2.567,1413,2.567,1414,2.567,1415,3.788,1416,3.788,1417,2.567,1418,4.502,1419,3.788,1420,3.788,1421,2.567,1422,2.567,1423,3.788,1424,3.788,1425,2.567,1426,2.567,1427,2.567,1428,2.567,1429,2.567,1430,2.567,1431,2.567,1432,2.567,1433,2.567,1434,2.567,1435,2.567,1436,2.567,1437,2.567,1438,3.788,1439,2.567,1440,2.567,1441,2.567,1442,2.567,1443,2.567,1444,2.567,1445,3.788,1446,2.567,1447,2.567,1448,2.567,1449,2.567,1450,2.567,1451,3.788,1452,2.567,1453,2.567,1454,3.788,1455,2.567,1456,2.567,1457,2.567,1458,2.567,1459,2.168,1460,2.567,1461,2.168,1462,2.567,1463,2.567,1464,2.168,1465,3.788,1466,2.567,1467,2.567,1468,3.788,1469,3.788,1470,2.567,1471,2.567,1472,4.502,1473,2.567,1474,3.788,1475,2.168,1476,2.567,1477,2.567,1478,2.567,1479,2.567,1480,2.567,1481,2.567,1482,2.567,1483,2.567,1484,2.567,1485,3.788]],["title/pipes/TrimDecimalsPipe.html",[430,2.034,1486,2.24]],["body/pipes/TrimDecimalsPipe.html",[3,0.403,4,0.355,9,0.355,16,1.41,24,0.994,29,0.856,31,0.994,32,0.027,33,0.578,34,0.557,35,0.994,37,0.67,39,0.453,41,0.403,43,0.403,44,0.355,122,0.022,123,0.022,173,1.41,196,1.186,198,1.363,214,1.23,283,1.069,320,1.73,322,1.369,394,2.951,430,3.521,681,2.213,751,2.749,1004,3.623,1061,4.124,1152,4.124,1486,3.878,1487,4.884,1488,4.921,1489,4.124,1490,5.827,1491,5.827,1492,6.451,1493,4.884,1494,5.827,1495,4.884,1496,4.884,1497,4.884,1498,4.884,1499,4.884,1500,4.884]],["title/components/UpdateProfileComponent.html",[0,0.066,117,0.737]],["body/components/UpdateProfileComponent.html",[0,0.071,1,0.525,2,1.04,3,0.198,4,0.174,5,0.741,6,0.741,7,0.741,8,0.741,9,0.174,15,0.692,16,0.692,17,1.297,18,1.116,19,0.488,21,0.488,23,0.372,24,0.733,25,1.089,26,0.488,28,1.127,29,1.132,31,0.488,32,0.027,33,0.401,34,0.617,35,0.488,37,0.706,38,0.453,39,0.547,40,1.576,41,0.198,42,0.647,43,0.198,63,1.916,65,1.988,66,1.184,67,1.702,68,1.825,69,1.789,70,2.13,71,1.367,72,1.641,73,0.977,74,1.761,75,0.977,78,1.367,79,1.367,80,1.893,81,2.396,83,0.977,84,0.647,85,1.113,86,1.113,87,0.741,88,1.485,89,0.741,90,0.741,91,0.525,92,0.971,93,0.741,94,0.525,95,1.113,96,0.563,97,0.741,98,0.388,99,0.42,100,0.741,101,0.453,102,0.741,103,0.525,104,0.692,105,0.525,106,0.741,107,0.563,108,0.741,109,0.525,110,0.741,111,0.525,112,0.741,113,0.525,114,0.741,115,0.525,116,0.741,117,0.946,118,1.592,119,1.562,120,0.741,121,0.741,122,0.014,123,0.014,134,0.583,139,1.909,143,0.846,144,1.015,145,1.592,146,1.297,162,1.101,173,1.04,191,1.248,193,2.396,196,0.88,197,0.849,198,0.788,203,1.596,204,1.449,207,0.525,208,2.396,209,1.327,211,0.647,212,0.741,214,1.362,226,2.396,233,1.43,243,0.91,244,1.191,247,2.204,251,0.91,252,1.191,253,1.191,254,1.191,255,0.91,264,1.836,265,1.467,266,0.91,267,1.131,268,1.955,269,1.05,270,1.779,274,2.054,275,2.285,276,2.393,277,1.824,278,1.958,279,1.958,280,2.527,281,2.204,282,1.327,283,1.429,285,1.449,286,1.05,287,1.05,288,1.05,289,1.761,290,1.958,291,1.958,292,1.576,293,1.576,298,1.223,305,1.449,306,1.015,308,0.977,320,0.849,322,0.563,371,2.025,383,1.836,384,1.449,396,2.176,398,1.327,559,3.926,587,1.779,602,2.025,612,1.893,618,3.841,628,1.05,652,1.993,681,0.793,682,0.849,803,2.647,804,2.626,857,2.176,966,1.223,1008,1.596,1018,1.596,1055,2.176,1058,2.671,1059,1.449,1063,1.779,1088,2.671,1092,4.013,1097,1.779,1123,1.779,1127,1.779,1128,1.779,1129,1.779,1130,1.779,1132,1.779,1154,1.779,1156,1.779,1164,1.596,1167,1.596,1176,1.779,1177,3.208,1205,3.04,1206,2.025,1210,1.779,1213,3.208,1214,1.779,1300,4.349,1304,2.025,1305,2.025,1308,2.396,1313,2.025,1317,3.04,1318,3.04,1319,2.671,1321,3.04,1323,3.04,1324,1.779,1325,2.025,1326,2.025,1327,2.025,1328,3.04,1329,2.025,1330,2.025,1334,4.058,1335,3.04,1337,3.04,1338,3.04,1339,3.04,1340,3.04,1341,3.04,1342,3.04,1343,2.025,1348,3.651,1351,2.671,1352,2.025,1353,2.025,1354,3.04,1355,2.025,1356,2.025,1357,3.04,1358,1.779,1359,2.025,1360,2.025,1361,3.04,1362,3.04,1363,3.04,1364,3.04,1365,2.025,1366,2.025,1367,2.025,1368,2.025,1369,2.025,1370,2.025,1371,2.025,1372,2.025,1373,2.025,1374,2.025,1375,4.058,1376,2.025,1501,4.821,1502,1.779,1503,3.601,1504,3.601,1505,3.601,1506,3.601,1507,3.601,1508,3.601,1509,4.323,1510,4.806,1511,4.323,1512,3.651,1513,3.601,1514,2.398,1515,2.398,1516,2.398,1517,2.398,1518,2.398,1519,2.398,1520,2.398,1521,2.398,1522,2.398,1523,2.398,1524,2.398,1525,2.398,1526,2.398,1527,2.398,1528,2.398,1529,2.398,1530,2.398,1531,2.398,1532,2.398,1533,2.025,1534,2.398,1535,4.323,1536,2.398,1537,2.398,1538,2.398,1539,4.323,1540,2.398,1541,2.398,1542,2.398,1543,2.398,1544,2.398,1545,2.398,1546,2.398,1547,2.398,1548,2.398,1549,2.398,1550,2.398,1551,2.398,1552,3.601,1553,2.398,1554,2.398,1555,2.398,1556,2.398,1557,2.398,1558,2.398,1559,2.398,1560,2.398,1561,2.398]],["title/interfaces/UserData.html",[327,0.908,802,2.034]],["body/interfaces/UserData.html",[0,0.069,3,0.191,4,0.168,9,0.168,17,0.471,18,0.406,19,0.471,21,0.471,23,0.239,25,0.583,26,0.471,28,0.926,32,0.027,33,0.392,34,0.4,38,0.8,39,0.529,40,1.535,41,0.191,42,0.624,43,0.191,44,0.168,45,1.001,46,1.499,66,0.506,99,1.088,101,0.438,118,0.624,122,0.013,123,0.013,134,0.568,139,1.562,143,0.544,144,0.823,145,1.308,146,1.065,149,1.724,151,1.54,162,1.129,166,0.943,171,0.766,191,1.012,192,1.562,196,1.129,197,1.242,200,1.891,207,0.506,210,1.013,211,0.624,212,0.715,214,1.715,233,0.766,241,1.964,243,0.879,244,1.971,246,0.943,251,0.879,252,0.766,253,0.766,254,0.766,255,0.879,257,2.067,259,1.535,260,1.54,273,1.399,283,1.422,287,2.067,306,0.823,308,0.943,320,0.82,322,1.109,327,0.945,329,2.428,334,3.141,349,1.54,354,1.724,363,1.54,366,1.54,370,2.333,372,1.54,373,2.118,417,2.557,489,1.54,589,1.54,591,1.399,610,1.092,612,1.535,628,1.013,643,1.535,661,1.792,663,1.013,668,2.242,678,1.18,681,1.934,682,0.82,683,1.092,685,1.654,686,2.517,688,1.092,690,2.221,693,1.654,704,2.227,705,1.092,712,1.092,738,2.221,739,1.654,740,1.654,741,1.654,742,1.654,750,1.092,756,1.853,759,2.392,760,1.535,761,1.535,762,1.535,763,2.067,764,1.535,766,1.654,768,1.654,779,1.013,782,1.654,792,1.092,797,1.54,799,2.601,800,1.717,801,1.94,802,3.065,803,2.517,804,2.721,805,1.717,806,1.717,807,1.54,808,1.717,809,1.717,810,3.96,811,1.717,812,1.717,813,1.717,814,1.717,815,1.717,816,1.717,817,1.717,818,3.502,819,1.717,820,1.717,821,2.601,822,1.717,823,1.717,824,1.717,825,1.717,826,2.807,827,2.118,828,1.717,829,1.717,830,3.502,831,1.717,832,1.717,833,2.601,834,1.717,835,1.717,836,1.717,837,1.54,838,1.54,839,1.717,840,1.717,841,1.717,842,1.717,843,1.717,844,1.717,845,1.717,846,1.717,847,1.717,848,1.717,849,1.717,850,1.717,851,1.717,852,1.54,853,1.717,854,3.763,855,1.717,856,3.14,857,1.399,858,1.717,859,1.717,860,3.14,861,1.717,862,1.717,863,1.717,864,1.717,865,3.14,866,2.601,867,1.717,868,1.717,869,2.601,870,2.601,871,1.717,872,3.502,873,3.14,874,1.717,875,2.601,876,1.717,877,1.717,878,1.717,879,1.717,880,1.717,881,1.717,882,3.763,883,3.14,884,2.601,885,1.717,886,2.601,887,1.717,888,1.717,889,1.717,890,2.601,891,2.601,892,1.717,893,3.14,894,2.601,895,1.717,896,2.601,897,1.717,898,2.601,899,3.14,900,1.717,901,1.717,902,1.717,903,1.717,904,1.717,905,1.717,906,1.717,907,1.717,908,1.717,909,1.54,910,1.717,911,1.717,912,3.14,913,1.717,914,3.14,915,1.717,916,1.717,917,1.717,918,1.717,919,2.601,920,2.601,921,1.717,922,1.717,923,2.601,924,1.717,925,2.601,926,1.717,927,1.717,928,1.717,929,1.717,930,1.717,931,1.717,932,1.717,933,1.717,934,1.717,935,1.717,936,1.717,937,1.717,938,1.717,939,1.717,940,1.717,941,1.717,942,1.717,943,1.717,944,1.717,945,1.717,946,1.717,947,1.717,948,1.717,949,2.601,950,1.717,951,1.717,952,1.717,953,1.717,954,1.717,955,1.717,956,2.601,957,1.717,958,2.601,959,2.601,960,1.717,961,1.717,962,2.601,963,1.717,964,1.717,965,1.717,966,1.787,967,1.717,968,1.717,969,1.717,970,1.717,971,1.717,972,1.717,973,1.717,974,1.717,975,1.717,976,1.54,977,1.717,978,1.717,979,2.333,980,1.717]],["title/guards/UserGuard.html",[300,2.498,585,2.24]],["body/guards/UserGuard.html",[3,0.386,4,0.34,9,0.34,23,0.482,24,1.155,26,0.95,29,0.994,31,1.155,32,0.027,33,0.526,34,0.647,35,1.155,37,0.64,39,0.589,41,0.386,43,0.386,44,0.34,45,0.818,122,0.022,123,0.022,145,2.071,192,1.876,203,3.774,210,2.483,211,1.259,216,3.692,302,3.464,304,4.831,305,2.821,306,1.492,308,2.31,309,3.942,310,5.365,311,5.365,313,2.882,314,5.159,315,2.153,316,1.772,317,3.464,318,2.583,319,2.044,320,1.654,321,1.902,322,1.096,585,3.774,632,2.38,1562,3.942,1563,4.668,1564,4.668,1565,4.668,1566,4.668]],["title/classes/UserModule.html",[44,0.245,1567,2.24]],["body/classes/UserModule.html",[3,0.372,4,0.327,9,0.327,23,0.465,26,0.916,29,1.194,31,0.916,32,0.027,33,0.417,34,0.777,35,0.916,43,0.372,44,0.327,122,0.021,123,0.021,134,0.898,171,1.489,196,1.41,200,2.13,620,4,625,2.449,668,1.965,681,1.835,803,2.836,804,3.065,1207,5.076,1209,5.076,1256,3.801,1259,3.801,1261,3.801,1272,3.801,1275,3.801,1512,5.076,1567,4.288,1568,4.501,1569,3.801,1570,6.011,1571,5.546,1572,5.546,1573,4.501,1574,4.501,1575,4.501,1576,4.501,1577,4.501,1578,4.501,1579,4.501,1580,4.501,1581,4.501,1582,4.501,1583,4.501,1584,4.501,1585,4.501,1586,4.501,1587,4.501,1588,4.501,1589,4.501,1590,4.501,1591,4.501,1592,4.501,1593,4.501]],["title/injectables/UserService.html",[28,0.737,315,1.278]],["body/injectables/UserService.html",[3,0.31,4,0.273,9,0.273,23,0.387,24,1.005,26,1.005,28,1.08,29,1.148,31,0.763,32,0.027,33,0.348,34,0.695,35,0.763,37,0.875,39,0.58,41,0.31,43,0.31,44,0.273,45,0.967,122,0.019,123,0.019,134,0.8,139,2.218,143,1.159,144,1.377,145,1.971,162,0.763,171,1.94,191,1.082,192,1.633,196,1.274,200,1.749,201,4.094,207,0.82,210,2.416,211,1.011,214,1.63,243,1.423,244,2.07,251,1.423,273,2.265,315,1.874,318,2.075,319,1.641,322,1.377,342,1.911,600,2.265,610,2.874,612,2.668,625,1.527,628,1.641,634,1.911,635,3.165,636,4.66,756,2.161,801,3.245,826,3.054,827,2.983,1111,3.165,1113,3.662,1114,3.662,1464,4.168,1533,3.165,1567,3.672,1594,3.165,1595,5.518,1596,5.518,1597,5.518,1598,5.865,1599,5.865,1600,6.094,1601,5.865,1602,4.936,1603,3.749,1604,3.749,1605,3.749,1606,3.749,1607,3.749,1608,3.749,1609,3.749,1610,3.749,1611,3.749,1612,3.749,1613,4.936,1614,3.749,1615,3.749,1616,3.749,1617,3.749,1618,3.749,1619,3.749,1620,3.749,1621,3.749,1622,3.749,1623,3.749,1624,5.518,1625,3.749,1626,3.749,1627,3.749,1628,3.749,1629,3.749,1630,3.749,1631,3.749,1632,3.749,1633,4.936,1634,3.749,1635,5.518,1636,3.749,1637,3.749]],["title/coverage.html",[1638,3.878]],["body/coverage.html",[0,0.134,1,0.887,9,0.295,10,3.423,11,2.697,12,3.423,28,0.887,32,0.027,34,0.463,44,0.295,66,0.887,91,0.887,94,0.887,96,0.952,98,0.657,99,0.71,101,0.766,103,0.887,105,0.887,107,0.952,109,0.887,111,0.887,113,0.887,115,0.887,117,0.887,122,0.02,123,0.02,124,3.853,125,2.697,126,3.423,146,1.021,162,0.825,241,1.436,283,1.536,300,3.853,301,2.697,303,3.423,306,0.952,315,2.294,324,2.697,325,3.853,327,1.724,399,3.423,430,2.45,468,3.008,477,2.697,559,3.138,562,2.697,564,2.947,585,2.697,601,3.423,661,1.539,662,3.423,679,3.457,680,3.457,684,2.067,687,2.067,689,2.067,797,3.813,802,2.45,1066,3.423,1084,3.423,1134,3.423,1179,3.423,1198,3.423,1199,3.423,1204,3.423,1295,3.853,1308,3.456,1324,3.853,1377,3.423,1486,2.697,1488,3.423,1489,3.423,1501,3.853,1502,3.853,1562,3.423,1567,2.697,1569,3.423,1594,3.423,1638,3.423,1639,4.054,1640,4.054,1641,4.054,1642,6.247,1643,4.054,1644,4.054,1645,4.054,1646,4.054,1647,4.054,1648,4.054,1649,4.054,1650,4.054,1651,4.054,1652,6.391,1653,5.193,1654,4.054,1655,6.042,1656,4.054,1657,4.054,1658,5.193,1659,5.193,1660,4.054,1661,3.423,1662,4.054,1663,4.054,1664,4.054]],["title/dependencies.html",[421,2.694,1665,2.086]],["body/dependencies.html",[32,0.027,41,0.397,122,0.022,123,0.022,209,2.66,211,1.297,316,1.825,421,3.199,423,3.567,451,4.283,452,3.841,568,3.567,569,3.567,583,4.059,1099,3.567,1180,4.059,1666,4.807,1667,5.739,1668,4.807,1669,5.773,1670,4.807,1671,4.807,1672,4.807,1673,4.807,1674,4.807,1675,4.807,1676,4.807,1677,4.807,1678,4.807,1679,5.773,1680,4.807,1681,4.807,1682,4.807,1683,6.417,1684,4.807,1685,4.807,1686,4.807,1687,4.807,1688,4.807,1689,4.807,1690,4.807,1691,4.807,1692,4.807,1693,4.807,1694,4.807,1695,4.807,1696,4.807,1697,4.807,1698,4.807,1699,4.807,1700,4.807,1701,4.807]],["title/miscellaneous/functions.html",[1702,1.871,1703,3.418]],["body/miscellaneous/functions.html",[23,0.548,32,0.025,37,0.839,122,0.023,123,0.023,559,3.21,1295,3.942,1308,4.535,1319,4.542,1501,3.942,1502,4.542,1702,3.535,1703,4.486,1704,5.313,1705,5.313]],["title/index.html",[23,0.29,1706,2.812,1707,2.812]],["body/index.html",[0,0.121,4,0.343,15,1.363,32,0.022,33,0.438,49,3.986,52,3.986,58,5.183,122,0.022,123,0.022,129,2.067,162,0.961,165,5.183,320,1.672,333,3.986,442,1.792,788,2.407,909,3.141,976,3.141,1459,3.986,1475,5.67,1665,3.502,1667,3.986,1708,4.72,1709,5.71,1710,4.72,1711,6.138,1712,3.986,1713,4.72,1714,5.71,1715,6.531,1716,4.72,1717,4.72,1718,4.72,1719,4.72,1720,4.72,1721,4.72,1722,4.72,1723,4.72,1724,6.138,1725,4.72,1726,6.378,1727,4.72,1728,4.72,1729,4.72,1730,4.72,1731,5.71,1732,5.71,1733,6.378,1734,4.72,1735,5.71,1736,5.71,1737,4.72,1738,6.637,1739,4.72,1740,4.72,1741,5.71,1742,4.72,1743,4.72,1744,4.72,1745,4.72,1746,6.138,1747,4.72,1748,3.502,1749,4.72]],["title/modules.html",[420,2.775]],["body/modules.html",[32,0.024,122,0.024,123,0.024,419,3.603,420,3.272,431,3.272,452,3.603,852,3.603,1750,5.414,1751,5.414,1752,6.189,1753,5.414]],["title/overview.html",[1748,3.407]],["body/overview.html",[1,1.271,2,1.205,32,0.027,44,0.304,84,1.126,91,1.271,94,1.271,96,1.536,98,0.941,101,1.098,103,1.271,105,1.271,107,1.364,109,1.271,111,1.271,113,1.271,115,1.271,117,1.271,122,0.02,123,0.02,302,3.097,418,2.777,419,4.726,420,2.522,421,2.777,422,3.524,423,3.097,424,3.524,425,3.097,426,3.524,427,3.524,428,3.524,429,3.524,430,3.51,431,3.51,432,5.322,433,4.905,434,5.322,435,4.905,436,5.322,437,4.905,438,5.322,439,4.905,440,4.467,441,3.524,442,1.584,581,2.777,600,2.522,678,2.128,751,2.496,966,2.697,1486,2.777,1748,3.097,1754,4.174,1755,4.174,1756,4.174,1757,4.174]],["title/properties.html",[134,0.656,1665,2.086]],["body/properties.html",[32,0.025,122,0.024,123,0.024,134,0.886,1712,4.616,1758,5.467]],["title/routes.html",[581,3.056]],["body/routes.html",[32,0.024,122,0.024,123,0.024,581,3.655]],["title/miscellaneous/variables.html",[1702,1.871,1759,3.418]],["body/miscellaneous/variables.html",[18,0.911,23,0.537,32,0.026,34,0.593,122,0.023,123,0.023,173,1.501,198,1.137,409,4.743,410,4.743,468,4.486,1099,3.857,1461,4.39,1661,4.39,1702,3.459,1759,4.39,1760,5.198,1761,5.198,1762,5.198,1763,5.198,1764,5.198,1765,5.198,1766,5.198,1767,5.198,1768,5.198,1769,5.198,1770,5.198,1771,5.198]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1758,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.0625em",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.12.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.2vh",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.375em",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.3s",{"_index":1155,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1421,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":1163,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["0.58",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.789",{"_index":772,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["0.8",{"_index":1417,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["000436",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["0004ff",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["00076e",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["00115c",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["002fff",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["003c6e",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0099ff",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{}}}],["01",{"_index":747,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["01t${drinkdata.time}:00`).tolocaletimestring('en",{"_index":748,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["05em",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0625em",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1",{"_index":966,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":741,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["1.11.3",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.2rem",{"_index":1174,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1.5vh",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/3",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["100",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["100vh",{"_index":1150,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":1161,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":1178,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10vh",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["11.30.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["12vh",{"_index":1168,"title":{},"body":{"components/NavigationComponent.html":{}}}],["13",{"_index":1757,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["15.2.0",{"_index":1667,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["155",{"_index":1172,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":1165,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1vh",{"_index":1003,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1448,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":751,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"overview.html":{}}}],["2.3.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1013,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1422,"title":{},"body":{"components/StatsComponent.html":{}}}],["201",{"_index":1007,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20px",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["21",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["212121",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["21212180",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["255",{"_index":1170,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25vh",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["28vh",{"_index":1005,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2rem",{"_index":1148,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2vh",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["3.0.0",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["300",{"_index":1418,"title":{},"body":{"components/StatsComponent.html":{}}}],["30kg",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["30vh",{"_index":1001,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["33",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":1000,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["375em",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3vh",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1483,"title":{},"body":{"components/StatsComponent.html":{}}}],["40",{"_index":1017,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["400",{"_index":1402,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1188,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1202,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1203,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40vh",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["46",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["48009b",{"_index":1083,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["4caf50",{"_index":1192,"title":{},"body":{"injectables/NotyfService.html":{}}}],["5",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5.0.2",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1485,"title":{},"body":{"components/StatsComponent.html":{}}}],["50px",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["50vh",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5px",{"_index":1147,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5s",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5vh",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["6",{"_index":1756,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["62",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["6e0065",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6f00ff",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6vh",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["7",{"_index":1430,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["7/15",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["700",{"_index":1401,"title":{},"body":{"components/StatsComponent.html":{}}}],["75em",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["80vh",{"_index":1471,"title":{},"body":{"components/StatsComponent.html":{}}}],["8400ff",{"_index":1082,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["85vh",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["87008b",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["9",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["95vh",{"_index":1077,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["980328026322",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["997",{"_index":1157,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1166,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1431,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.payload.doc.data",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":1018,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions.map(a",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["activatedroutesnapshot",{"_index":310,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["actual_component",{"_index":121,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["adddrinkamount",{"_index":981,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adding",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["address",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adjustchartsizes",{"_index":1385,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adminformcomponent",{"_index":91,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":301,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminpagecomponent",{"_index":94,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["afauth",{"_index":1513,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["allowed",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["allows",{"_index":330,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["already",{"_index":777,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["amount",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["amounts",{"_index":958,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/stepper",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["anmd",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["apikey",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":96,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appends",{"_index":781,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["appid",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":419,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":431,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":1392,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1473,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":783,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1428,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1462,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1727,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1481,"title":{},"body":{"components/StatsComponent.html":{}}}],["async",{"_index":139,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":306,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authservice",{"_index":308,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["automatically",{"_index":1719,"title":{},"body":{"index.html":{}}}],["available",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["average",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["await",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["bac",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["background",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bar",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"components/DrinkListComponent.html":{}}}],["barchartheight",{"_index":1419,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1380,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1415,"title":{},"body":{"components/StatsComponent.html":{}}}],["base",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["based",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["behaviorsubject",{"_index":675,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":673,"title":{},"body":{"injectables/DateService.html":{}}}],["block",{"_index":1176,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bodywaterconstant",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1078,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bottom",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["box",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["break",{"_index":968,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["build",{"_index":1726,"title":{},"body":{"index.html":{}}}],["builder",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["button:disabled",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button:first",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:last",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:not(:disabled",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["buttons",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["calculate",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":926,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["canactivate",{"_index":304,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":309,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1744,"title":{},"body":{"index.html":{}}}],["catch",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1465,"title":{},"body":{"components/StatsComponent.html":{}}}],["ccblue",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpink",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpurple",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cdr",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["change",{"_index":1720,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1472,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1459,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["checking",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{}}}],["checks",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["choice",{"_index":1740,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1568,"title":{},"body":{"classes/UserModule.html":{}}}],["clear",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["clears",{"_index":793,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["cli",{"_index":1711,"title":{},"body":{"index.html":{}}}],["clicks",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clip",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["close",{"_index":1014,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["cluster_appmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1722,"title":{},"body":{"index.html":{}}}],["collection",{"_index":335,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["color",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1741,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/drink",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/home/home.component",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navigation/navigation.component",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/register/register.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/update",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm('are",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmdelete",{"_index":949,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["confirmpassword",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('user",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"drinkdata",{"_index":955,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('bad",{"_index":794,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log('current",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('date",{"_index":954,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('drink",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('estimated",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('fetched",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('future",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('hello",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('last",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('no",{"_index":980,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('past",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('time",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('total",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('udata",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('uid",{"_index":953,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(`deleted",{"_index":974,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(this.currentuserid",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":342,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(user",{"_index":1571,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["container",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["container.open",{"_index":1158,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contains",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":1164,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["count",{"_index":1468,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1638,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cps",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["create",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["creates",{"_index":757,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["createuserwithemailandpassword",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["current",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["currentemail",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["currenttime",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1551,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["d3",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["database",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["databse",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":668,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date().gettime",{"_index":775,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(`1970",{"_index":746,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(event.target.value",{"_index":933,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.max(...pastdrinks.map((drink",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.max(earliestalldrinktime.gettime",{"_index":924,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.min(...drinktimes.map((drink",{"_index":922,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1437,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1433,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1434,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1432,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":936,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date:'yyyy",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:\\'yyyy",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["dateinput",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":661,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":779,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1447,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1443,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":940,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["decimalplaces",{"_index":1492,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["decimals.pipe.ts",{"_index":1489,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:8",{"_index":1493,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1173,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["deep",{"_index":1476,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":334,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":338,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":344,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":952,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":346,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletion",{"_index":977,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":421,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["detail",{"_index":1015,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detail.alcohol",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":1002,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map(detail",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1717,"title":{},"body":{"index.html":{}}}],["development",{"_index":1713,"title":{},"body":{"index.html":{}}}],["digit",{"_index":752,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["direction",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["directive",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1725,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1730,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1193,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["displaying",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["displayname",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["dist",{"_index":1729,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1469,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["div.drink",{"_index":1009,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["div:last",{"_index":1010,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["doc(drinkid",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc.data",{"_index":1456,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1455,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1457,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":760,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":761,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":764,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":973,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set(drinkamountdata",{"_index":791,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["docsnapshot",{"_index":763,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":768,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":766,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1444,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":759,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid(\"profilepic",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["documentreference",{"_index":1531,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["doesn't",{"_index":786,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["drankdrinksref",{"_index":1451,"title":{},"body":{"components/StatsComponent.html":{}}}],["drink",{"_index":99,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":997,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.abv/100",{"_index":771,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.alcohol",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.amount",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.calories",{"_index":929,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":770,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.category",{"_index":785,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":965,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":999,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":975,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.time.split(':').map(number",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":684,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamountdata",{"_index":789,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkamounts",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":961,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":687,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1445,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":241,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.drinkamounts",{"_index":956,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdata.ml",{"_index":743,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.time",{"_index":744,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1460,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1463,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":348,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["drinklistcomponent",{"_index":98,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkmlinput",{"_index":1011,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinkname",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":329,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimeinput",{"_index":1012,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinktimes",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter((drink",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce((sum",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1187,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1739,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":1156,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["edit",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":339,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":350,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["eee",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["elapsed",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["element",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["elementref",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["elimination",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["empty",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["encapsulation",{"_index":1135,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1738,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["enter",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["entries",{"_index":960,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.findindex((entry",{"_index":963,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":967,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":782,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":964,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entryid",{"_index":774,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["entryindex",{"_index":962,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1182,"title":{},"body":{"injectables/NotyfService.html":{}}}],["estimated",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["estimatedsobertime",{"_index":923,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["execute",{"_index":1735,"title":{},"body":{"index.html":{}}}],["exist",{"_index":787,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existing",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata",{"_index":767,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata.drinkamounts",{"_index":769,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exists",{"_index":778,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exit",{"_index":969,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f44336",{"_index":1194,"title":{},"body":{"injectables/NotyfService.html":{}}}],["f700ff",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["false",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{}}}],["favoritedrink",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["fb",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetch",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchalldrinks",{"_index":340,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":356,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetching",{"_index":363,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ff00dd",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ff00ff",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1721,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1478,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":353,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fills",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filterdrinks",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["find",{"_index":959,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase/compat/app",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["firebase/firestore",{"_index":1533,"title":{},"body":{"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["firebase_options",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["firestoredocumentdata",{"_index":689,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":788,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["fixed",{"_index":1004,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["flat",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["float",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{}}}],["font",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["form'},{'name",{"_index":93,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.html",{"_index":133,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:106",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:20",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:24",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:28",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:73",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:87",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["formats",{"_index":937,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":1495,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["formatteddate",{"_index":738,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formattedtime",{"_index":745,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formbuilder",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontainer",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontainer>h1",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol('male",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formdata",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":979,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":110,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1201,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1200,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1199,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1703,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1745,"title":{},"body":{"index.html":{}}}],["future",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["futuredrinks",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1470,"title":{},"body":{"components/StatsComponent.html":{}}}],["gb",{"_index":749,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["gender",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1503,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["genderselection",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["genderselection>label",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genderselection>label>input",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gendertemp",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1724,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1710,"title":{},"body":{"index.html":{}}}],["generates",{"_index":773,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getauth",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["getconfirmpassword",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["getdoc",{"_index":1532,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getdrinks",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfavoritedrink",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getfirestore",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{}}}],["getformatteddate(date",{"_index":935,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1509,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getpassword",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1510,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":665,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1706,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["go",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["gradient(135deg",{"_index":291,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["grams",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["graph",{"_index":1753,"title":{},"body":{"modules.html":{}}}],["graphdata",{"_index":1381,"title":{},"body":{"components/StatsComponent.html":{}}}],["gray",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["green",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["group",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["guard",{"_index":300,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":302,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/user.guard",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h1",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["habits",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1145,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handles",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["headercontainer",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["help",{"_index":1746,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidden",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["history.state.drink",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["home",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":102,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":101,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1409,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1400,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1389,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":750,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["hours",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1718,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":1146,"title":{},"body":{"components/NavigationComponent.html":{}}}],["icons",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["id'}).subscribe",{"_index":361,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["identifier",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["if(!this.currentuserid",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(!this.loginform.valid",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(currentuser",{"_index":1550,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(newpassword",{"_index":1548,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(password",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["if(this.pwcheck",{"_index":1555,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(user",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["image",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["img",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":320,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1479,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["increment",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":795,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["infocontainer",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["initial",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["initialization",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initialize",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["initializeapp(environment",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp,providefirebaseapp",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializedrinkdata",{"_index":982,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["initializedrinkdata(drinkname",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initializeform",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["injectable",{"_index":315,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1175,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inner",{"_index":1076,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["innercontainer",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["input",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["input[type=\"radio",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["input[type=\"radio\"]:checked+span",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inputfieldzt",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inset(100",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["interface",{"_index":327,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["isadmin",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isopen",{"_index":1139,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isuser",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["items",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["iterate",{"_index":957,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":1167,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["karma",{"_index":1737,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["kcal/serving",{"_index":998,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["keep",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["key",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:first",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:last",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":104,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingbuttondiv",{"_index":1079,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landinglogin",{"_index":1081,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landingpagecomponent",{"_index":103,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["landingregister",{"_index":1080,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["large",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["last",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["last7days",{"_index":1427,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1442,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["later",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["left",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["legend",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1405,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1406,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1382,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1429,"title":{},"body":{"components/StatsComponent.html":{}}}],["letter",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["li",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["li:not(:last",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["lightgray",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["linear",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list",{"_index":332,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["list'},{'name",{"_index":100,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:101",{"_index":990,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:109",{"_index":986,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:120",{"_index":985,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:26",{"_index":796,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:46",{"_index":992,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:47",{"_index":995,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:48",{"_index":993,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:49",{"_index":994,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:50",{"_index":991,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:51",{"_index":996,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:52",{"_index":984,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:63",{"_index":989,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:77",{"_index":988,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:88",{"_index":987,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["lists",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["load",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["loadbarchartdata",{"_index":1386,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1395,"title":{},"body":{"components/StatsComponent.html":{}}}],["loading",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpiechartdata",{"_index":1387,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1397,"title":{},"body":{"components/StatsComponent.html":{}}}],["logged",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":106,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttondiv",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":105,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loop",{"_index":970,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mail",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":328,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["map(actions",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["margin",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["mat",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matautocompletemodule",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matcheckboxmodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":123,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogmodule",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["materror",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["matexpansionmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldupdate",{"_index":1558,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformfieldupdate>mat",{"_index":1559,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformlogin",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformregister",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matformregister>mat",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matgridlistmodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["math.max(0",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1420,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1416,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.random",{"_index":776,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["maticonmodule",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["mdc",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["media",{"_index":1480,"title":{},"body":{"components/StatsComponent.html":{}}}],["menu",{"_index":1149,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":792,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["merging",{"_index":790,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["message",{"_index":1184,"title":{},"body":{"injectables/NotyfService.html":{}}}],["messages",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["messagingsenderid",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":753,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1702,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{}}}],["mm",{"_index":939,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mmm",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":418,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":420,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1747,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":944,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":333,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["navigates",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigation",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":108,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1138,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1137,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation?.extras?.state",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":107,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["need",{"_index":1742,"title":{},"body":{"index.html":{}}}],["needed",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["negative",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1539,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1546,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1535,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":1475,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngneat/hot",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":1477,"title":{},"body":{"components/StatsComponent.html":{}}}],["ngxchartsmodule",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["notification",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notyf",{"_index":1180,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":146,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["nowrap",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["null",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["object",{"_index":1461,"title":{},"body":{"components/StatsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map(([category",{"_index":1467,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts).map(([name",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1543,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1458,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1446,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":313,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1440,"title":{},"body":{"components/StatsComponent.html":{}}}],["once",{"_index":971,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondatechange",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondatechange(event",{"_index":932,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondrinkclick(drink",{"_index":948,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["oninit",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1388,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":140,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["opendatepicker",{"_index":941,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":943,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["overlay",{"_index":1160,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":1748,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["package",{"_index":1665,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":1436,"title":{},"body":{"components/StatsComponent.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":95,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":337,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":336,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":325,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":1069,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:24",{"_index":343,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts:28",{"_index":1070,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:33",{"_index":357,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:41",{"_index":355,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:55",{"_index":358,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:63",{"_index":351,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:71",{"_index":345,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":324,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":109,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1497,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsdontmatch",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["past",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce((sum",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pathmatch",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["personal",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"components/ProfileComponent.html":{}}}],["personalstats",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["picker",{"_index":945,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["picurl",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["piechartdata",{"_index":1383,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1424,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1384,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1423,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":1486,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap(({user",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipes",{"_index":1487,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":1494,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["please",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pointer",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["present",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["previous",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":112,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1502,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profile.component.ts:34",{"_index":1524,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1521,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1525,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1520,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1522,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1523,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:46",{"_index":1514,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1518,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1526,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:64",{"_index":1527,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:65",{"_index":1528,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:66",{"_index":1529,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:67",{"_index":1530,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:69",{"_index":1517,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:75",{"_index":1516,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":1515,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":1519,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profileadminbtn",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilebuttondiv",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":111,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecontainer",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilelogoutbtn",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1512,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1504,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profilestatsbtn",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilesub",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileupdatebtn",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1709,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1450,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1441,"title":{},"body":{"components/StatsComponent.html":{}}}],["properties",{"_index":134,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{}}}],["provideauth",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth,getauth",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore,getfirestore",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providestorage",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providestorage,getstorage",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["pwcheck",{"_index":1505,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["querysnapshot",{"_index":1453,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rate",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ratio",{"_index":1482,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["recorded",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["rect(0",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["red",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":352,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirectto",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttoadminformadddrink",{"_index":341,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":946,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1067,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1068,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('email",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["reference",{"_index":1749,"title":{},"body":{"index.html":{}}}],["register",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":114,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1570,"title":{},"body":{"classes/UserModule.html":{}}}],["registerbutton",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerbuttondiv",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":113,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["relative",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["reload",{"_index":976,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["remaining",{"_index":972,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["remixicon",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["reset",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":322,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["return(abscontrol",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1438,"title":{},"body":{"components/StatsComponent.html":{}}}],["rgb(20",{"_index":1151,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgb(201",{"_index":1006,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgb(255",{"_index":1016,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgba($color",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["rgba(0",{"_index":1162,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(132",{"_index":1169,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(72",{"_index":1171,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1190,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":97,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["router",{"_index":145,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":311,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":581,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["routing.module",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1484,"title":{},"body":{"components/StatsComponent.html":{}}}],["rules",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["run",{"_index":1715,"title":{},"body":{"index.html":{}}}],["running",{"_index":1731,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":316,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1723,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1474,"title":{},"body":{"components/StatsComponent.html":{}}}],["select",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["selectdrink",{"_index":983,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":354,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":663,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":664,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["separate",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1716,"title":{},"body":{"index.html":{}}}],["server",{"_index":1714,"title":{},"body":{"index.html":{}}}],["serves",{"_index":326,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["services/authentication.service",{"_index":317,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"guards/UserGuard.html":{}}}],["services/notyf/notyf.service",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["serving",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sets",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["setselecteddate",{"_index":666,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":669,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["shape",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["sheet",{"_index":540,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":1439,"title":{},"body":{"components/StatsComponent.html":{}}}],["shows",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["sign",{"_index":1074,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["size",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["sober",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours*100",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["spacing",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["span",{"_index":1177,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["specific",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":347,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../update",{"_index":1705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/components/drink",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:107",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:167",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:172",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:178",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:182",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:186",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:188",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:195",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:27",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:29",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:30",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:31",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:32",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:45",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:47",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:65",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:75",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/landing",{"_index":1066,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts",{"_index":1134,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts:10",{"_index":1142,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:12",{"_index":1141,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/page",{"_index":1198,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:101",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:102",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:103",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:17",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:18",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:19",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:20",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:21",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:22",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:23",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:36",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:55",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:62",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:74",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:80",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:88",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:95",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/register/register.component.ts:32",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:39",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:48",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:51",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:52",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:53",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:54",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:55",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:56",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:57",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/stats/stats.component.ts",{"_index":1377,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/components/stats/stats.component.ts:12",{"_index":1403,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:13",{"_index":1408,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:14",{"_index":1407,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:16",{"_index":1404,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:17",{"_index":1391,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:22",{"_index":1393,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:26",{"_index":1399,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:36",{"_index":1394,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:50",{"_index":1396,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:75",{"_index":1398,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/update",{"_index":1501,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/guards/admin.guard.ts",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/guards/admin.guard.ts:13",{"_index":312,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/admin.guard.ts:9",{"_index":307,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/user.guard.ts",{"_index":1562,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/guards/user.guard.ts:13",{"_index":1564,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:9",{"_index":1563,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/pipes/trim",{"_index":1488,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/services/authentication.service",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/services/authentication.service.ts",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:13",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:17",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:26",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:31",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:42",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:47",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/date.service",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/services/date.service.ts",{"_index":662,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/services/date.service.ts:11",{"_index":670,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:15",{"_index":667,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:8",{"_index":674,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:9",{"_index":672,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/notyf/notyf.service.ts",{"_index":1179,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/services/notyf/notyf.service.ts:10",{"_index":1195,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:31",{"_index":1186,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:35",{"_index":1183,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:7",{"_index":1181,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/user/user.module.ts",{"_index":1569,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/services/user/user.module.ts:10",{"_index":1572,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:2",{"_index":1576,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:3",{"_index":1580,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:4",{"_index":1573,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:5",{"_index":1577,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:6",{"_index":1574,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:7",{"_index":1578,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:8",{"_index":1579,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:9",{"_index":1575,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.service",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/services/user/user.service.ts",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts:13",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:14",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:15",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:19",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:25",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:38",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:49",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:62",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.ts",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1707,"title":{"index.html":{}},"body":{}}],["state",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":116,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1379,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1378,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":115,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storagebucket",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["stored",{"_index":1728,"title":{},"body":{"index.html":{}}}],["stores",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["style",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["subscription",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1185,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sum",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["svg",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1565,"title":{},"body":{"guards/UserGuard.html":{}}}],["tempamounts",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["temporary",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tempstring",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every(term",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1734,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1743,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1733,"title":{},"body":{"index.html":{}}}],["text",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["this.adjustchartsizes",{"_index":1410,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1549,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":367,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.afs.collection(\"drink\").valuechanges({idfield",{"_index":360,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.afs.collection(\"user\").doc(this.currentuserid",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":762,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1452,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('drink').doc(this.editingdrinkid).update(drinkdata",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('drink').snapshotchanges().pipe",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.afs.collection('user",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(currentuserid).get().topromise",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.auth.currentuser",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.subscribe(async",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isadmin",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1566,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.login(email",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1425,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":942,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe(date",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(this.selecteddate",{"_index":934,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.deletedrinkfromfirestore(drink",{"_index":951,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkform",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":362,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":931,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce((sum",{"_index":928,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter(drink",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1584,"title":{},"body":{"classes/UserModule.html":{}}}],["this.favoritedrink",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.fb.group",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":359,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe(map(user",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1540,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1541,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe(drinks",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getweight",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1449,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1581,"title":{},"body":{"classes/UserModule.html":{}}}],["this.initializedrinkdata(drink.name",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.initializeform",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.iseditmode",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.isopen",{"_index":1144,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1411,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loaddrinksforseletecteddate",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.loading",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1412,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyf.error(message",{"_index":1197,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1196,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('no",{"_index":978,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('something",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('drink",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('password",{"_index":1553,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1545,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.notyfservice.success('url",{"_index":1534,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.password?.value",{"_index":1547,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1466,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1426,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1586,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilesub",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pwcheck",{"_index":1552,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.registerageindays",{"_index":1589,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['/adminform",{"_index":364,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.navigate(['/drinklist",{"_index":947,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.router.navigate(['/home",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/landing",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate(['/login",{"_index":1072,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/personalstats",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":1556,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.router.navigate(['/register",{"_index":1071,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.router.navigate(['/updateprofile",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getdate().tostring().padstart(2",{"_index":742,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":739,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":740,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":671,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":676,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":677,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":925,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.tempamounts[drink.name",{"_index":737,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.tempamounts[drinkname",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.totalcalories",{"_index":927,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":930,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.userdata",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice.getcurrentuseremailstring",{"_index":755,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.userservice.getcurrentuserid",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.userservice.getcurrentuserid().then((result",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.weight",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1536,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1537,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["throw",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["togglemenu",{"_index":1140,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["tostring",{"_index":1435,"title":{},"body":{"components/StatsComponent.html":{}}}],["total",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["totalcalories",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["trailing",{"_index":1499,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":1152,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["transform(value",{"_index":1491,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":1154,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["translatex",{"_index":1153,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1159,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["trimdecimals",{"_index":1490,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimals:2",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["trimdecimalspipe",{"_index":430,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["try",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["types",{"_index":1191,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["undefined",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unelevated",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unique",{"_index":758,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["unit",{"_index":1732,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1464,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1498,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":1075,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":118,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["updatebutton",{"_index":1561,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebuttondiv",{"_index":1560,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["updateddrinkamounts",{"_index":765,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name",{"_index":780,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name].push",{"_index":784,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateform",{"_index":1557,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{}}}],["updateprofile(user",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":117,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1506,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1511,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["updates.gender",{"_index":1542,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1538,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1554,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["uploaded",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["urltree",{"_index":314,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":90,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["use",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["used",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1585,"title":{},"body":{"classes/UserModule.html":{}}}],["user.email)).get().topromise",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["user.favoritedrink",{"_index":1588,"title":{},"body":{"classes/UserModule.html":{}}}],["user.gender",{"_index":1592,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1582,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1587,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1590,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1591,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1583,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1593,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":802,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('favoritedrink",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('gender",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocref.update(updates).then",{"_index":1544,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userdocs",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":754,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["userguard",{"_index":585,"title":{"guards/UserGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":756,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1567,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1507,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(0",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(1",{"_index":239,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(30",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.minlength(8",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1496,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["values",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1759,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1712,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1736,"title":{},"body":{"index.html":{}}}],["view",{"_index":331,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1143,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1136,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":349,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["watch",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["weight",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1508,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1073,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1454,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["width",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.confirm(`are",{"_index":950,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["window.innerheight",{"_index":1414,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1413,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1390,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrap",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["wrong",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":1189,"title":{},"body":{"injectables/NotyfService.html":{}}}],["y",{"_index":266,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["yyyy",{"_index":938,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":1008,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["zero",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1500,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1708,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        \n    About Us\n    Thank you for using our application! \n        The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits. \n        This app is for personal use only and should not be used commercially in any form.\n    \n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                .innerContainer {\n    width: 80%;\n    height: 100%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 70%;\n}\n\n.innerContainer > h1 {\n    font-size: 5vh;\n    padding-bottom: 10vh;\n}\n\n.innerContainer > p {\n    font-size: large;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Thank you for using our application!         The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits.         This app is for personal use only and should not be used commercially in any form.    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-form/admin-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Initializes the form with default values and validation rules.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:20\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss']\n})\nexport class AdminFormComponent {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm: FormGroup;\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [caloriesPerServing, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    } else {\n      this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        ml: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: ['', Validators.required],\n        caloriesPerServing: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        abv: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.initializeForm();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Initializes the form with default values and validation rules.\n   */\n  initializeForm(): void {\n    this.drinkForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      abv: [null, [Validators.required, Validators.min(0), Validators.max(100)]],\n      caloriesPerServing: [null, [Validators.required, Validators.min(0)]],\n      ml: [null, [Validators.required, Validators.min(1)]],\n      category: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   * \n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      try {\n        if (this.editingDrinkId) {\n          /**\n           * Updates existing drink\n           */\n          await this.afs.collection('drink').doc(this.editingDrinkId).update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          /**\n           * Adds new drink\n           */\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        /**\n         * Navigates back to the admin page\n         */\n        this.router.navigate(['/admin']);\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Update drink' : 'Add a new drink' }}\n\n  \n    \n    \n      Name\n      \n    \n\n    \n    \n      Alcohol by Volume (ABV %)\n      \n    \n\n    \n    \n      Calories per Serving\n      \n    \n\n    \n    \n      Volume (ml)\n      \n    \n\n    \n    \n      Category\n      \n    \n\n    \n    \n      Submit\n    \n  \n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                .admin-form-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-form-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n}\n\n.drink-form {\n  width: 40vh;\n  height: 25vh;\n  padding-top: 2vh;\n}\n\n.form-group {\n  text-align: center;\n  margin-bottom: 3vh;\n}\n\n.drink-form input {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.admin-form-button-div {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n}\n\n.admin-form-button {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.admin-form-button:disabled {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: gray;\n  background-image: linear-gradient(135deg, #00115c 0%, #000436 100%);\n  cursor: not-allowed;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Update drink\\' : \\'Add a new drink\\' }}                Name                        Alcohol by Volume (ABV %)                        Calories per Serving                        Volume (ml)                        Category                        Submit      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/admin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/admin.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  constructor(private authService: AuthenticationService, private router: Router){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    \n      return this.authService.isAdmin();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Admin Page Component\nThis component serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-page/admin-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-page/admin-page.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Admin Page Component\n * \n * This component serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent {\n\n  drinks: any[] = [];\n\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void{\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs.collection(\"drink\").valueChanges({idField: 'id'}).subscribe(\n      (drinks) => {\n        this.drinks = drinks;\n      },\n      (error) => {\n        console.error('Error fetching drinks', error);\n      }\n    )\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.router.navigate(['/adminform']);\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.router.navigate(['/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  All Drinks\n  \n    \n      {{ drink.name }}\n      \n        Delete &nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp; Edit\n      \n    \n  \n  \n    Add New Drink\n  \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                .admin-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.add-drink-button {\n  margin-left: 21%;\n  margin-top: 10%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.buttons-div {\n  float: right;\n}\n\n.buttons-div > button:first-of-type {\n  color: red;\n}\n\n.buttons-div > button:last-of-type {\n  color: green;\n}\n\n.add-drink-button-div {\n  width: 100%;\n}\n\n.admin-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.admin-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All Drinks            {{ drink.name }}              Delete                Edit                  Add New Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\nAppModule -->\n\nAdminFormComponent->AppModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAppModule -->\n\nAdminPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nAppModule -->\n\nDrinkListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nAppModule -->\n\nStatsComponent->AppModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nAppModule -->\n\nTrimDecimalsPipe->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from \"@angular/fire/compat\";\nimport { AngularFirestoreModule } from \"@angular/fire/compat/firestore\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { initializeApp,provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth,getAuth } from '@angular/fire/auth';\nimport { provideFirestore,getFirestore } from '@angular/fire/firestore';\nimport { provideStorage,getStorage } from '@angular/fire/storage';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavigationComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AdminPageComponent,\n    PageNotFoundComponent,\n    StatsComponent,\n    UpdateProfileComponent,\n    LandingPageComponent,\n    DrinkListComponent,\n    AdminFormComponent,\n    TrimDecimalsPipe,\n    AboutUsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AngularFireModule,\n    NgxChartsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport { UserGuard } from './guards/user.guard';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/landing'},\n  {path: 'landing', component: LandingPageComponent},\n  {path: 'home', component: HomeComponent, canActivate: [UserGuard]},\n  {path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard]},\n  {path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [UserGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'personalstats', component: StatsComponent, canActivate: [UserGuard]},\n  {path: 'updateprofile', component: UpdateProfileComponent, canActivate: [UserGuard]},\n  {path: 'drinklist', component: DrinkListComponent, canActivate: [UserGuard]},\n  {path: 'aboutus', component: AboutUsComponent, canActivate: [UserGuard]},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [CommonModule, BrowserModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Auth, signInWithEmailAndPassword, authState, createUserWithEmailAndPassword, updateProfile } from '@angular/fire/auth';\nimport { from, map, Observable, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  //Observable that gets the current user's authetntication state\n  currentUser$ = authState(this.auth);\n  \n  constructor(private auth: Auth, private fireAuth: AngularFireAuth, private afs: AngularFirestore) { }\n\n  login(username: string, password: string){\n    return from(\n      signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  //Returns an observable of the currently aunthenticated user\n  getUser(){ return this.currentUser$; }\n\n  //Checks if the user is currently authenticated based on the user from AngularFireAuth anmd the current user from Auth\n  isUser(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == this.auth.currentUser?.email;}));\n  }\n\n  //Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n  isAdmin(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == \"admin@zt.com\"}));\n  }\n\n  //Registers a new user with the given email and password, and sets the user's display name to the provided username.\n  registerUser(username: string, email: string, password: string){\n    return from(createUserWithEmailAndPassword(this.auth, email, password))\n    .pipe(switchMap(({user}) => updateProfile(user, {displayName: username})));\n  }\n\n  //Logs in an existing user with the provided username and password.\n  loginUser(username: string, password: string){\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  //Logs out the currently authenticated user.\n  logoutUser(){ return from(this.auth.signOut()); }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/date.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/date.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Date | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/date.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/date.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/services/date.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  drinksList: Drink[] = [];\n  selectedDrink: Drink | null = null;\n  filteredDrinks: Drink[] = [];\n  searchTerm: string = '';\n  drinkAmounts: Map = new Map();\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  selectedDate: any;\n  \n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      /**\n       * Creates a unique document ID based on the user and the date\n       */\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      /**\n       * Generates a unique entryId for the drink\n       */\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      /**\n       * Checks if the drink already exists in the map for that day\n       */\n      if (updatedDrinkAmounts[drink.name]) {\n        /**\n         * If the drink exists, appends the new entry to the array for that drink\n         */\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        /**\n         * If the drink doesn't exist, creates a new array and add the first entry\n         */\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      /**\n       * Stores the drink data in Firestore\n       */\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        /**\n         * Stores the updated data to Firestore, merging with existing document\n         */\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        /**\n         * Clears the temporary data\n         */\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('BAD');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  drinksList: Drink[] = [];\n  selectedDrink: Drink | null = null;\n  filteredDrinks: Drink[] = [];\n  searchTerm: string = '';\n  drinkAmounts: Map = new Map();\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  selectedDate: any;\n  \n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      /**\n       * Creates a unique document ID based on the user and the date\n       */\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      /**\n       * Generates a unique entryId for the drink\n       */\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      /**\n       * Checks if the drink already exists in the map for that day\n       */\n      if (updatedDrinkAmounts[drink.name]) {\n        /**\n         * If the drink exists, appends the new entry to the array for that drink\n         */\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        /**\n         * If the drink doesn't exist, creates a new array and add the first entry\n         */\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      /**\n       * Stores the drink data in Firestore\n       */\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        /**\n         * Stores the updated data to Firestore, merging with existing document\n         */\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        /**\n         * Clears the temporary data\n         */\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('BAD');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/components/drink-list/drink-list.component.ts:26\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  drinksList: Drink[] = [];\n  selectedDrink: Drink | null = null;\n  filteredDrinks: Drink[] = [];\n  searchTerm: string = '';\n  drinkAmounts: Map = new Map();\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  selectedDate: any;\n  \n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      /**\n       * Creates a unique document ID based on the user and the date\n       */\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      /**\n       * Generates a unique entryId for the drink\n       */\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      /**\n       * Checks if the drink already exists in the map for that day\n       */\n      if (updatedDrinkAmounts[drink.name]) {\n        /**\n         * If the drink exists, appends the new entry to the array for that drink\n         */\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        /**\n         * If the drink doesn't exist, creates a new array and add the first entry\n         */\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      /**\n       * Stores the drink data in Firestore\n       */\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        /**\n         * Stores the updated data to Firestore, merging with existing document\n         */\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        /**\n         * Clears the temporary data\n         */\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('BAD');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/home/home.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  selectedDate: Date;\n  drinksForTheDay: any[] = [];\n  totalCalories: number = 0;\n  totalDrinks: number = 0;\n  bac: number = 0;\n  soberTime: Date | null = null;\n  userData: UserData;\n  \n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  async ngOnInit(): Promise {\n    // Initialize selected date from DateService or today's date\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    // Fetch drinks data for the selected date\n    this.fetchDrinksForTheDay();\n    \n    // Watch for date changes and load drinks\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n\n    // Initial load of drinks for the selected date\n    //await this.loadDrinksForSeletectedDate();\n  }\n\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  async fetchDrinksForTheDay(): Promise {\n    this.drinksForTheDay = [];  // Clear previous data\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                            \n                                tempAmounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                initializeDrinkData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/drink-list/drink-list.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink tracking to be uploaded\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDrinkData\n                        \n                    \n                \n            \n            \n                \ninitializeDrinkData(drinkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Initializes a temporary value to store drink data later\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the given drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  drinksList: Drink[] = [];\n  selectedDrink: Drink | null = null;\n  filteredDrinks: Drink[] = [];\n  searchTerm: string = '';\n  drinkAmounts: Map = new Map();\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  selectedDate: any;\n  \n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      /**\n       * Creates a unique document ID based on the user and the date\n       */\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      /**\n       * Generates a unique entryId for the drink\n       */\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      /**\n       * Checks if the drink already exists in the map for that day\n       */\n      if (updatedDrinkAmounts[drink.name]) {\n        /**\n         * If the drink exists, appends the new entry to the array for that drink\n         */\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        /**\n         * If the drink doesn't exist, creates a new array and add the first entry\n         */\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      /**\n       * Stores the drink data in Firestore\n       */\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        /**\n         * Stores the updated data to Firestore, merging with existing document\n         */\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        /**\n         * Clears the temporary data\n         */\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('BAD');\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Add Drink\n\n  \n\n  \n    \n      {{ drink.name }}\n      \n        \n        {{drink.name}}\n        ABV: {{ drink.abv}}\n        Kcal/Serving: {{ drink.caloriesPerServing}}\n        Category: {{ drink.category}}\n        Size: {{ drink.ml}} ml\n        \n          Amount (ml)\n          \n          Time\n          \n          Add\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                .drink-list {\n  width: 35vh;\n  position: relative;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.drink-list ul {\n  position: relative; \n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\n.drink-list > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.drink-list li {\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  padding: 20px;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drink-details {\n  padding: 1vh;\n  position: fixed;\n  top: 0;\n  margin-top: 28vh;\n  margin-left: -5vh;\n  width: 40vh;\n  color: rgb(201, 201, 201);\n\n  z-index: 10;\n  background-color: #212121;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  text-align: center;\n}\n\n.drink-name {\n  margin-bottom: 2vh;\n  color: white;\n}\n\ndiv.drink-details div:last-of-type {\n  margin-top: 5vh;\n}\n\n.search-bar {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.drinkMlInput,\n.drinkTimeInput {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drinkMlInput {\n  margin-bottom: 1vh;\n}\n\n.add-drink-button {\n  margin-top: 20%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.close-drink-detail {\n  color: rgb(255, 0, 0);\n  margin-left: 40%;\n  position: absolute;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Drink              {{ drink.name }}                      {{drink.name}}        ABV: {{ drink.abv}}        Kcal/Serving: {{ drink.caloriesPerServing}}        Category: {{ drink.category}}        Size: {{ drink.ml}} ml                  Amount (ml)                    Time                    Add                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  drinksList: Drink[] = [];\n  selectedDrink: Drink | null = null;\n  filteredDrinks: Drink[] = [];\n  searchTerm: string = '';\n  drinkAmounts: Map = new Map();\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  selectedDate: any;\n  \n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      /**\n       * Creates a unique document ID based on the user and the date\n       */\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      /**\n       * Generates a unique entryId for the drink\n       */\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      /**\n       * Checks if the drink already exists in the map for that day\n       */\n      if (updatedDrinkAmounts[drink.name]) {\n        /**\n         * If the drink exists, appends the new entry to the array for that drink\n         */\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        /**\n         * If the drink doesn't exist, creates a new array and add the first entry\n         */\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      /**\n       * Stores the drink data in Firestore\n       */\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        /**\n         * Stores the updated data to Firestore, merging with existing document\n         */\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        /**\n         * Clears the temporary data\n         */\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('BAD');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bac\n                            \n                            \n                                    \n                                dateInput\n                            \n                            \n                                drinksForTheDay\n                            \n                            \n                                selectedDate\n                            \n                            \n                                soberTime\n                            \n                            \n                                totalCalories\n                            \n                            \n                                totalDrinks\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateBAC\n                            \n                            \n                                calculateTotals\n                            \n                            \n                                    Async\n                                deleteDrinkFromFirestore\n                            \n                            \n                                    Async\n                                fetchDrinksForTheDay\n                            \n                            \n                                    Async\n                                fetchUserData\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                redirectToDrinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, auth: AngularFireAuth, userService: UserService, dateService: DateService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBAC\n                        \n                    \n                \n            \n            \n                \ncalculateBAC()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotals\n                        \n                    \n                \n            \n            \n                \ncalculateTotals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDrinkFromFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDrinkFromFirestore(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchDrinksForTheDay\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDrinksForTheDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToDrinks\n                        \n                    \n                \n            \n            \n                \nredirectToDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bac\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksForTheDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        soberTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  selectedDate: Date;\n  drinksForTheDay: any[] = [];\n  totalCalories: number = 0;\n  totalDrinks: number = 0;\n  bac: number = 0;\n  soberTime: Date | null = null;\n  userData: UserData;\n  \n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  async ngOnInit(): Promise {\n    // Initialize selected date from DateService or today's date\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    // Fetch drinks data for the selected date\n    this.fetchDrinksForTheDay();\n    \n    // Watch for date changes and load drinks\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n\n    // Initial load of drinks for the selected date\n    //await this.loadDrinksForSeletectedDate();\n  }\n\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  async fetchDrinksForTheDay(): Promise {\n    this.drinksForTheDay = [];  // Clear previous data\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    -->\n\n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    \n\n    \n      \n      \n    -->\n\n    \n      \n    \n  \n\n   0\">\n    \n      \n        {{ drink.name }}\n        \n         {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |\n        trimDecimals:2 }} kcal\n        \n      \n    \n  \n  \n    No drinks recorded for this day\n  \n\n  \n    \n      Total calories for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalCalories | trimDecimals:2 }}-->\n      Total calories:{{ totalCalories | trimDecimals:2 }} kcal\n    \n    \n      Number of drinks for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalDrinks }}-->\n      Number of drinks:{{ totalDrinks }}\n    \n    \n    \n      Estimated BAC:{{ bac | number: '1.2-2' }}%\n      Sober:~ {{ soberTime | date: 'EEE MMM dd yyyy HH:mm:ss'\n          }}\n    \n  \n  \n    Add Drink\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.date-picker-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.date-display-box {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding: 20px;\n  cursor: pointer;\n}\n\n.info-container {\n  padding-top: 5%;\n}\n\n.info-container-right {\n  float: right;\n}\n\nul > li {\n  text-align: center;\n}\n\n.add-drink-container {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2vh;\n}\n\n.add-drink-button {\n  margin-top: 5%;\n  width: 65%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.no-drinks {\n  text-align: center;\n}\n\n.home-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.home-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n.remove-drink {\n  color: red;\n  float: right;\n  margin-right: -1vh;\n  margin-top: -1.5vh;\n}\n\n.hidden-date-input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n}\n\n.date-picker-field {\n  padding-bottom: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedDate | date: \\'yyyy-MM-dd\\' }}    -->          {{ selectedDate | date: \\'yyyy-MM-dd\\' }}                        -->                   0\">                  {{ drink.name }}                 {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |        trimDecimals:2 }} kcal                          No drinks recorded for this day              Total calories for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalCalories | trimDecimals:2 }}-->      Total calories:{{ totalCalories | trimDecimals:2 }} kcal              Number of drinks for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalDrinks }}-->      Number of drinks:{{ totalDrinks }}                  Estimated BAC:{{ bac | number: \\'1.2-2\\' }}%      Sober:~ {{ soberTime | date: \\'EEE MMM dd yyyy HH:mm:ss\\'          }}            Add Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, auth: AngularFireAuth, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing-page/landing-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/landing-page/landing-page.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/landing-page/landing-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent {\n\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private router: Router\n  ){}\n\n  redirectToRegister(){\n    this.router.navigate(['/register']);\n  }\n\n  redirectToLogin(){\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n    \n        Welcome To\n        Zero Tolerance\n    \n    \n        Sign Up\n        Sign In\n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                .inner-container {\n    margin-top: 100%;\n    overflow-y: auto;\n    height: 95vh;\n\n  }\n\n  .inner-container > div > p {\n    text-align: center;\n    font-size: 2vh;\n  }\n\n  .inner-container > div > h1 {\n    text-align: center;\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  .landingButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  #landingRegister {\n    width: 70%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n    color: white;\n  }\n\n  #landingLogin {\n    margin-top: 5%;\n    width: 70%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n    color: white;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To        Zero Tolerance                Sign Up        Sign In    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, userService: UserService, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:34\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  })\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private afs: AngularFirestore,\n    private notyfService: NotyfService\n  ){}\n\n  ngOnInit(): void { console.log('HELLO');}\n\n  get email(){ return this.loginForm.get('email'); }\n  get password(){ return this.loginForm.get('password'); }\n\n  submit(){\n    if(!this.loginForm.valid){ return; }\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: () => {\n        this.notyfService.success('Logged in');\n        this.auth.user.subscribe(async user => {\n          if(user){\n            this.router.navigate(['/home'])\n          } \n        });\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  Sign In\n  \n\n    \n      \n      Type in an e-mail address\n      Invalid e-mail address\n    \n    \n    \n      \n      Type in your password\n      \n    \n    \n\n    \n      Sign In\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n  }\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.loginForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.loginButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.loginButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormLogin {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormLogin > mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.matError {\n    color: red;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign In                  Type in an e-mail address      Invalid e-mail address                        Type in your password                        Sign In      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navigation/navigation.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navigation/navigation.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NavigationComponent {\n  isOpen = false;\n\n  toggleMenu() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n    \n\n    \n        \n   \n     \n      Home\n       About Us\n       Profile\n     \n   \n \n \n\n \n   \n \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .hamburger-icon {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.hamburger-menu-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: rgb(20, 0, 40);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  z-index: 997;\n}\n\n.hamburger-menu-container.open {\n  transform: translateX(0);\n}\n\n.menu-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.menu-content {\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: white;\n  z-index: 999;\n}\n\n.menu-content ul {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 3vh;\n}\n\n.menu-content li {\n  margin-top: 15px;\n  padding-right: 12vh;\n  padding-left: 12vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  border-radius: 15px;\n  cursor: pointer;\n  background-image: linear-gradient(135deg, rgba(132, 0, 255, 0.5) 0%, rgba(72, 0, 155, 0.5) 100%);\n  width: 100%;\n}\n\n.menu-content a {\n  color: white;\n  text-decoration: none;\n  font-size: 1.2rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n\na > span {\n  padding-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Home       About Us       Profile               '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notyf/notyf.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notyf/notyf.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/notyf/notyf.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/notyf/notyf.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/services/notyf/notyf.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyfService {\n  constructor() { }\n  \n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  });\n\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                favoriteDrink\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, auth: AngularFireAuth, userService: UserService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n  currentUserID: string;\n  username: string;\n  favoriteDrink: string;\n  registerDate: Date;\n  profileSub?: Subscription;\n  gender: string;\n  weight: number;\n\n  \n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  ngOnInit(){\n    this.profileSub = this.route.paramMap.subscribe(params => {\n      this.currentUserID = params.get('id') as string;\n      if(!this.currentUserID){\n        this.userService.getCurrentUserId().then((result: string | undefined) => {\n          const tempString: string = result || '';\n          this.currentUserID = tempString;\n          console.log(this.currentUserID);\n\n          this.getUsername();\n          this.getRegisterDate();\n          this.getProfilePicture();\n          this.getGender();\n          this.getWeight();\n        })\n      }\n    })\n  }\n\n  logoutUser(){\n    this.authService.logoutUser().subscribe(() => {\n      this.notyfService.success('Logged out');\n      this.router.navigate(['']);\n    });\n  }\n\n  async getUsername(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /*async getFavoriteDrink(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.favoriteDrink = userDoc?.get('favoriteDrink');\n  }*/\n\n  async getRegisterDate(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  async getProfilePicture(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\"profilePic\") as HTMLImageElement;\n    profilePicHtml.src = picUrl ? picUrl : \"https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&\"\n  }\n\n  async getGender(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  async getWeight(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  redirectToPersonalStats(){ this.router.navigate(['/personalstats']); }\n  redirectToUpdateProfile(){ this.router.navigate(['/updateprofile']); }\n  redirectToAdminPage() { this.router.navigate(['/admin']); }\n}\n\n    \n\n    \n        \n    \n        \n        {{username}}\n    \n    \n        {{registerDate}}\n        {{gender}} - \n        {{weight}} kg\n    \n    \n        Admin Page\n        Personal Stats\n        Update Profile\n        Logout\n    \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .profileContainer {\n    width: 25vh;\n    overflow-y: auto;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.headerContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.headerContainer > img {\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50px 50px 50px 50px;\n}\n\n.infoContainer {\n    text-align: center;\n    padding-bottom: 5vh;\n}\n\n.profileButtonDiv {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.profileStatsBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n  color: white;\n}\n\n.profileUpdateBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n  color: white;\n}\n\n.profileLogoutBtn {\n    width: 100%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #ff00ff 0%, #6e0065 100%);\n    color: white;\n  }\n\n  .profileAdminBtn {\n    width: 100%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #0099ff 0%, #003c6e 100%);\n    color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}                {{registerDate}}        {{gender}} -         {{weight}} kg                Admin Page        Personal Stats        Update Profile        Logout    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \nregisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmPassword: new FormControl('', Validators.required),\n    weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n    gender: new FormControl('male', Validators.required) // Gender must be selected\n  }, { validators: passwordsMatchValidator() })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n// Checks if the two passwords typed in the registerForm match\nexport function passwordsMatchValidator(): ValidatorFn{\n  return(AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if(password && (password !== confirmPassword)){\n      return{ passwordsDontMatch: true }\n    }\n    else if(password != \"\" && (password.length  {\n        this.notyfService.success('Registered successfully');\n        this.authService.logoutUser();\n        this.router.navigate(['/login']);\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  Sign Up\n  \n  \n    \n      \n      Please enter a username! \n\n    \n      \n      Please enter an e-mail!\n      Please enter a valid e-mail address!\n    \n\n    \n      \n      Please type in a password! \n\n    \n      \n      Please confirm your password!\n    \n\n    The passwords do not match\n    Password must be at least 8 characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg! \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n    \n\n    \n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n}\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.registerForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.registerButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.registerButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormRegister {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormRegister>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.genderSelection,\n.genderSelection>label,\n.genderSelection>label>input {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign Up                    Please enter a username!                 Please enter an e-mail!      Please enter a valid e-mail address!                    Please type in a password!                 Please confirm your password!        The passwords do not match    Password must be at least 8 characters!                    Please enter your weight!      Weight must be at least 30kg!                                             Male                                      Female                Please select your gender!                                Sign Up            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stats/stats.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stats/stats.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [400, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  barChartView: [number, number] = [700, 400];\n  pieChartView: [number, number] = [400, 400];\n  legendPosPie: LegendPosition = LegendPosition.Below;\n  \n  graphData: { name: string; value: number }[] = [];\n  pieChartData: { name: string; value: number }[] = [];\n\n  constructor(private afs: AngularFirestore, private userService: UserService) {}\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {drinkAmounts?: Record};\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return { name: `${day.date.getMonth() + 1}.${day.date.getDate()}`, value: drinkCount };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as { drinkAmounts?: Record };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(([category, count]) => ({\n      name: category,\n      value: count,\n    }));\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n    \n  \n    \n    \n      \n      \n    \n    Distribution of Drinks (by category)\n  \n  \n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                .stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  overflow-y: auto;\n  height: 80vh;\n}\n\n.chart-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.chart-section {\n  flex: 1 1 auto;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 35vh;\n}\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n@media (min-aspect-ratio: 4/3) {\n  .stats-container {\n    flex-direction: row;\n    justify-content: center;\n  }\n\n  .chart-section {\n    flex: 1 1 50%;\n    max-width: 50%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Distribution of Drinks (by category)    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/trim-decimals.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/trim-decimals.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/update-profile/update-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                pwCheck\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/update-profile/update-profile.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pwCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [Validators.minLength(8)]),\n    confirmPassword: new FormControl(''),\n    profilePicUrl: new FormControl(''),\n    weight: new FormControl('', [Validators.required, Validators.min(30)]),\n    gender: new FormControl('', Validators.required)\n  }, { validators: passwordsMatchValidator() })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:67\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DocumentReference, getDoc } from \"firebase/firestore\";\nimport { UserService } from 'src/app/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\nexport function passwordsMatchValidator(): ValidatorFn{\n  return(AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n    \n    if(password && (password !== confirmPassword)){\n      return{ passwordsDontMatch: true }\n    }\n    else if(password != \"\" && (password.length  this.notyfService.success('URL updated'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = this.gender?.value;\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef.update(updates).then(() => this.notyfService.success('Profile updated'));\n    }\n\n    const newPassword = this.password?.value;\n    if(newPassword){\n      try{\n        const currentUser = await this.afAuth.currentUser;\n        if(currentUser){\n          await currentUser.updatePassword(newPassword);\n          this.pwCheck = true;\n          this.notyfService.success('Password updated');\n        }\n      } catch (error){\n        console.error('Error updating password: ', error);\n        this.pwCheck = false;\n        this.notyfService.error('Something went wrong');\n      }\n    }\n\n    if(this.pwCheck){ this.router.navigate(['/profile']); }\n  }\n}\n\n    \n\n    \n        \n  Update Profile\n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    The passwords do not match\n    Password must be at least 8\n      characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg!\n    \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n\n    \n      \n        Update Profile\n      \n    \n  \n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .formContainer {\n    width: 40vh;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.updateForm {\n    width: 40vh;\n    height: 25vh;\n    padding-top: 5vh;\n}\n\n.matFormFieldUpdate {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormFieldUpdate>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.updateButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5vh;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.updateButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Profile                                                The passwords do not match    Password must be at least 8      characters!                    Please enter your weight!      Weight must be at least 30kg!                                                Male                                      Female                Please select your gender!                            Update Profile            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/home/home.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  selectedDate: Date;\n  drinksForTheDay: any[] = [];\n  totalCalories: number = 0;\n  totalDrinks: number = 0;\n  bac: number = 0;\n  soberTime: Date | null = null;\n  userData: UserData;\n  \n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private auth: AngularFireAuth,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  async ngOnInit(): Promise {\n    // Initialize selected date from DateService or today's date\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    // Fetch drinks data for the selected date\n    this.fetchDrinksForTheDay();\n    \n    // Watch for date changes and load drinks\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n\n    // Initial load of drinks for the selected date\n    //await this.loadDrinksForSeletectedDate();\n  }\n\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  async fetchDrinksForTheDay(): Promise {\n    this.drinksForTheDay = [];  // Clear previous data\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/user.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/user.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map, Observable, take } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  \n  constructor(private authService: AuthenticationService, private router: Router){}\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n           \n      return this.authService.isUser();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                favoriteDrink\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.module.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  favoriteDrink: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.favoriteDrink = User.favoriteDrink;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { increment } from 'firebase/firestore';\nimport { UserModule } from './user.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  formData: UserModule;\n  currentUserEmail: string;\n  currentUserID: string;\n  \n  constructor(\n    private afs : AngularFirestore,\n    public auth : AngularFireAuth,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  //Gets the current user's ID from the databse\n  async getCurrentUserId(): Promise {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userDocs = await this.afs.collection('user', ref => ref.where('email', '==', user.email)).get().toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  //Returns with the ID base on the getCurrentUserId() method\n  async getUserId(){\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error){\n      console.error(error);\n      return '';\n    }\n  }\n\n  //Returns the currently logged in user's e-mail\n  async getCurrentUserEmail()\n  {\n    const user = await this.auth.currentUser;\n    if(user){\n      const userRef = this.afs.collection('user').doc(await this.getUserId())\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n      console.log('fetched email:', this.currentUserEmail);\n    }\n  }\n\n  //Returns the currently logged in user's e-mail as a string.\n  async getCurrentUserEmailString()\n  {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/components/register/register.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/app/components/update-profile/update-profile.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordsMatchValidator   (src/.../register.component.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../update-profile.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/components/update-profile/update-profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\nAppModule -->\n\nAdminFormComponent->AppModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAppModule -->\n\nAdminPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nAppModule -->\n\nDrinkListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nAppModule -->\n\nStatsComponent->AppModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nAppModule -->\n\nTrimDecimalsPipe->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
