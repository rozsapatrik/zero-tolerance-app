var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.224,1,1.015]],["body/components/AboutUsComponent.html",[0,0.38,1,1.82,2,1.908,3,0.21,4,0.183,5,1.554,6,1.554,7,1.554,8,1.554,9,0.183,10,5.256,11,4.244,12,3.661,13,0.744,14,2.84,15,1.907,16,1.474,17,1.892,18,1.806,19,1.474,20,6.135,21,1.474,22,5.533,23,0.702,24,1.33,25,2.017,26,1.018,27,4.274,28,2.254,29,1.198,30,4.274,31,0.975,32,0.02,33,0.895,34,0.624,35,0.975,36,4.274,37,0.744,38,1.027,39,0.307,40,0.21,41,1.64,42,0.21,43,0.131,44,0.877,45,1.732,46,5.533,47,5.533,48,3.257,49,3.827,50,1.262,51,5.533,52,3.516,53,4.74,54,5.533,55,5.533,56,5.533,57,3.516,58,3.257,59,5.533,60,5.533,61,2.371,62,2.194,63,3.258,64,4.274,65,2.194,66,2.516,67,2.516,68,0.975,69,2.012,70,1.811,71,1.554,72,2.359,73,1.554,74,1.554,75,1.199,76,1.552,77,1.554,78,1.199,79,2.012,80,1.262,81,1.554,82,0.975,83,1.027,84,1.554,85,1.139,86,1.554,87,1.199,88,1.474,89,1.199,90,1.554,91,1.199,92,1.554,93,1.139,94,1.554,95,1.199,96,1.554,97,1.199,98,1.554,99,1.199,100,1.554,101,1.199,102,1.554,103,1.199,104,1.554,105,1.328,106,1.554,107,1.554,108,0.015,109,0.015]],["title/components/AdminFormComponent.html",[0,0.224,75,1.015]],["body/components/AdminFormComponent.html",[0,0.319,1,0.607,2,1.17,3,0.106,4,0.093,5,0.787,6,0.787,7,0.787,8,0.787,9,0.093,13,0.59,15,1.472,16,0.746,17,1.719,18,1.633,19,0.904,21,0.904,23,0.356,24,0.815,25,1.472,26,0.624,28,1.933,29,1.393,31,0.494,32,0.021,33,0.964,34,0.61,35,0.494,37,0.728,38,1.005,39,0.327,40,0.106,41,0.83,42,0.106,43,0.066,44,1.171,45,0.877,50,0.774,52,1.375,58,1.274,61,2.988,62,1.111,65,1.111,68,0.494,69,1.233,70,1.11,71,0.787,72,1.722,73,0.787,74,0.787,75,1.328,76,1.852,77,0.787,78,0.607,79,1.233,80,0.639,81,0.787,82,0.494,83,1.728,84,0.787,85,0.576,86,0.787,87,0.607,88,0.746,89,0.607,90,0.787,91,0.607,92,0.787,93,0.576,94,0.787,95,0.607,96,0.787,97,0.607,98,0.787,99,0.607,100,0.787,101,0.607,102,0.787,103,0.607,104,1.521,105,0.672,106,0.787,107,0.787,108,0.009,109,0.009,110,4.974,111,4.514,112,1.853,113,3.391,114,1.86,115,2.15,116,3.391,117,1.635,118,1.301,119,2.147,120,4.183,121,3.391,122,0.815,123,4.183,124,5.704,125,5.143,126,1.443,127,4.735,128,3.009,129,2.155,130,3.476,131,3.476,132,3.657,133,3.407,134,2.163,135,4.735,136,1.633,137,1.633,138,2.033,139,1.933,140,1.573,141,1.817,142,1.633,143,3.391,144,3.212,145,1.773,146,3.391,147,3.391,148,1.774,149,3.391,150,3.391,151,4.735,152,1.374,153,2.905,154,4.735,155,3.391,156,1.996,157,3.391,158,1.905,159,4.183,160,3.391,161,1.054,162,1.521,163,1.454,164,1.419,165,1.17,166,1.374,167,0.858,168,1.442,169,1.55,170,2.163,171,3.391,172,2.163,173,1.996,174,3.391,175,2.75,176,3.583,177,2.658,178,2.462,179,4.057,180,3.189,181,2.147,182,3.774,183,4.735,184,2.631,185,1.233,186,2.163,187,2.905,188,2.905,189,1.443,190,1.443,191,2.017,192,2.48,193,3.219,194,2.905,195,3.212,196,2.787,197,3.391,198,1.996,199,2.163,200,1.741,201,0.858,202,2.03,203,2.163,204,1.817,205,1.301,206,3.391,207,1.996,208,2.155,209,2.905,210,2.905,211,2.163,212,2.163,213,2.383,214,3.189,215,2.163,216,2.163,217,1.741,218,2.163,219,2.163,220,1.741,221,3.391,222,3.391,223,2.163,224,2.163,225,3.391,226,2.163,227,2.163,228,0.746,229,1.043,230,0.927,231,0.548,232,0.639,233,0.708,234,0.83,235,1.171,236,1.236,237,2.163,238,1.741,239,2.163,240,3.391,241,4.183,242,2.163,243,2.163,244,4.183,245,4.183,246,3.391,247,2.163,248,2.163,249,1.111,250,2.163,251,2.163,252,1.442,253,2.163,254,2.163,255,2.163,256,2.163,257,2.163,258,1.497,259,1.274,260,1.649,261,2.163,262,2.163,263,2.163,264,2.163,265,2.163,266,0.927,267,2.163,268,0.982,269,1.375,270,1.635,271,0.927,272,1.187,273,2.163,274,2.163,275,2.346,276,1.853,277,2.163,278,2.163,279,2.163,280,1.375,281,1.187,282,1.187,283,1.187,284,1.375,285,2.163,286,1.375,287,1.111,288,3.391,289,2.905,290,2.155,291,1.274,292,1.497,293,1.043,294,1.86,295,1.043,296,1.274,297,1.497,298,1.649,299,1.274,300,1.497,301,1.043,302,0.927,303,1.853,304,2.155,305,1.649,306,1.497,307,1.111,308,1.375,309,1.274,310,1.187,311,1.375,312,1.497,313,1.853,314,1.497,315,1.497]],["title/guards/AdminGuard.html",[316,2.131,317,1.858]],["body/guards/AdminGuard.html",[3,0.235,4,0.205,9,0.205,13,1.035,23,0.788,24,1.43,26,0.882,29,1.288,31,1.094,32,0.021,33,0.7,34,0.7,35,1.094,37,1.178,39,0.375,40,0.235,42,0.235,43,0.147,76,1.989,108,0.016,109,0.016,118,1.839,138,1.569,164,1.43,167,1.795,185,2.163,205,1.839,207,3.503,231,1.213,235,1.328,238,3.055,252,1.344,316,3.503,317,3.055,318,3.316,319,4.106,320,4.906,321,2.822,322,3.073,323,4.793,324,3.549,325,2.869,326,4.793,327,3.572,328,2.938,329,4.933,330,2.163,331,1.653,332,3.654,333,2.461,334,2.311,335,3.316,336,4.536,337,4.106,338,4.793]],["title/modules/AdminModule.html",[339,0.743,340,2.504]],["body/modules/AdminModule.html",[3,0.248,4,0.216,9,0.216,32,0.02,39,0.398,40,0.248,42,0.248,43,0.155,50,1.154,68,1.154,75,2.015,76,1.418,78,2.015,108,0.016,109,0.016,111,3.498,339,1.038,340,5.187,341,1.572,342,2.167,343,3.195,344,2.296,345,2.438,346,1.744,347,4.332,348,4.332,349,4.332,350,4.565,351,3.079,352,2.965,353,2.438,354,5.057,355,2.236,356,2.236,357,5.268,358,4.332,359,3.498,360,3.498,361,2.977,362,2.774,363,3.373,364,2.596]],["title/components/AdminPageComponent.html",[0,0.224,78,1.015]],["body/components/AdminPageComponent.html",[0,0.289,1,0.722,2,1.337,3,0.126,4,0.11,5,0.936,6,0.936,7,0.936,8,0.936,9,0.11,13,0.903,15,1.45,16,0.888,17,1.772,18,1.683,19,1.033,21,1.033,23,0.423,24,0.932,25,1.613,26,0.714,28,2.045,29,1.352,31,1.064,32,0.021,33,0.812,34,0.757,35,1.064,37,1.018,38,1.589,39,0.336,40,0.126,41,0.988,42,0.126,43,0.079,44,1.2,45,1.044,50,0.885,58,1.516,61,2.677,62,2.394,63,2.956,65,1.991,66,2.283,67,2.745,68,0.588,69,1.41,70,1.269,71,0.936,72,1.887,73,0.936,74,0.936,75,0.722,76,1.964,77,0.936,78,1.456,79,1.41,80,0.76,81,0.936,82,0.588,83,1.718,84,0.936,85,0.686,86,0.936,87,0.722,88,0.888,89,0.722,90,0.936,91,0.722,92,0.936,93,0.686,94,0.936,95,0.722,96,0.936,97,0.722,98,0.936,99,0.722,100,0.936,101,0.722,102,0.936,103,0.722,104,0.936,105,0.801,106,0.936,107,0.936,108,0.01,109,0.01,110,4.872,115,2.357,117,2.502,122,0.932,128,3.298,136,1.608,137,1.79,138,2.131,139,2.045,140,1.664,141,1.991,142,1.79,144,2.283,145,1.613,148,1.337,153,4.768,158,1.456,161,1.205,162,1.887,163,1.662,164,1.501,165,1.337,166,1.571,167,1.313,168,1.561,169,1.699,177,2.464,182,2.683,184,2.249,187,3.322,188,3.322,189,0.888,190,0.888,201,1.18,204,2.328,228,0.888,231,0.652,232,0.76,233,0.843,234,0.988,235,1.282,238,1.322,258,1.782,268,1.17,271,1.662,272,2.127,275,1.782,281,1.413,282,1.413,283,1.413,284,2.464,286,1.637,290,2.464,291,1.516,293,2.249,294,2.558,295,1.242,296,1.516,301,1.242,304,1.637,308,3.298,309,1.516,310,2.127,311,2.464,327,1.991,359,4.421,365,1.963,366,3.878,367,1.337,368,3.878,369,3.431,370,3.878,371,3.878,372,2.357,373,2.956,374,4.459,375,3.878,376,3.995,377,3.322,378,3.878,379,3.878,380,5.189,381,5.189,382,1.637,383,3.322,384,3.878,385,2.576,386,3.878,387,3.878,388,3.878,389,5.566,390,3.878,391,2.576,392,3.055,393,3.878,394,1.761,395,2.576,396,2.956,397,2.576,398,2.576,399,2.576,400,2.683,401,3.878,402,2.576,403,2.576,404,2.207,405,2.207,406,2.576,407,2.576,408,2.207,409,2.576,410,1.963,411,2.576,412,2.576,413,2.576,414,2.576,415,2.576,416,1.963,417,1.637,418,1.516,419,2.207,420,1.963,421,3.322,422,3.878,423,2.207,424,1.87,425,2.464,426,1.782,427,1.782,428,1.782,429,2.683,430,1.963,431,3.322,432,1.782,433,2.207,434,2.683,435,1.963,436,1.963,437,2.207,438,1.963,439,1.637,440,1.516,441,1.963,442,2.207,443,2.956,444,2.207,445,1.963,446,2.207,447,2.207,448,2.207,449,2.207,450,2.207,451,2.207]],["title/modules/AdminRoutingModule.html",[339,0.743,350,2.3]],["body/modules/AdminRoutingModule.html",[0,0.392,3,0.26,4,0.227,9,0.227,32,0.02,39,0.397,40,0.26,42,0.26,43,0.163,75,1.776,76,1.489,78,1.776,108,0.017,109,0.017,111,3.672,231,1.343,236,1.276,317,3.474,320,4.38,341,1.65,346,1.831,350,4.023,355,1.93,356,2.302,357,5.424,358,4.547,359,3.672,360,3.672,452,5.308,453,3.124,454,3.727,455,3.262,456,3.373,457,3.25,458,5.308,459,3.373]],["title/components/AppComponent.html",[0,0.224,80,1.069]],["body/components/AppComponent.html",[0,0.38,1,1.2,2,1.91,3,0.21,4,0.183,5,1.556,6,1.556,7,1.556,8,1.556,9,0.183,15,1.33,16,1.476,17,1.892,18,1.806,19,1.475,21,1.475,23,0.703,24,1.331,25,2.018,26,0.788,29,1.405,31,0.976,32,0.02,33,0.896,34,0.808,35,0.976,37,0.745,38,1.028,39,0.307,40,0.21,42,0.21,43,0.132,44,0.878,48,3.26,49,3.831,68,0.976,69,2.013,70,1.813,71,1.556,72,2.36,73,1.556,74,1.556,75,1.2,76,1.553,77,1.556,78,1.2,79,2.013,80,1.917,81,1.556,82,0.976,83,1.028,84,1.556,85,1.14,86,1.556,87,1.2,88,1.476,89,1.2,90,1.556,91,1.2,92,1.556,93,1.14,94,1.556,95,1.2,96,1.556,97,1.2,98,1.556,99,1.2,100,1.556,101,1.2,102,1.556,103,1.2,104,1.556,105,1.33,106,1.556,107,1.556,108,0.015,109,0.015,118,2.124,119,3.152,122,1.331,138,2.254,169,2.009,189,1.91,190,1.91,201,1.083,208,2.72,231,1.083,249,2.843,334,2.67,335,2.96,417,2.72,460,3.666,461,6.139,462,5.537,463,6.139,464,2.72,465,6.139,466,6.491,467,5.537,468,4.279,469,4.279,470,4.279,471,3.666,472,4.279,473,4.279,474,2.72]],["title/modules/AppModule.html",[339,0.743,475,2.504]],["body/modules/AppModule.html",[3,0.2,4,0.175,9,0.175,18,0.982,32,0.021,39,0.409,40,0.2,42,0.2,43,0.126,50,0.932,52,2.595,68,0.932,80,2.151,108,0.014,109,0.014,168,1.145,232,1.206,339,0.838,341,1.269,342,1.75,343,2.894,344,2.725,345,2.59,346,1.408,351,2.914,352,2.59,353,1.969,355,1.953,356,1.953,361,2.404,362,2.24,475,5.198,476,3.499,477,3.499,478,3.499,479,3.499,480,4.321,481,4.321,482,6.026,483,5.674,484,5.825,485,5.674,486,6.026,487,5.674,488,6.026,489,5.674,490,4.084,491,4.084,492,4.084,493,4.084,494,4.084,495,5.371,496,5.371,497,4.084,498,4.084,499,4.084,500,4.084,501,3.113,502,4.084,503,2.595,504,3.499,505,4.084,506,4.084,507,4.084,508,5.371,509,4.601,510,3.113,511,5.371,512,4.084,513,5.371,514,4.084,515,4.084,516,4.084,517,4.084]],["title/modules/AppRoutingModule.html",[339,0.743,480,2.3]],["body/modules/AppRoutingModule.html",[0,0.377,3,0.244,4,0.213,9,0.213,32,0.021,39,0.38,40,0.244,42,0.244,43,0.153,76,1.397,93,1.623,97,1.709,105,1.548,108,0.016,109,0.016,231,1.261,236,1.197,341,1.548,346,1.718,355,1.811,356,2.215,453,2.932,454,3.586,455,3.174,457,3.721,480,3.872,518,4.981,519,4.981,520,3.165,521,3.797,522,4.981,523,4.981,524,3.797,525,7.034,526,4.981,527,4.981,528,3.165,529,4.981,530,4.981,531,4.267,532,4.981,533,4.981,534,4.981,535,4.981,536,2.402,537,4.981,538,4.981,539,4.981]],["title/modules/AuthModule.html",[339,0.743,503,2.3]],["body/modules/AuthModule.html",[3,0.249,4,0.218,9,0.218,32,0.02,39,0.399,40,0.249,42,0.249,43,0.156,50,1.161,68,1.161,89,2.018,99,2.018,108,0.016,109,0.016,339,1.044,341,1.581,342,2.181,343,3.204,344,2.31,345,2.453,346,1.755,351,3.083,352,2.976,353,2.453,355,2.244,356,2.244,361,2.995,362,2.791,363,3.385,364,2.612,503,4.769,528,3.233,540,4.359,541,4.359,542,4.359,543,4.572,544,5.088,545,4.359,546,4.359]],["title/modules/AuthRoutingModule.html",[339,0.743,543,2.3]],["body/modules/AuthRoutingModule.html",[0,0.395,3,0.264,4,0.23,9,0.23,32,0.02,39,0.398,40,0.264,42,0.264,43,0.165,89,1.789,99,1.789,108,0.017,109,0.017,231,1.361,236,1.292,317,2.76,341,1.671,346,1.854,355,1.955,356,2.32,453,3.165,454,3.755,455,3.28,456,3.417,457,3.275,459,3.417,543,4.054,545,4.606,546,4.606,547,5.377,548,3.72,549,4.099]],["title/injectables/AuthenticationService.html",[322,1.644,330,1.316]],["body/injectables/AuthenticationService.html",[3,0.139,4,0.121,9,0.121,13,1.054,23,0.465,24,1,26,0.766,29,1.462,31,1.382,32,0.021,33,0.937,34,0.884,35,1.382,37,1.243,39,0.321,40,0.139,42,0.139,43,0.087,44,1.012,50,0.949,76,1.525,108,0.011,109,0.011,117,2.622,122,1,126,2.089,136,1.701,137,1.875,152,1.686,158,1.167,161,1.293,164,1,167,1.843,177,2.644,185,1.977,189,0.976,190,0.976,201,1.863,205,2.464,210,3.564,213,1.596,214,2.791,228,0.976,235,1.318,236,1,238,2.136,249,2.136,252,1.895,270,2.006,271,1.783,293,2.006,322,1.889,325,2.92,327,3.297,328,2.976,330,1.513,331,0.976,333,1.453,334,1.365,504,2.425,528,4.165,548,2.878,550,1.666,551,2.425,552,4.225,553,4.16,554,4.16,555,5.437,556,5.437,557,4.657,558,4.16,559,4.657,560,4.16,561,2.831,562,5.437,563,4.19,564,4.16,565,2.449,566,4.16,567,2.831,568,3.297,569,3.761,570,3.761,571,5.437,572,5.437,573,4.775,574,4.144,575,3.455,576,4.16,577,2.831,578,4.628,579,2.831,580,4.16,581,2.831,582,6.056,583,4.16,584,2.831,585,2.006,586,4.16,587,5.022,588,2.831,589,5.188,590,2.335,591,3.849,592,4.16,593,2.831,594,5.437,595,2.831,596,4.16,597,2.831,598,4.16,599,2.136,600,4.16,601,4.16,602,1.958,603,2.831,604,2.831,605,2.831,606,2.425,607,4.225,608,1.553,609,4.16,610,4.16,611,2.831,612,4.16,613,3.564,614,4.16,615,2.831,616,2.831,617,2.831,618,1.213,619,2.831,620,2.831,621,4.16,622,2.878,623,3.564,624,2.831,625,4.16,626,2.425,627,2.831]],["title/modules/CoreModule.html",[339,0.743,481,2.3]],["body/modules/CoreModule.html",[3,0.267,4,0.233,9,0.233,32,0.02,39,0.379,40,0.267,42,0.267,43,0.167,50,1.243,68,1.243,108,0.017,109,0.017,339,1.118,341,1.693,342,2.335,343,2.627,344,2.474,345,2.627,346,1.879,351,3.132,352,3.1,353,2.627,355,2.338,356,2.338,362,2.988,363,3.527,364,2.797,481,4.644,628,5.447,629,5.447,630,5.447]],["title/injectables/DateService.html",[330,1.316,631,1.644]],["body/injectables/DateService.html",[3,0.225,4,0.196,9,0.196,13,1.007,17,1.465,23,0.754,24,1.391,29,1.442,31,1.047,32,0.02,33,0.67,34,0.67,35,1.047,37,1.104,38,1.391,39,0.321,40,0.225,42,0.225,43,0.141,44,1.302,108,0.015,109,0.015,122,1.391,152,2.346,158,1.624,164,1.391,189,1.996,190,2.297,202,2.481,213,2.221,235,0.941,252,1.287,328,2.629,330,2.105,331,1.582,333,2.355,334,2.212,394,3.185,550,2.7,631,2.629,632,3.93,633,3.261,634,3.256,635,6.342,636,6.661,637,5.789,638,4.587,639,5.789,640,5.789,641,4.587,642,5.789,643,4.587,644,5.789,645,4.587,646,4.413,647,5.789,648,5.789,649,5.789,650,5.789,651,5.789,652,4.587,653,4.587,654,4.587]],["title/interfaces/Drink.html",[83,0.87,367,1.248]],["body/interfaces/Drink.html",[0,0.243,3,0.128,4,0.112,9,0.112,13,0.456,17,0.663,18,0.629,19,0.698,21,0.698,23,0.43,25,0.814,26,0.482,28,1.713,32,0.021,33,0.764,34,0.859,37,0.82,38,1.258,39,0.362,40,0.128,41,1.004,42,0.193,43,0.08,44,1.208,45,1.061,50,0.896,61,1.683,82,0.597,83,1.788,108,0.01,109,0.013,114,1.436,115,1.189,117,2.271,122,0.944,126,0.903,130,3.08,131,3.08,132,3.08,133,3.075,136,1.354,137,1.354,139,1.713,140,1.394,141,1.506,142,1.354,145,1.829,148,0.903,152,1.061,156,1.541,158,1.572,161,0.814,162,1.427,164,1.347,165,0.903,166,1.061,167,0.994,168,1.321,169,1.285,175,1.893,178,1.541,181,1.344,185,0.952,191,1.893,192,1.263,193,2.271,195,2.773,196,2.311,198,1.541,200,1.344,201,1.68,202,2.616,204,1.004,205,1.004,213,1.506,217,1.344,220,1.344,228,0.903,229,1.263,230,1.122,232,0.773,233,0.857,234,1.004,235,1.362,236,1.347,252,1.712,266,1.683,268,1.189,271,1.122,272,1.436,287,1.344,302,2.019,307,1.344,328,1.783,331,0.903,367,2.214,369,3.096,372,2.376,394,2.772,424,2.523,536,1.263,568,2.016,585,1.263,590,0.952,599,1.344,608,3.075,618,1.122,631,2.376,633,1.683,634,1.344,655,1.436,656,1.541,657,1.344,658,1.541,659,2.58,660,1.436,661,1.344,662,2.153,663,1.344,664,1.436,665,2.87,666,2.153,667,2.686,668,2.016,669,2.153,670,1.436,671,2.016,672,1.436,673,2.016,674,1.664,675,1.664,676,1.436,677,1.664,678,1.664,679,1.436,680,1.664,681,1.664,682,1.436,683,1.436,684,1.436,685,2.153,686,2.418,687,2.649,688,1.436,689,2.016,690,1.436,691,1.783,692,1.436,693,1.436,694,1.664,695,2.993,696,1.664,697,2.993,698,1.664,699,1.664,700,1.664,701,3.325,702,2.993,703,1.664,704,1.436,705,1.664,706,1.436,707,1.541,708,2.584,709,1.436,710,1.664,711,1.664,712,2.495,713,1.664,714,1.664,715,1.664,716,1.664,717,1.664,718,1.664,719,1.664,720,1.664,721,1.664,722,1.664,723,1.664,724,1.541,725,2.523,726,1.664,727,1.664,728,1.664,729,2.495,730,3.325,731,2.495,732,1.664,733,1.664,734,1.664,735,2.311,736,1.664,737,1.664,738,1.664,739,1.664,740,1.664,741,1.664,742,1.664,743,1.664,744,1.664,745,1.664,746,1.664,747,1.664,748,1.664,749,1.664,750,1.664,751,1.664,752,1.664,753,2.495,754,1.664,755,2.495,756,2.495,757,2.495,758,2.495,759,1.344,760,1.436,761,1.436,762,2.016,763,2.016,764,1.436,765,1.664,766,1.664,767,1.664,768,1.664,769,2.495,770,1.664,771,1.664,772,1.436,773,1.344,774,1.664]],["title/interfaces/DrinkAmount.html",[367,1.248,666,1.985]],["body/interfaces/DrinkAmount.html",[0,0.242,3,0.128,4,0.111,9,0.111,13,0.453,17,0.659,18,0.625,19,0.693,21,0.693,23,0.428,25,0.809,26,0.479,28,1.707,32,0.021,33,0.38,34,0.889,37,0.817,38,1.254,39,0.362,40,0.128,41,0.998,42,0.192,43,0.08,44,1.205,45,1.054,50,0.891,61,1.675,82,0.594,83,1.785,108,0.01,109,0.012,114,1.427,115,1.182,117,2.263,122,0.939,126,0.897,130,1.532,131,1.532,132,1.532,133,3.067,136,1.348,137,1.348,139,1.707,140,1.39,141,1.499,142,1.348,145,1.825,148,0.897,152,1.054,156,1.532,158,1.568,161,0.809,162,1.421,164,1.344,165,0.897,166,1.054,167,0.989,168,1.316,169,1.279,175,1.884,178,1.532,181,1.336,185,0.946,191,1.884,192,1.255,193,2.263,195,2.762,196,2.3,198,1.532,200,1.336,201,1.719,202,2.61,204,2.001,205,0.998,213,1.499,217,2.678,220,2.678,228,0.897,229,1.255,230,1.115,232,0.768,233,0.852,234,0.998,235,1.36,236,1.344,252,1.708,266,1.675,268,1.182,271,1.115,272,1.427,287,1.336,302,2.011,307,1.336,328,1.775,331,0.897,367,2.21,369,3.09,372,2.369,394,2.766,424,2.515,536,1.255,568,2.006,585,1.255,590,0.946,599,1.336,608,3.067,618,1.115,631,2.369,633,1.675,634,1.336,655,1.427,656,1.532,657,1.336,658,1.532,659,2.576,660,1.427,661,1.336,662,2.143,663,1.336,664,1.427,665,3.067,666,2.574,667,3.127,668,2.87,669,2.143,670,1.427,671,2.006,672,1.427,673,2.006,674,1.654,675,1.654,676,1.427,677,1.654,678,1.654,679,1.427,680,1.654,681,1.654,682,1.427,683,1.427,684,1.427,685,2.143,686,2.409,687,2.645,688,1.427,689,2.006,690,1.427,691,1.775,692,1.427,693,1.427,694,1.654,695,2.982,696,1.654,697,2.982,698,1.654,699,1.654,700,1.654,701,3.315,702,2.982,703,1.654,704,1.427,705,1.654,706,1.427,707,1.532,708,2.574,709,1.427,710,1.654,711,1.654,712,2.483,713,1.654,714,1.654,715,1.654,716,1.654,717,1.654,718,1.654,719,1.654,720,1.654,721,1.654,722,1.654,723,1.654,724,1.532,725,2.515,726,1.654,727,1.654,728,1.654,729,2.483,730,3.315,731,2.483,732,1.654,733,1.654,734,1.654,735,2.3,736,1.654,737,1.654,738,1.654,739,1.654,740,1.654,741,1.654,742,1.654,743,1.654,744,1.654,745,1.654,746,1.654,747,1.654,748,1.654,749,1.654,750,1.654,751,1.654,752,1.654,753,2.483,754,1.654,755,2.483,756,2.483,757,2.483,758,2.483,759,1.336,760,1.427,761,1.427,762,2.006,763,2.006,764,1.427,765,1.654,766,1.654,767,1.654,768,1.654,769,2.483,770,1.654,771,1.654,772,1.427,773,1.336,774,1.654]],["title/interfaces/DrinkAmountsMap.html",[367,1.248,669,1.985]],["body/interfaces/DrinkAmountsMap.html",[0,0.247,3,0.131,4,0.115,9,0.115,13,0.466,17,0.678,18,0.644,19,0.713,21,0.713,25,0.832,26,0.493,28,1.732,29,0.58,32,0.021,33,0.391,34,0.391,37,0.831,38,1.272,39,0.364,40,0.131,41,1.027,42,0.196,43,0.082,44,1.218,45,1.085,50,0.911,61,1.711,82,0.611,83,1.786,108,0.011,109,0.013,114,1.469,115,1.216,117,2.302,126,0.923,130,1.576,131,1.576,132,1.576,133,2.19,136,1.377,137,1.377,139,1.732,140,1.41,141,1.532,142,1.377,145,1.845,148,0.923,152,1.085,156,1.576,158,1.587,161,0.832,162,1.452,164,1.36,165,0.923,166,1.085,167,1.01,168,1.339,169,1.307,175,1.925,178,1.576,181,1.375,185,0.974,191,1.925,192,1.291,193,2.302,195,2.81,196,2.35,198,1.576,200,1.375,201,1.599,202,2.635,204,1.027,205,1.027,213,1.532,217,1.375,220,1.375,228,0.923,229,1.291,230,1.148,232,0.791,233,0.876,234,1.027,235,1.369,236,1.36,252,1.725,266,1.711,268,1.216,271,1.148,272,1.469,287,1.375,302,2.046,307,1.375,328,1.813,331,0.923,367,2.227,369,3.17,372,2.403,394,2.792,424,2.551,536,1.291,568,2.05,585,1.291,590,0.974,599,1.375,608,3.255,618,1.148,631,2.403,633,1.711,634,1.375,655,1.469,656,2.35,657,2.05,658,1.576,659,2.277,660,1.469,661,1.375,662,2.19,663,1.375,664,1.469,665,3.104,666,2.618,667,2.716,668,2.05,669,2.618,670,2.19,671,2.05,672,1.469,673,2.05,674,1.702,675,1.702,676,1.469,677,1.702,678,1.702,679,1.469,680,1.702,681,1.702,682,1.469,683,1.469,684,1.469,685,2.19,686,2.451,687,2.664,688,1.469,689,2.05,690,1.469,691,1.813,692,1.469,693,1.469,694,1.702,695,3.034,696,1.702,697,3.034,698,1.702,699,1.702,700,1.702,701,3.363,702,3.034,703,1.702,704,1.469,705,1.702,706,1.469,707,1.576,708,2.618,709,1.469,710,1.702,711,1.702,712,2.537,713,1.702,714,1.702,715,1.702,716,1.702,717,1.702,718,1.702,719,1.702,720,1.702,721,1.702,722,1.702,723,1.702,724,1.576,725,2.551,726,1.702,727,1.702,728,1.702,729,2.537,730,3.363,731,2.537,732,1.702,733,1.702,734,1.702,735,2.35,736,1.702,737,1.702,738,1.702,739,1.702,740,1.702,741,1.702,742,1.702,743,1.702,744,1.702,745,1.702,746,1.702,747,1.702,748,1.702,749,1.702,750,1.702,751,1.702,752,1.702,753,2.537,754,1.702,755,2.537,756,2.537,757,2.537,758,2.537,759,1.375,760,1.469,761,1.469,762,2.05,763,2.05,764,1.469,765,1.702,766,1.702,767,1.702,768,1.702,769,2.537,770,1.702,771,1.702,772,1.469,773,1.375,774,1.702,775,2.678,776,2.678]],["title/interfaces/DrinkData.html",[266,1.551,367,1.248]],["body/interfaces/DrinkData.html",[0,0.173,3,0.083,4,0.073,9,0.073,13,0.295,14,0.871,15,1.104,17,0.429,18,0.408,19,0.452,21,0.452,23,0.279,25,0.527,26,0.312,28,1.347,32,0.021,33,0.407,34,0.601,37,0.485,38,0.67,39,0.299,40,0.083,41,0.651,42,0.083,43,0.052,44,1.003,45,1.439,48,0.998,50,0.939,57,1.772,70,0.555,83,1.583,85,0.452,108,0.007,109,0.007,115,1.267,118,0.651,119,1.432,122,0.67,126,1.419,136,0.962,137,0.962,138,0.913,139,1.347,140,1.096,141,1.07,142,0.962,144,1.642,145,1.834,148,0.585,152,0.687,158,1.615,161,0.867,162,0.617,163,0.727,164,1.093,165,0.585,166,0.687,167,1.041,168,0.996,169,0.913,177,1.078,181,0.871,182,1.173,184,1.713,185,1.496,201,1.308,202,2.467,204,1.744,207,1.642,208,1.772,214,0.871,217,2.334,220,2.112,228,0.585,232,0.501,233,0.555,234,0.651,235,1.181,236,1.713,238,0.871,249,1.432,252,1.154,266,2.215,269,1.078,270,2.696,271,0.727,275,1.173,280,1.078,281,0.93,282,0.93,283,0.93,284,1.078,295,1.345,301,1.345,302,2.528,327,2.334,367,1.568,369,2.603,372,0.77,374,1.293,392,0.998,394,2.065,396,2.708,400,1.173,410,1.293,416,2.126,420,1.293,424,2.905,425,1.772,474,2.89,524,1.293,536,0.818,575,1.078,585,0.818,590,1.496,599,1.824,622,1.173,631,2.065,633,2.999,634,0.871,646,1.293,655,0.93,659,2.071,660,1.53,661,1.432,662,2.682,663,0.871,664,0.93,665,2.494,667,1.824,668,3.243,670,1.948,671,1.432,673,2.771,676,1.53,679,0.93,682,1.53,683,0.93,684,1.948,685,1.53,686,3.029,687,2.835,688,1.53,689,2.653,690,1.53,691,2.614,692,1.948,693,1.53,706,0.93,708,2.682,709,0.93,725,1.345,759,2.112,760,1.53,761,1.53,762,2.112,763,2.112,764,1.53,772,0.93,773,0.871,777,1.293,778,2.389,779,2.389,780,1.453,781,2.847,782,1.948,783,2.091,784,1.453,785,1.173,786,1.453,787,1.453,788,1.453,789,3.525,790,2.126,791,3.043,792,2.389,793,1.453,794,1.453,795,1.453,796,2.389,797,3.043,798,1.929,799,1.453,800,1.453,801,3.043,802,1.453,803,1.173,804,1.293,805,2.708,806,1.453,807,3.939,808,2.126,809,3.043,810,1.453,811,1.453,812,1.453,813,1.078,814,4.624,815,3.043,816,1.453,817,1.453,818,1.293,819,2.389,820,1.453,821,2.389,822,1.453,823,3.043,824,1.453,825,2.389,826,1.293,827,1.453,828,2.389,829,1.453,830,2.389,831,1.293,832,1.453,833,1.453,834,2.89,835,1.929,836,1.453,837,1.293,838,1.453,839,3.043,840,1.453,841,1.453,842,1.453,843,1.453,844,3.043,845,2.126,846,1.453,847,3.043,848,2.126,849,2.126,850,3.137,851,2.126,852,2.389,853,2.389,854,1.293,855,1.293,856,1.453,857,1.453,858,1.453,859,1.453,860,1.453,861,1.453,862,1.453,863,1.453,864,1.453,865,1.453,866,1.453,867,1.453,868,2.389,869,1.453,870,1.078,871,1.453,872,1.453,873,1.293,874,1.293,875,1.078,876,1.453,877,3.043,878,1.173,879,1.453,880,1.453,881,3.895,882,1.453,883,3.043,884,2.389,885,1.453,886,1.453,887,1.453,888,0.93,889,1.453,890,1.453,891,1.453,892,3.043,893,1.453,894,1.453,895,2.389,896,1.453,897,3.043,898,1.453,899,1.453,900,1.453,901,1.453,902,1.453,903,1.293,904,1.453,905,1.453,906,1.453,907,1.453,908,2.389,909,4.79,910,4.427,911,2.389,912,1.453,913,3.043,914,1.453,915,1.929,916,1.453,917,1.453,918,3.043,919,2.457,920,3.525,921,2.389,922,3.043,923,2.389,924,4.624,925,3.043,926,1.453,927,2.389,928,2.389,929,1.453,930,2.389,931,1.453,932,1.453,933,1.453,934,4.624,935,4.624,936,1.453,937,3.525,938,1.453,939,2.389,940,1.453,941,2.389,942,2.389,943,1.453,944,1.453,945,1.453,946,2.389,947,1.453,948,1.453,949,1.453,950,1.453,951,1.453,952,1.453,953,1.453,954,2.389,955,1.453,956,1.453,957,1.453,958,1.453,959,1.173,960,1.453,961,3.043,962,1.453,963,1.453,964,1.453,965,1.453,966,1.453,967,1.453,968,1.453,969,1.453,970,1.453,971,1.453,972,1.293,973,1.453,974,2.389,975,1.453,976,1.453,977,1.453,978,1.453,979,1.453,980,1.293,981,2.389,982,2.389,983,1.453,984,1.453,985,1.453,986,1.453,987,1.453,988,1.453,989,1.453,990,1.772,991,2.389,992,1.453,993,1.453,994,1.453,995,1.453,996,3.043,997,2.389,998,1.453,999,1.453,1000,1.453,1001,1.453,1002,1.453,1003,1.453,1004,1.453,1005,1.453]],["title/components/DrinkListComponent.html",[0,0.224,82,0.826]],["body/components/DrinkListComponent.html",[0,0.217,1,0.467,2,0.947,3,0.082,4,0.071,5,0.605,6,0.605,7,0.605,8,0.605,9,0.071,13,0.843,15,0.517,16,0.574,17,1.629,18,1.547,19,0.731,21,0.731,23,0.451,24,0.66,25,1.264,26,0.505,28,1.753,29,1.407,31,1.027,32,0.021,33,0.81,34,0.874,35,1.027,37,0.995,38,1.334,39,0.317,40,0.082,41,0.638,42,0.135,43,0.051,44,0.994,45,0.674,50,0.799,58,0.979,61,1.743,62,2.631,63,2.671,65,3.01,66,2.649,67,3.451,68,0.38,69,0.998,70,0.899,71,0.605,72,1.479,73,0.605,74,0.605,75,0.467,76,0.77,77,0.605,78,0.467,79,0.998,80,0.491,81,0.605,82,0.928,83,1.796,84,0.605,85,0.443,86,0.605,87,0.467,88,0.574,89,0.467,90,0.605,91,0.467,92,0.605,93,0.443,94,0.605,95,0.467,96,0.605,97,0.467,98,0.605,99,0.467,100,0.605,101,0.467,102,0.605,103,0.467,104,0.605,105,0.517,106,0.605,107,0.605,108,0.007,109,0.011,114,0.913,115,2.2,117,2.336,122,0.66,126,1.209,129,1.744,130,0.979,131,0.979,132,2.649,133,1.506,136,1.209,137,1.402,139,1.753,140,1.427,141,1.56,142,1.402,145,1.726,148,0.947,152,1.112,156,0.979,158,1.604,161,0.853,162,1.479,164,1.374,165,0.947,166,1.112,167,1.029,168,1.262,169,1.331,175,1.69,178,1.616,181,1.409,185,0.998,189,1.767,190,1.671,191,1.69,192,0.802,193,2.336,195,2.851,196,2.394,198,1.616,200,1.409,201,1.356,202,2.379,204,0.638,205,1.053,213,1.56,214,0.854,217,0.854,220,0.854,228,0.574,229,0.802,230,0.713,232,0.491,233,0.545,234,0.638,235,1.203,236,1.082,252,1.437,266,1.177,268,0.756,271,0.713,272,0.913,287,0.854,291,0.979,292,1.899,293,2.336,294,3.137,295,1.961,296,2.063,297,1.151,299,1.616,300,1.151,301,1.69,302,1.502,304,2.584,306,1.151,307,1.409,308,2.584,309,0.979,310,1.506,311,2.584,312,1.151,314,1.151,328,1.591,331,0.574,367,1.847,369,2.989,372,2.597,382,1.057,394,2.815,421,3.484,423,1.425,424,2.336,425,1.744,426,1.151,427,1.151,428,1.151,429,1.899,430,1.268,431,2.352,432,2.424,433,2.352,434,2.424,435,2.093,436,2.093,437,1.425,438,1.268,439,1.057,440,1.616,441,1.268,442,1.425,443,2.671,444,2.352,445,2.093,446,1.425,447,1.425,448,1.425,449,1.425,450,1.425,451,1.425,536,1.324,568,1.409,585,1.324,590,0.998,599,1.409,608,2.938,618,0.713,631,2.432,633,1.743,634,1.799,656,3.862,657,3.368,658,0.979,659,1.858,660,0.913,661,0.854,662,1.506,663,0.854,664,0.913,665,2.468,666,1.506,667,2.631,668,1.799,669,1.506,670,0.913,671,1.799,672,0.913,673,2.088,674,1.744,675,1.744,676,1.506,677,1.744,678,1.744,679,1.506,680,1.744,681,2.227,682,0.913,683,0.913,684,0.913,685,1.506,686,1.799,687,2.376,688,0.913,689,1.409,690,0.913,691,1.247,692,0.913,693,0.913,694,2.227,695,3.078,696,1.744,697,3.078,698,1.744,699,2.227,700,2.227,701,3.404,702,3.078,703,2.227,704,1.506,705,2.227,706,1.506,707,1.616,708,1.922,709,0.913,710,1.057,711,1.057,712,1.744,713,1.057,714,1.057,715,1.057,716,2.584,717,1.057,718,1.057,719,1.057,720,1.057,721,1.744,722,1.744,723,1.744,724,1.616,725,2.583,726,1.744,727,1.744,728,1.744,729,3.078,730,2.584,731,1.744,732,1.057,733,1.744,734,1.744,735,2.394,736,1.744,737,1.744,738,1.744,739,1.744,740,2.584,741,1.057,742,1.057,743,1.057,744,1.057,745,1.057,746,1.744,747,1.744,748,1.744,749,1.744,750,1.744,751,1.057,752,1.057,753,1.744,754,1.057,755,1.744,756,1.744,757,1.744,758,1.744,759,0.854,760,0.913,761,0.913,762,1.409,763,1.409,764,0.913,765,1.057,766,1.057,767,1.057,768,1.057,769,1.744,770,1.057,771,1.057,772,0.913,773,0.854,774,1.057,813,1.744,1006,2.745,1007,2.745,1008,2.745,1009,2.745,1010,2.745,1011,1.664,1012,1.664,1013,1.664,1014,1.664,1015,1.664,1016,1.664,1017,1.664,1018,1.664,1019,1.664,1020,1.664,1021,1.664,1022,1.664,1023,1.664,1024,1.664,1025,1.664,1026,1.664,1027,1.664,1028,1.664,1029,1.664,1030,3.504,1031,2.745,1032,2.745,1033,2.745,1034,2.745,1035,2.352,1036,1.664,1037,3.504,1038,1.899,1039,1.425,1040,1.664,1041,3.43,1042,1.664,1043,2.352,1044,1.664,1045,1.664,1046,1.268,1047,1.151,1048,1.425,1049,1.268,1050,1.425,1051,2.745,1052,2.745,1053,1.664,1054,1.664,1055,1.664,1056,1.268]],["title/interfaces/FirestoreDocumentData.html",[367,1.248,672,1.985]],["body/interfaces/FirestoreDocumentData.html",[0,0.247,3,0.131,4,0.114,9,0.114,13,0.465,17,0.676,18,0.642,19,0.712,21,0.712,23,0.439,25,0.83,26,0.492,28,1.73,32,0.021,33,0.39,34,0.696,37,0.83,38,1.27,39,0.364,40,0.131,41,1.025,42,0.195,43,0.082,44,1.217,45,1.082,50,0.909,61,1.708,82,0.609,83,1.786,108,0.011,109,0.013,114,1.465,115,1.213,117,2.298,122,0.958,126,0.921,130,1.572,131,1.572,132,1.572,133,2.186,136,1.374,137,1.374,139,1.73,140,1.408,141,1.529,142,1.374,145,1.843,148,0.921,152,1.082,156,1.572,158,1.586,161,0.83,162,1.449,164,1.359,165,0.921,166,1.082,167,1.009,168,1.337,169,1.304,175,1.922,178,1.572,181,1.371,185,0.971,191,1.922,192,1.288,193,2.298,195,2.806,196,2.346,198,1.572,200,1.371,201,1.555,202,2.633,204,1.025,205,1.025,213,1.529,217,1.371,220,1.371,228,0.921,229,1.288,230,1.145,232,0.789,233,0.874,234,1.025,235,1.369,236,1.359,252,1.723,266,1.708,268,1.213,271,1.145,272,1.465,287,1.371,302,2.043,307,1.371,328,1.81,331,0.921,367,2.226,369,3.168,372,2.4,394,2.79,424,2.548,536,1.288,568,2.046,585,1.288,590,0.971,599,1.371,608,3.101,618,1.145,631,2.4,633,1.708,634,1.371,655,1.465,656,1.572,657,1.371,658,1.572,659,2.275,660,1.465,661,1.371,662,2.186,663,1.371,664,1.465,665,3.101,666,2.186,667,2.713,668,2.046,669,2.899,670,1.465,671,2.447,672,2.186,673,2.903,674,1.698,675,1.698,676,1.465,677,1.698,678,1.698,679,1.465,680,1.698,681,1.698,682,1.465,683,1.465,684,1.465,685,2.186,686,2.447,687,2.663,688,1.465,689,2.046,690,1.465,691,1.81,692,1.465,693,1.465,694,1.698,695,3.029,696,1.698,697,3.029,698,1.698,699,1.698,700,1.698,701,3.359,702,3.029,703,1.698,704,1.465,705,1.698,706,1.465,707,1.572,708,2.615,709,1.465,710,1.698,711,1.698,712,2.533,713,1.698,714,1.698,715,1.698,716,1.698,717,1.698,718,1.698,719,1.698,720,1.698,721,1.698,722,1.698,723,1.698,724,1.572,725,2.548,726,1.698,727,1.698,728,1.698,729,2.533,730,3.359,731,2.533,732,1.698,733,1.698,734,1.698,735,2.346,736,1.698,737,1.698,738,1.698,739,1.698,740,1.698,741,1.698,742,1.698,743,1.698,744,1.698,745,1.698,746,1.698,747,1.698,748,1.698,749,1.698,750,1.698,751,1.698,752,1.698,753,2.533,754,1.698,755,2.533,756,2.533,757,2.533,758,2.533,759,1.371,760,1.465,761,1.465,762,2.046,763,2.046,764,1.465,765,1.698,766,1.698,767,1.698,768,1.698,769,2.533,770,1.698,771,1.698,772,1.465,773,1.371,774,1.698]],["title/components/LandingPageComponent.html",[0,0.224,87,1.015]],["body/components/LandingPageComponent.html",[0,0.367,1,1.115,2,1.82,3,0.195,4,0.17,5,1.446,6,1.446,7,1.446,8,1.446,9,0.17,13,0.918,14,2.709,15,2.2,16,1.371,17,1.878,18,1.783,19,1.406,21,1.406,23,0.654,24,1.268,26,0.971,29,1.282,31,0.907,32,0.02,33,0.864,34,0.58,35,0.907,37,0.918,38,1.268,39,0.328,40,0.195,42,0.195,43,0.122,44,1.083,48,3.106,49,3.651,65,2.709,66,3.106,67,2.341,68,0.907,69,1.919,70,1.727,71,1.446,72,2.294,73,1.446,74,1.446,75,1.115,76,1.48,77,1.446,78,1.115,79,1.919,80,1.174,81,1.446,82,0.907,83,0.956,84,1.446,85,1.059,86,1.446,87,1.77,88,2.465,89,1.115,90,1.446,91,1.115,92,1.446,93,1.059,94,1.446,95,1.115,96,1.446,97,1.115,98,1.446,99,1.115,100,1.446,101,1.115,102,1.446,103,1.115,104,1.446,105,1.236,106,1.446,107,1.446,108,0.014,109,0.014,138,2.317,140,1.835,163,2.262,231,1.006,233,1.302,235,0.816,365,3.031,376,5.074,377,4.521,383,3.406,392,3.714,464,2.527,548,3.651,549,4.023,782,2.181,919,3.651,1046,4.515,1047,3.651,1048,3.406,1057,5.405,1058,4.365,1059,6.309,1060,6.309,1061,3.976,1062,3.976,1063,3.976,1064,3.976,1065,5.277,1066,5.277,1067,4.809,1068,3.976,1069,3.976,1070,3.976,1071,3.976]],["title/components/LoginComponent.html",[0,0.224,89,1.015]],["body/components/LoginComponent.html",[0,0.322,1,0.87,2,1.533,3,0.152,4,0.133,5,1.128,6,1.128,7,1.128,8,1.128,9,0.133,13,0.774,14,2.282,15,0.964,16,1.07,17,1.821,18,1.729,19,1.184,21,1.184,23,0.51,24,1.068,25,1.764,26,0.818,29,1.393,31,0.708,32,0.021,33,0.758,34,0.453,35,0.708,37,0.987,38,1.364,39,0.371,40,0.152,42,0.152,43,0.095,44,1.283,52,1.971,61,1.905,68,0.708,69,1.616,70,1.455,71,1.128,72,2.063,73,1.128,74,1.128,75,0.87,76,1.247,77,1.128,78,0.87,79,1.616,80,0.916,81,1.128,82,0.708,83,0.745,84,1.128,85,0.826,86,1.128,87,0.87,88,1.07,89,1.591,90,1.128,91,0.87,92,1.128,93,0.826,94,1.128,95,0.87,96,1.128,97,0.87,98,1.128,99,0.87,100,1.128,101,0.87,102,1.128,103,0.87,104,1.128,105,0.964,106,1.128,107,1.128,108,0.012,109,0.012,118,1.705,119,2.667,122,1.068,126,1.07,128,3.606,129,2.825,138,2.227,139,2.155,140,1.715,141,1.993,142,1.957,145,1.615,158,1.753,161,1.382,163,1.905,164,1.364,165,1.533,166,1.801,167,1.582,168,0.87,173,2.617,175,2.143,184,2.143,189,1.07,190,1.07,191,2.505,192,2.896,193,2.736,200,2.282,201,0.785,213,2.177,214,2.913,229,1.495,230,1.329,231,0.785,232,0.916,233,1.015,234,1.19,235,1.164,236,1.068,252,1.457,258,2.146,259,1.826,268,1.408,270,1.495,281,1.701,282,1.701,283,1.701,286,2.825,287,1.592,289,4.861,290,2.825,321,1.826,322,2.577,324,2.85,325,2.736,331,1.07,418,1.826,528,3.606,548,4.155,563,3.925,565,2.617,569,3.925,570,3.925,573,4.324,575,1.971,587,4.706,590,1.616,602,2.146,888,2.438,1067,4.325,1072,2.657,1073,4.445,1074,5.195,1075,4.445,1076,5.195,1077,3.101,1078,3.101,1079,3.101,1080,3.388,1081,2.825,1082,3.101,1083,3.388,1084,3.808,1085,4.445,1086,5.195,1087,3.808,1088,3.101,1089,2.657,1090,3.101,1091,2.364,1092,3.101,1093,2.146,1094,2.364,1095,3.101,1096,3.101,1097,3.101,1098,2.364,1099,3.101,1100,3.101,1101,3.101,1102,3.101,1103,3.101,1104,2.657,1105,3.101,1106,1.971,1107,3.101,1108,1.701,1109,2.657,1110,2.146,1111,2.657,1112,3.101,1113,3.101,1114,3.101,1115,3.101,1116,2.657]],["title/components/NavigationComponent.html",[0,0.224,91,1.015]],["body/components/NavigationComponent.html",[0,0.297,1,0.756,2,1.384,3,0.132,4,0.115,5,0.98,6,0.98,7,0.98,8,0.98,9,0.115,13,0.834,15,1.489,16,0.929,17,1.784,18,1.695,19,1.069,21,1.069,23,0.933,24,0.964,26,0.738,29,1.149,31,0.915,32,0.021,33,0.775,34,0.699,35,0.915,37,0.698,38,0.964,39,0.314,40,0.132,42,0.132,43,0.083,44,0.983,50,1.295,58,1.586,62,2.914,65,3.163,66,1.586,67,2.361,68,0.615,69,1.459,70,1.313,71,0.98,72,1.93,73,0.98,74,0.98,75,0.756,76,1.125,77,0.98,78,0.756,79,1.459,80,0.796,81,0.98,82,0.615,83,0.648,84,0.98,85,0.718,86,0.98,87,0.756,88,0.929,89,0.756,90,0.98,91,1.489,92,0.98,93,0.718,94,0.98,95,0.756,96,0.98,97,0.756,98,0.98,99,0.756,100,0.98,101,0.756,102,0.98,103,0.756,104,0.98,105,1.65,106,0.98,107,0.98,108,0.011,109,0.011,122,0.964,138,2.118,140,1.642,142,1.831,148,2.271,163,1.719,168,1.669,169,1.569,173,2.361,180,3.058,189,0.929,190,0.929,201,1.213,231,0.682,232,0.796,233,0.882,235,0.823,238,2.725,259,1.586,291,1.586,293,1.934,294,2.2,295,1.3,296,1.586,299,3.125,300,3.315,301,3.12,302,2.714,304,1.713,305,2.054,306,4.38,307,3.054,308,3.781,309,2.361,310,2.2,311,3.045,312,2.775,314,2.775,315,1.864,372,1.224,405,4.547,408,2.309,417,2.549,418,2.821,424,1.3,427,3.672,429,2.775,432,3.315,434,1.864,436,3.653,438,2.054,439,1.713,440,2.821,441,2.054,443,3.653,445,3.653,457,3.054,464,1.713,471,3.437,474,1.713,618,1.155,661,3.054,686,3.511,687,2.3,689,3.322,691,2.577,724,3.341,725,1.3,785,2.775,798,2.775,803,2.775,813,2.549,831,3.058,888,1.478,903,2.054,1038,1.864,1039,4.547,1041,4.046,1043,3.437,1046,2.054,1047,1.864,1049,2.054,1056,2.054,1106,1.713,1108,1.478,1117,2.309,1118,6.766,1119,4.012,1120,4.012,1121,4.792,1122,4.012,1123,4.792,1124,4.012,1125,5.308,1126,2.695,1127,4.012,1128,4.012,1129,2.695,1130,4.547,1131,2.695,1132,4.012,1133,6.161,1134,5.675,1135,5.308,1136,2.695,1137,2.695,1138,3.437,1139,2.695,1140,2.695,1141,2.695,1142,2.695,1143,2.695,1144,2.309,1145,6.161,1146,4.792,1147,2.695,1148,2.695,1149,2.695,1150,2.054,1151,2.309,1152,2.309,1153,4.012,1154,4.792,1155,3.437,1156,2.695,1157,2.309,1158,4.792,1159,4.012,1160,2.309,1161,2.695,1162,4.792,1163,5.308,1164,4.012,1165,4.792,1166,5.308,1167,2.695,1168,5.308,1169,2.695,1170,2.695,1171,2.695,1172,2.695,1173,2.695,1174,2.695,1175,2.695,1176,2.695,1177,2.695,1178,2.695,1179,2.695]],["title/injectables/NavigationService.html",[140,0.964,330,1.316]],["body/injectables/NavigationService.html",[3,0.21,4,0.183,9,0.183,13,0.964,23,0.704,24,1.332,26,0.789,29,1.2,31,1.264,32,0.021,33,0.809,34,0.809,35,1.482,37,0.746,38,1.476,39,0.34,40,0.21,42,0.21,43,0.132,44,0.879,108,0.015,109,0.015,138,2.35,140,1.477,142,2.24,148,1.911,163,2.375,164,1.332,168,2.014,169,1.814,180,4.225,189,1.478,190,1.478,201,1.644,231,1.084,232,1.265,235,1.414,330,2.015,333,2.2,334,2.066,335,2.964,373,4.683,417,3.522,430,4.951,457,3.718,464,2.723,550,2.522,659,2.643,668,3.334,959,3.834,1108,3.04,1130,4.748,1138,6.151,1144,3.671,1180,3.671,1181,4.285,1182,4.285,1183,6.494,1184,6.889,1185,6.726,1186,4.285,1187,5.542,1188,5.542,1189,5.542,1190,4.285,1191,5.542,1192,5.542,1193,4.748,1194,4.285,1195,4.285,1196,4.285,1197,4.285,1198,4.285]],["title/injectables/NotyfService.html",[139,1.185,330,1.316]],["body/injectables/NotyfService.html",[3,0.334,4,0.175,9,0.175,13,1.045,23,0.672,24,1.292,26,1.105,29,1.434,31,1.37,32,0.021,33,0.876,34,1.074,35,1.37,37,1.045,38,1.635,39,0.298,40,0.201,42,0.201,43,0.126,44,1.232,108,0.014,109,0.014,122,1.292,139,1.76,152,2.585,158,1.508,164,1.292,165,1.854,166,2.178,179,5.827,184,3.28,189,1.41,190,1.41,201,1.801,208,3.416,235,1.103,249,3.492,299,3.164,330,1.954,333,2.099,334,1.972,426,3.719,432,4.706,440,3.164,550,2.407,735,3.164,870,3.416,1041,4.098,1081,4.677,1199,3.503,1200,6.097,1201,4.089,1202,5.375,1203,4.089,1204,6.379,1205,5.375,1206,4.089,1207,5.375,1208,4.089,1209,5.375,1210,5.375,1211,5.375,1212,5.375,1213,5.375,1214,6.802,1215,5.375,1216,5.375,1217,4.089,1218,4.089,1219,4.089,1220,4.089]],["title/components/PageNotFoundComponent.html",[0,0.224,93,0.964]],["body/components/PageNotFoundComponent.html",[0,0.396,1,1.312,2,2.021,3,0.229,4,0.2,5,1.701,6,1.701,7,1.701,8,1.701,9,0.2,13,0.814,14,3.009,15,2.297,16,1.613,17,1.909,18,1.813,19,1.562,21,1.562,32,0.02,33,0.855,39,0.259,40,0.229,42,0.229,43,0.144,68,1.067,69,2.131,70,1.918,71,1.701,72,2.439,73,1.701,74,1.701,75,1.312,76,1.644,77,1.701,78,1.312,79,2.131,80,1.381,81,1.701,82,1.067,83,1.124,84,1.701,85,1.246,86,1.701,87,1.312,88,1.613,89,1.312,90,1.701,91,1.312,92,1.701,93,1.787,94,1.701,95,1.312,96,1.701,97,1.312,98,1.701,99,1.312,100,1.701,101,1.312,102,1.701,103,1.312,104,1.701,105,1.454,106,1.701,107,1.701,108,0.016,109,0.016,520,2.973,575,4.479,1081,3.724,1221,4.008,1222,4.008,1223,6.4,1224,5.86,1225,4.678,1226,4.678]],["title/modules/PagesModule.html",[339,0.743,1227,2.504]],["body/modules/PagesModule.html",[1,2,3,0.241,4,0.21,9,0.21,11,3.395,32,0.02,39,0.404,40,0.241,42,0.241,43,0.151,50,1.119,68,1.119,87,2,91,1.376,93,1.9,108,0.016,109,0.016,339,1.007,341,1.525,342,2.103,343,3.153,344,2.228,345,2.366,346,1.692,351,3.057,352,2.911,353,2.366,355,2.195,356,2.195,360,3.395,361,2.888,362,2.691,363,3.311,364,2.519,520,3.118,521,3.741,531,4.204,1058,3.395,1227,5.203,1228,4.204,1229,4.204,1230,4.204,1231,4.532,1232,4.907,1233,4.204,1234,4.204,1235,4.204,1236,4.907,1237,4.204]],["title/modules/PagesRoutingModule.html",[339,0.743,1231,2.3]],["body/modules/PagesRoutingModule.html",[0,0.391,1,1.771,3,0.259,4,0.226,9,0.226,11,3.654,32,0.02,39,0.402,40,0.259,42,0.259,43,0.162,87,1.771,88,1.822,93,1.408,108,0.017,109,0.017,231,1.337,236,1.27,317,2.712,341,1.642,346,1.822,355,1.921,356,2.295,360,3.654,453,3.11,454,3.716,455,3.256,456,3.357,457,3.241,459,3.357,520,3.357,521,4.027,1058,3.654,1231,4.012,1233,4.525,1234,4.525,1235,4.525,1237,4.525,1238,5.282,1239,5.282]],["title/components/ProfileComponent.html",[0,0.224,95,1.015]],["body/components/ProfileComponent.html",[0,0.265,1,0.629,2,1.204,3,0.171,4,0.096,5,0.816,6,0.816,7,0.816,8,0.816,9,0.096,13,0.607,15,1.909,16,0.774,17,1.731,18,1.644,19,0.93,21,0.93,23,0.369,24,0.839,25,1.501,26,0.642,28,1.957,29,1.48,31,0.512,32,0.021,33,0.625,34,0.844,35,0.977,37,1.092,38,1.257,39,0.348,40,0.11,41,0.861,42,0.11,43,0.069,44,1.227,50,0.977,57,3.07,62,1.152,65,1.152,66,1.321,67,1.321,68,0.512,69,1.269,70,1.142,71,0.816,72,1.756,73,0.816,74,0.816,75,0.629,76,1.554,77,0.816,78,0.629,79,1.269,80,0.663,81,0.816,82,0.512,83,0.539,84,0.816,85,0.598,86,0.816,87,0.629,88,0.774,89,0.629,90,0.816,91,0.629,92,0.816,93,0.598,94,0.816,95,1.355,96,0.816,97,0.629,98,0.816,99,0.629,100,0.816,101,0.629,102,0.816,103,0.629,104,1.902,105,2.109,106,0.816,107,0.816,108,0.009,109,0.009,122,0.839,126,2.319,136,1.477,137,1.666,138,2.055,139,1.957,140,1.593,141,1.853,142,1.666,144,2.054,145,1.501,148,1.204,161,1.085,162,1.269,163,1.496,164,1.509,165,1.204,167,1.513,168,1.467,169,1.581,173,2.054,201,1.554,204,1.339,205,2.745,213,2.408,228,0.774,231,0.883,232,0.663,233,0.735,234,0.861,235,1.227,236,1.6,268,1.019,270,2.523,292,1.552,293,2.065,294,1.914,295,1.082,310,1.231,322,2.193,324,2.649,325,1.683,331,0.774,336,4.223,382,1.426,392,3.261,417,1.426,418,2.054,434,1.552,435,1.711,439,1.426,440,1.321,474,1.426,559,4.138,578,3.902,589,2.99,590,2.583,591,4.515,633,2.374,659,1.339,782,3.368,783,3.615,834,2.721,835,3.62,888,2.649,1038,1.552,1093,1.552,1104,1.922,1106,2.218,1108,1.914,1109,1.922,1110,1.552,1150,3.264,1240,1.922,1241,3.49,1242,3.49,1243,3.668,1244,2.99,1245,4.282,1246,4.482,1247,3.682,1248,4.83,1249,4.83,1250,3.682,1251,3.682,1252,4.83,1253,4.83,1254,4.83,1255,4.83,1256,3.49,1257,3.49,1258,2.99,1259,2.244,1260,2.244,1261,2.244,1262,4.138,1263,2.244,1264,2.244,1265,2.244,1266,2.244,1267,2.244,1268,2.244,1269,2.99,1270,2.244,1271,2.244,1272,2.244,1273,5.232,1274,2.244,1275,2.244,1276,2.244,1277,2.244,1278,2.244,1279,4.282,1280,2.244,1281,2.244,1282,1.922,1283,2.244,1284,3.49,1285,2.244,1286,1.922,1287,2.244,1288,2.244,1289,2.244,1290,2.244,1291,2.244,1292,2.244,1293,4.482,1294,5.232,1295,5.232,1296,1.922,1297,2.244,1298,1.922,1299,2.244,1300,4.282,1301,2.244,1302,2.244,1303,2.244,1304,2.244,1305,2.244,1306,2.244,1307,2.244,1308,2.244,1309,1.922,1310,2.244,1311,2.244,1312,1.922,1313,2.244,1314,2.244,1315,2.244,1316,2.244,1317,2.99,1318,2.99,1319,3.49,1320,2.244,1321,2.244,1322,2.244]],["title/modules/ProfileModule.html",[339,0.743,1323,2.504]],["body/modules/ProfileModule.html",[3,0.244,4,0.213,9,0.213,32,0.02,39,0.401,40,0.244,42,0.244,43,0.153,50,1.135,68,1.135,95,2.007,101,2.007,103,2.007,105,1.546,108,0.016,109,0.016,339,1.021,341,1.546,342,2.132,343,3.172,344,2.258,345,2.398,346,1.715,351,3.067,352,2.935,353,2.398,355,2.213,356,2.213,361,2.927,362,2.728,363,3.339,364,2.553,1323,5.211,1324,4.26,1325,4.26,1326,4.26,1327,4.547,1328,4.973,1329,4.26,1330,4.26,1331,4.26,1332,3.44,1333,4.26]],["title/modules/ProfileRoutingModule.html",[339,0.743,1327,2.3]],["body/modules/ProfileRoutingModule.html",[0,0.418,3,0.258,4,0.225,9,0.225,32,0.02,39,0.402,40,0.258,42,0.258,43,0.162,95,1.767,101,1.767,103,1.767,105,1.637,108,0.017,109,0.017,231,1.333,236,1.266,317,2.703,341,1.637,346,1.816,355,1.915,356,2.291,453,3.1,454,3.709,455,3.251,456,3.346,457,3.462,459,3.346,606,4.511,1327,4.004,1329,4.511,1330,4.511,1331,4.511,1332,3.643,1333,4.511,1334,5.266,1335,5.266]],["title/components/RedirectComponent.html",[0,0.224,97,1.015]],["body/components/RedirectComponent.html",[0,0.384,1,1.229,2,1.939,3,0.215,4,0.188,5,1.593,6,1.593,7,1.593,8,1.593,9,0.188,15,1.362,16,1.511,17,1.897,18,1.801,19,1.498,21,1.498,23,0.72,24,1.351,25,2.036,26,1.035,29,1.217,31,1,32,0.02,33,0.906,34,0.639,35,1,37,0.762,38,1.053,39,0.375,40,0.215,42,0.215,43,0.135,44,1.154,68,1,69,2.044,70,1.84,71,1.593,72,2.381,73,1.593,74,1.593,75,1.229,76,1.577,77,1.593,78,1.229,79,2.044,80,1.294,81,1.593,82,1,83,1.053,84,1.593,85,1.167,86,1.593,87,1.229,88,1.511,89,1.229,90,1.593,91,1.229,92,1.593,93,1.167,94,1.593,95,1.229,96,1.593,97,1.837,98,1.593,99,1.229,100,1.593,101,1.229,102,1.593,103,1.229,104,1.593,105,1.362,106,1.593,107,1.593,108,0.015,109,0.015,138,1.434,140,1.878,167,1.109,231,1.109,233,1.434,321,2.579,322,2.974,324,3.084,331,1.511,557,3.753,1093,3.031,1094,3.34,1336,3.753,1337,4.816,1338,6.208,1339,5.622,1340,4.381,1341,4.381,1342,4.381,1343,4.381,1344,4.381,1345,4.381,1346,4.381]],["title/guards/RedirectGuard.html",[316,2.131,1347,2.759]],["body/guards/RedirectGuard.html",[3,0.225,4,0.197,9,0.197,13,0.799,23,0.755,24,1.392,26,1.066,29,1.254,31,1.048,32,0.021,33,0.67,34,0.67,35,1.048,37,1.16,39,0.381,40,0.225,42,0.225,43,0.141,44,1.302,108,0.015,109,0.015,118,1.762,138,2.332,140,1.92,148,1.998,164,1.602,167,1.606,168,1.625,169,1.897,185,2.107,207,3.411,231,1.163,235,1.189,252,1.78,318,3.178,320,4.854,321,2.704,322,3.026,324,3.481,325,2.794,328,2.882,329,5.238,330,2.107,331,1.584,332,3.502,333,2.358,334,2.215,392,3.411,608,2.52,613,3.935,1094,3.502,1337,4.964,1347,4.417,1348,3.935,1349,4.594,1350,4.594,1351,5.794,1352,5.794,1353,5.794,1354,4.594,1355,4.594,1356,4.594,1357,4.594,1358,4.594]],["title/components/RegisterComponent.html",[0,0.224,99,1.015]],["body/components/RegisterComponent.html",[0,0.296,1,0.751,2,1.377,3,0.131,4,0.115,5,0.974,6,0.974,7,0.974,8,0.974,9,0.115,13,0.695,14,2.05,15,0.832,16,0.923,17,1.783,18,1.693,19,1.064,21,1.064,23,0.44,24,0.959,25,1.645,26,0.735,29,1.462,31,0.611,32,0.021,33,0.697,34,0.391,35,0.611,37,0.985,38,1.147,39,0.341,40,0.131,42,0.131,43,0.082,44,1.161,61,1.711,68,0.611,69,1.452,70,1.307,71,0.974,72,1.924,73,0.974,74,0.974,75,0.751,76,1.12,77,0.974,78,0.751,79,1.452,80,0.791,81,0.974,82,0.611,83,0.644,84,0.974,85,0.713,86,0.974,87,0.751,88,0.923,89,0.751,90,0.974,91,0.751,92,0.974,93,0.713,94,0.974,95,0.751,96,0.974,97,0.751,98,0.974,99,1.484,100,0.974,101,0.751,102,0.974,103,0.751,104,0.974,105,0.832,106,0.974,107,0.974,108,0.011,109,0.011,118,1.532,119,2.451,122,0.959,126,1.377,128,3.363,129,2.537,136,1.825,137,1.825,139,2.068,140,1.684,141,2.03,142,1.825,145,1.241,148,1.377,158,1.933,161,1.241,162,1.452,164,1.519,165,1.377,167,1.502,168,1.587,169,1.307,173,2.35,175,1.291,184,1.925,189,0.923,190,0.923,191,2.302,192,3.218,193,3.258,194,3.42,202,1.148,213,2.592,214,3.469,228,0.923,229,2.302,230,1.148,232,0.791,233,0.876,234,1.027,235,1.161,236,0.959,249,1.375,252,1.772,258,1.852,259,2.81,260,2.041,281,1.469,282,1.469,283,1.469,286,1.702,290,2.537,321,1.576,322,2.403,324,2.618,325,1.925,394,1.813,418,1.576,549,3.043,568,2.05,569,2.762,570,3.302,573,3.915,574,3.043,578,4.016,587,4.725,590,0.974,782,3.543,783,3.802,875,1.702,878,2.762,888,2.19,919,3.66,1067,4.033,1080,3.043,1081,2.537,1083,2.041,1084,3.42,1087,3.42,1089,2.294,1091,2.041,1093,1.852,1098,2.041,1106,1.702,1108,1.469,1110,1.852,1247,2.041,1250,2.041,1251,2.041,1258,3.42,1262,5.084,1359,2.294,1360,4.773,1361,3.992,1362,5.659,1363,4.533,1364,4.773,1365,5.267,1366,2.678,1367,2.678,1368,2.678,1369,3.42,1370,3.42,1371,4.089,1372,2.678,1373,2.678,1374,2.678,1375,3.42,1376,3.42,1377,3.992,1378,3.992,1379,3.42,1380,3.42,1381,2.678,1382,2.678,1383,2.678,1384,2.678,1385,2.294,1386,2.678,1387,3.992,1388,2.678,1389,2.678,1390,3.42,1391,3.42,1392,2.678,1393,2.678,1394,2.678,1395,2.678,1396,2.678,1397,2.678,1398,2.678,1399,2.678,1400,2.294,1401,2.294,1402,2.294,1403,2.294,1404,2.294,1405,2.294,1406,2.294,1407,2.294,1408,2.678,1409,2.678,1410,2.678,1411,3.992,1412,3.42]],["title/modules/SharedModule.html",[339,0.743,351,1.551]],["body/modules/SharedModule.html",[3,0.174,4,0.152,9,0.152,32,0.021,39,0.422,40,0.174,42,0.174,43,0.109,50,0.809,68,0.809,91,1.998,97,1.83,108,0.013,109,0.013,168,0.995,230,1.52,339,0.728,341,1.102,342,1.52,343,2.694,344,1.61,345,1.71,346,1.927,351,3.053,352,2.355,353,1.71,355,1.289,356,1.776,363,3.064,364,1.821,372,1.61,704,2.679,980,2.703,1413,3.038,1414,3.038,1415,3.038,1416,4.527,1417,3.546,1418,5.586,1419,5.586,1420,5.586,1421,3.546,1422,5.586,1423,3.546,1424,5.586,1425,3.546,1426,3.546,1427,5.586,1428,4.884,1429,5.586,1430,4.884,1431,5.586,1432,3.546,1433,5.586,1434,3.546,1435,5.586,1436,3.546,1437,5.586,1438,5.586,1439,3.546,1440,5.586,1441,3.546,1442,5.586,1443,3.546,1444,5.586,1445,3.546,1446,5.586,1447,3.546,1448,5.586,1449,3.546,1450,5.586,1451,3.546,1452,5.586,1453,3.546,1454,5.586,1455,3.546,1456,5.586,1457,3.546,1458,5.586,1459,3.546,1460,5.586,1461,3.546,1462,5.586,1463,4.884,1464,5.586,1465,5.586,1466,3.546,1467,5.586,1468,3.546,1469,5.586,1470,3.546,1471,5.586,1472,3.546,1473,5.586,1474,3.546,1475,5.586,1476,3.546,1477,5.586,1478,3.546,1479,5.586,1480,3.546,1481,5.586,1482,3.546,1483,5.586,1484,3.546,1485,5.586,1486,3.546,1487,5.586,1488,3.546,1489,5.586,1490,3.546,1491,5.586,1492,2.703,1493,2.703,1494,3.546,1495,3.546,1496,3.546,1497,3.546]],["title/components/StatsComponent.html",[0,0.224,101,1.015]],["body/components/StatsComponent.html",[0,0.259,1,0.606,2,1.169,3,0.106,4,0.093,5,0.786,6,0.786,7,0.786,8,0.786,9,0.093,13,0.824,15,0.672,16,0.746,17,1.719,18,1.633,19,0.903,21,0.903,23,0.355,24,0.815,25,1.471,26,0.624,28,1.933,29,1.393,31,0.954,32,0.021,33,0.886,34,0.906,35,0.954,37,1.027,38,1.005,39,0.262,40,0.106,41,0.829,42,0.106,43,0.066,44,1.299,45,0.876,57,2.154,62,2.8,68,0.954,69,1.232,70,1.11,71,0.786,72,1.721,73,0.786,74,0.786,75,0.606,76,0.951,77,0.786,78,0.606,79,1.232,80,0.638,81,0.786,82,0.493,83,0.52,84,0.786,85,0.576,86,0.786,87,0.606,88,0.746,89,0.606,90,0.786,91,0.606,92,0.786,93,0.576,94,0.786,95,0.606,96,0.786,97,0.606,98,0.786,99,0.606,100,0.786,101,1.328,102,0.786,103,0.606,104,0.786,105,0.672,106,0.786,107,0.786,108,0.009,109,0.009,114,2.293,118,1.3,119,2.147,122,0.815,126,2.094,133,2.82,136,1.442,137,1.632,144,1.995,145,1.931,152,1.374,158,0.606,161,1.054,162,1.232,164,0.815,165,1.169,167,0.858,185,1.983,189,2.094,190,2.094,201,1.494,204,1.816,205,1.816,228,0.746,232,1.398,235,0.971,236,1.684,252,1.173,259,1.273,266,0.927,270,2.63,293,2.283,294,3.407,295,2.016,296,1.273,297,2.345,299,1.995,301,2.283,309,1.995,310,2.596,315,2.345,327,1.74,369,1.635,382,1.374,400,1.496,425,2.154,426,1.496,427,2.892,428,3.773,429,3.557,439,3.008,440,3.211,590,1.983,591,3.008,633,1.792,659,2.383,673,2.147,687,1.694,691,2.477,704,3.128,725,2.63,759,1.74,762,1.11,763,1.11,778,2.904,790,1.648,798,1.496,807,1.648,808,1.648,813,2.657,826,3.608,834,3.752,845,1.648,848,1.648,849,1.648,850,1.648,851,1.648,854,2.584,855,1.648,870,1.374,875,2.154,915,1.496,990,2.154,1035,1.852,1038,2.345,1047,2.345,1049,3.187,1056,1.648,1108,2.293,1152,3.582,1155,4.673,1160,1.852,1193,4.404,1269,2.904,1318,4.055,1369,2.904,1492,1.648,1493,4.973,1498,1.852,1499,4.181,1500,3.39,1501,4.181,1502,4.181,1503,4.181,1504,4.181,1505,4.181,1506,4.733,1507,3.39,1508,3.39,1509,4.733,1510,3.39,1511,4.181,1512,3.39,1513,2.162,1514,3.39,1515,4.181,1516,4.181,1517,4.181,1518,2.162,1519,3.39,1520,2.162,1521,6.603,1522,3.39,1523,2.162,1524,5.702,1525,2.162,1526,2.162,1527,3.39,1528,5.141,1529,2.162,1530,2.162,1531,4.673,1532,4.181,1533,3.39,1534,2.162,1535,2.162,1536,2.162,1537,3.39,1538,2.162,1539,2.162,1540,2.162,1541,2.162,1542,3.39,1543,3.39,1544,2.162,1545,3.39,1546,3.39,1547,2.162,1548,3.39,1549,3.39,1550,2.162,1551,2.162,1552,2.162,1553,2.162,1554,2.162,1555,2.162,1556,2.162,1557,2.162,1558,2.162,1559,2.162,1560,2.162,1561,2.162,1562,2.162,1563,2.162,1564,2.162,1565,2.162,1566,2.162,1567,3.39,1568,2.162,1569,2.162,1570,2.162,1571,2.162,1572,2.162,1573,3.39,1574,2.162,1575,2.162,1576,3.39,1577,2.162,1578,2.162,1579,2.162,1580,2.162,1581,1.852,1582,2.162,1583,2.162,1584,2.162,1585,1.852,1586,3.39,1587,2.162,1588,2.162,1589,3.39,1590,3.39,1591,2.162,1592,3.39,1593,2.162,1594,2.162,1595,3.39,1596,2.162,1597,4.055,1598,4.733,1599,3.39,1600,3.39,1601,4.181,1602,2.162,1603,2.162,1604,2.162,1605,2.904,1606,2.162,1607,2.162]],["title/modules/TrackingModule.html",[339,0.743,1608,2.504]],["body/modules/TrackingModule.html",[3,0.249,4,0.217,9,0.217,32,0.02,39,0.398,40,0.249,42,0.249,43,0.156,50,1.157,68,1.157,82,1.64,85,1.915,108,0.016,109,0.016,339,1.041,341,1.577,342,2.174,343,3.199,344,2.303,345,2.446,346,1.749,351,3.081,352,2.97,353,2.446,355,2.24,356,2.24,361,2.986,362,2.782,363,3.379,364,2.604,536,2.446,657,2.604,1608,5.189,1609,4.345,1610,4.345,1611,4.345,1612,4.568,1613,5.072,1614,4.345,1615,4.345,1616,4.345]],["title/modules/TrackingRoutingModule.html",[339,0.743,1612,2.3]],["body/modules/TrackingRoutingModule.html",[0,0.394,3,0.263,4,0.229,9,0.229,32,0.02,39,0.398,40,0.263,42,0.263,43,0.165,82,1.453,85,1.697,108,0.017,109,0.017,231,1.356,236,1.288,317,2.752,341,1.666,346,1.848,355,1.949,356,2.315,453,3.155,454,3.748,455,3.276,456,3.406,457,3.269,459,3.406,657,2.752,785,3.708,1612,4.047,1614,4.591,1615,4.591,1616,4.591,1617,5.359,1618,5.359]],["title/pipes/TrimDecimalsPipe.html",[618,1.551,1416,2.3]],["body/pipes/TrimDecimalsPipe.html",[3,0.236,4,0.206,9,0.206,13,1.039,16,1.663,24,1.159,29,1.044,31,1.1,32,0.02,33,0.947,34,0.704,35,1.1,37,1.039,39,0.267,40,0.236,42,0.236,43,0.148,108,0.016,109,0.016,118,1.85,145,1.856,189,1.663,190,2.545,201,1.716,235,1.226,236,1.159,252,1.675,293,2.879,302,2.066,404,4.13,428,3.335,618,2.906,659,2.724,667,3.066,671,3.066,687,1.954,773,2.475,1157,4.13,1416,3.795,1619,4.821,1620,5.116,1621,4.13,1622,5.971,1623,5.971,1624,5.971,1625,5.971,1626,6.969,1627,4.821,1628,5.971,1629,6.78,1630,6.78,1631,6.78,1632,5.971,1633,5.971,1634,5.971,1635,4.821,1636,4.821,1637,4.821,1638,4.821,1639,4.821]],["title/components/UpdateProfileComponent.html",[0,0.224,103,1.015]],["body/components/UpdateProfileComponent.html",[0,0.253,1,0.585,2,1.136,3,0.102,4,0.089,5,0.758,6,0.758,7,0.758,8,0.758,9,0.089,13,0.573,14,1.07,15,0.648,16,0.719,17,1.707,18,1.621,19,0.878,21,0.878,23,0.343,24,0.792,25,1.442,26,0.606,28,1.908,29,1.472,31,0.476,32,0.021,33,0.596,34,0.737,35,0.476,37,1.091,38,0.981,39,0.333,40,0.102,41,0.8,42,0.102,43,0.064,44,1.154,45,0.845,52,1.325,61,1.75,62,1.07,65,1.07,68,0.476,69,1.198,70,1.078,71,0.758,72,1.687,73,0.758,74,0.758,75,0.585,76,0.924,77,0.758,78,0.585,79,1.198,80,0.615,81,0.758,82,0.476,83,0.501,84,0.758,85,0.555,86,0.758,87,0.585,88,0.719,89,0.585,90,0.758,91,0.585,92,0.758,93,0.555,94,0.758,95,0.585,96,0.758,97,0.585,98,0.758,99,0.585,100,0.758,101,0.585,102,0.758,103,1.301,104,2.505,105,2.113,106,0.758,107,0.758,108,0.009,109,0.009,117,2.811,118,1.264,119,2.096,122,0.792,126,2.07,128,2.595,129,2.093,136,1.6,137,1.6,138,1.964,139,1.908,140,1.553,141,1.78,142,1.6,145,1.865,148,1.136,158,1.788,161,1.442,162,1.198,163,1.412,164,1.401,165,1.136,166,1.335,167,1.475,168,1.417,169,1.078,173,1.939,175,1.005,176,1.786,184,1.588,189,0.719,190,1.136,191,1.969,192,2.894,193,2.237,200,1.691,201,1.359,202,0.893,205,1.566,209,2.822,213,2.446,214,3.321,228,0.719,229,1.969,230,0.893,231,0.528,232,0.615,233,0.682,234,0.8,235,1.154,236,1.507,249,2.096,252,1.683,259,1.939,268,0.947,269,1.325,270,1.969,276,3.498,280,1.325,281,1.807,282,1.807,283,1.807,284,1.325,286,1.325,287,1.07,290,2.093,292,1.442,293,1.005,294,1.807,295,1.005,296,1.227,297,1.442,298,1.589,299,1.227,300,1.442,301,1.005,302,0.893,303,1.786,304,2.093,305,1.589,306,1.442,307,1.07,308,1.325,309,1.227,310,1.143,311,1.325,312,1.442,313,1.786,314,1.442,315,1.442,325,1.588,418,1.227,419,1.786,464,1.325,552,2.822,563,3.209,565,1.939,568,1.691,574,3.536,578,2.595,587,4.582,590,2.52,591,3.21,602,1.442,659,1.264,687,0.845,707,1.939,782,3.371,783,3.617,873,1.589,875,2.093,878,2.825,888,1.807,990,2.595,1080,1.589,1081,1.325,1083,2.511,1091,1.589,1098,1.589,1106,1.325,1108,1.143,1110,2.825,1111,1.786,1150,4.094,1151,1.786,1243,3.498,1244,2.822,1247,1.589,1250,3.113,1251,1.589,1286,1.786,1293,3.498,1317,2.822,1332,4.737,1363,3.974,1365,4.818,1370,3.974,1371,3.498,1375,3.974,1376,2.822,1379,2.822,1380,2.822,1385,1.786,1390,2.822,1391,2.822,1400,1.786,1401,1.786,1402,1.786,1403,1.786,1404,1.786,1405,1.786,1406,1.786,1407,1.786,1412,3.498,1640,5.866,1641,1.786,1642,4.083,1643,4.083,1644,4.083,1645,4.083,1646,4.083,1647,4.083,1648,4.639,1649,4.639,1650,4.601,1651,4.639,1652,2.084,1653,3.294,1654,2.084,1655,4.083,1656,2.084,1657,2.084,1658,2.084,1659,2.084,1660,2.084,1661,2.084,1662,2.084,1663,2.084,1664,2.084,1665,2.084,1666,2.084,1667,2.084,1668,2.084,1669,2.084,1670,3.294,1671,2.084,1672,2.084,1673,2.084,1674,2.084,1675,2.084,1676,2.084,1677,2.084,1678,2.084,1679,2.084,1680,2.084,1681,2.084,1682,2.084,1683,5.052,1684,2.084,1685,2.084,1686,3.294,1687,4.083,1688,4.083,1689,2.084,1690,2.084,1691,2.084,1692,4.083,1693,2.084,1694,2.084,1695,2.084,1696,2.084,1697,2.084,1698,3.294,1699,2.084,1700,2.084,1701,2.084,1702,2.084,1703,3.294]],["title/interfaces/UserData.html",[367,1.248,781,2.504]],["body/interfaces/UserData.html",[0,0.172,3,0.083,4,0.072,9,0.072,13,0.294,14,0.869,15,1.102,17,0.428,18,0.407,19,0.451,21,0.451,23,0.278,25,0.526,26,0.311,28,1.345,32,0.021,33,0.406,34,0.517,37,0.484,38,0.669,39,0.299,40,0.083,41,0.649,42,0.083,43,0.052,44,1.002,45,1.437,48,0.996,50,0.937,57,2.253,70,0.554,83,1.568,85,0.451,108,0.007,109,0.007,115,1.264,118,0.649,119,1.429,122,0.669,126,1.417,136,0.96,137,0.96,138,0.911,139,1.345,140,1.095,141,1.068,142,0.96,144,1.638,145,1.832,148,0.583,152,0.685,158,1.613,161,0.865,162,0.615,163,0.725,164,1.091,165,0.583,166,0.685,167,1.04,168,0.994,169,0.911,177,1.075,181,0.869,182,1.17,184,1.71,185,1.494,201,1.414,202,2.465,204,1.742,207,1.638,208,1.769,214,0.869,217,2.331,220,2.109,228,0.583,232,0.499,233,0.554,234,0.649,235,1.18,236,1.712,238,0.869,249,1.429,252,1.152,266,2.093,269,1.075,270,2.694,271,0.725,275,1.17,280,1.075,281,0.928,282,0.928,283,0.928,284,1.075,295,1.342,301,1.342,302,2.526,327,2.331,367,1.566,369,2.6,372,0.768,374,1.29,392,0.996,394,2.062,396,2.703,400,1.17,410,1.29,416,2.122,420,1.29,424,2.902,425,1.769,474,2.886,524,1.29,536,0.816,575,1.075,585,0.816,590,1.651,599,1.82,622,1.17,631,2.062,633,2.998,634,0.869,646,1.29,655,0.928,659,2.206,660,1.527,661,1.429,662,2.679,663,0.869,664,0.928,665,2.253,667,1.82,668,3.241,670,1.945,671,1.429,673,2.331,676,1.527,679,0.928,682,1.527,683,0.928,684,1.945,685,1.527,686,3.026,687,2.834,688,1.527,689,2.65,690,1.527,691,2.612,692,1.945,693,1.527,706,0.928,708,2.679,709,0.928,725,1.342,759,2.109,760,1.527,761,1.527,762,2.109,763,2.109,764,1.527,772,0.928,773,0.869,777,1.29,779,2.384,780,1.449,781,3.141,782,2.679,783,2.875,784,1.449,785,1.17,786,1.449,787,1.449,788,1.449,789,3.519,790,2.122,791,3.037,792,2.384,793,1.449,794,1.449,795,1.449,796,2.384,797,3.037,798,1.925,799,1.449,800,1.449,801,3.037,802,1.449,803,1.17,804,1.29,805,2.703,806,1.449,807,3.935,808,2.122,809,3.037,810,1.449,811,1.449,812,1.449,813,1.075,814,4.619,815,3.037,816,1.449,817,1.449,818,1.29,819,2.384,820,1.449,821,2.384,822,1.449,823,3.037,824,1.449,825,2.384,826,1.29,827,1.449,828,2.384,829,1.449,830,2.384,831,1.29,832,1.449,833,1.449,834,2.886,835,1.925,836,1.449,837,1.29,838,1.449,839,3.037,840,1.449,841,1.449,842,1.449,843,1.449,844,3.037,845,2.122,846,1.449,847,3.037,848,2.122,849,2.122,850,3.132,851,2.122,852,2.384,853,2.384,854,1.29,855,1.29,856,1.449,857,1.449,858,1.449,859,1.449,860,1.449,861,1.449,862,1.449,863,1.449,864,1.449,865,1.449,866,1.449,867,1.449,868,2.384,869,1.449,870,1.075,871,1.449,872,1.449,873,1.29,874,1.29,875,1.075,876,1.449,877,3.037,878,1.17,879,1.449,880,1.449,881,3.89,882,1.449,883,3.037,884,2.384,885,1.449,886,1.449,887,1.449,888,0.928,889,1.449,890,1.449,891,1.449,892,3.037,893,1.449,894,1.449,895,2.384,896,1.449,897,3.037,898,1.449,899,1.449,900,1.449,901,1.449,902,1.449,903,1.29,904,1.449,905,1.449,906,1.449,907,1.449,908,2.384,909,4.785,910,4.422,911,2.384,912,1.449,913,3.037,914,1.449,915,1.925,916,1.449,917,1.449,918,3.037,919,2.453,920,3.519,921,2.384,922,3.037,923,2.384,924,4.619,925,3.037,926,1.449,927,2.384,928,2.384,929,1.449,930,2.384,931,1.449,932,1.449,933,1.449,934,4.619,935,4.619,936,1.449,937,3.519,938,1.449,939,2.384,940,1.449,941,2.384,942,2.384,943,1.449,944,1.449,945,1.449,946,2.384,947,1.449,948,1.449,949,1.449,950,1.449,951,1.449,952,1.449,953,1.449,954,2.384,955,1.449,956,1.449,957,1.449,958,1.449,959,1.17,960,1.449,961,3.037,962,1.449,963,1.449,964,1.449,965,1.449,966,1.449,967,1.449,968,1.449,969,1.449,970,1.449,971,1.449,972,1.29,973,1.449,974,2.384,975,1.449,976,1.449,977,1.449,978,1.449,979,1.449,980,1.29,981,2.384,982,2.384,983,1.449,984,1.449,985,1.449,986,1.449,987,1.449,988,1.449,989,1.449,990,1.769,991,2.384,992,1.449,993,1.449,994,1.449,995,1.449,996,3.037,997,2.384,998,1.449,999,1.449,1000,1.449,1001,1.449,1002,1.449,1003,1.449,1004,1.449,1005,1.449]],["title/guards/UserGuard.html",[316,2.131,1704,2.759]],["body/guards/UserGuard.html",[3,0.236,4,0.206,9,0.206,13,1.037,23,0.79,24,1.433,26,0.885,29,1.29,31,1.097,32,0.021,33,0.702,34,0.702,35,1.097,37,1.179,39,0.375,40,0.236,42,0.236,43,0.148,108,0.016,109,0.016,118,1.844,138,1.574,164,1.433,167,1.867,185,2.167,205,1.844,207,3.509,231,1.217,235,1.33,238,3.06,252,1.348,316,3.509,318,3.326,320,4.909,321,2.83,322,3.076,324,3.554,325,2.874,327,3.575,328,2.942,329,4.939,330,2.167,331,1.658,332,3.665,333,2.468,334,2.318,335,3.326,336,4.544,337,4.118,1704,4.544,1705,4.118,1706,4.807,1707,4.807,1708,4.807]],["title/classes/UserModule.html",[43,0.111,1709,2.504]],["body/classes/UserModule.html",[3,0.237,4,0.207,9,0.207,13,0.843,23,0.796,26,0.891,29,1.588,31,1.105,32,0.02,33,0.707,34,1.071,35,1.105,42,0.237,43,0.149,108,0.016,109,0.016,122,1.439,145,1.505,167,1.515,201,1.887,204,2.494,339,0.994,573,4.497,578,4.131,633,2.566,659,2.297,782,3.565,783,3.826,1246,5.569,1296,4.148,1298,4.148,1309,4.148,1312,4.148,1650,5.569,1709,4.827,1710,4.842,1711,4.148,1712,6.5,1713,5.988,1714,5.988,1715,4.842,1716,4.842,1717,4.842,1718,4.842,1719,4.842,1720,4.842,1721,4.842,1722,4.842,1723,4.842,1724,4.842,1725,4.842,1726,4.148,1727,4.842,1728,4.842,1729,4.842,1730,4.842,1731,4.842,1732,4.842,1733,4.842]],["title/injectables/UserService.html",[28,1.185,330,1.316]],["body/injectables/UserService.html",[3,0.172,4,0.15,9,0.15,13,0.845,23,0.578,24,1.167,26,0.894,28,1.589,29,1.493,31,0.802,32,0.021,33,0.513,34,0.919,35,0.802,37,1.215,39,0.361,40,0.172,42,0.172,43,0.108,44,0.996,108,0.013,109,0.013,122,1.167,126,2.453,136,1.918,137,2.068,138,2.286,145,1.509,158,0.986,161,1.956,162,1.765,163,2.081,164,1.167,167,1.746,184,1.695,185,1.765,201,1.688,204,2.497,205,2.647,213,1.863,228,1.213,231,0.89,235,1.141,236,1.634,252,1.682,269,2.235,270,3.138,271,1.507,280,2.235,325,2.682,327,2.493,330,1.765,331,1.213,333,1.805,334,1.695,339,0.996,382,2.235,528,4.136,550,2.07,563,4.354,565,3.274,569,4.502,570,4.502,585,2.341,590,2.539,591,4.385,602,2.432,607,3.012,622,2.432,623,3.012,626,3.012,834,3.534,835,3.359,837,2.68,959,3.359,990,3.086,1116,3.012,1282,5.575,1585,4.16,1709,3.848,1726,3.012,1734,3.012,1735,4.16,1736,5.561,1737,5.561,1738,5.561,1739,5.998,1740,5.998,1741,5.998,1742,4.855,1743,3.516,1744,3.516,1745,3.516,1746,4.855,1747,3.516,1748,3.516,1749,3.516,1750,3.516,1751,3.516,1752,3.516,1753,3.516,1754,3.516,1755,3.516,1756,3.516,1757,3.516,1758,3.516,1759,3.516,1760,3.516,1761,3.516,1762,3.516,1763,3.516,1764,3.516,1765,4.855,1766,3.516,1767,4.855,1768,3.516]],["title/coverage.html",[1769,4.243]],["body/coverage.html",[0,0.46,1,1.193,9,0.182,10,3.642,11,2.941,12,3.642,28,1.392,32,0.02,34,0.621,43,0.131,75,1.193,78,1.193,80,1.255,82,0.97,83,1.022,85,1.133,87,1.193,89,1.193,91,1.193,93,1.133,95,1.193,97,1.193,99,1.193,101,1.193,103,1.193,108,0.015,109,0.015,110,4.203,111,2.941,112,3.642,139,1.392,140,1.133,158,1.193,266,1.822,301,3.315,316,3.602,317,2.183,319,3.642,322,1.931,330,2.439,359,2.941,365,4.203,367,2.371,460,3.642,501,3.241,520,2.702,551,3.642,618,1.822,631,1.931,632,3.642,656,3.95,657,3.445,658,3.95,666,2.332,669,2.332,672,2.332,687,2.48,777,4.665,781,2.941,803,2.941,1057,3.642,1058,2.941,1072,3.642,1117,3.642,1180,3.642,1199,3.642,1221,3.642,1222,3.642,1240,3.642,1332,2.941,1336,3.642,1347,3.241,1348,3.642,1359,3.642,1416,2.702,1498,3.642,1605,4.724,1620,3.642,1621,3.642,1640,3.642,1641,3.642,1704,3.241,1705,3.642,1709,2.941,1711,3.642,1734,3.642,1769,3.642,1770,4.252,1771,4.252,1772,4.252,1773,4.252,1774,4.252,1775,4.252,1776,4.252,1777,6.475,1778,5.514,1779,4.252,1780,4.252,1781,5.514,1782,6.475,1783,6.475,1784,4.252,1785,4.252,1786,5.514,1787,4.252,1788,4.252,1789,4.252,1790,4.252,1791,4.252,1792,4.252,1793,6.12,1794,4.252,1795,4.252,1796,5.514,1797,4.252,1798,4.252,1799,4.252,1800,4.252,1801,4.252,1802,4.252,1803,4.252,1804,3.642,1805,4.252,1806,5.514,1807,4.252,1808,4.252,1809,3.642,1810,4.252,1811,4.252,1812,4.252]],["title/dependencies.html",[342,1.867,1813,2.299]],["body/dependencies.html",[32,0.02,40,0.247,108,0.016,109,0.016,168,1.414,230,2.161,231,1.276,232,1.488,331,1.739,342,2.161,344,2.289,364,2.588,509,5.258,510,4.679,565,2.968,663,2.588,1200,4.319,1492,3.843,1493,3.843,1814,6.282,1815,5.041,1816,6.137,1817,5.041,1818,5.041,1819,5.041,1820,5.041,1821,5.041,1822,5.041,1823,5.041,1824,5.041,1825,5.041,1826,6.137,1827,5.041,1828,5.041,1829,5.041,1830,6.137,1831,5.041,1832,6.886,1833,5.041,1834,5.041,1835,5.041,1836,5.041,1837,5.041,1838,5.041,1839,5.041,1840,5.041,1841,5.041,1842,5.041,1843,5.041,1844,5.041,1845,5.041,1846,5.041,1847,5.041,1848,5.041,1849,5.041,1850,5.041,1851,5.041,1852,5.041,1853,5.041,1854,5.041,1855,5.041]],["title/index.html",[23,0.496,1735,2.584,1856,3.016]],["body/index.html",[0,0.41,4,0.216,15,1.567,32,0.016,33,0.736,50,1.15,53,4.319,58,3.895,108,0.016,109,0.016,115,2.289,118,1.934,158,1.414,161,2.057,298,4.679,373,3.843,804,5.044,805,3.843,818,3.843,915,3.488,972,3.843,1050,6.149,1581,4.319,1597,6.225,1813,3.843,1814,4.319,1857,5.041,1858,6.137,1859,5.041,1860,6.617,1861,4.319,1862,5.041,1863,6.137,1864,7.058,1865,5.041,1866,5.041,1867,5.041,1868,5.041,1869,5.041,1870,5.041,1871,5.041,1872,5.041,1873,5.041,1874,6.617,1875,5.041,1876,6.886,1877,5.041,1878,5.041,1879,5.041,1880,5.041,1881,6.137,1882,6.886,1883,5.041,1884,6.137,1885,6.137,1886,5.041,1887,5.041,1888,5.041,1889,6.137,1890,5.041,1891,5.041,1892,5.041,1893,5.041,1894,5.041,1895,3.843]],["title/modules.html",[341,1.54]],["body/modules.html",[32,0.017,108,0.017,109,0.017,340,3.696,341,1.661,350,3.395,351,2.29,475,3.696,480,3.395,481,3.395,503,3.395,510,5.648,543,3.395,874,5.546,1227,3.696,1231,3.395,1323,3.696,1327,3.395,1531,6.233,1608,3.696,1612,3.395,1896,7.409,1897,7.409,1898,7.589]],["title/overview.html",[1895,3.776]],["body/overview.html",[1,1.632,2,1.324,32,0.02,43,0.118,50,0.876,68,0.876,75,1.632,78,1.632,80,2.015,82,1.328,85,1.55,87,1.632,89,1.632,91,1.914,93,1.55,95,1.632,97,1.632,99,1.632,101,1.632,103,1.632,108,0.014,109,0.014,260,2.926,318,2.655,339,0.788,340,4.913,341,1.193,342,1.645,343,1.851,344,1.743,345,1.851,346,1.324,347,3.288,348,3.288,349,3.288,350,3.698,351,3.167,352,2.485,353,1.851,455,1.851,475,5.143,476,3.288,477,3.288,478,3.288,479,3.288,480,3.698,481,4.124,482,5.559,483,4.985,484,5.559,485,4.985,486,5.559,487,4.985,488,5.559,489,4.985,503,4.513,540,3.288,541,3.288,542,3.288,543,3.698,550,2.259,618,1.645,655,2.105,691,2.341,1227,4.992,1228,3.288,1229,3.288,1230,3.288,1231,3.698,1323,4.992,1324,3.288,1325,3.288,1326,3.288,1327,3.698,1413,3.288,1414,3.288,1415,3.288,1416,4.338,1608,4.913,1609,3.288,1610,3.288,1611,3.288,1612,3.698,1804,3.288,1895,2.926,1899,3.838,1900,3.838,1901,3.838,1902,3.838]],["title/properties.html",[122,1.047,1813,2.299]],["body/properties.html",[32,0.019,108,0.018,109,0.018,122,1.424,1861,5.076,1903,5.925]],["title/routes.html",[455,2.389]],["body/routes.html",[32,0.018,108,0.018,109,0.018,455,2.872]],["title/miscellaneous/variables.html",[291,2.565,1904,2.584]],["body/miscellaneous/variables.html",[18,1.347,23,0.921,32,0.02,34,0.818,48,4.074,49,4.788,108,0.017,109,0.017,189,1.933,190,1.933,291,3.299,501,4.983,565,3.299,870,3.562,1809,4.801,1904,4.801,1905,5.604,1906,5.604,1907,5.604,1908,5.604,1909,5.604,1910,5.604,1911,5.604,1912,5.604,1913,5.604,1914,5.604,1915,5.604,1916,5.604]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":687,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1903,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.1",{"_index":1054,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["0.12.0",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["0.125rem",{"_index":1051,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["0.1s",{"_index":1170,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.375rem",{"_index":1159,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.3s",{"_index":1166,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1547,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":315,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.58",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":445,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["0.5s",{"_index":1162,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.75rem",{"_index":305,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.8",{"_index":1544,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":1156,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1.11.3",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1179,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1/1",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":301,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["1000px",{"_index":799,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["10px",{"_index":796,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["11.30.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["11/12",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1804,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["15",{"_index":1899,"title":{},"body":{"overview.html":{}}}],["15.0.1",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":1814,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":1055,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":449,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["1rem",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["1s",{"_index":1171,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1570,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":1632,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["2.125rem",{"_index":1044,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2.25rem",{"_index":1069,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2.3.0",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1040,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1193,"title":{},"body":{"injectables/NavigationService.html":{},"components/StatsComponent.html":{}}}],["200ms",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["20px",{"_index":790,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["20rem",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["23/24",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1902,"title":{},"body":{"overview.html":{}}}],["2rem",{"_index":1048,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{}}}],["3",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["3.0.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1401,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["300",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["300ms",{"_index":791,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["33",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":1596,"title":{},"body":{"components/StatsComponent.html":{}}}],["368ff4",{"_index":1216,"title":{},"body":{"injectables/NotyfService.html":{}}}],["3rem",{"_index":441,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["4.0.2",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1604,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/6",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1528,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1210,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1225,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1226,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40rem",{"_index":1606,"title":{},"body":{"components/StatsComponent.html":{}}}],["4caf50",{"_index":1213,"title":{},"body":{"injectables/NotyfService.html":{}}}],["4rem",{"_index":1071,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5",{"_index":1900,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1605,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["500",{"_index":418,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["500px",{"_index":1161,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5rem",{"_index":1322,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6",{"_index":1901,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":924,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["66",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1555,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1152,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["71",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":1321,"title":{},"body":{"components/ProfileComponent.html":{}}}],["8",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["80vh",{"_index":1591,"title":{},"body":{"components/StatsComponent.html":{}}}],["88",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["8rem",{"_index":1042,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["9",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["980328026322",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["996",{"_index":1173,"title":{},"body":{"components/NavigationComponent.html":{}}}],["997",{"_index":1167,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1174,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1556,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.drinkdate.gettime",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["a.payload.doc.data",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ability",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":1239,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol",{"_index":1403,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1405,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1404,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":300,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1390,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map((a",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["active",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":115,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["adddrinkamount",{"_index":1006,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":750,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adding",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adds",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adjustchartsizes",{"_index":1506,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":458,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["adminformcomponent",{"_index":75,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":317,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":340,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpagecomponent",{"_index":78,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":350,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["advance",{"_index":943,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["afauth",{"_index":1651,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":310,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["alldrinkstoday",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.filter",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.length",{"_index":936,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["alldrinkstoday.sort",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["allows",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":314,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["already",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["always",{"_index":646,"title":{},"body":{"injectables/DateService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["amount",{"_index":667,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":663,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":364,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1421,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/badge",{"_index":1423,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/bottom",{"_index":1425,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/button",{"_index":1428,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1432,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":1434,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/chips",{"_index":1436,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1439,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/datepicker",{"_index":1441,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":1443,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1445,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":1447,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1449,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1451,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1453,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1455,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1457,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1459,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":1461,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1463,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":1466,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1468,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1470,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":1472,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/slider",{"_index":1474,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1476,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":1478,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":1480,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":1482,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":1484,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1486,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1488,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tree",{"_index":1490,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["animate",{"_index":662,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animate('200ms",{"_index":688,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animate.css",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":679,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["animations",{"_index":682,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["apikey",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":80,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1868,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":475,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":480,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximately",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1513,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1594,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1517,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["array.from",{"_index":1553,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1583,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1877,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1602,"title":{},"body":{"components/StatsComponent.html":{}}}],["assertion",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["async",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["auth/invalid",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/login",{"_index":1410,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":322,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authmodule",{"_index":503,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":543,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":427,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["automatically",{"_index":1869,"title":{},"body":{"index.html":{}}}],["available",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["await",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["b",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["b.drinkdate.gettime",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bac",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["backdrop",{"_index":1172,"title":{},"body":{"components/NavigationComponent.html":{}}}],["background",{"_index":432,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{}}}],["bar",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1545,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1501,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1542,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["before",{"_index":1192,"title":{},"body":{"injectables/NavigationService.html":{}}}],["beforenavigate",{"_index":1184,"title":{},"body":{"injectables/NavigationService.html":{}}}],["behaviorsubject",{"_index":652,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":644,"title":{},"body":{"injectables/DateService.html":{}}}],["being",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["black",{"_index":451,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["block",{"_index":1178,"title":{},"body":{"components/NavigationComponent.html":{}}}],["blood",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1070,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/DrinkData.html":{},"guards/RedirectGuard.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":434,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["bottom",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{}}}],["bound",{"_index":970,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["break",{"_index":1002,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1898,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1876,"title":{},"body":{"index.html":{}}}],["builder",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":444,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["calculate",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":951,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["can't",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["canactivate",{"_index":320,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1891,"title":{},"body":{"index.html":{}}}],["catch",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":419,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":133,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1586,"title":{},"body":{"components/StatsComponent.html":{}}}],["cdr",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":440,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["change",{"_index":805,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["characterse",{"_index":1398,"title":{},"body":{"components/RegisterComponent.html":{}}}],["charactersnumber",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["charactersweight",{"_index":1400,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1521,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":1493,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1581,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["checkemailexists",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkemailexists(email",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checking",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{}}}],["checks",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["checkusernameexists",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkusernameexists(username",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["child",{"_index":448,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["choice",{"_index":1888,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1710,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1860,"title":{},"body":{"index.html":{}}}],["click",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicked",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicking",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicks",{"_index":675,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clicling",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["close",{"_index":1030,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["closed",{"_index":1133,"title":{},"body":{"components/NavigationComponent.html":{}}}],["closing",{"_index":1134,"title":{},"body":{"components/NavigationComponent.html":{}}}],["closingsoft",{"_index":1135,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cluster_adminmodule",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":628,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":629,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_pagesmodule",{"_index":1228,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":1229,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":1230,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1324,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":1325,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1326,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1413,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1415,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1414,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackingmodule",{"_index":1609,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_declarations",{"_index":1610,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["cluster_trackingmodule_imports",{"_index":1611,"title":{},"body":{"modules/TrackingModule.html":{},"overview.html":{}}}],["code",{"_index":1872,"title":{},"body":{"index.html":{}}}],["collection",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["collection('user",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["color",{"_index":311,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":1038,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1889,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":363,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":1233,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/admin",{"_index":357,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["components/drink",{"_index":1614,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/home/home.component",{"_index":1616,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["components/landing",{"_index":1235,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/login/login.component",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/page",{"_index":1237,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":1329,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/register/register.component",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":1330,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["components/update",{"_index":1331,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["confirm('are",{"_index":413,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1670,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmed",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('user",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["console.log(boolean(drinkdata.hour",{"_index":767,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log(drinkdata.hour",{"_index":765,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log(error",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.selecteddate",{"_index":766,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["const",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":335,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/NavigationService.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1713,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":665,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":1155,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["contains",{"_index":113,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["converted",{"_index":754,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["core/core.module",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/admin.guard",{"_index":456,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["coremodule",{"_index":481,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1589,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1769,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["createuserwithemailandpassword",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":327,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentbacinternal",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentemail",{"_index":1765,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentsimtime",{"_index":935,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentsimtime.gettime",{"_index":942,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currenttime",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":931,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1701,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":1043,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["d3",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":145,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":117,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1746,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":633,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date(alldrinkstoday[0].drinkdate.gettime",{"_index":940,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(currentsimtime.gettime",{"_index":947,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(document.getelementbyid('date')!.innerhtml",{"_index":962,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(drink.drinkdate.gettime",{"_index":926,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date(selecteddateobj",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1560,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1558,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1559,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1557,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":976,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateanimationkey",{"_index":806,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateinput",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":631,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":807,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1569,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1565,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":979,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1629,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1626,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1623,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":1495,"title":{},"body":{"modules/SharedModule.html":{}}}],["decimals.pipe.ts",{"_index":1621,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1627,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["decoration",{"_index":1176,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":1526,"title":{},"body":{"components/StatsComponent.html":{}}}],["deep",{"_index":1598,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1138,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["delay(300",{"_index":1143,"title":{},"body":{"components/NavigationComponent.html":{}}}],["delete",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":416,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":989,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":420,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":342,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["design",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["desired",{"_index":1187,"title":{},"body":{"injectables/NavigationService.html":{}}}],["destination",{"_index":1130,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["detail.alcohol",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":1037,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map((detail",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1866,"title":{},"body":{"index.html":{}}}],["development",{"_index":1862,"title":{},"body":{"index.html":{}}}],["direction",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["directive",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1875,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1880,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1214,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1204,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1879,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1590,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["doc(currentuserid",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["doc(drinkid",{"_index":415,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc(this.editingdrinkid",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["doc.data",{"_index":1578,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1577,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1579,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":1003,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1566,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid",{"_index":1303,"title":{},"body":{"components/ProfileComponent.html":{}}}],["document.getelementbyid('profile",{"_index":1684,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["documentation",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["don't",{"_index":1148,"title":{},"body":{"components/NavigationComponent.html":{}}}],["drankdrinksref",{"_index":1573,"title":{},"body":{"components/StatsComponent.html":{}}}],["drankform",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink",{"_index":83,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":1033,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.alcohol",{"_index":927,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.calories",{"_index":955,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":1031,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.category",{"_index":1035,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":922,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":1000,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":1034,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":421,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":745,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time.split(':').map(number",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":666,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamounts",{"_index":673,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":994,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":669,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1567,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":266,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.amount",{"_index":768,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.drinkamounts",{"_index":991,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkdata.hour",{"_index":769,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.minute",{"_index":770,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1582,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1584,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":1618,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["drinklistcomponent",{"_index":82,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkname",{"_index":992,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":808,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktoedit",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1209,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1887,"title":{},"body":{"index.html":{}}}],["ease",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["edit",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["effect",{"_index":945,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["element",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["element's",{"_index":971,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":779,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{}}}],["emits",{"_index":649,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["encapsulation",{"_index":1119,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1050,"title":{},"body":{"components/DrinkListComponent.html":{},"index.html":{}}}],["ended",{"_index":1127,"title":{},"body":{"components/NavigationComponent.html":{}}}],["entries",{"_index":993,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entries.findindex",{"_index":998,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":1001,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":996,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":999,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["entryindex",{"_index":997,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1758,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1202,"title":{},"body":{"injectables/NotyfService.html":{}}}],["error.code",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["estimate",{"_index":933,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["estimated",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["event.stoppropagation",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["events",{"_index":307,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["execute",{"_index":1884,"title":{},"body":{"index.html":{}}}],["existing",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["exists",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{}}}],["extras",{"_index":1183,"title":{},"body":{"injectables/NavigationService.html":{}}}],["f44336",{"_index":1215,"title":{},"body":{"injectables/NotyfService.html":{}}}],["fallback",{"_index":950,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["false",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"interfaces/UserData.html":{}}}],["fb",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1412,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":410,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fff",{"_index":1053,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["field",{"_index":980,"title":{},"body":{"interfaces/DrinkData.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["fields",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1871,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1599,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["filling",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["fills",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filter",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["filter((drink",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["filter((event",{"_index":1141,"title":{},"body":{"components/NavigationComponent.html":{}}}],["filterdrinks",{"_index":740,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":739,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["finally",{"_index":1198,"title":{},"body":{"injectables/NavigationService.html":{}}}],["find",{"_index":995,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":672,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["firstvaluefrom",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["firstvaluefrom(this.auth.authstate",{"_index":1752,"title":{},"body":{"injectables/UserService.html":{}}}],["fixed",{"_index":1157,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["flat",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["font",{"_index":1046,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{}}}],["form",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":358,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["form.component.html",{"_index":121,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":120,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":112,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:107",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:114",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:121",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:128",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:135",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:142",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:157",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:27",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:45",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:49",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:94",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":111,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["formatpassword",{"_index":1399,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formats",{"_index":974,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":773,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":759,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formbuilder",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontrol",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol(false",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol(null",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formdata",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":1419,"title":{},"body":{"modules/SharedModule.html":{}}}],["forrmatpassword",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["forward",{"_index":966,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["found",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["found.component.html",{"_index":1224,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1223,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1222,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1190,"title":{},"body":{"injectables/NavigationService.html":{}}}],["further",{"_index":1892,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1056,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["gender",{"_index":783,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1642,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["gendertemp",{"_index":1307,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1310,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1311,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1874,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1859,"title":{},"body":{"index.html":{}}}],["get's",{"_index":1655,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getabv",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getamount",{"_index":1024,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getauth",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["getcaloriesperserving",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getcategory",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getconfirmpassword",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1739,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1740,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["getdate",{"_index":764,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["getdrinks",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate(date",{"_index":975,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1647,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["gethour",{"_index":1026,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getminute",{"_index":1028,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["getml",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getname",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["getpassword",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1648,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":636,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1735,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1741,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":599,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":1894,"title":{},"body":{"index.html":{}}}],["goal",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["graph",{"_index":1531,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1502,"title":{},"body":{"components/StatsComponent.html":{}}}],["grey",{"_index":313,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["group",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":316,"title":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["h1.landing",{"_index":1068,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["habits",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1154,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handle",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["handles",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["happen",{"_index":949,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["happened",{"_index":1353,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["height",{"_index":429,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["help",{"_index":804,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["help_outline",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["hidden",{"_index":798,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["hidedelay",{"_index":1146,"title":{},"body":{"components/NavigationComponent.html":{}}}],["hides",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["hidetotals",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["highlight_remove",{"_index":422,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["hint",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["hints",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["history.state.drink",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":647,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":785,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"modules/TrackingRoutingModule.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":786,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":787,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1536,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1527,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1510,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":695,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["hours",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourselapsed",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourselapsedsincelastdrink",{"_index":930,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourstodrink",{"_index":941,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["hourstosober",{"_index":946,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1304,"title":{},"body":{"components/ProfileComponent.html":{}}}],["htmlinputelement",{"_index":1685,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1867,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1306,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":405,"title":{},"body":{"components/AdminPageComponent.html":{},"components/NavigationComponent.html":{}}}],["iconfont",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["icons",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":407,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["img",{"_index":1320,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":118,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./admin/admin.module').then((m",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/pages.module').then((m",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then((m",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tracking/tracking.module').then((m",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1601,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["increased",{"_index":1147,"title":{},"body":{"components/NavigationComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":775,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["info(message",{"_index":1205,"title":{},"body":{"injectables/NotyfService.html":{}}}],["initialization",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initialize",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["initializeapp",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":330,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1177,"title":{},"body":{"components/NavigationComponent.html":{}}}],["input",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["input.search",{"_index":1036,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["instanceof",{"_index":1142,"title":{},"body":{"components/NavigationComponent.html":{}}}],["instantly",{"_index":650,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":367,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":655,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["isadmin",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["istotalsshown",{"_index":802,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["isuser",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RedirectComponent.html":{}}}],["it's",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["itdelete",{"_index":403,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["items",{"_index":439,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["justify",{"_index":1049,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["karma",{"_index":1886,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["kcal/100",{"_index":1032,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["key",{"_index":670,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1317,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["kilograms",{"_index":1402,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingpagecomponent",{"_index":87,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":928,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["last7days",{"_index":1552,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1564,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastprocesseddrinktimeforbac",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["lastprocesseddrinktimeforbac.gettime",{"_index":923,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["latest",{"_index":648,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":443,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["legend",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1532,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1533,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1503,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1554,"title":{},"body":{"components/StatsComponent.html":{}}}],["li",{"_index":438,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["list",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/SharedModule.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":1615,"title":{},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["list.component.html",{"_index":680,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":681,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":658,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:102",{"_index":1021,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:106",{"_index":1022,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:110",{"_index":1019,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:126",{"_index":1010,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:149",{"_index":1014,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:159",{"_index":1025,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:163",{"_index":1027,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:167",{"_index":1029,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:175",{"_index":1013,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:195",{"_index":1016,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:208",{"_index":1015,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:217",{"_index":1017,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:224",{"_index":1012,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:236",{"_index":1011,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:38",{"_index":776,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:77",{"_index":1018,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:94",{"_index":1020,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:98",{"_index":1023,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":657,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"coverage.html":{}}}],["listens",{"_index":1515,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":674,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":778,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1507,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1519,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadchildren",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":337,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["loadpiechartdata",{"_index":1508,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1522,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["loaidng",{"_index":1653,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["log",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":591,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":548,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":90,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":592,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1319,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":589,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["m.adminmodule",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.authmodule",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.trackingmodule",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{}}}],["map(([name",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["map((actions",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map((drink",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["map((user",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{},"guards/RedirectGuard.html":{}}}],["margin",{"_index":436,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["matautocompletemodule",{"_index":1420,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbadgemodule",{"_index":1422,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbottomsheetmodule",{"_index":1424,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":1427,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttontogglemodule",{"_index":1429,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1431,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matcheckboxmodule",{"_index":1433,"title":{},"body":{"modules/SharedModule.html":{}}}],["matches",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1435,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdatepickermodule",{"_index":1440,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogmodule",{"_index":1442,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":1444,"title":{},"body":{"modules/SharedModule.html":{}}}],["material",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["matexpansionmodule",{"_index":1446,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1448,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":1450,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.max(0",{"_index":925,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(currentsimtime.gettime",{"_index":944,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1546,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1543,"title":{},"body":{"components/StatsComponent.html":{}}}],["maticonmodule",{"_index":1452,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1454,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1456,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":1458,"title":{},"body":{"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":1437,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginatormodule",{"_index":1460,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressbarmodule",{"_index":1462,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":1464,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":1465,"title":{},"body":{"modules/SharedModule.html":{}}}],["matripplemodule",{"_index":1438,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1467,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenavmodule",{"_index":1469,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidermodule",{"_index":1473,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1471,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbarmodule",{"_index":1475,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsortmodule",{"_index":1477,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":1479,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":1481,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1483,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1485,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattooltipmodule",{"_index":1487,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattreemodule",{"_index":1489,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":428,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["maxheight",{"_index":797,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["media",{"_index":1160,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["menu",{"_index":1118,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menu_open",{"_index":1153,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menustate",{"_index":1123,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":1004,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["message",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["messages",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["metabolize",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":959,"title":{},"body":{"interfaces/DrinkData.html":{},"injectables/NavigationService.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1904,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ml",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["mm",{"_index":978,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["mode",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":116,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":339,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":341,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1893,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["mouseevent",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ms",{"_index":430,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"injectables/NavigationService.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":985,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/NavigationService.html":{},"index.html":{}}}],["navigate(path",{"_index":1182,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigate(typeof",{"_index":1197,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigates",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["navigatewithmenuclose",{"_index":1124,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigatewithmenuclose(path",{"_index":1128,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["navigation'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1122,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1121,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":1496,"title":{},"body":{"modules/SharedModule.html":{}}}],["navigation?.extras?.state",{"_index":239,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":91,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{}}}],["navigationerror",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationextras",{"_index":1194,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigationservice",{"_index":140,"title":{"injectables/NavigationService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["navigationstart",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":678,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":972,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["needed",{"_index":114,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["new",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1692,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":747,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1698,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newprofilepicurl",{"_index":1683,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1688,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["nextday",{"_index":967,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["nextday.setdate(originaldate.getdate",{"_index":968,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ng",{"_index":1597,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":356,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["ngneat/hot",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":1491,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngxspinnermodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["no_drinks",{"_index":1066,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["none",{"_index":308,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["not(:last",{"_index":447,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["nothing",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["notification",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1200,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":139,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["null",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":659,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["number(drink.alcohol",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["numbers",{"_index":755,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["object",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map",{"_index":1588,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1696,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1580,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1568,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":328,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1562,"title":{},"body":{"components/StatsComponent.html":{}}}],["oncloseclick",{"_index":1007,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["oncloseclick(event",{"_index":737,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["ondatechange(direction",{"_index":960,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":1008,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["ondrinkclick(event",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["oninit",{"_index":119,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1509,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":686,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["open",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":983,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":981,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["originaldate",{"_index":961,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["otherwise",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"modules/PagesModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":784,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":425,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["overlay",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["overview",{"_index":1895,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1813,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":763,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":360,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["page.component.html",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:13",{"_index":1061,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:26",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts:33",{"_index":1062,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:49",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:57",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:66",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:83",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:91",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:99",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":359,"title":{},"body":{"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":1058,"title":{},"body":{"components/LandingPageComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":93,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesModule.html":{}}}],["pages/components/page",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/landing",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pagesmodule",{"_index":1227,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":1231,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["panel",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["param",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1636,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1407,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsdontmatch",{"_index":1406,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["past",{"_index":929,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastandcurrentdrinks",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["pastandcurrentdrinks[0].drinkdate.gettime",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":457,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["pathmatch",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["personal",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":1335,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["picker",{"_index":982,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1150,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1300,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1524,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1504,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1549,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1505,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1548,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":618,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(take(1",{"_index":1343,"title":{},"body":{"components/RedirectComponent.html":{}}}],["pipes",{"_index":1619,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":1494,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1634,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1630,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["pointer",{"_index":306,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":299,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["preparedhour",{"_index":774,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["present",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["prevday",{"_index":963,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["prevday.setdate(originaldate.getdate",{"_index":964,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":1333,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profile.component.html",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1641,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:102",{"_index":1669,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:108",{"_index":1671,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":1672,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:122",{"_index":1659,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:142",{"_index":1657,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:153",{"_index":1656,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:170",{"_index":1654,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:187",{"_index":1660,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:197",{"_index":1661,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":1665,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1663,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1666,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1662,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:47",{"_index":1664,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:56",{"_index":1652,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:81",{"_index":1658,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1667,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":1668,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/personalstats",{"_index":1314,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":1151,"title":{},"body":{"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":1332,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["profilecomponent",{"_index":95,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilemodule",{"_index":1323,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepichtml",{"_index":1302,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1305,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1650,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1643,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profileroutingmodule",{"_index":1327,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesub",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1858,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/RedirectGuard.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1572,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1563,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":671,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":772,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provde",{"_index":752,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["provide",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["provideauth",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":594,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":333,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["providestorage",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providing",{"_index":677,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["querysnapshot",{"_index":1575,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":435,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/ProfileComponent.html":{}}}],["ran",{"_index":1191,"title":{},"body":{"injectables/NavigationService.html":{}}}],["ratio",{"_index":1603,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1516,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":1418,"title":{},"body":{"modules/SharedModule.html":{}}}],["record",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["red",{"_index":446,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["redirect",{"_index":1337,"title":{},"body":{"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{}}}],["redirect'},{'name",{"_index":98,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["redirect.component.html",{"_index":1339,"title":{},"body":{"components/RedirectComponent.html":{}}}],["redirect.component.scss",{"_index":1338,"title":{},"body":{"components/RedirectComponent.html":{}}}],["redirect/redirect/redirect.component",{"_index":1497,"title":{},"body":{"modules/SharedModule.html":{}}}],["redirectcomponent",{"_index":97,"title":{"components/RedirectComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["redirectguard",{"_index":1347,"title":{"guards/RedirectGuard.html":{}},"body":{"guards/RedirectGuard.html":{},"coverage.html":{}}}],["redirecting",{"_index":1351,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["redirects",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"interfaces/UserData.html":{}}}],["redirecttoadminformadddrink",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":986,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1059,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1060,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["ref.where('email",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["ref.where('username",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reference",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":549,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":100,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1712,"title":{},"body":{"classes/UserModule.html":{}}}],["registercomponent",{"_index":99,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.value.gender",{"_index":1411,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":598,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":596,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":1045,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["relevant",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["reload",{"_index":1870,"title":{},"body":{"index.html":{}}}],["remixicon",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":404,"title":{},"body":{"components/AdminPageComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":988,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["result",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":108,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rgba($color",{"_index":312,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["right",{"_index":304,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1211,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":334,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":336,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":454,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":459,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":455,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":361,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["routing.module.ts",{"_index":453,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/TrackingRoutingModule.html":{}}}],["row",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["run",{"_index":1864,"title":{},"body":{"index.html":{}}}],["running",{"_index":1881,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":331,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1139,"title":{},"body":{"components/NavigationComponent.html":{}}}],["scaffolding",{"_index":1873,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["scale(0.8",{"_index":685,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["scale(0.9",{"_index":794,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["scale(1",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["scrollbar",{"_index":431,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["search",{"_index":701,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1595,"title":{},"body":{"components/StatsComponent.html":{}}}],["see",{"_index":1149,"title":{},"body":{"components/NavigationComponent.html":{}}}],["selectdrink",{"_index":1009,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":738,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":634,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["selecteddateobj",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":635,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1865,"title":{},"body":{"index.html":{}}}],["server",{"_index":1863,"title":{},"body":{"index.html":{}}}],["serves",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":332,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["services/navigation.service",{"_index":1354,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["serving",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":639,"title":{},"body":{"injectables/DateService.html":{}}}],["sets",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":637,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":640,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":417,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{}}}],["shape",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["shared/navigation/navigation.component",{"_index":1236,"title":{},"body":{"modules/PagesModule.html":{}}}],["shared/redirect/redirect/redirect.component",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/shared.module",{"_index":362,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/TrackingModule.html":{}}}],["sharedmodule",{"_index":351,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":1426,"title":{},"body":{"modules/SharedModule.html":{}}}],["shouldn't",{"_index":948,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["show",{"_index":1561,"title":{},"body":{"components/StatsComponent.html":{}}}],["showhint",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["showing",{"_index":800,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["shows",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["showtotals",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":1067,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["simulatedbac",{"_index":934,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["simulation",{"_index":939,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["size",{"_index":1047,"title":{},"body":{"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["smoothly",{"_index":1188,"title":{},"body":{"injectables/NavigationService.html":{}}}],["snapshot",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["snapshot.empty",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["snapshotchanges",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["sober",{"_index":815,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":450,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"components/AdminPageComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StatsComponent.html":{},"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1593,"title":{},"body":{"components/StatsComponent.html":{}}}],["span",{"_index":442,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["specific",{"_index":676,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/ProfileComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["spinnerhidedelay",{"_index":1185,"title":{},"body":{"injectables/NavigationService.html":{}}}],["spinnerservice",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/.../environment.ts",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin",{"_index":452,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/admin/admin.module.ts",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/components/admin",{"_index":110,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":547,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/login/login.component.ts",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/login/login.component.ts:23",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:26",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:44",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:49",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:55",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:62",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/login/login.component.ts:72",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/components/register/register.component.ts",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/components/register/register.component.ts:104",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:113",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:134",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:28",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:44",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:62",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:67",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:73",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:79",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:85",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:91",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/components/register/register.component.ts:97",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/core/core.module.ts",{"_index":630,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:12",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:25",{"_index":326,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/redirect.guard.ts",{"_index":1348,"title":{},"body":{"guards/RedirectGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/redirect.guard.ts:10",{"_index":1349,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["src/app/core/guards/redirect.guard.ts:26",{"_index":1350,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1705,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1706,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:25",{"_index":1707,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/services/authentication.service",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/core/services/authentication.service.ts",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/services/authentication.service.ts:105",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:119",{"_index":593,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:126",{"_index":595,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:23",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:42",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:49",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:56",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:67",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:78",{"_index":597,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/authentication.service.ts:91",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/services/date.service",{"_index":664,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/date.service.ts",{"_index":632,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":645,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":643,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:24",{"_index":641,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:32",{"_index":638,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/navigation.service",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/navigation.service.ts",{"_index":1180,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/core/services/navigation.service.ts:23",{"_index":1186,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:8",{"_index":1181,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/notyf/notyf.service",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/notyf/notyf.service.ts",{"_index":1199,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:10",{"_index":1201,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:16",{"_index":1217,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:46",{"_index":1208,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:54",{"_index":1203,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/notyf/notyf.service.ts:58",{"_index":1206,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/core/services/user/user.module.ts",{"_index":1711,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.module.ts:10",{"_index":1720,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:11",{"_index":1716,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:12",{"_index":1714,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:5",{"_index":1717,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:6",{"_index":1721,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:7",{"_index":1715,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:8",{"_index":1718,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.module.ts:9",{"_index":1719,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/core/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":1750,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:22",{"_index":1749,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:26",{"_index":1742,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:36",{"_index":1748,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:43",{"_index":1745,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:61",{"_index":1747,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:74",{"_index":1743,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:87",{"_index":1744,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/landing",{"_index":1057,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/components/page",{"_index":1221,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages",{"_index":1238,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.module.ts",{"_index":1232,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/profile/components/profile/profile.component.ts",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/profile/profile.component.ts:115",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:124",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:133",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:148",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:158",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:167",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:180",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:187",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:24",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:28",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:32",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:36",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:40",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:44",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:71",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/profile/profile.component.ts:94",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts",{"_index":1498,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/profile/components/stats/stats.component.ts:124",{"_index":1523,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:18",{"_index":1529,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:22",{"_index":1535,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:26",{"_index":1534,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:31",{"_index":1530,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:35",{"_index":1512,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:51",{"_index":1514,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:59",{"_index":1525,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:72",{"_index":1518,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/stats/stats.component.ts:90",{"_index":1520,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/profile/components/update",{"_index":1640,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile",{"_index":1334,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.module.ts",{"_index":1328,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/shared/navigation/navigation.component.ts",{"_index":1117,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/shared/navigation/navigation.component.ts:16",{"_index":1126,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:39",{"_index":1136,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:44",{"_index":1131,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/navigation/navigation.component.ts:59",{"_index":1129,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/shared/pipes/trim",{"_index":1620,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts",{"_index":1336,"title":{},"body":{"components/RedirectComponent.html":{},"coverage.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts:12",{"_index":1340,"title":{},"body":{"components/RedirectComponent.html":{}}}],["src/app/shared/redirect/redirect/redirect.component.ts:18",{"_index":1341,"title":{},"body":{"components/RedirectComponent.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1417,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tracking/components/drink",{"_index":656,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/tracking/components/home/home.component.ts",{"_index":777,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/tracking/tracking",{"_index":1617,"title":{},"body":{"modules/TrackingRoutingModule.html":{}}}],["src/app/tracking/tracking.module.ts",{"_index":1613,"title":{},"body":{"modules/TrackingModule.html":{}}}],["src/environments/environment.ts",{"_index":1809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":938,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["started",{"_index":1856,"title":{"index.html":{}},"body":{}}],["state",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1318,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":102,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1500,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1499,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":101,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stops",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["storagebucket",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1878,"title":{},"body":{"index.html":{}}}],["stores",{"_index":746,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["strings",{"_index":753,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["style",{"_index":424,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["submitted",{"_index":749,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["subscribe",{"_index":408,"title":{},"body":{"components/AdminPageComponent.html":{},"components/NavigationComponent.html":{}}}],["subscribe((user",{"_index":1344,"title":{},"body":{"components/RedirectComponent.html":{}}}],["subscribers",{"_index":651,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1207,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["sum",{"_index":954,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1896,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":414,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["svg",{"_index":1897,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":1492,"title":{},"body":{"modules/SharedModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{}}}],["take(1",{"_index":1356,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["tap",{"_index":402,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["tempstring",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":741,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every((term",{"_index":744,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1883,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1890,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1882,"title":{},"body":{"index.html":{}}}],["text",{"_index":309,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["then((result",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.adjustchartsizes",{"_index":1537,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1700,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1574,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1762,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(this.currentuserid",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.afs.collection('user').doc(userid).ref",{"_index":1682,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.auth.currentuser",{"_index":1760,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.pipe(take(1)).topromise",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice",{"_index":1342,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.authservice.isadmin",{"_index":338,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1708,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.isuser().pipe",{"_index":1355,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.authservice.login(email",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1409,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":932,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1550,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1767,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateanimationkey",{"_index":973,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":984,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe((date",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(nextday",{"_index":969,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(prevday",{"_index":965,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drankform.get('amount",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.get('hour",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.get('minute",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.valid",{"_index":751,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.amount",{"_index":756,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.hour",{"_index":757,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drankform.value.minute",{"_index":758,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkform",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('abv",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('caloriesperserving",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('category",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('ml",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.get('name",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":409,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":957,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce",{"_index":953,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter((drink",{"_index":743,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1725,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1309,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1693,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1694,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1768,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1759,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe((drinks",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getgenderandweight",{"_index":1673,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicurl",{"_index":1674,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1763,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.getweight",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1571,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1722,"title":{},"body":{"classes/UserModule.html":{}}}],["this.iseditmode",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.istotalsshown",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1538,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1539,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menustate",{"_index":1145,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigationservice.navigate",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.navigationservice.navigate('/admin/admin",{"_index":1316,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.navigationservice.navigate('/admin/adminform",{"_index":411,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.navigationservice.navigate('/auth/login",{"_index":1064,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.navigationservice.navigate('/auth/register",{"_index":1063,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.navigationservice.navigate('/pages/landing",{"_index":1346,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.navigationservice.navigate('/profile/profile",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.navigationservice.navigate('/profile/updateprofile",{"_index":1315,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.navigationservice.navigate('/tracking/drinklist",{"_index":987,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.navigationservice.navigate('/tracking/home",{"_index":1345,"title":{},"body":{"components/RedirectComponent.html":{}}}],["this.navigationservice.navigate(['/admin/adminform",{"_index":412,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.notyf.error(message",{"_index":1219,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.open",{"_index":1220,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1218,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('invalid",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyfservice.error('no",{"_index":1005,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('please",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.error('something",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('user",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.info",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notyfservice.success('drink",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1687,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1408,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.password?.value",{"_index":1699,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.passwordsmatchvalidator",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1587,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1551,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1727,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilepicurlfromdb",{"_index":1686,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.profilesub",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.registerageindays",{"_index":1729,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1298,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.registerform.get('confirmpassword",{"_index":1395,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('email",{"_index":1393,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('gender",{"_index":1397,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password",{"_index":1394,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username",{"_index":1392,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('weight",{"_index":1396,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router",{"_index":1196,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.router.createurltree(['/pages/landing",{"_index":1358,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.router.createurltree(['/tracking/home",{"_index":1357,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["this.router.events",{"_index":1140,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate(['/pages/landing",{"_index":1756,"title":{},"body":{"injectables/UserService.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":742,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selectdrink(drink",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":760,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":761,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":642,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":653,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":654,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":937,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.spinner.hide",{"_index":1144,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["this.spinner.show",{"_index":1195,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.spinnerservice.hide",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.spinnerservice.show",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["this.totalcalories",{"_index":952,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":956,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.updateprofileform.get('confirmpassword",{"_index":1677,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('gender",{"_index":1679,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('password",{"_index":1676,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('profilepicurl",{"_index":1675,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.get('weight",{"_index":1678,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.updateprofileform.invalid",{"_index":1680,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.userdata",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1296,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.userservice.getuserid",{"_index":1681,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weight",{"_index":1312,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1689,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1690,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["throw",{"_index":1757,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":668,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NavigationService.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":1430,"title":{},"body":{"modules/SharedModule.html":{}}}],["togglemenu",{"_index":1125,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1132,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":1041,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{}}}],["topromise",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tostring",{"_index":762,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["total",{"_index":809,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":810,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["totals",{"_index":801,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":748,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"modules/TrackingModule.html":{},"interfaces/UserData.html":{}}}],["tracking/home",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["trackingmodule",{"_index":1608,"title":{"modules/TrackingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingroutingmodule",{"_index":1612,"title":{"modules/TrackingRoutingModule.html":{}},"body":{"modules/TrackingModule.html":{},"modules/TrackingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trailing",{"_index":1638,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":302,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["transform(value",{"_index":1625,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":661,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["transition(':enter",{"_index":684,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["transition(':leave",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["translatex",{"_index":1165,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1169,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatey",{"_index":789,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["translatey(0",{"_index":792,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["translatey(55",{"_index":303,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["trigger",{"_index":660,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["trigger('fadedate",{"_index":793,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trigger('scale",{"_index":683,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["trigger('slide",{"_index":788,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trigger('slidegrow",{"_index":795,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["triggers",{"_index":958,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1624,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimalspipe",{"_index":1416,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1631,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1633,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1622,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1628,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["try",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":771,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["two",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["types",{"_index":1212,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":1175,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ul.drink",{"_index":423,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["undefined",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["unit",{"_index":298,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{},"index.html":{}}}],["unknown",{"_index":1585,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1637,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["update",{"_index":104,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["update(drinkdata",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["update(updates",{"_index":1697,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/ProfileRoutingModule.html":{}}}],["updateprofile(user",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":103,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1644,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofileform.value.gender",{"_index":1703,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1649,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["updates.gender",{"_index":1695,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1691,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1702,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["urltree",{"_index":329,"title":{},"body":{"guards/AdminGuard.html":{},"guards/RedirectGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":1234,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["used",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"guards/RedirectGuard.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":590,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1726,"title":{},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user.gender",{"_index":1732,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1723,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1751,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1728,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1730,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1731,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1724,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1733,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":781,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1766,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1308,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1301,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1299,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1297,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1313,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1755,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1295,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocs",{"_index":1753,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1754,"title":{},"body":{"injectables/UserService.html":{}}}],["userguard",{"_index":1704,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":990,"title":{},"body":{"interfaces/DrinkData.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1709,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1645,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1761,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1764,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validation",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1391,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.max(23",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.max(59",{"_index":698,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(0",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(1",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["validators.min(30",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1635,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["valuechanges",{"_index":406,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":803,"title":{},"body":{"interfaces/DrinkData.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["variables",{"_index":291,"title":{"miscellaneous/variables.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1861,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1607,"title":{},"body":{"components/StatsComponent.html":{}}}],["via",{"_index":1885,"title":{},"body":{"index.html":{}}}],["view",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":780,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1137,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1120,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visibility",{"_index":1168,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visible",{"_index":1163,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RedirectComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["watches",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["webkit",{"_index":437,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["weight",{"_index":782,"title":{},"body":{"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1646,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1065,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1576,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":1600,"title":{},"body":{"components/StatsComponent.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.innerheight",{"_index":1541,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1540,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1511,"title":{},"body":{"components/StatsComponent.html":{}}}],["works",{"_index":1352,"title":{},"body":{"guards/RedirectGuard.html":{}}}],["wrap",{"_index":1592,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrong",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"injectables/NotyfService.html":{}}}],["y",{"_index":426,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{}}}],["yes",{"_index":1189,"title":{},"body":{"injectables/NavigationService.html":{}}}],["yyyy",{"_index":977,"title":{},"body":{"interfaces/DrinkData.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":1039,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["zero",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/LandingPageComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1639,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1857,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackingModule.html":{},"overview.html":{}}}],["zt",{"_index":1052,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["ztblack",{"_index":1164,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ztgray",{"_index":433,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{}}}],["ztwhite",{"_index":1158,"title":{},"body":{"components/NavigationComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        About Us\n\n  Thank you for using Zero Tolerance!\n  Out goal is to provide you with a platform where you can track your drinking\n  habits.\n  This app is for personal use only and should not be used commercially in any\n  form.\n\n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                * {\n  width: 20rem;\n}\n\nh1 {\n  padding-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'About Us  Thank you for using Zero Tolerance!  Out goal is to provide you with a platform where you can track your drinking  habits.  This app is for personal use only and should not be used commercially in any  form.'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    abv\n                                \n                                \n                                    caloriesPerServing\n                                \n                                \n                                    ml\n                                \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:49\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-form/admin-form.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Shows hints for filling out the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    abv: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(100),\n    ]),\n    caloriesPerServing: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n    ]),\n    ml: new FormControl(null, [Validators.required, Validators.min(1)]),\n    category: new FormControl('', Validators.required),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:27\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:45\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-form/admin-form.component.ts:49\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:107\n                                \n                            \n                    \n                        \n                                Gets the input drink name.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        abv\n                    \n                \n\n                \n                    \n                        getabv()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:114\n                                \n                            \n                    \n                        \n                                Gets the input alcohol %.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        caloriesPerServing\n                    \n                \n\n                \n                    \n                        getcaloriesPerServing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:121\n                                \n                            \n                    \n                        \n                                Gets the input calories per serving.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ml\n                    \n                \n\n                \n                    \n                        getml()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:128\n                                \n                            \n                    \n                        \n                                Gets the input volume.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n                \n                    \n                        getcategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/components/admin-form/admin-form.component.ts:135\n                                \n                            \n                    \n                        \n                                Gets the input category.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss'],\n})\nexport class AdminFormComponent implements OnInit {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    abv: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(100),\n    ]),\n    caloriesPerServing: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n    ]),\n    ml: new FormControl(null, [Validators.required, Validators.min(1)]),\n    category: new FormControl('', Validators.required),\n  });\n\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [\n          caloriesPerServing,\n          [Validators.required, Validators.pattern('^[0-9]+$')],\n        ],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Gets the input drink name.\n   */\n  get name() {\n    return this.drinkForm.get('name');\n  }\n\n  /**\n   * Gets the input alcohol %.\n   */\n  get abv() {\n    return this.drinkForm.get('abv');\n  }\n\n  /**\n   * Gets the input calories per serving.\n   */\n  get caloriesPerServing() {\n    return this.drinkForm.get('caloriesPerServing');\n  }\n\n  /**\n   * Gets the input volume.\n   */\n  get ml() {\n    return this.drinkForm.get('ml');\n  }\n\n  /**\n   * Gets the input category.\n   */\n  get category() {\n    return this.drinkForm.get('category');\n  }\n\n  /**\n   * Shows hints for filling out the form.\n   */\n  showHint() {\n    this.notyfService.info(\n      \"Drink name: min. 3 charactersNumber fields can't be negative\"\n    );\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   *\n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      this.spinnerService.show();\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs\n            .collection('drink')\n            .doc(this.editingDrinkId)\n            .update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.navigationService.navigate('/profile/profile');\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n        this.spinnerService.hide();\n      }\n    } else {\n      this.notyfService.error('Please provide valid data');\n    }\n  }\n}\n\n    \n\n    \n        {{ isEditMode ? \"Update drink\" : \"Add drink\" }}\n\n\n  \n\n  \n    \n    %\n  \n\n  \n    \n    kcal\n  \n\n  \n    \n    ml\n  \n\n  \n\n  \n    Submit\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                @use \"variables\" as *;\n\n.drink-form > div {\n  display: flex;\n  flex-direction: row-reverse;\n  .unit {\n    position: absolute;\n    width: 100%;\n    transform: translateY(55%);\n    padding-right: 0.75rem;\n    pointer-events: none;\n    text-align: right;\n    color: rgba($color: grey, $alpha: 0.5);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ isEditMode ? \"Update drink\" : \"Add drink\" }}            %            kcal            ml          Submit        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService) {}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isAdmin();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_declarations\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AdminFormComponent, AdminPageComponent],\n  imports: [SharedModule, AdminRoutingModule, CommonModule],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : Service for loading spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/admin/components/admin-page/admin-page.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Shows hints for filling out the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/components/admin-page/admin-page.component.ts:26\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss'],\n})\nexport class AdminPageComponent {\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   * @param navigationService: Service for loading spinner navigation.\n   * @param spinnerService: Service for loading spinner.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Shows hints for filling out the form.\n   */\n  showHint() {\n    this.notyfService.info(\n      'Tap a drink to edit itDelete with the remove icon'\n    );\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs\n      .collection('drink')\n      .valueChanges({ idField: 'id' })\n      .subscribe(\n        (drinks) => {\n          this.drinks = drinks;\n        },\n        (error) => {\n          console.error('Error fetching drinks', error);\n        }\n      );\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.navigationService.navigate('/admin/adminform');\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.navigationService.navigate(['/admin/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.spinnerService.show();\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n          setTimeout(() => this.spinnerService.hide(), 500);\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        All Drinks\n\n  \n    {{\n      drink.name\n    }}\n    \n      highlight_remove\n    \n  \n\n\n  \n    Add New Drink\n  \n\n\n  help_outline\n\n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                @use \"variables\" as *;\n\nul.drink-list {\n  list-style: none;\n  overflow-y: auto;\n  max-height: 20rem;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  background-color: $ztGray;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 20rem;\n    height: 3rem;\n\n    span {\n      width: 100%;\n      text-align: left;\n      padding-left: 1rem;\n    }\n\n    button {\n      padding-right: 0.5rem;\n      display: flex;\n      color: red;\n    }\n\n    &:not(:last-child) {\n      border-bottom: 1px solid black;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'All Drinks      {{      drink.name    }}          highlight_remove            Add New Drink    help_outline'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from \"@angular/router\";\nimport { AdminPageComponent } from \"./components/admin-page/admin-page.component\";\nimport { AdminFormComponent } from \"./components/admin-form/admin-form.component\";\nimport { NgModule } from \"@angular/core\";\nimport { AdminGuard } from \"../core/guards/admin.guard\";\n\nconst routes: Routes = [\n  { path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard] },\n  { path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth, AuthModule } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { provideStorage, getStorage } from '@angular/fire/storage';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    CoreModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './pages/components/page-not-found/page-not-found.component';\nimport { RedirectComponent } from './shared/redirect/redirect/redirect.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: RedirectComponent,\n  },\n  {\n    path: 'admin',\n    loadChildren: () =>\n      \"import('./admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'pages',\n    loadChildren: () =>\n      \"import('./pages/pages.module').then((m) => m.PagesModule)\",\n  },\n  {\n    path: 'profile',\n    loadChildren: () =>\n      \"import('./profile/profile.module').then((m) => m.ProfileModule)\",\n  },\n  {\n    path: 'tracking',\n    loadChildren: () =>\n      \"import('./tracking/tracking.module').then((m) => m.TrackingModule)\",\n  },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [SharedModule, AuthRoutingModule, CommonModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmailExists\n                            \n                            \n                                    Async\n                                checkUsernameExists\n                            \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExists(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Checks if e-mail already exists in database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input e-mail.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Returns if there is a match found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkUsernameExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsernameExists(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Checks if username already exists in database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The input username.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Returns true if there is a match found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/authentication.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/authentication.service.ts:23\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport {\n  Auth,\n  signInWithEmailAndPassword,\n  authState,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from '@angular/fire/auth';\nimport { firstValueFrom, from, map, Observable, switchMap } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n\n  /**\n   *\n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(\n    private auth: Auth,\n    private fireAuth: AngularFireAuth,\n    private afs: AngularFirestore\n  ) {}\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string) {\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser() {\n    return this.currentUser$;\n  }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable {\n    return this.fireAuth.user.pipe(\n      map((user) => {\n        return user?.email == this.auth.currentUser?.email;\n      })\n    );\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable {\n    return this.fireAuth.user.pipe(\n      map((user) => {\n        return user?.email == 'admin@zt.com';\n      })\n    );\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string) {\n    return from(\n      createUserWithEmailAndPassword(this.auth, email, password)\n    ).pipe(\n      switchMap(({ user }) => updateProfile(user, { displayName: username }))\n    );\n  }\n\n  /**\n   * Checks if username already exists in database.\n   * @param username The input username.\n   * @returns Returns true if there is a match found.\n   */\n  async checkUsernameExists(username: string): Promise {\n    const snapshot = await firstValueFrom(\n      this.afs\n        .collection('user', (ref) => ref.where('username', '==', username))\n        .get()\n    );\n    return !snapshot.empty;\n  }\n\n  /**\n   * Checks if e-mail already exists in database.\n   * @param email The input e-mail.\n   * @returns Returns if there is a match found.\n   */\n  async checkEmailExists(email: string): Promise {\n    const snapshot = await firstValueFrom(\n      this.afs\n        .collection('user', (ref) => ref.where('email', '==', email))\n        .get()\n    );\n    return !snapshot.empty;\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string) {\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser() {\n    return from(this.auth.signOut());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [SharedModule, CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('slide', [\n      transition(':enter', [\n        style({ transform: 'translateY(-20px)', opacity: 0 }),\n        animate(\n          '300ms ease-out',\n          style({ transform: 'translateY(0)', opacity: 1 })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '300ms ease-in',\n          style({ transform: 'translateY(-20px)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('fadeDate', [\n      transition('* => *', [\n        style({ opacity: 0, transform: 'scale(0.9)' }),\n        animate('200ms ease-out', style({ opacity: 1, transform: 'scale(1)' })),\n      ]),\n    ]),\n    trigger('slideGrow', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-10px)',\n          maxHeight: '0',\n          overflow: 'hidden',\n        }),\n        animate(\n          '300ms ease-out',\n          style({\n            opacity: 1,\n            transform: 'translateY(0)',\n            maxHeight: '1000px',\n          })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({\n            opacity: 0,\n            transform: 'translateY(-10px)',\n            maxHeight: '0',\n            overflow: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Boolean for showing totals.\n   */\n  isTotalsShown: Boolean = false;\n  /**\n   * Variable to help date change animation.\n   */\n  dateAnimationKey = 0;\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Shows the totals panel.\n   */\n  showTotals() {\n    this.isTotalsShown = true;\n  }\n\n  /**\n   * Hides the totals panel.\n   */\n  hideTotals() {\n    this.isTotalsShown = false;\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates estimated BAC and sober time\n   * @returns The date object for today's drinks or nothing if there is an error.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available or invalid for BAC calculation.');\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    let selectedDateObj = this.selectedDate;\n\n    // Handle drinksForTheDay being null or undefined\n    // Construct full date objects for drink times\n    const allDrinksToday = (this.drinksForTheDay || [])\n      .map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(selectedDateObj);\n        drinkDate.setHours(hours, minutes, 0, 0);\n        return { ...drink, drinkDate, alcohol: Number(drink.alcohol) || 0 };\n      })\n      .filter((drink) => drink !== null) as {\n      alcohol: number;\n      drinkDate: Date;\n      [key: string]: any;\n    }[]; // Type assertion after filter for array\n\n    allDrinksToday.sort(\n      (a, b) => a.drinkDate.getTime() - b.drinkDate.getTime()\n    );\n\n    // Calculate current BAC\n    let currentBacInternal = 0;\n    let lastProcessedDrinkTimeForBac: Date | null = null;\n\n    const pastAndCurrentDrinks = allDrinksToday.filter(\n      (drink) => drink.drinkDate  0) {\n      // Initialize with the time of the first relevant drink\n      lastProcessedDrinkTimeForBac = new Date(\n        pastAndCurrentDrinks[0].drinkDate.getTime()\n      );\n\n      for (const drink of pastAndCurrentDrinks) {\n        // Metabolize BAC from lastProcessedDrinkTimeForBac up to current drink's time\n        if (\n          currentBacInternal > 0 &&\n          drink.drinkDate > lastProcessedDrinkTimeForBac\n        ) {\n          const hoursElapsed =\n            (drink.drinkDate.getTime() -\n              lastProcessedDrinkTimeForBac.getTime()) /\n            (1000 * 60 * 60);\n          currentBacInternal -= metabolismRate * hoursElapsed;\n          currentBacInternal = Math.max(0, currentBacInternal);\n        }\n\n        lastProcessedDrinkTimeForBac = new Date(drink.drinkDate.getTime());\n\n        // Add BAC from the current drink\n        currentBacInternal +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // Metabolize from the time of the last consumed past drink up to current time\n      if (\n        currentBacInternal > 0 &&\n        lastProcessedDrinkTimeForBac &&\n        currentTime > lastProcessedDrinkTimeForBac\n      ) {\n        const hoursElapsedSinceLastDrink =\n          (currentTime.getTime() - lastProcessedDrinkTimeForBac.getTime()) /\n          (1000 * 60 * 60);\n        currentBacInternal -= metabolismRate * hoursElapsedSinceLastDrink;\n      }\n    }\n    this.bac = Math.max(0, currentBacInternal);\n\n    // Estimate sober time for the day\n    let simulatedBac = 0;\n    let currentSimTime: Date | null = null;\n\n    if (allDrinksToday.length === 0) {\n      this.soberTime = null;\n    } else {\n      // Start simulation from the time of the first drink\n      currentSimTime = new Date(allDrinksToday[0].drinkDate.getTime());\n\n      for (const drink of allDrinksToday) {\n        // Metabolize existing BAC from currentSimTime up to this drink's time\n        if (simulatedBac > 0 && drink.drinkDate > currentSimTime) {\n          const hoursToDrink =\n            (drink.drinkDate.getTime() - currentSimTime.getTime()) /\n            (1000 * 60 * 60);\n          simulatedBac -= metabolismRate * hoursToDrink;\n          simulatedBac = Math.max(0, simulatedBac);\n        }\n\n        // Advance simulation time to the current drink's time\n        currentSimTime = new Date(\n          Math.max(currentSimTime.getTime(), drink.drinkDate.getTime())\n        );\n\n        // Add BAC from this drink\n        simulatedBac +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // Calculate time to zero from currentSimTime (time of last drink's effect)\n      if (simulatedBac > 0 && currentSimTime) {\n        const hoursToSober = simulatedBac / metabolismRate;\n        this.soberTime = new Date(\n          currentSimTime.getTime() + hoursToSober * 60 * 60 * 1000\n        );\n      } else if (currentSimTime) {\n        this.soberTime = new Date(currentSimTime.getTime());\n      } else {\n        // Shouldn't happen if allDrinksToday but fallback\n        this.soberTime = null;\n      }\n    }\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(direction: string) {\n    const originalDate = new Date(document.getElementById('date')!.innerHTML);\n\n    if (direction === 'back') {\n      const prevDay = originalDate;\n      prevDay.setDate(originalDate.getDate() - 1);\n      this.dateService.setSelectedDate(prevDay);\n    } else if (direction === 'forward') {\n      const nextDay = originalDate;\n      nextDay.setDate(originalDate.getDate() + 1);\n      this.dateService.setSelectedDate(nextDay);\n    }\n    // Since angular animations only trigger when the bound element's state changes\n    // we need this key to always change\n    this.dateAnimationKey++;\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.navigationService.navigate('/tracking/drinklist');\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tracking/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\nAnimation for drink list form.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drankForm\n                            \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseClick\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    amount\n                                \n                                \n                                    hour\n                                \n                                \n                                    minute\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:126\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:236\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently selected drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the data submitted is not valid.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:224\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseClick\n                        \n                    \n                \n            \n            \n                \nonCloseClick(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:208\n                        \n                    \n\n\n            \n                \n                        Adds back the ability to click on the X.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event for clicking the X.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(event: MouseEvent, drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:195\n                        \n                    \n\n\n            \n                \n                        Stops mouse events on the drink when overlay is open.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event for clicling on a drink.\n\n                                            \n                                        \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                When a drink is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tracking/components/drink-list/drink-list.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drankForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:77\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:110\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:94\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:102\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:106\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:126\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tracking/components/drink-list/drink-list.component.ts:98\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        amount\n                    \n                \n\n                \n                    \n                        getamount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:159\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hour\n                    \n                \n\n                \n                    \n                        gethour()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minute\n                    \n                \n\n                \n                    \n                        getminute()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tracking/components/drink-list/drink-list.component.ts:167\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n    \n        Add Drink\n\n\n\n\n  \n    {{ drink.name }}\n    \n      \n        close\n        {{ drink.name }}\n      \n      \n        {{ drink.caloriesPerServing }} kcal/100 ml\n        {{ drink.abv }} %\n        {{ drink.ml }} ml\n        {{ drink.category }}\n        \n          \n          \n            \n            \n          \n          \n            Add\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                @use \"variables\" as *;\n\ninput.search {\n  margin-bottom: 1rem;\n}\n\nul.drink-list {\n  list-style: none;\n  overflow-y: auto;\n  max-height: 20rem;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  background-color: $ztGray;\n  border-radius: 1rem;\n  margin-bottom: 1rem;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  li {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 20rem;\n    height: 3rem;\n    padding-right: 0.5rem;\n\n    span {\n      width: 100%;\n      text-align: center;\n      padding-left: 1rem;\n    }\n\n    &:not(:last-child) {\n      border-bottom: 1px solid black;\n    }\n\n    .drink-details {\n      display: flex;\n      flex-direction: column;\n      background-color: $ztGray;\n      position: absolute;\n      z-index: 20;\n      top: 8rem;\n      width: 20rem;\n      border-radius: 1rem;\n      cursor: default;\n\n      .drink-details-top {\n        display: flex;\n        flex-direction: row-reverse;\n        .drink-name {\n          padding-top: 1rem;\n          padding-bottom: 1rem;\n          width: 100%;\n          padding-left: 2.125rem;\n        }\n\n        .close-button {\n          position: relative;\n          right: 0;\n          color: red;\n          font-size: 2rem;\n          display: flex;\n          justify-content: flex-end;\n          cursor: pointer;\n          padding-top: 0.125rem;\n          padding-right: 0.125rem;\n        }\n      }\n\n      .drink-details-content {\n        padding-left: 1rem;\n        padding-right: 1rem;\n\n        .zt-input {\n          background-color: rgba($color: #fff, $alpha: 0.1);\n          width: 18rem;\n          width: 100%;\n        }\n\n        .drink-form {\n          padding-top: 1rem;\n        }\n\n        .time-div {\n          display: flex;\n          flex-direction: row;\n          column-gap: 0.5rem;\n        }\n\n        .zt-button-div {\n          padding-bottom: 1rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Drink      {{ drink.name }}                  close        {{ drink.name }}                    {{ drink.caloriesPerServing }} kcal/100 ml        {{ drink.abv }} %        {{ drink.ml }} ml        {{ drink.category }}                                                                                    Add                              '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink {\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n * Animation for drink list form.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class DrinkListComponent {\n  /**\n   * The from group for the drink.\n   */\n  drankForm = new FormGroup({\n    amount: new FormControl(null, [Validators.required, Validators.min(1)]),\n    hour: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(23),\n    ]),\n    minute: new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(59),\n    ]),\n  });\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe((drinks) => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  get amount() {\n    return this.drankForm.get('amount');\n  }\n\n  get hour() {\n    return this.drankForm.get('hour');\n  }\n\n  get minute() {\n    return this.drankForm.get('minute');\n  }\n\n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable {\n    return this.afs\n      .collection('drink')\n      .snapshotChanges()\n      .pipe(\n        map((actions) =>\n          actions.map((a) => {\n            const data = a.payload.doc.data() as Drink;\n            return data;\n          })\n        )\n      );\n  }\n\n  /**\n   * Stops mouse events on the drink when overlay is open.\n   * @param event The event for clicling on a drink.\n   * @param drink The clicked drink.\n   * @returns When a drink is selected\n   */\n  onDrinkClick(event: MouseEvent, drink: Drink): void {\n    if (this.selectedDrink === drink) {\n      event.stopPropagation();\n      return;\n    }\n\n    this.selectDrink(drink);\n  }\n\n  /**\n   * Adds back the ability to click on the X.\n   * @param event The event for clicking the X.\n   */\n  onCloseClick(event: MouseEvent): void {\n    event.stopPropagation();\n    this.selectedDrink = null;\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter((drink) =>\n      terms.every((term) => drink.name.toLowerCase().includes(term))\n    );\n  }\n\n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The currently selected drink.\n   * @returns If the data submitted is not valid.\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    if (!this.drankForm.valid) {\n      this.notyfService.error('Please provde valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    // This is needed so the form can be empty with strings then converted into numbers for checks.\n    const drinkData = {\n      amount:\n        this.drankForm.value.amount == null ? 0 : this.drankForm.value.amount,\n      hour: this.drankForm.value.hour == null ? 0 : this.drankForm.value.hour,\n      minute:\n        this.drankForm.value.minute == null ? 0 : this.drankForm.value.minute,\n    };\n\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n\n    console.log(drinkData.hour);\n    console.log(this.selectedDate);\n\n    console.log(Boolean(drinkData.hour));\n\n    if (\n      drinkData &&\n      drinkData.amount > 0 &&\n      drinkData.hour >= 0 &&\n      drinkData.minute >= 0 &&\n      this.selectedDate\n    ) {\n      // After the checks we turn the numbers into properly formatted time strings.\n      const preparedHour =\n        drinkData.hour \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/components/landing-page/landing-page.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/components/landing-page/landing-page.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  /**\n   *\n   * @param router Router for routing.\n   */\n  constructor(\n    private router: Router,\n    private navigationService: NavigationService\n  ) {}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister() {\n    this.navigationService.navigate('/auth/register');\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin() {\n    this.navigationService.navigate('/auth/login');\n  }\n}\n\n    \n\n    \n        \n  Welcome to\n  Zero Tolerance\n  no_drinks\n\n\n  Sign In\n  Sign Up\n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                h1.landing {\n  font-size: 2.25rem;\n  font-weight: bold;\n  padding-bottom: 1rem;\n}\n\ni {\n  font-size: 4rem;\n  padding-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Welcome to  Zero Tolerance  no_drinks  Sign In  Sign Up'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showHint\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/login/login.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/login/login.component.ts:23\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:49\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/login/login.component.ts:55\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { take } from 'rxjs';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email() {\n    return this.loginForm.get('email');\n  }\n  /**\n   * Gets the password input.\n   */\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Displays hint message.\n   */\n  showHint() {\n    this.notyfService.info(\n      'E-mail: valid forrmatPassword: min. 8 characters'\n    );\n  }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit() {\n    if (!this.loginForm.valid) {\n      this.notyfService.error('Please provide valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: async () => {\n        const user = await this.auth.user.pipe(take(1)).toPromise();\n        if (user) {\n          this.navigationService.navigate(\n            'tracking/home',\n            undefined,\n            undefined,\n            500,\n            300\n          );\n          this.notyfService.success('Logged in successfully');\n        } else {\n          this.notyfService.error('User not found');\n          this.spinnerService.hide();\n        }\n      },\n      error: (error) => {\n        this.spinnerService.hide();\n        console.log(error);\n        if (error.code === 'auth/invalid-login-credentials') {\n          this.notyfService.error('Invalid e-mail or password');\n        } else {\n          this.notyfService.error('Something went wrong');\n          console.error(error);\n        }\n      },\n    });\n  }\n}\n\n    \n\n    \n        Sign In\n\n\n  \n  \n\n  \n    Sign In\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sign In          Sign In        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateWithMenuClose\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, spinner: NgxSpinnerService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navigation/navigation.component.ts:16\n                            \n                        \n\n                \n                    \n                            Hides the loading spinner when the navigation has ended.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateWithMenuClose\n                        \n                    \n                \n            \n            \n                \nnavigateWithMenuClose(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Navigates to destination after navigation menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The path of the destination page.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navigation/navigation.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Toggles the navigation menu\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"closed\" | \"open\" | \"closing\" | \"closingSoft\"\n\n                    \n                \n                \n                    \n                        Default value : 'closed'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navigation/navigation.component.ts:39\n                        \n                    \n\n            \n                \n                    State variable for menu state.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { delay, filter } from 'rxjs/operators';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NavigationComponent {\n  /**\n   * Hides the loading spinner when the navigation has ended.\n   * @param router Router for routing.\n   */\n  constructor(\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private navigationService: NavigationService\n  ) {\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        delay(300)\n      )\n      .subscribe(() => {\n        this.spinner.hide();\n      });\n  }\n\n  /**\n   * State variable for menu state.\n   */\n  menuState: 'closed' | 'open' | 'closing' | 'closingSoft' = 'closed';\n\n  /**\n   * Toggles the navigation menu\n   */\n  toggleMenu() {\n    if (this.menuState === 'closed') {\n      this.menuState = 'open';\n    } else if (this.menuState === 'open') {\n      this.menuState = 'closing';\n      setTimeout(() => {\n        this.menuState = 'closed';\n      }, 500);\n    }\n  }\n\n  /**\n   * Navigates to destination after navigation menu.\n   * @param path The path of the destination page.\n   */\n  navigateWithMenuClose(path: string) {\n    let hideDelay = 300;\n\n    // Increased delay so we don't see the profile picture loading in.\n    if (path === '/profile/profile') {\n      hideDelay = 700;\n    }\n\n    this.navigationService.navigate(\n      path,\n      undefined,\n      () => {\n        this.menuState = 'closingSoft';\n        setTimeout(() => (this.menuState = 'closed'), 500);\n      },\n      hideDelay,\n      500\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Home\n      \n      \n        About Us\n      \n      \n        Profile\n      \n    \n  \n\n\n\n  \n    menu\n    menu_open\n  \n\n\n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @use \"variables\" as *;\n\n.hamburger-icon-container {\n  padding-top: 0rem;\n\n  .hamburger-icon {\n    position: fixed;\n    background: none;\n    border: none;\n    color: $ztWhite;\n    cursor: pointer;\n    z-index: 1000;\n    padding-top: 0.375rem;\n    padding-left: 0.375rem;\n\n    @media (min-width: 500px) {\n      padding-left: 0.75rem;\n    }\n  }\n\n  i {\n    position: absolute;\n    transition: opacity 0.5s ease;\n  }\n\n  .icon-visible {\n    opacity: 1;\n    pointer-events: auto;\n  }\n\n  .icon-hidden {\n    opacity: 0;\n    pointer-events: none;\n  }\n}\n\n.hamburger-menu-container {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background: rgba($color: $ztBlack, $alpha: 1);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  z-index: 997;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n\n  &.open {\n    transform: translateX(0);\n    transition: transform 0.3s ease-out, opacity 0.1s ease-out;\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &.closing {\n    transform: translateX(-100%);\n    transition: transform 0.5s ease-in, opacity 0.5s ease-in;\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 0;\n  }\n\n  &.closingSoft {\n    transform: translateX(-100%);\n    opacity: 1;\n    visibility: visible;\n    pointer-events: auto;\n    transition: transform 1s ease-in;\n  }\n}\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba($color: $ztBlack, $alpha: 0.5);\n  z-index: 996;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 1;\n\n  &.closing {\n    opacity: 0;\n  }\n}\n\n.menu-content {\n  color: $ztWhite;\n  z-index: 999;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n    padding: 0;\n    margin-top: 3rem;\n    margin-left: 1rem;\n    margin-right: 1rem;\n    row-gap: 0.5rem;\n  }\n\n  li {\n    cursor: pointer;\n    width: 100%;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n  }\n\n  a {\n    color: $ztWhite;\n    text-decoration: none;\n    width: 100%;\n    display: inline-block;\n    text-align: center;\n    font-size: 1.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home                    About Us                    Profile                  menu    menu_open  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Loading spinner service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate\n                        \n                    \n                \n            \n            \n                \nnavigate(path: string | any[], extras?: any, beforeNavigate?: () => void, delay: number, spinnerHideDelay: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/navigation.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Navigates to the desired path smoothly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                        string | any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The destination path.\n\n                                            \n                                        \n                                        \n                                                extras\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                beforeNavigate\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Optional method to be ran before navigation.\n\n                                            \n                                        \n                                        \n                                                delay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    300\n                                            \n\n                                            \n                                                    Delay time in ms.\n\n                                            \n                                        \n                                        \n                                                spinnerHideDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    200\n                                            \n\n                                            \n                                                    Delay time in ms for the spinner.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  /**\n   *\n   * @param router Router for routing.\n   * @param spinner Loading spinner service.\n   */\n  constructor(private router: Router, private spinner: NgxSpinnerService) {}\n\n  /**\n   * Navigates to the desired path smoothly.\n   * @param path The destination path.\n   * @param beforeNavigate Optional method to be ran before navigation.\n   * @param delay Delay time in ms.\n   * @param spinnerHideDelay Delay time in ms for the spinner.\n   */\n  navigate(\n    path: string | any[],\n    extras?: any,\n    beforeNavigate?: () => void,\n    delay: number = 300,\n    spinnerHideDelay: number = 200\n  ) {\n    this.spinner.show();\n\n    if (beforeNavigate) {\n      beforeNavigate();\n    }\n\n    setTimeout(() => {\n      this.router\n        .navigate(typeof path === 'string' ? [path] : path, extras)\n        .finally(() => {\n          setTimeout(() => this.spinner.hide(), spinnerHideDelay);\n        });\n    }, delay);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notyf/notyf.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true,\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true,\n      },\n      {\n        type: 'info',\n        background: '#368FF4',\n        dismissible: true,\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotyfService {\n  constructor() {}\n\n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true,\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true,\n      },\n      {\n        type: 'info',\n        background: '#368FF4',\n        dismissible: true,\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n\n  info(message: string): void {\n    this.notyf.open({\n      type: 'info',\n      message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { NavigationComponent } from '../shared/navigation/navigation.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AboutUsComponent, LandingPageComponent, PageNotFoundComponent],\n  imports: [SharedModule, PagesRoutingModule, CommonModule],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  { path: 'aboutus', component: AboutUsComponent },\n  { path: 'landing', component: LandingPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/profile/profile.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loading navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the spinner loading.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/profile/profile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:24\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:40\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:36\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:32\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:28\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/profile/profile.component.ts:44\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for the spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit() {\n    this.profileSub = this.route.paramMap.subscribe((params) => {\n      this.currentUserID = params.get('id') as string;\n      if (!this.currentUserID) {\n        this.userService\n          .getCurrentUserId()\n          .then((result: string | undefined) => {\n            const tempString: string = result || '';\n            this.currentUserID = tempString;\n\n            this.getUsername();\n            this.getRegisterDate();\n            this.getProfilePicture();\n            this.getGender();\n            this.getWeight();\n          });\n      }\n    });\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser() {\n    this.spinnerService.show();\n\n    setTimeout(() => {\n      this.authService.logoutUser().subscribe({\n        next: () => {\n          this.navigationService.navigate(\n            '/pages/landing',\n            undefined,\n            () => this.notyfService.success('Logged out successfully'),\n            500,\n            300\n          );\n        },\n      });\n    }, 300);\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\n      'profile-picture'\n    ) as HTMLImageElement;\n    profilePicHtml.src = picUrl\n      ? picUrl\n      : 'https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&';\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight() {\n    const userDocRef = this.afs.collection('user').doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats() {\n    this.navigationService.navigate(\n      '/profile/personalstats',\n      undefined,\n      undefined,\n      1000,\n      500\n    );\n  }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile() {\n    this.navigationService.navigate('/profile/updateprofile');\n  }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() {\n    this.navigationService.navigate('/admin/admin');\n  }\n}\n\n    \n\n    \n        \n  \n  {{ username }}\n  {{ registerDate }}\n  {{ gender }} - {{ weight }} kg\n\n\n  \n    Admin Page\n  \n  \n    Personal Stats\n  \n  \n    Update Profile\n  \n  Logout\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .info-div {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n\n  img {\n    width: 7rem;\n    border-radius: 5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ username }}  {{ registerDate }}  {{ gender }} - {{ weight }} kg      Admin Page        Personal Stats        Update Profile    Logout'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfileComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ProfileComponent, StatsComponent, UpdateProfileComponent],\n  imports: [SharedModule, ProfileRoutingModule, CommonModule],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\n\nconst routes: Routes = [\n  { path: 'profile', component: ProfileComponent },\n  { path: 'personalstats', component: StatsComponent },\n  { path: 'updateprofile', component: UpdateProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RedirectComponent.html":{"url":"components/RedirectComponent.html","title":"component - RedirectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RedirectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/redirect/redirect/redirect.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-redirect\n            \n\n\n\n            \n                styleUrls\n                ./redirect.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./redirect.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/redirect/redirect/redirect.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/redirect/redirect/redirect.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { take } from 'rxjs';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\n\n@Component({\n  selector: 'app-redirect',\n  templateUrl: './redirect.component.html',\n  styleUrls: ['./redirect.component.scss'],\n})\nexport class RedirectComponent {\n  constructor(\n    private authService: AuthenticationService,\n    private navigationService: NavigationService\n  ) {}\n\n  ngOnInit() {\n    this.authService\n      .isUser()\n      .pipe(take(1))\n      .subscribe((user) => {\n        if (user) {\n          this.navigationService.navigate('/tracking/home');\n        } else {\n          this.navigationService.navigate('/pages/landing');\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./redirect.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RedirectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RedirectGuard.html":{"url":"guards/RedirectGuard.html","title":"guard - RedirectGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RedirectGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/redirect.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, navigationService: NavigationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/redirect.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/redirect.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Redirects a UrlTree so redirecting to it works.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                Returns if no redirect happened.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { map, Observable, take } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { NavigationService } from '../services/navigation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedirectGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param navigationService Service for loading spinner navigation.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private navigationService: NavigationService,\n    private router: Router\n  ) {}\n\n  /**\n   * Redirects a UrlTree so redirecting to it works.\n   * @returns Returns if no redirect happened.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isUser().pipe(\n      take(1),\n      map((user) => {\n        if (user) {\n          return this.router.createUrlTree(['/tracking/home']);\n        } else {\n          return this.router.createUrlTree(['/pages/landing']);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                    Async\n                                registerSubmit\n                            \n                            \n                                showHint\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, afs: AngularFirestore, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/register/register.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/register/register.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl(false, Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/register/register.component.ts:28\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:67\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:73\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:79\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:85\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:91\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/components/register/register.component.ts:97\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\n\n/**\n * Handles user registration.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  /**\n   * Form for user registration.\n   */\n  registerForm = new FormGroup(\n    {\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n      ]),\n      confirmPassword: new FormControl('', Validators.required),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n      gender: new FormControl(false, Validators.required), // Gender must be selected\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param authService Service for user authentication.\n   * @param afs Angular Firestore.\n   * @param notyfService Service for displaying notifications.\n   * @param navigationService Service for loading spinner navigation.\n   * @param spinnerService Service for spinner.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private afs: AngularFirestore,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the input username.\n   */\n  get username() {\n    return this.registerForm.get('username');\n  }\n  /**\n   * Gets the input e-mail.\n   */\n  get email() {\n    return this.registerForm.get('email');\n  }\n  /**\n   * Gets the input password.\n   */\n  get password() {\n    return this.registerForm.get('password');\n  }\n  /**\n   * Gets the input confirmed password.\n   */\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n  /**\n   * Gets the input weight.\n   */\n  get weight() {\n    return this.registerForm.get('weight');\n  }\n  /**\n   * Gets the input gender.\n   */\n  get gender() {\n    return this.registerForm.get('gender');\n  }\n\n  /**\n   * Displays hint message.\n   */\n  showHint() {\n    this.notyfService.info(\n      'Username: min. 3 charactersE-mail: valid formatPassword: min. 8 charactersWeight: min. 30 kilograms'\n    );\n  }\n\n  /**\n   * Checks if the two passwords typed in the `registerForm` match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length  {\n          this.notyfService.success('Registered successfully');\n          this.authService.logoutUser();\n          this.navigationService.navigate(\n            'auth/login',\n            undefined,\n            undefined,\n            500,\n            300\n          );\n        },\n        error: (error) => {\n          this.spinnerService.hide();\n          this.notyfService.error('Something went wrong');\n        },\n      });\n  }\n}\n\n    \n\n    \n        Sign Up\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n  \n    \n      \n        {{ !!registerForm.value.gender ? \"female\" : \"male\" }}\n      \n    \n  \n\n  \n    Sign Up\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sign Up                                {{ !!registerForm.value.gender ? \"female\" : \"male\" }}                  Sign Up        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nRedirectComponent\n\nRedirectComponent\n\nSharedModule -->\n\nRedirectComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            RedirectComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { RedirectComponent } from './redirect/redirect/redirect.component';\n\n@NgModule({\n  declarations: [TrimDecimalsPipe, NavigationComponent, RedirectComponent],\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n  exports: [\n    CommonModule,\n    TrimDecimalsPipe,\n    NavigationComponent,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxChartsModule,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/components/stats/stats.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [200, 200]\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss'],\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [200, 200];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n\n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {\n        drinkAmounts?: Record;\n      };\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return {\n        name: `${day.date.getMonth() + 1}.${day.date.getDate()}`,\n        value: drinkCount,\n      };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as {\n        drinkAmounts?: Record;\n      };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(\n      ([category, count]) => ({\n        name: category,\n        value: count,\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n  \n    Distribution of Drinks (by category)\n  \n\n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                // .stats-container {\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 20px;\n//   overflow-y: auto;\n//   height: 80vh;\n// }\n\n// .chart-container {\n//   display: flex;\n//   flex-wrap: wrap;\n//   justify-content: space-around;\n//   align-items: center;\n// }\n\n// .chart-section {\n//   flex: 1 1 auto;\n//   max-width: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   max-height: 35vh;\n// }\n\n// ::ng-deep .ngx-charts text {\n//   fill: white !important;\n// }\n\n// @media (min-aspect-ratio: 4/3) {\n//   .stats-container {\n//     flex-direction: row;\n//     justify-content: center;\n//   }\n\n//   .chart-section {\n//     flex: 1 1 50%;\n//     max-width: 50%;\n//   }\n// }\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n.charts-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 100%;\n  max-height: 40rem;\n  overflow: hidden;\n}\n\n.chart-container ::ng-deep ngx-charts-bar-vertical,\n.chart-container ::ng-deep ngx-charts-pie-chart {\n  width: 100% !important;\n  max-width: 100%;\n  height: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Distribution of Drinks (by category)  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingModule.html":{"url":"modules/TrackingModule.html","title":"module - TrackingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrackingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TrackingRoutingModule } from './tracking-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DrinkListComponent, HomeComponent],\n  imports: [SharedModule, TrackingRoutingModule, CommonModule],\n})\nexport class TrackingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingRoutingModule.html":{"url":"modules/TrackingRoutingModule.html","title":"module - TrackingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tracking/tracking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AdminGuard } from '../core/guards/admin.guard';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'drinklist', component: DrinkListComponent },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrackingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                            \n                                showHint\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService, navigationService: NavigationService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for spinner loaidng navigation.\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for loading spinner.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHint\n                        \n                    \n                \n            \n            \n                \nshowHint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Displays hint message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/components/update-profile/update-profile.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:42\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:34\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.minLength(8)]),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl(false, Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:47\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:30\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/components/update-profile/update-profile.component.ts:38\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:90\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:96\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:102\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:108\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/components/update-profile/update-profile.component.ts:114\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Handles user profile update.\n */\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.scss'],\n})\nexport class UpdateProfileComponent implements OnInit {\n  /**\n   * User's username from the database.\n   */\n  usernameFromDB: string;\n  /**\n   * User's profile picture from the database.\n   */\n  profilePicUrlFromDB: string;\n  /**\n   * User's weight from the database.\n   */\n  weightFromDB: number;\n  /**\n   * User's gender from the database.\n   */\n  genderFromDB: string;\n\n  /**\n   * Form group for profile update data.\n   */\n  updateProfileForm = new FormGroup(\n    {\n      password: new FormControl('', [Validators.minLength(8)]),\n      confirmPassword: new FormControl('', [Validators.minLength(8)]),\n      profilePicUrl: new FormControl(''),\n      weight: new FormControl('', [Validators.required, Validators.min(30)]),\n      gender: new FormControl(false, Validators.required),\n    },\n    { validators: this.passwordsMatchValidator() }\n  );\n\n  /**\n   *\n   * @param router Router for routing.\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param afAuth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loaidng navigation.\n   * @param spinnerService Service for loading spinner.\n   */\n  constructor(\n    private router: Router,\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private afAuth: AngularFireAuth,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Gets user's data on initialization.\n   */\n  ngOnInit(): void {\n    this.getUsername();\n    this.getGenderAndWeight();\n    this.getProfilePicUrl();\n  }\n\n  /**\n   * Gets user's input profile picture.\n   */\n  get profilePicUrl() {\n    return this.updateProfileForm.get('profilePicUrl');\n  }\n  /**\n   * Gets user's input password.\n   */\n  get password() {\n    return this.updateProfileForm.get('password');\n  }\n  /**\n   * Gets user' input password confirmation.\n   */\n  get confirmPassword() {\n    return this.updateProfileForm.get('confirmPassword');\n  }\n  /**\n   * Gets user's input weight.\n   */\n  get weight() {\n    return this.updateProfileForm.get('weight');\n  }\n  /**\n   * Gets user's input gender.\n   */\n  get gender() {\n    return this.updateProfileForm.get('gender');\n  }\n\n  /**\n   * Checks if the input passwords match.\n   * @returns True flag if passwords match\n   */\n  passwordsMatchValidator(): ValidatorFn {\n    return (AbsControl: AbstractControl): ValidationErrors | null => {\n      const password = AbsControl.get('password')?.value;\n      const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n      if (password && password !== confirmPassword) {\n        return { passwordsDontMatch: true };\n      } else if (\n        password != '' &&\n        (password.length Password: min. 8 charactersWeight: min. 30 kilograms'\n    );\n  }\n\n  /**\n   * Submits data for profile update.\n   * @returns If userID is invalid returns.\n   */\n  async updateProfileSubmit() {\n    const user = this.userService.getCurrentUserId();\n    if (!user) {\n      console.error('User not logged in');\n      this.notyfService.error('User is not logged in');\n      return;\n    }\n\n    if (this.updateProfileForm.invalid) {\n      this.notyfService.error('Please provide valid data');\n      return;\n    }\n\n    this.spinnerService.show();\n\n    const updates: any = {};\n    const userId = await this.userService.getUserId();\n    const userDocRef = this.afs.collection('user').doc(userId).ref;\n\n    const newProfilePicUrl = (\n      document.getElementById('profile-picture-input') as HTMLInputElement\n    ).value;\n    if (\n      newProfilePicUrl !== this.profilePicUrlFromDB &&\n      newProfilePicUrl != ''\n    ) {\n      this.profilePicUrlFromDB = newProfilePicUrl;\n      userDocRef\n        .update({ profilePicUrl: newProfilePicUrl })\n        .then(() => this.notyfService.success('Profile updated successfully'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = !!this.gender?.value ? 'female' : 'male';\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef\n        .update(updates)\n        .then(() => this.notyfService.success('Profile updated successfully'));\n    }\n\n    const newPassword = this.password?.value;\n    if (newPassword) {\n      try {\n        const currentUser = await this.afAuth.currentUser;\n        if (currentUser) {\n          await currentUser.updatePassword(newPassword);\n          this.notyfService.success('Profile updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating password: ', error);\n        this.notyfService.error('Something went wrong');\n        // this.spinnerService.hide();\n      }\n    }\n\n    this.navigationService.navigate(\n      'profile/profile',\n      undefined,\n      undefined,\n      500,\n      300\n    );\n  }\n}\n\n    \n\n    \n        Update Profile\n\n\n  \n\n  \n\n  \n\n  \n    \n    kg\n  \n\n  \n  \n    \n      \n        {{ !!updateProfileForm.value.gender ? \"female\" : \"male\" }}\n      \n    \n  \n\n  \n    Update Profile\n  \n  \n    help_outline\n  \n\n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .update-form > div {\n  display: flex;\n  flex-direction: row-reverse;\n  .unit {\n    position: absolute;\n    width: 100%;\n    transform: translateY(55%);\n    padding-right: 0.75rem;\n    pointer-events: none;\n    text-align: right;\n    color: rgba($color: grey, $alpha: 0.5);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Update Profile                kg                        {{ !!updateProfileForm.value.gender ? \"female\" : \"male\" }}                  Update Profile        help_outline  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RedirectComponent', 'selector': 'app-redirect'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tracking/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DateService } from 'src/app/core/services/date.service';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { NotyfService } from 'src/app/core/services/notyf/notyf.service';\nimport { NavigationService } from 'src/app/core/services/navigation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: {\n    [key: string]: {\n      id: string;\n      amount: number;\n      calories: number;\n      alcohol: number;\n      time: string;\n    }[];\n  };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('scale', [\n      transition(':enter', [\n        style({ transform: 'scale(0.8)', opacity: 0 }),\n        animate('200ms ease-out', style({ transform: 'scale(1)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({ transform: 'scale(0.8)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('slide', [\n      transition(':enter', [\n        style({ transform: 'translateY(-20px)', opacity: 0 }),\n        animate(\n          '300ms ease-out',\n          style({ transform: 'translateY(0)', opacity: 1 })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '300ms ease-in',\n          style({ transform: 'translateY(-20px)', opacity: 0 })\n        ),\n      ]),\n    ]),\n    trigger('fadeDate', [\n      transition('* => *', [\n        style({ opacity: 0, transform: 'scale(0.9)' }),\n        animate('200ms ease-out', style({ opacity: 1, transform: 'scale(1)' })),\n      ]),\n    ]),\n    trigger('slideGrow', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-10px)',\n          maxHeight: '0',\n          overflow: 'hidden',\n        }),\n        animate(\n          '300ms ease-out',\n          style({\n            opacity: 1,\n            transform: 'translateY(0)',\n            maxHeight: '1000px',\n          })\n        ),\n      ]),\n      transition(':leave', [\n        animate(\n          '200ms ease-in',\n          style({\n            opacity: 0,\n            transform: 'translateY(-10px)',\n            maxHeight: '0',\n            overflow: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Boolean for showing totals.\n   */\n  isTotalsShown: Boolean = false;\n  /**\n   * Variable to help date change animation.\n   */\n  dateAnimationKey = 0;\n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param navigationService Service for spinner loading navigation.\n   * @param spinnerService Service for spinner loading.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private notyfService: NotyfService,\n    private navigationService: NavigationService,\n    private spinnerService: NgxSpinnerService\n  ) {}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n\n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe((date) => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Shows the totals panel.\n   */\n  showTotals() {\n    this.isTotalsShown = true;\n  }\n\n  /**\n   * Hides the totals panel.\n   */\n  hideTotals() {\n    this.isTotalsShown = false;\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs\n        .collection('user')\n        .doc(currentUserID)\n        .get()\n        .toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n\n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(\n        this.selectedDate.getMonth() + 1\n      )\n        .toString()\n        .padStart(2, '0')}-${this.selectedDate\n        .getDate()\n        .toString()\n        .padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as {\n          drinkAmounts?: Record;\n        };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts)\n              .map(([name, detailsArray]) => {\n                return detailsArray.map((detail) => ({\n                  name,\n                  id: detail.id,\n                  amount: detail.amount,\n                  calories: detail.calories,\n                  alcohol: detail.alcohol,\n                  time: detail.time,\n                }));\n              })\n              .flat()\n          : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n\n  /**\n   * Calculates estimated BAC and sober time\n   * @returns The date object for today's drinks or nothing if there is an error.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available or invalid for BAC calculation.');\n      return;\n    }\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015;\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    let selectedDateObj = this.selectedDate;\n\n    // Handle drinksForTheDay being null or undefined\n    // Construct full date objects for drink times\n    const allDrinksToday = (this.drinksForTheDay || [])\n      .map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(selectedDateObj);\n        drinkDate.setHours(hours, minutes, 0, 0);\n        return { ...drink, drinkDate, alcohol: Number(drink.alcohol) || 0 };\n      })\n      .filter((drink) => drink !== null) as {\n      alcohol: number;\n      drinkDate: Date;\n      [key: string]: any;\n    }[]; // Type assertion after filter for array\n\n    allDrinksToday.sort(\n      (a, b) => a.drinkDate.getTime() - b.drinkDate.getTime()\n    );\n\n    // Calculate current BAC\n    let currentBacInternal = 0;\n    let lastProcessedDrinkTimeForBac: Date | null = null;\n\n    const pastAndCurrentDrinks = allDrinksToday.filter(\n      (drink) => drink.drinkDate  0) {\n      // Initialize with the time of the first relevant drink\n      lastProcessedDrinkTimeForBac = new Date(\n        pastAndCurrentDrinks[0].drinkDate.getTime()\n      );\n\n      for (const drink of pastAndCurrentDrinks) {\n        // Metabolize BAC from lastProcessedDrinkTimeForBac up to current drink's time\n        if (\n          currentBacInternal > 0 &&\n          drink.drinkDate > lastProcessedDrinkTimeForBac\n        ) {\n          const hoursElapsed =\n            (drink.drinkDate.getTime() -\n              lastProcessedDrinkTimeForBac.getTime()) /\n            (1000 * 60 * 60);\n          currentBacInternal -= metabolismRate * hoursElapsed;\n          currentBacInternal = Math.max(0, currentBacInternal);\n        }\n\n        lastProcessedDrinkTimeForBac = new Date(drink.drinkDate.getTime());\n\n        // Add BAC from the current drink\n        currentBacInternal +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // Metabolize from the time of the last consumed past drink up to current time\n      if (\n        currentBacInternal > 0 &&\n        lastProcessedDrinkTimeForBac &&\n        currentTime > lastProcessedDrinkTimeForBac\n      ) {\n        const hoursElapsedSinceLastDrink =\n          (currentTime.getTime() - lastProcessedDrinkTimeForBac.getTime()) /\n          (1000 * 60 * 60);\n        currentBacInternal -= metabolismRate * hoursElapsedSinceLastDrink;\n      }\n    }\n    this.bac = Math.max(0, currentBacInternal);\n\n    // Estimate sober time for the day\n    let simulatedBac = 0;\n    let currentSimTime: Date | null = null;\n\n    if (allDrinksToday.length === 0) {\n      this.soberTime = null;\n    } else {\n      // Start simulation from the time of the first drink\n      currentSimTime = new Date(allDrinksToday[0].drinkDate.getTime());\n\n      for (const drink of allDrinksToday) {\n        // Metabolize existing BAC from currentSimTime up to this drink's time\n        if (simulatedBac > 0 && drink.drinkDate > currentSimTime) {\n          const hoursToDrink =\n            (drink.drinkDate.getTime() - currentSimTime.getTime()) /\n            (1000 * 60 * 60);\n          simulatedBac -= metabolismRate * hoursToDrink;\n          simulatedBac = Math.max(0, simulatedBac);\n        }\n\n        // Advance simulation time to the current drink's time\n        currentSimTime = new Date(\n          Math.max(currentSimTime.getTime(), drink.drinkDate.getTime())\n        );\n\n        // Add BAC from this drink\n        simulatedBac +=\n          (drink.alcohol / (weightInGrams * bodyWaterConstant)) * 100;\n      }\n\n      // Calculate time to zero from currentSimTime (time of last drink's effect)\n      if (simulatedBac > 0 && currentSimTime) {\n        const hoursToSober = simulatedBac / metabolismRate;\n        this.soberTime = new Date(\n          currentSimTime.getTime() + hoursToSober * 60 * 60 * 1000\n        );\n      } else if (currentSimTime) {\n        this.soberTime = new Date(currentSimTime.getTime());\n      } else {\n        // Shouldn't happen if allDrinksToday but fallback\n        this.soberTime = null;\n      }\n    }\n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce(\n      (sum, drink) => sum + (drink.calories || 0),\n      0\n    );\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(direction: string) {\n    const originalDate = new Date(document.getElementById('date')!.innerHTML);\n\n    if (direction === 'back') {\n      const prevDay = originalDate;\n      prevDay.setDate(originalDate.getDate() - 1);\n      this.dateService.setSelectedDate(prevDay);\n    } else if (direction === 'forward') {\n      const nextDay = originalDate;\n      nextDay.setDate(originalDate.getDate() + 1);\n      this.dateService.setSelectedDate(nextDay);\n    }\n    // Since angular animations only trigger when the bound element's state changes\n    // we need this key to always change\n    this.dateAnimationKey++;\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks() {\n    this.navigationService.navigate('/tracking/drinklist');\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(\n      this.selectedDate.getMonth() + 1\n    )\n      .toString()\n      .padStart(2, '0')}-${this.selectedDate\n      .getDate()\n      .toString()\n      .padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n\n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n\n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex(\n              (entry: any) => entry.id === drink.id\n            );\n\n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break;\n            }\n          }\n\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/user.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGuard implements CanActivate {\n  /**\n   *\n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService) {}\n\n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate():\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.authService.isUser();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:36\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n\n  /**\n   *\n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    const user = await firstValueFrom(this.auth.authState);\n    if (user) {\n      const userDocs = await this.afs\n        .collection('user', (ref) => ref.where('email', '==', user.email))\n        .get()\n        .toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/pages/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId() {\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error) {\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail() {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userRef = this.afs.collection('user').doc(await this.getUserId());\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString() {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/admin/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/redirect.guard.ts\n            \n            guard\n            RedirectGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/pages/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/profile/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/profile/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/shared/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/redirect/redirect/redirect.component.ts\n            \n            component\n            RedirectComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tracking/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (23/24)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tracking/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            animate.css : ^4.1.1\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            material-design-icons-iconfont : ^6.7.0\n        \n            ngx-spinner : ^15.0.1\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackingModule\n\n\n\ncluster_TrackingModule_declarations\n\n\n\ncluster_TrackingModule_imports\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminFormComponent->AdminModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAdminModule -->\n\nAdminPageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nSharedModule->NavigationComponent \n\n\n\n\n\nTrimDecimalsPipe \n\nTrimDecimalsPipe \n\nTrimDecimalsPipe  -->\n\nSharedModule->TrimDecimalsPipe \n\n\n\n\n\nTrackingModule\n\nTrackingModule\n\nTrackingModule -->\n\nSharedModule->TrackingModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\nPagesModule -->\n\nAboutUsComponent->PagesModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nPagesModule -->\n\nLandingPageComponent->PagesModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nPagesModule -->\n\nPageNotFoundComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nProfileModule -->\n\nStatsComponent->ProfileModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nProfileModule -->\n\nUpdateProfileComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nSharedModule -->\n\nNavigationComponent->SharedModule\n\n\n\n\n\nRedirectComponent\n\nRedirectComponent\n\nSharedModule -->\n\nRedirectComponent->SharedModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nSharedModule -->\n\nTrimDecimalsPipe->SharedModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nTrackingModule -->\n\nDrinkListComponent->TrackingModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nTrackingModule -->\n\nHomeComponent->TrackingModule\n\n\n\n\n\nTrackingRoutingModule\n\nTrackingRoutingModule\n\nTrackingModule -->\n\nTrackingRoutingModule->TrackingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        29 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
