var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutUsComponent.html",[0,0.066,1,0.737]],["body/components/AboutUsComponent.html",[0,0.113,1,1.325,2,1.505,3,0.337,4,0.297,5,1.26,6,1.26,7,1.26,8,1.26,9,0.297,10,4.851,11,3.823,12,3.442,13,0.465,14,2.884,15,1.446,16,1.177,17,1.303,18,1.219,19,1.061,20,5.745,21,1.061,22,5.211,23,0.421,24,1.061,25,1.524,26,1.061,27,4.076,28,1.611,29,0.913,30,4.076,31,0.83,32,0.027,33,0.533,34,0.421,35,0.83,36,4.076,37,0.465,38,0.771,39,0.483,40,0.337,41,1.26,42,0.337,43,0.297,44,0.83,45,1.444,46,5.211,47,5.211,48,4.401,49,5.211,50,4.401,51,4.401,52,6.055,53,5.211,54,5.211,55,5.211,56,2.884,57,4.401,58,5.211,59,5.211,60,2.884,61,5.745,62,1.444,63,3.442,64,1.444,65,0.892,66,1.444,67,1.444,68,1.348,69,1.979,70,1.547,71,1.979,72,1.66,73,2.123,74,2.123,75,3.442,76,2.078,77,1.979,78,1.846,79,1.785,80,2.712,81,3.442,82,1.66,83,1.099,84,1.611,85,1.406,86,1.26,87,1.871,88,1.26,89,1.26,90,0.892,91,1.312,92,1.26,93,0.892,94,1.611,95,0.957,96,1.26,97,0.66,98,0.714,99,1.26,100,0.771,101,1.26,102,0.892,103,1.177,104,0.892,105,1.26,106,0.957,107,1.26,108,0.892,109,1.26,110,0.892,111,1.26,112,0.892,113,1.26,114,0.892,115,1.26,116,0.892,117,1.099,118,1.177,119,1.26,120,1.26,121,0.02,122,0.02]],["title/components/AdminFormComponent.html",[0,0.066,90,0.737]],["body/components/AdminFormComponent.html",[0,0.101,1,0.526,2,1.041,3,0.198,4,0.175,5,0.743,6,0.743,7,0.743,8,0.743,9,0.175,13,0.412,15,1.211,16,0.694,17,1.214,18,1.125,19,0.734,21,0.734,23,0.248,24,0.734,25,1.211,26,0.734,28,1.454,29,0.984,31,0.489,32,0.027,33,0.558,34,0.497,35,0.489,37,0.494,38,0.91,39,0.502,40,0.198,41,0.743,42,0.198,43,0.175,44,1.05,45,0.851,60,3.73,62,1.826,64,1.826,65,0.947,66,1.704,67,1.826,68,1.705,69,1.957,70,0.912,71,1.644,72,0.979,73,1.469,74,1.469,76,1.225,77,1.644,78,1.534,79,1.579,82,1.469,83,0.648,84,1.115,85,0.973,86,0.743,87,1.487,88,0.743,89,0.743,90,1.053,91,1.645,92,0.743,93,0.526,94,1.115,95,0.564,96,0.743,97,0.389,98,1.178,99,0.743,100,0.454,101,0.743,102,0.526,103,0.694,104,0.526,105,0.743,106,0.564,107,0.743,108,0.526,109,0.743,110,0.526,111,0.743,112,0.526,113,0.743,114,0.526,115,0.743,116,0.526,117,1.168,118,0.694,119,0.743,120,0.743,121,0.014,122,0.014,123,4.285,124,3.843,125,2.029,126,3.607,127,3.045,128,2.106,129,3.607,130,1.701,131,4.329,132,3.607,133,0.584,134,4.329,135,5.615,136,5.155,137,4.811,138,1.432,139,4.811,140,2.403,141,4.811,142,1.389,143,1.389,144,1.859,145,1.454,146,3.607,147,2.046,148,1.271,149,3.607,150,2.4,151,3.656,152,2.4,153,3.607,154,4.811,155,1.193,156,3.045,157,4.811,158,3.607,159,3.607,160,3.607,161,1.143,162,4.329,163,3.607,164,0.847,165,1.25,166,1.369,167,0.91,168,0.973,169,1.193,170,0.734,171,2.403,172,1.389,173,3.607,174,3.045,175,3.607,176,2.403,177,3.607,178,2.403,179,1.996,180,3.607,181,4.571,182,4.329,183,2.042,184,4.329,185,4.063,186,4.329,187,4.329,188,3.201,189,4.811,190,1.563,191,1.193,192,2.881,193,2.403,194,3.212,195,0.734,196,1.989,197,0.789,198,2.403,199,1.487,200,1.369,201,3.607,202,2.4,203,2.179,204,2.4,205,2.676,206,0.648,207,1.599,208,1.33,209,0.648,210,0.743,211,0.975,212,1.298,213,2.403,214,2.179,215,2.403,216,3.607,217,2.863,218,2.863,219,2.853,220,3.107,221,4.329,222,4.329,223,4.329,224,4.24,225,5.414,226,5.414,227,2.403,228,3.607,229,2.403,230,2.403,231,0.743,232,2.403,233,2.403,234,2.403,235,3.607,236,2.403,237,2.403,238,2.403,239,0.851,240,2.403,241,0.912,242,1.193,243,2.403,244,1.469,245,1.225,246,2.403,247,1.33,248,2.029,249,0.912,250,0.795,251,0.795,252,0.795,253,0.912,254,1.33,255,1.579,256,4.811,257,1.579,258,2.4,259,3.607,260,3.045,261,1.996,262,1.839,263,0.979,264,0.912,265,1.134,266,1.644,267,0.979,268,1.783,269,1.225,270,2.029,271,1.134,272,1.644,273,1.96,274,1.33,275,1.369,276,1.763,277,1.763,278,2.71,279,1.225,280,1.33,281,0.947,282,2.4,283,1.452,284,1.052,285,1.469,286,1.579,287,1.469,288,1.469,289,1.469,290,1.052,291,1.052,292,2.403,293,1.599,294,2.403,295,2.403,296,1.225,297,2.403]],["title/guards/AdminGuard.html",[298,2.034,299,2.24]],["body/guards/AdminGuard.html",[3,0.371,4,0.327,9,0.327,13,0.685,23,0.464,24,1.128,26,0.915,29,0.971,31,1.128,32,0.027,33,0.514,34,0.572,35,1.128,37,0.716,39,0.581,40,0.371,42,0.371,43,0.327,91,1.651,121,0.021,122,0.021,144,1.712,167,1.047,170,1.335,191,1.833,200,2.103,202,3.686,209,1.212,211,1.136,214,3.964,298,3.348,299,3.686,300,3.333,301,3.794,302,4.778,303,2.989,304,2.958,305,4.492,306,3.63,307,2.613,308,3.794,309,5.295,310,5.295,311,4.492,312,3.63,313,4.778,314,4.678,315,2.63,316,5.072,317,2.103,318,1.706,319,3.333,320,2.486,321,1.967,322,1.591,323,1.83,324,1.055,325,4.492]],["title/components/AdminPageComponent.html",[0,0.066,93,0.737]],["body/components/AdminPageComponent.html",[0,0.092,1,0.597,2,1.144,3,0.225,4,0.199,5,0.844,6,0.844,7,0.844,8,0.844,9,0.199,13,0.584,15,1.174,16,0.788,17,1.238,18,1.148,19,0.807,21,0.807,23,0.282,24,0.807,25,1.289,26,0.807,28,1.508,29,1.025,31,0.95,32,0.027,33,0.504,34,0.585,35,0.95,37,0.62,38,1.173,39,0.504,40,0.225,41,0.844,42,0.225,43,0.199,44,1.042,45,0.967,60,3.137,62,1.653,64,1.653,65,0.867,66,0.967,67,0.967,68,0.903,69,2.152,70,1.037,71,1.505,72,1.112,73,1.614,74,1.614,76,1.392,77,1.505,78,1.404,79,2.241,82,1.112,83,0.736,84,1.225,85,1.069,86,0.844,87,1.582,88,0.844,89,0.844,90,0.597,91,1.687,92,0.844,93,1.12,94,1.225,95,0.641,96,0.844,97,0.442,98,1.178,99,0.844,100,0.516,101,0.844,102,0.597,103,0.788,104,0.597,105,0.844,106,0.641,107,0.844,108,0.597,109,0.844,110,0.597,111,0.844,112,0.597,113,0.844,114,0.597,115,0.844,116,0.597,117,0.736,118,0.788,119,0.844,120,0.844,121,0.015,122,0.015,123,4.445,128,2.482,130,2.414,133,0.642,142,1.347,143,1.478,144,1.917,145,1.508,147,1.404,148,1.202,156,4.787,161,1.042,164,0.931,165,1.478,166,1.505,167,0.968,168,1.069,169,1.311,170,1.042,172,0.788,183,1.869,190,1.347,195,0.95,197,0.597,199,1.752,206,0.736,209,0.736,210,0.844,211,1.072,214,1.65,244,1.112,250,0.903,251,0.903,252,0.903,253,1.505,261,2.832,262,2.02,263,1.614,264,1.505,265,1.288,266,1.943,267,1.614,272,1.505,273,2.085,275,1.037,276,2.085,277,1.614,278,2.241,281,0.867,282,2.637,283,3.093,285,1.112,286,1.195,287,1.112,288,1.112,289,1.112,290,1.195,291,1.195,293,2.637,296,1.392,312,2.193,326,3.987,327,2.026,328,3.963,329,1.069,330,3.963,331,2.719,332,3.963,333,3.963,334,1.771,335,3.346,336,3.987,337,3.963,338,3.939,339,3.346,340,3.963,341,3.963,342,5.118,343,5.118,344,1.511,345,3.346,346,3.963,347,2.73,348,3.963,349,3.963,350,3.963,351,3.616,352,3.963,353,2.73,354,2.832,355,3.963,356,1.505,357,2.73,358,2.637,359,2.73,360,2.73,361,2.02,362,3.963,363,2.73,364,2.73,365,2.73,366,1.817,367,3.963,368,2.73,369,1.817,370,2.73,371,2.73,372,2.73,373,1.817,374,2.306,375,1.817,376,2.395,377,3.963,378,2.73,379,4.665,380,2.306,381,2.73,382,2.026,383,2.73,384,2.73,385,2.637,386,1.869,387,2.395,388,1.817,389,1.817,390,2.026,391,3.284,392,2.94,393,2.94,394,2.94,395,2.94,396,2.94,397,1.65,398,2.026,399,1.65,400,1.817,401,1.511]],["title/components/AppComponent.html",[0,0.066,95,0.791]],["body/components/AppComponent.html",[0,0.115,1,0.924,2,1.539,3,0.349,4,0.307,5,1.305,6,1.305,7,1.305,8,1.305,9,0.307,15,1.063,16,1.219,17,1.308,18,1.218,19,1.085,21,1.085,23,0.436,24,1.085,25,1.544,26,0.86,29,1.075,31,0.86,32,0.027,33,0.542,34,0.55,35,0.86,37,0.482,38,0.798,39,0.494,40,0.349,42,0.349,43,0.307,44,0.86,83,1.139,84,1.647,85,1.437,86,1.305,87,1.896,88,1.305,89,1.305,90,0.924,91,1.342,92,1.305,93,0.924,94,1.647,95,1.441,96,1.305,97,0.684,98,0.74,99,1.305,100,0.798,101,1.305,102,0.924,103,1.219,104,0.924,105,1.305,106,0.992,107,1.305,108,0.924,109,1.305,110,0.924,111,1.305,112,0.924,113,1.305,114,0.924,115,1.305,116,0.924,117,1.139,118,1.219,119,1.305,120,1.305,121,0.02,122,0.02,133,0.863,144,1.996,172,1.539,195,0.86,197,1.166,203,2.552,209,1.139,231,1.647,321,2.334,322,1.888,323,1.72,402,3.566,403,2.755,404,5.84,405,5.33,406,5.84,407,5.84,408,3.133,409,5.84,410,6.134,411,5.33,412,4.223,413,3.954,414,3.954,415,4.223,416,4.223,417,4.223,418,4.223,419,4.223,420,4.223,421,2.552]],["title/modules/AppModule.html",[422,1.863,423,2.24]],["body/modules/AppModule.html",[1,1.255,3,0.233,4,0.206,9,0.206,11,1.881,18,0.495,32,0.027,39,0.654,40,0.233,42,0.233,43,0.206,50,2.386,83,0.762,90,1.255,93,1.255,95,1.502,97,0.929,100,1.085,102,1.255,104,1.255,106,1.347,108,1.255,110,1.255,112,1.255,114,1.255,116,1.255,121,0.016,122,0.016,124,1.881,206,0.762,208,2.248,326,1.881,334,1.073,422,1.564,423,4.646,424,1.708,425,1.881,426,4.017,427,3.529,428,3.431,429,2.097,430,2.386,431,2.386,432,2.386,433,2.386,434,3.466,435,3.466,436,4.99,437,4.391,438,4.844,439,4.391,440,4.99,441,4.391,442,4.99,443,4.391,444,3.431,445,2.386,446,1.073,447,2.826,448,3.431,449,2.826,450,2.826,451,2.826,452,2.826,453,3.431,454,3.431,455,3.014,456,1.881,457,4.063,458,4.063,459,4.063,460,2.826,461,2.826,462,2.826,463,2.386,464,2.826,465,2.386,466,2.386,467,2.386,468,3.431,469,3.431,470,2.826,471,2.826,472,2.097,473,2.826,474,2.826,475,2.386,476,2.826,477,2.826,478,2.826,479,2.826,480,2.386,481,1.881,482,2.386,483,4.063,484,2.826,485,4.063,486,2.826,487,4.063,488,2.826,489,4.063,490,4.063,491,4.063,492,2.826,493,1.881,494,4.063,495,2.826,496,4.063,497,2.826,498,4.063,499,2.826,500,4.063,501,2.826,502,4.063,503,2.826,504,4.063,505,4.063,506,2.826,507,4.063,508,2.826,509,4.063,510,2.826,511,4.063,512,2.826,513,4.063,514,2.826,515,4.063,516,2.826,517,4.063,518,2.826,519,4.063,520,2.826,521,4.063,522,2.826,523,4.063,524,2.826,525,4.063,526,2.826,527,4.063,528,4.063,529,4.063,530,4.063,531,2.826,532,4.063,533,2.826,534,4.063,535,2.826,536,4.063,537,4.063,538,2.826,539,4.063,540,2.071,541,4.063,542,4.063,543,2.826,544,2.826,545,4.063,546,2.826,547,4.063,548,2.826,549,4.063,550,2.826,551,4.063,552,2.826,553,4.063,554,2.826,555,4.063,556,2.826,557,4.063,558,4.063,559,4.063,560,2.826,561,2.386,562,2.386,563,1.708,564,2.386,565,2.386,566,1.881,567,2.386,568,1.333,569,2.386,570,2.386,571,4.063,572,2.097,573,2.097,574,2.826,575,2.826,576,2.386,577,2.386,578,2.826,579,2.826,580,2.826,581,2.826]],["title/modules/AppRoutingModule.html",[422,1.863,435,2.034]],["body/modules/AppRoutingModule.html",[0,0.134,1,1.176,3,0.353,4,0.311,9,0.311,11,2.847,32,0.027,39,0.645,40,0.353,42,0.353,43,0.311,90,1.176,91,1.077,93,1.176,97,0.871,100,1.016,102,1.176,103,1.552,104,1.176,108,1.176,110,1.176,112,1.176,114,1.176,116,1.176,118,1.235,121,0.021,122,0.021,124,2.847,209,1.154,212,1.077,299,3.91,302,4.935,326,2.847,424,2.586,429,3.175,435,3.248,448,3.613,453,4.538,454,4.538,455,3.175,456,2.847,463,3.613,465,3.613,466,3.613,467,3.613,468,4.538,469,4.538,480,3.613,481,2.847,482,3.613,561,3.613,562,3.613,563,2.586,564,3.613,565,3.613,566,2.847,567,3.613,568,2.018,569,3.613,570,3.613,576,3.613,577,3.613,582,4.279,583,4.279,584,5.374,585,3.91,586,5.374,587,3.613,588,4.279,589,4.376,590,4.279,591,5.09,592,4.279,593,2.847,594,4.279,595,2.586,596,4.279,597,2.847,598,3.175,599,4.279,600,3.613,601,4.279,602,4.279,603,4.279]],["title/injectables/AuthenticationService.html",[304,1.588,317,1.278]],["body/injectables/AuthenticationService.html",[3,0.28,4,0.247,9,0.247,13,0.643,23,0.35,24,0.94,26,0.691,29,1.125,31,1.147,32,0.027,33,0.564,34,0.582,35,1.147,37,0.741,39,0.522,40,0.28,42,0.28,43,0.247,44,0.691,91,1.418,121,0.018,122,0.018,133,0.748,155,1.528,161,0.94,164,1.084,167,0.873,170,1.399,172,0.98,183,2.178,195,1.396,197,0.743,200,2.403,205,3.426,211,1.15,214,2.79,304,2.178,307,2.868,312,3.503,315,2.81,317,1.753,318,1.288,320,1.878,321,1.486,323,1.382,324,1.507,446,1.753,475,2.866,597,3.073,600,2.866,604,2.051,605,2.866,606,4.432,607,5.634,608,5.634,609,5.634,610,4.618,611,4.757,612,4.618,613,3.394,614,4.762,615,5.634,616,4.046,617,4.618,618,2.555,619,3.394,620,4.618,621,3.394,622,2.467,623,6.08,624,2.644,625,4.618,626,3.394,627,1.881,628,4.618,629,4.572,630,3.394,631,5.134,632,4.077,633,1.828,634,3.674,635,4.618,636,3.394,637,5.634,638,3.394,639,4.618,640,3.394,641,4.618,642,2.022,643,2.178,644,4.618,645,1.636,646,4.618,647,2.258,648,3.394,649,3.394,650,3.394,651,1.878,652,3.394,653,3.394,654,3.394,655,4.618,656,4.618,657,3.394,658,3.394,659,3.394,660,3.394,661,3.394,662,3.394,663,3.394,664,3.394]],["title/injectables/DateService.html",[317,1.278,665,1.278]],["body/injectables/DateService.html",[3,0.368,4,0.324,9,0.324,13,0.629,17,1.041,23,0.46,24,1.121,29,1.095,31,0.906,32,0.027,33,0.413,34,0.46,35,0.906,37,0.683,38,1.041,39,0.511,40,0.368,42,0.368,43,0.324,44,1.218,121,0.021,122,0.021,133,0.892,155,1.822,161,1.121,167,1.041,172,1.59,196,1.951,197,1.368,211,0.842,315,2.412,317,2.091,318,1.69,320,2.463,321,1.949,324,1.045,356,2.484,604,2.69,645,1.951,665,2.091,666,3.759,667,2.491,668,2.619,669,5.982,670,6.25,671,5.508,672,4.451,673,3.665,674,5.508,675,4.451,676,5.508,677,4.451,678,5.508,679,4.451,680,5.508,681,5.508,682,5.508,683,5.508,684,5.508,685,5.508,686,4.451,687,4.451,688,4.451]],["title/interfaces/Drink.html",[98,0.59,329,0.908]],["body/interfaces/Drink.html",[0,0.078,3,0.225,4,0.199,9,0.199,13,0.312,17,0.516,18,0.478,19,0.556,21,0.556,23,0.282,25,0.687,28,1.289,32,0.027,33,0.504,34,0.585,37,0.312,38,0.882,39,0.526,40,0.225,41,0.844,42,0.327,43,0.199,44,0.95,45,1.404,65,0.597,97,0.442,98,1.212,121,0.015,122,0.018,128,1.735,130,2.2,133,0.642,138,0.903,142,1.144,143,1.144,145,1.289,147,0.967,148,1.457,155,0.903,161,1.106,164,0.641,165,1.569,167,0.882,168,0.736,169,0.903,170,0.95,183,1.288,190,1.144,191,0.903,195,1.325,196,1.653,197,0.597,199,1.582,206,0.736,210,0.844,211,1.106,212,1.639,217,2.982,218,2.982,219,2.832,220,2.832,231,0.844,239,1.404,241,1.037,242,1.693,244,1.112,245,1.392,247,1.511,249,1.037,250,0.903,251,0.903,252,0.903,253,1.037,254,1.511,255,2.482,257,2.482,281,1.28,315,1.735,318,1.037,323,1.112,324,0.931,329,1.647,331,2.488,334,1.771,356,2.063,361,2.02,446,1.037,540,1.392,568,1.288,622,1.195,624,1.112,627,1.614,633,0.788,642,1.735,645,1.404,651,3.137,665,1.943,667,2.072,668,1.195,689,1.392,690,1.511,691,1.511,692,2.138,693,1.288,694,2.564,695,2.02,696,2.042,697,2.674,698,2.378,699,1.869,700,1.735,701,2.02,702,2.042,703,1.65,704,1.65,705,1.288,706,1.869,707,1.65,708,1.65,709,1.65,710,1.65,711,1.65,712,1.65,713,3.093,714,2.819,715,1.65,716,1.65,717,2.819,718,1.65,719,2.819,720,1.288,721,1.511,722,1.869,723,1.288,724,1.65,725,1.65,726,2.395,727,1.65,728,1.65,729,1.288,730,1.65,731,2.395,732,1.65,733,1.65,734,1.65,735,1.65,736,1.65,737,1.65,738,1.65,739,2.395,740,1.65,741,1.65,742,1.65,743,1.65,744,1.65,745,1.65,746,1.65,747,2.819,748,1.65,749,1.65,750,1.65,751,1.65,752,2.395,753,2.042,754,1.288,755,1.288,756,1.288,757,1.288,758,3.284,759,1.65,760,2.819,761,1.65,762,1.65,763,1.65,764,1.65,765,1.288,766,1.869,767,2.395,768,1.65,769,2.395,770,1.65,771,1.505,772,2.395,773,2.395,774,1.869,775,1.195,776,1.195,777,1.195,778,1.735,779,1.195,780,2.819,781,1.288,782,2.395,783,1.288,784,1.65,785,1.65,786,1.65,787,1.65,788,1.65,789,3.093,790,1.65,791,1.65,792,1.65,793,2.395,794,1.195,795,2.395,796,1.65,797,1.869,798,1.65,799,2.193,800,1.65,801,1.65,802,1.392,803,1.65,804,1.65,805,1.65,806,1.288,807,1.288,808,1.65]],["title/interfaces/DrinkAmount.html",[329,0.908,695,1.716]],["body/interfaces/DrinkAmount.html",[0,0.078,3,0.224,4,0.198,9,0.198,13,0.31,17,0.513,18,0.476,19,0.553,21,0.553,23,0.28,25,0.684,28,1.285,32,0.027,33,0.366,34,0.603,37,0.31,38,0.879,39,0.525,40,0.224,41,0.839,42,0.326,43,0.198,44,0.947,45,1.398,65,0.594,97,0.44,98,1.21,121,0.015,122,0.018,128,1.728,130,2.193,133,0.639,138,0.898,142,1.14,143,1.14,145,1.285,147,0.962,148,1.455,155,0.898,161,1.104,164,0.638,165,1.566,167,0.879,168,0.732,169,0.898,170,0.947,183,1.281,190,1.14,191,0.898,195,1.34,196,1.647,197,0.594,199,1.804,206,0.732,210,0.839,211,1.104,212,1.637,217,2.602,218,2.977,219,1.503,220,1.503,231,0.839,239,1.398,241,1.031,242,1.689,244,1.106,245,1.384,247,1.503,249,1.031,250,0.898,251,0.898,252,0.898,253,1.031,254,1.503,255,2.67,257,2.67,281,1.278,315,1.728,318,1.031,323,1.106,324,0.927,329,1.645,331,2.484,334,1.765,356,2.059,361,2.012,446,1.031,540,1.384,568,1.281,622,1.189,624,1.106,627,1.608,633,0.784,642,1.728,645,1.398,651,3.131,665,1.938,667,2.068,668,1.189,689,1.384,690,1.503,691,1.503,692,2.136,693,1.281,694,2.669,695,2.371,696,2.477,697,2.877,698,2.371,699,1.862,700,1.728,701,2.012,702,2.036,703,1.641,704,1.641,705,1.281,706,1.862,707,1.641,708,1.641,709,1.641,710,1.641,711,1.641,712,1.641,713,3.085,714,2.81,715,1.641,716,1.641,717,2.81,718,1.641,719,2.81,720,1.281,721,1.503,722,1.862,723,1.281,724,1.641,725,1.641,726,2.385,727,1.641,728,1.641,729,1.281,730,1.641,731,2.385,732,1.641,733,1.641,734,1.641,735,1.641,736,1.641,737,1.641,738,1.641,739,2.385,740,1.641,741,1.641,742,1.641,743,1.641,744,1.641,745,1.641,746,1.641,747,2.81,748,1.641,749,1.641,750,1.641,751,1.641,752,2.385,753,2.036,754,1.281,755,1.281,756,1.281,757,1.281,758,3.277,759,1.641,760,2.81,761,1.641,762,1.641,763,1.641,764,1.641,765,1.281,766,1.862,767,2.385,768,1.641,769,2.385,770,1.641,771,1.498,772,2.385,773,2.385,774,1.862,775,1.189,776,1.189,777,1.189,778,1.728,779,1.189,780,2.81,781,1.281,782,2.385,783,1.281,784,1.641,785,1.641,786,1.641,787,1.641,788,1.641,789,3.085,790,1.641,791,1.641,792,1.641,793,2.385,794,1.189,795,2.385,796,1.641,797,1.862,798,1.641,799,2.184,800,1.641,801,1.641,802,1.384,803,1.641,804,1.641,805,1.641,806,1.281,807,1.281,808,1.641]],["title/interfaces/DrinkAmountsMap.html",[329,0.908,698,1.716]],["body/interfaces/DrinkAmountsMap.html",[0,0.079,3,0.23,4,0.203,9,0.203,13,0.318,17,0.527,18,0.488,19,0.567,21,0.567,25,0.701,28,1.301,29,0.488,32,0.027,33,0.373,34,0.288,37,0.318,38,0.892,39,0.529,40,0.23,41,0.861,42,0.332,43,0.203,44,0.96,45,1.424,65,0.61,97,0.451,98,1.211,121,0.015,122,0.018,128,1.76,130,2.225,138,0.921,142,1.161,143,1.161,145,1.301,147,0.987,148,1.463,155,0.921,161,1.115,164,0.654,165,1.582,167,0.892,168,0.751,169,0.921,170,0.96,183,1.314,190,1.161,191,0.921,195,1.298,196,1.671,197,0.61,199,1.596,206,0.751,210,0.861,211,1.113,212,1.644,217,2.634,218,2.634,219,1.542,220,1.542,231,0.861,239,1.424,241,1.057,242,1.709,244,1.135,245,1.42,247,1.542,249,1.057,250,0.921,251,0.921,252,0.921,253,1.057,254,1.542,255,2.499,257,2.499,281,1.288,315,1.76,318,1.057,323,1.135,324,0.944,329,1.655,331,2.538,334,1.791,356,2.08,361,2.05,446,1.057,540,1.42,568,1.897,622,1.22,624,1.135,627,1.638,633,0.804,642,1.76,645,1.424,651,3.256,665,1.961,667,2.084,668,1.22,689,1.42,690,2.225,691,1.542,692,1.993,693,1.314,694,2.692,695,2.405,696,2.066,697,2.692,698,2.634,699,2.225,700,1.76,701,2.05,702,2.066,703,1.683,704,1.683,705,1.314,706,1.897,707,1.683,708,1.683,709,1.683,710,1.683,711,1.683,712,1.683,713,3.122,714,2.851,715,1.683,716,1.683,717,2.851,718,1.683,719,2.851,720,1.314,721,1.542,722,1.897,723,1.314,724,1.683,725,1.683,726,2.43,727,1.683,728,1.683,729,1.314,730,1.683,731,2.43,732,1.683,733,1.683,734,1.683,735,1.683,736,1.683,737,1.683,738,1.683,739,2.43,740,1.683,741,1.683,742,1.683,743,1.683,744,1.683,745,1.683,746,1.683,747,2.851,748,1.683,749,1.683,750,1.683,751,1.683,752,2.43,753,2.066,754,1.314,755,1.314,756,1.314,757,1.314,758,3.31,759,1.683,760,2.851,761,1.683,762,1.683,763,1.683,764,1.683,765,1.314,766,1.897,767,2.43,768,1.683,769,2.43,770,1.683,771,1.526,772,2.43,773,2.43,774,1.897,775,1.22,776,1.22,777,1.22,778,1.76,779,1.22,780,2.851,781,1.314,782,2.43,783,1.314,784,1.683,785,1.683,786,1.683,787,1.683,788,1.683,789,3.122,790,1.683,791,1.683,792,1.683,793,2.43,794,1.22,795,2.43,796,1.683,797,1.897,798,1.683,799,2.225,800,1.683,801,1.683,802,1.42,803,1.683,804,1.683,805,1.683,806,1.314,807,1.314,808,1.683,809,2.785,810,2.785]],["title/interfaces/DrinkData.html",[239,1.193,329,0.908]],["body/interfaces/DrinkData.html",[0,0.067,3,0.183,4,0.161,9,0.161,13,0.253,14,1.226,15,1.037,17,0.419,18,0.388,19,0.451,21,0.451,23,0.229,25,0.558,26,0.451,28,1.162,32,0.027,33,0.382,34,0.425,37,0.47,38,0.779,39,0.487,40,0.183,41,0.684,42,0.183,43,0.161,44,1.013,45,1.459,56,1.876,65,0.485,85,0.597,98,1.152,100,0.419,117,0.597,121,0.013,122,0.013,133,0.549,138,1.527,142,0.979,143,0.979,144,1.537,145,1.162,147,1.201,148,1.427,150,1.474,152,1.474,155,0.733,161,1.112,164,0.52,165,0.979,166,0.841,167,0.779,168,0.597,169,0.733,170,1.013,188,1.474,190,0.979,191,1.527,195,1.013,196,1.201,199,1.621,200,0.841,206,0.597,209,0.597,210,0.684,211,1.092,212,1.708,231,0.684,239,1.995,241,0.841,242,1.91,244,0.902,249,0.841,250,0.733,251,0.733,252,0.733,253,0.841,255,2.297,257,2.02,258,1.474,271,1.045,281,1.413,285,1.88,322,0.785,324,1.084,329,1.341,331,2.533,334,0.841,336,3.071,351,1.474,354,1.226,356,1.888,358,2.741,366,1.474,369,1.474,373,2.741,375,1.474,376,2.049,403,1.599,421,2.489,493,1.474,593,1.474,595,1.338,627,1.381,633,1.332,642,2.02,665,1.888,667,2.32,668,0.97,673,1.474,689,1.129,692,1.806,693,1.045,694,2.177,696,1.803,697,2.575,699,1.045,700,1.484,702,2.466,705,1.599,706,1.045,720,1.045,722,2.177,723,1.045,729,1.045,753,2.178,754,1.599,755,1.599,756,1.599,757,1.599,765,1.045,771,1.564,774,2.346,775,1.484,776,1.484,777,1.484,778,2.02,779,1.484,781,1.599,783,1.599,794,2.466,797,1.599,806,1.045,807,1.045,811,1.474,812,2.515,813,2.515,814,1.643,815,2.789,816,1.943,817,2.1,818,1.643,819,1.643,820,1.643,821,1.474,822,3.056,823,1.643,824,1.643,825,2.515,826,1.728,827,3.892,828,3.424,829,1.643,830,1.643,831,1.474,832,2.515,833,1.643,834,1.643,835,1.643,836,3.424,837,1.643,838,1.643,839,1.474,840,1.643,841,1.643,842,2.753,843,2.049,844,1.643,845,1.643,846,3.424,847,1.643,848,1.643,849,1.643,850,2.515,851,1.643,852,1.474,853,1.474,854,1.643,855,1.643,856,1.643,857,1.643,858,1.643,859,1.643,860,1.643,861,1.643,862,1.643,863,1.643,864,1.643,865,2.515,866,1.643,867,1.643,868,1.643,869,1.474,870,1.643,871,3.69,872,1.643,873,3.056,874,1.338,875,1.643,876,1.643,877,3.056,878,1.643,879,1.643,880,1.643,881,1.643,882,3.056,883,2.515,884,1.643,885,1.643,886,2.515,887,2.515,888,1.643,889,3.424,890,3.056,891,1.643,892,2.515,893,1.643,894,1.643,895,1.643,896,1.643,897,1.643,898,3.69,899,3.056,900,2.515,901,1.643,902,2.515,903,1.643,904,1.643,905,1.643,906,2.515,907,2.515,908,1.643,909,3.056,910,2.515,911,1.643,912,2.515,913,1.643,914,2.515,915,3.056,916,1.643,917,1.643,918,1.643,919,1.643,920,1.643,921,1.643,922,1.643,923,1.643,924,1.643,925,1.474,926,1.643,927,1.643,928,1.643,929,3.056,930,1.643,931,1.643,932,1.643,933,1.643,934,2.515,935,2.515,936,1.643,937,1.643,938,2.515,939,1.643,940,2.515,941,1.643,942,1.643,943,1.643,944,1.643,945,1.643,946,1.643,947,1.474,948,2.256,949,1.643,950,1.474,951,1.643,952,1.643,953,1.643,954,2.515,955,1.643,956,1.474,957,1.643,958,1.643,959,1.643,960,1.643,961,1.643,962,2.515,963,2.515,964,1.643,965,1.643,966,1.643,967,1.643,968,1.643,969,1.643,970,2.515,971,1.643,972,1.643,973,2.515,974,1.643,975,1.643,976,1.643,977,1.643,978,1.643,979,1.643,980,1.643,981,2.515,982,1.643,983,2.515,984,2.515,985,1.643,986,1.643,987,2.515,988,1.643,989,1.643,990,1.643,991,1.728,992,1.643,993,1.643,994,1.643,995,1.643,996,1.643,997,1.643,998,1.643,999,1.643,1000,1.643,1001,1.474,1002,1.643,1003,2.256,1004,1.643]],["title/components/DrinkListComponent.html",[0,0.066,97,0.545]],["body/components/DrinkListComponent.html",[0,0.072,1,0.404,2,0.849,3,0.153,4,0.134,5,0.571,6,0.571,7,0.571,8,0.571,9,0.134,13,0.521,15,0.465,16,0.533,17,1.156,18,1.071,19,0.599,21,0.599,23,0.304,24,0.599,25,1.053,26,0.376,28,1.333,29,1.048,31,0.851,32,0.027,33,0.519,34,0.617,35,0.851,37,0.582,38,0.965,39,0.451,40,0.153,41,0.571,42,0.243,43,0.134,44,0.746,45,1.042,62,1.617,64,1.617,65,0.915,66,1.617,67,1.617,68,1.51,69,2.169,70,1.117,71,1.117,73,1.86,74,1.981,76,0.942,77,1.117,78,1.481,79,2.13,82,0.752,83,0.498,84,0.909,85,0.793,86,0.571,87,1.292,88,0.571,89,0.571,90,0.404,91,0.741,92,0.571,93,0.404,94,0.909,95,0.434,96,0.571,97,0.677,98,1.216,99,0.571,100,0.349,101,0.571,102,0.404,103,0.533,104,0.404,105,0.571,106,0.434,107,0.571,108,0.404,109,0.571,110,0.404,111,0.571,112,0.404,113,0.571,114,0.404,115,0.571,116,0.404,117,0.498,118,0.533,119,0.571,120,0.571,121,0.011,122,0.016,128,2.319,130,2.294,133,0.477,138,1.213,142,1.059,143,1.207,145,1.333,147,1.042,148,1.404,155,0.973,161,0.99,164,0.691,165,1.473,167,0.92,168,0.793,169,0.973,170,0.929,172,1.404,183,0.871,190,0.849,191,0.973,195,1.217,196,1.617,197,1.159,199,1.292,206,0.498,210,0.571,211,0.965,212,1.523,217,2.7,218,2.48,219,1.022,220,2.029,231,0.571,239,1.042,241,0.701,242,1.383,244,0.752,245,0.942,247,1.022,249,0.701,250,0.611,251,0.611,252,0.611,253,0.701,254,1.022,255,2.13,257,2.13,262,0.942,263,1.198,264,1.117,265,0.871,266,1.937,267,1.198,269,0.942,272,1.733,273,2.279,274,2.029,275,1.587,276,2.223,277,1.86,278,2.545,279,1.5,280,1.628,281,1.309,282,1.229,285,0.752,286,0.809,287,0.752,288,0.752,289,0.752,290,0.809,291,0.809,293,2.782,296,0.942,315,1.605,318,0.701,323,0.752,324,0.691,329,1.428,331,2.436,334,2.169,344,1.022,356,2.124,361,1.5,376,2.527,385,1.958,386,2.154,387,2.215,388,1.229,389,1.229,390,1.37,391,3.298,392,3.102,393,3.102,394,3.102,395,3.102,396,3.102,397,1.116,398,1.37,399,1.116,400,1.229,401,1.022,446,1.117,540,1.869,568,2.854,622,0.809,624,0.752,627,1.493,633,0.849,642,1.831,645,1.481,651,3.021,665,2.011,667,1.934,668,1.605,690,3.348,691,1.022,692,1.752,693,0.871,694,2.407,695,1.5,696,1.999,697,2.498,698,1.869,699,1.388,700,1.605,701,1.5,702,1.999,703,1.778,704,1.778,705,1.388,706,1.972,707,1.778,708,1.778,709,1.778,710,2.215,711,2.215,712,2.215,713,3.298,714,2.939,715,2.215,716,2.215,717,2.759,718,2.215,719,2.215,720,1.388,721,1.628,722,1.388,723,0.871,724,1.116,725,1.116,726,1.778,727,1.778,728,1.778,729,1.388,730,1.778,731,1.778,732,2.527,733,1.116,734,1.116,735,1.116,736,1.116,737,1.778,738,1.116,739,1.778,740,1.778,741,2.527,742,1.116,743,1.116,744,1.116,745,1.116,746,1.116,747,2.527,748,1.778,749,1.778,750,1.778,751,1.778,752,1.778,753,1.605,754,0.871,755,0.871,756,0.871,757,0.871,758,2.759,759,1.116,760,2.215,761,1.116,762,1.116,763,1.116,764,1.116,765,0.871,766,1.388,767,1.778,768,1.116,769,1.778,770,1.116,771,1.117,772,1.778,773,1.778,774,1.388,775,0.809,776,0.809,777,0.809,778,1.288,779,0.809,780,2.215,781,0.871,782,1.778,783,0.871,784,1.116,785,2.215,786,1.116,787,1.116,788,1.116,789,2.527,790,1.116,791,1.116,792,1.116,793,1.778,794,0.809,795,1.778,796,1.116,797,1.388,798,1.116,799,2.314,800,1.116,801,1.116,802,0.942,803,1.116,804,1.116,805,1.116,806,0.871,807,0.871,808,1.116,812,1.37,1005,2.942,1006,2.942,1007,2.942,1008,2.942,1009,1.847,1010,1.847,1011,1.847,1012,1.847,1013,1.847,1014,1.847,1015,1.847,1016,1.847,1017,1.847,1018,1.847,1019,1.847,1020,1.847,1021,2.942,1022,2.942,1023,2.942,1024,1.56,1025,1.56,1026,2.942,1027,2.484,1028,1.37,1029,1.847,1030,1.847,1031,2.942,1032,1.229,1033,1.847,1034,1.847,1035,2.942,1036,1.847,1037,1.847,1038,1.847,1039,1.847,1040,1.847,1041,1.56,1042,1.229]],["title/interfaces/FirestoreDocumentData.html",[329,0.908,701,1.716]],["body/interfaces/FirestoreDocumentData.html",[0,0.079,3,0.23,4,0.202,9,0.202,13,0.317,17,0.526,18,0.487,19,0.566,21,0.566,23,0.287,25,0.7,28,1.299,32,0.027,33,0.372,34,0.486,37,0.317,38,0.891,39,0.529,40,0.23,41,0.859,42,0.332,43,0.202,44,0.959,45,1.422,65,0.608,97,0.45,98,1.211,121,0.015,122,0.018,128,1.758,130,2.223,133,0.65,138,0.919,142,1.159,143,1.159,145,1.299,147,0.985,148,1.463,155,0.919,161,1.114,164,0.653,165,1.58,167,0.891,168,0.75,169,0.919,170,0.959,183,1.311,190,1.159,191,0.919,195,1.284,196,1.669,197,0.608,199,1.595,206,0.75,210,0.859,211,1.112,212,1.644,217,2.631,218,2.631,219,1.538,220,1.538,231,0.859,239,1.422,241,1.055,242,1.707,244,1.132,245,1.417,247,1.538,249,1.055,250,0.919,251,0.919,252,0.919,253,1.055,254,1.538,255,2.497,257,2.497,281,1.287,315,1.758,318,1.055,323,1.132,324,0.943,329,1.654,331,2.537,334,1.789,356,2.078,361,2.047,446,1.055,540,1.417,568,1.311,622,1.217,624,1.132,627,1.635,633,0.803,642,1.758,645,1.422,651,3.156,665,1.959,667,2.083,668,1.217,689,1.417,690,1.538,691,1.538,692,1.992,693,1.311,694,2.69,695,2.047,696,2.063,697,2.69,698,2.79,699,1.894,700,2.063,701,2.402,702,2.497,703,1.68,704,1.68,705,1.311,706,1.894,707,1.68,708,1.68,709,1.68,710,1.68,711,1.68,712,1.68,713,3.119,714,2.847,715,1.68,716,1.68,717,2.847,718,1.68,719,2.847,720,1.311,721,1.538,722,1.894,723,1.311,724,1.68,725,1.68,726,2.426,727,1.68,728,1.68,729,1.311,730,1.68,731,2.426,732,1.68,733,1.68,734,1.68,735,1.68,736,1.68,737,1.68,738,1.68,739,2.426,740,1.68,741,1.68,742,1.68,743,1.68,744,1.68,745,1.68,746,1.68,747,2.847,748,1.68,749,1.68,750,1.68,751,1.68,752,2.426,753,2.063,754,1.311,755,1.311,756,1.311,757,1.311,758,3.307,759,1.68,760,2.847,761,1.68,762,1.68,763,1.68,764,1.68,765,1.311,766,1.894,767,2.426,768,1.68,769,2.426,770,1.68,771,1.524,772,2.426,773,2.426,774,1.894,775,1.217,776,1.217,777,1.217,778,1.758,779,1.217,780,2.847,781,1.311,782,2.426,783,1.311,784,1.68,785,1.68,786,1.68,787,1.68,788,1.68,789,3.119,790,1.68,791,1.68,792,1.68,793,2.426,794,1.217,795,2.426,796,1.68,797,1.894,798,1.68,799,2.222,800,1.68,801,1.68,802,1.417,803,1.68,804,1.68,805,1.68,806,1.311,807,1.311,808,1.68]],["title/components/HomeComponent.html",[0,0.066,100,0.637]],["body/components/HomeComponent.html",[0,0.062,1,0.325,2,0.711,3,0.261,4,0.108,5,0.459,6,0.459,7,0.459,8,0.459,9,0.108,13,0.501,14,1.363,15,1.172,16,0.429,17,1.1,18,1.019,19,0.501,21,0.501,23,0.153,24,0.501,25,0.925,26,0.501,28,1.226,29,1.061,31,0.829,32,0.027,33,0.483,34,0.575,35,0.829,37,0.655,38,0.955,39,0.407,40,0.123,41,0.459,42,0.123,43,0.108,44,0.829,45,1.118,56,1.747,62,1.301,64,1.443,65,0.691,66,1.301,67,1.556,68,1.453,69,1.767,70,0.564,71,1.394,72,1.659,73,1.659,74,1.003,77,0.564,78,0.526,82,0.605,83,0.4,84,0.761,85,0.991,86,0.459,87,1.135,88,0.459,89,0.459,90,0.325,91,0.62,92,0.459,93,0.325,94,0.761,95,0.349,96,0.459,97,0.24,98,1.143,99,0.459,100,0.695,101,0.459,102,0.325,103,0.429,104,0.325,105,0.459,106,0.349,107,0.459,108,0.325,109,0.459,110,0.325,111,0.459,112,0.325,113,0.459,114,0.325,115,0.459,116,0.325,117,0.664,118,0.429,119,0.459,120,0.459,121,0.009,122,0.009,128,1.608,133,0.399,138,1.807,142,0.911,143,1.061,144,1.61,145,1.226,147,1.118,148,1.382,150,0.988,152,1.639,155,0.815,161,0.947,164,0.578,165,0.911,166,0.935,167,0.831,168,0.664,169,0.815,170,1.029,172,1.176,188,1.639,190,0.711,191,1.611,195,0.894,196,1.301,197,0.891,199,1.358,200,0.935,206,0.4,209,0.4,210,0.459,211,0.955,212,1.638,217,1.256,231,0.459,239,1.648,241,0.564,242,1.672,244,0.605,249,0.564,250,0.491,251,0.491,252,0.491,253,0.564,255,2.132,257,2.281,258,0.988,261,2.575,262,0.757,263,1.003,264,0.935,265,0.7,266,1.547,267,1.003,269,0.757,271,1.162,272,1.198,273,1.659,274,0.821,275,0.935,276,1.659,277,1.286,278,2.132,279,0.757,280,0.821,281,1.395,282,0.988,284,1.078,285,1.496,286,0.65,287,0.605,288,0.605,289,0.605,290,0.65,291,0.65,293,1.639,296,1.256,322,0.872,324,0.863,329,0.991,331,2.562,334,1.198,336,2.444,344,0.821,351,0.988,354,1.363,356,1.849,358,2.711,366,0.988,369,0.988,373,2.444,375,0.988,376,2.22,380,2.08,382,1.101,385,2.1,386,1.489,387,1.488,388,0.988,389,0.988,390,1.101,391,2.655,392,1.827,393,1.827,394,1.827,395,1.827,396,1.827,397,0.897,398,1.101,399,0.897,400,1.639,401,1.363,403,1.489,421,1.907,493,1.639,593,0.988,595,2.462,627,1.003,633,1.344,642,2.132,643,1.162,665,1.918,667,2.352,668,2.34,673,0.988,692,1.925,693,0.7,694,1.922,696,1.608,697,2.297,699,0.7,700,1.608,702,1.784,705,1.162,706,1.162,720,1.162,722,1.733,723,0.7,729,0.7,753,1.784,754,1.162,755,1.162,756,1.162,757,1.162,765,0.7,766,1.162,771,1.198,774,1.922,775,1.078,776,1.078,777,1.078,778,1.608,779,1.078,781,1.162,783,1.162,794,2.577,797,1.162,806,0.7,807,0.7,811,0.988,813,2.342,814,1.101,815,2.812,816,1.489,817,1.609,818,1.827,819,1.827,820,2.342,821,2.1,822,3.865,823,3.453,824,3.453,825,2.725,826,1.873,827,4.053,828,3.453,829,1.827,830,3.022,831,1.639,832,3.022,833,1.827,834,1.101,835,1.101,836,2.725,837,1.101,838,1.101,839,0.988,840,1.101,841,2.725,842,2.254,843,1.488,844,1.101,845,1.101,846,2.725,847,1.101,848,2.725,849,1.101,850,1.827,851,1.101,852,0.988,853,0.988,854,1.101,855,1.101,856,1.101,857,1.101,858,1.101,859,1.101,860,1.101,861,1.101,862,1.101,863,1.101,864,1.101,865,2.725,866,1.827,867,2.725,868,1.101,869,0.988,870,1.101,871,3.022,872,1.101,873,2.342,874,0.897,875,1.101,876,1.101,877,2.342,878,1.101,879,1.101,880,1.101,881,1.101,882,2.342,883,1.827,884,1.101,885,1.101,886,1.827,887,1.827,888,1.101,889,2.725,890,2.342,891,1.101,892,1.827,893,1.101,894,1.101,895,1.101,896,1.101,897,1.101,898,3.022,899,2.342,900,1.827,901,1.101,902,1.827,903,1.101,904,1.101,905,1.101,906,1.827,907,1.827,908,1.101,909,2.342,910,1.827,911,1.101,912,1.827,913,1.101,914,1.827,915,2.342,916,1.101,917,1.101,918,1.101,919,1.101,920,1.101,921,1.101,922,1.101,923,1.101,924,1.101,925,0.988,926,1.101,927,1.101,928,1.101,929,2.342,930,1.101,931,1.101,932,1.101,933,1.101,934,1.827,935,1.827,936,1.101,937,1.101,938,1.827,939,1.101,940,1.827,941,2.725,942,1.101,943,1.101,944,2.342,945,1.101,946,1.101,947,1.639,948,2.444,949,1.827,950,1.639,951,1.827,952,1.101,953,1.101,954,2.342,955,1.827,956,1.639,957,1.827,958,1.101,959,3.453,960,3.749,961,3.966,962,2.342,963,3.022,964,2.725,965,1.101,966,1.101,967,2.725,968,1.101,969,1.827,970,2.342,971,1.827,972,1.827,973,1.827,974,1.101,975,1.101,976,1.827,977,1.827,978,1.101,979,1.101,980,1.101,981,1.827,982,1.101,983,1.827,984,1.827,985,1.101,986,1.101,987,1.827,988,1.101,989,1.101,990,1.101,991,1.256,992,1.101,993,1.101,994,1.101,995,1.101,996,1.101,997,1.101,998,1.101,999,1.101,1000,2.342,1001,0.988,1002,1.101,1003,1.639,1004,1.101,1025,1.253,1027,1.253,1042,0.988,1043,2.463,1044,2.463,1045,2.463,1046,2.463,1047,2.463,1048,1.484,1049,1.484,1050,1.484,1051,1.484,1052,1.484,1053,1.484,1054,1.484,1055,1.484,1056,1.484,1057,1.484,1058,1.484,1059,1.484,1060,1.253,1061,1.484,1062,1.484,1063,1.484,1064,1.484,1065,1.484,1066,1.484,1067,2.463,1068,4.393,1069,3.673,1070,2.463,1071,2.463,1072,2.463,1073,2.463,1074,2.463,1075,2.463,1076,2.463,1077,1.488,1078,1.101,1079,1.101,1080,1.101,1081,1.488,1082,1.484,1083,1.253,1084,1.484,1085,1.101,1086,1.484,1087,2.463]],["title/components/LandingPageComponent.html",[0,0.066,102,0.737]],["body/components/LandingPageComponent.html",[0,0.107,1,0.802,2,1.404,3,0.303,4,0.267,5,1.132,6,1.132,7,1.132,8,1.132,9,0.267,13,0.555,14,2.69,15,1.641,16,1.058,17,1.288,18,1.193,19,0.99,21,0.99,23,0.378,24,0.99,26,0.99,29,0.956,31,0.746,32,0.027,33,0.506,34,0.378,35,0.746,37,0.555,38,0.919,39,0.451,40,0.303,42,0.303,43,0.267,44,0.746,62,1.722,64,1.933,65,1.194,66,1.933,67,2.059,68,1.923,69,2.296,70,1.391,71,2.071,72,1.492,75,4.105,76,1.868,77,2.296,78,2.059,79,1.604,81,3.093,82,1.98,83,0.988,84,1.502,85,1.311,86,1.132,87,1.796,88,1.132,89,1.132,90,0.802,91,1.224,92,1.132,93,0.802,94,1.502,95,0.86,96,1.132,97,0.593,98,0.642,99,1.132,100,0.693,101,1.132,102,1.272,103,1.901,104,0.802,105,1.132,106,0.86,107,1.132,108,0.802,109,1.132,110,0.802,111,1.132,112,0.802,113,1.132,114,0.802,115,1.132,116,0.802,117,0.988,118,1.058,119,1.132,120,1.132,121,0.019,122,0.019,144,2.015,166,1.846,209,0.988,211,0.693,261,3.019,263,1.492,264,1.391,266,2.071,267,1.492,269,1.868,272,1.846,273,1.98,275,1.846,276,1.98,277,1.98,278,2.82,281,1.064,283,2.938,284,1.604,286,2.128,287,1.98,288,1.98,289,1.98,290,1.604,291,1.604,327,2.718,338,4.607,339,4.105,345,3.093,354,3.216,408,2.718,413,3.607,414,3.607,566,3.867,597,3.235,598,3.607,816,1.728,1081,2.214,1088,4.907,1089,5.812,1090,5.812,1091,3.663,1092,3.663,1093,3.663,1094,3.093,1095,4.861,1096,4.312,1097,4.105,1098,5.456,1099,3.663,1100,3.663,1101,3.663,1102,3.663,1103,3.663,1104,3.093,1105,3.093]],["title/components/LoginComponent.html",[0,0.066,104,0.737]],["body/components/LoginComponent.html",[0,0.097,1,0.662,2,1.232,3,0.25,4,0.22,5,0.936,6,0.936,7,0.936,8,0.936,9,0.22,13,0.487,15,0.762,16,0.874,17,1.257,18,1.165,19,0.869,21,0.869,23,0.313,24,0.869,25,1.351,26,0.869,29,1.028,31,0.616,32,0.027,33,0.458,34,0.584,35,0.616,37,0.564,38,0.934,39,0.544,40,0.25,42,0.25,43,0.22,44,1.092,60,2.361,62,2.004,64,2.079,65,1.238,66,1.75,67,1.9,68,1.775,69,2.037,70,1.149,71,1.876,72,1.233,73,1.738,74,1.233,76,1.543,77,1.62,78,1.511,79,1.325,80,2.839,82,1.233,83,0.816,84,1.319,85,1.151,86,0.936,87,1.658,88,0.936,89,0.936,90,0.662,91,1.074,92,0.936,93,0.662,94,1.319,95,0.711,96,0.936,97,0.49,98,0.53,99,0.936,100,0.572,101,0.936,102,0.662,103,0.874,104,1.174,105,0.936,106,0.711,107,0.936,108,0.662,109,0.936,110,0.662,111,0.936,112,0.662,113,0.936,114,0.662,115,0.936,116,0.662,117,0.816,118,0.874,119,0.936,120,0.936,121,0.016,122,0.016,133,0.691,144,1.961,145,1.55,148,1.002,161,1.195,164,1.002,166,1.62,167,1.014,168,1.151,169,1.411,170,1.151,172,0.874,179,2.361,190,1.427,192,3.288,194,3.166,195,0.616,197,0.662,207,2.014,208,1.675,209,0.816,210,0.936,211,1.014,212,0.762,224,3.57,250,1.001,251,1.001,252,1.001,260,4.53,262,1.543,263,1.233,264,1.149,265,1.428,266,1.876,267,1.233,269,1.543,271,2.53,272,1.876,273,2.185,274,1.675,275,1.62,276,1.738,277,1.738,278,2.696,279,2.519,280,1.675,281,1.081,284,1.325,285,1.233,286,1.325,287,1.738,288,1.738,289,1.738,290,1.868,291,1.868,303,2.014,304,2.53,306,2.986,307,2.53,319,2.246,321,1.325,322,1.511,324,1.16,382,2.246,403,2.331,597,3.57,614,3.98,616,3.57,618,2.361,624,2.39,629,4.269,633,1.232,645,1.9,647,2.014,1081,1.829,1096,3.98,1106,2.556,1107,4.267,1108,4.941,1109,4.267,1110,5.365,1111,3.166,1112,3.027,1113,3.027,1114,3.027,1115,3.166,1116,3.166,1117,4.267,1118,4.267,1119,4.196,1120,3.603,1121,3.027,1122,2.556,1123,3.027,1124,4.354,1125,4.354,1126,2.246,1127,3.027,1128,3.027,1129,3.027,1130,3.027,1131,3.027,1132,3.027,1133,3.027,1134,3.027,1135,2.556,1136,3.027,1137,2.556,1138,3.027,1139,4.53,1140,2.839,1141,2.556,1142,2.556,1143,2.556,1144,2.556,1145,2.556,1146,2.556,1147,3.166,1148,2.556,1149,3.027,1150,3.027,1151,3.166,1152,2.246,1153,2.246,1154,2.246,1155,4.267,1156,2.246,1157,3.027]],["title/components/NavigationComponent.html",[0,0.066,106,0.791]],["body/components/NavigationComponent.html",[0,0.106,1,0.777,2,1.374,3,0.293,4,0.258,5,1.097,6,1.097,7,1.097,8,1.097,9,0.258,13,0.405,15,0.894,16,1.025,17,1.283,18,1.189,19,0.969,21,0.969,23,0.618,24,0.969,29,0.834,32,0.027,33,0.441,37,0.405,38,0.671,39,0.329,40,0.293,42,0.293,43,0.258,62,1.902,64,1.686,65,1.309,66,1.686,67,1.686,68,1.777,69,1.807,70,2.272,72,2.188,73,2.666,74,1.939,77,1.807,78,1.686,83,0.957,84,1.471,85,1.284,86,1.097,87,1.773,88,1.097,89,1.097,90,0.777,91,1.198,92,1.097,93,0.777,94,1.471,95,0.834,96,1.097,97,0.575,98,0.622,99,1.097,100,0.671,101,1.097,102,0.777,103,1.025,104,0.777,105,1.097,106,1.348,107,1.097,108,0.777,109,1.097,110,0.777,111,1.097,112,0.777,113,1.097,114,0.777,115,1.097,116,0.777,117,0.957,118,1.551,119,1.097,120,1.097,121,0.018,122,0.018,133,0.771,151,5.202,172,1.025,179,2.634,197,0.777,203,2.876,204,3.167,261,1.964,266,2.389,269,2.427,270,2.997,272,2.179,273,2.188,275,2.039,276,1.939,277,1.446,281,1.445,284,1.554,287,1.446,288,1.446,289,1.446,296,2.427,334,1.347,385,2.362,386,2.533,388,2.362,389,3.818,391,2.876,400,2.362,401,2.634,421,2.145,446,1.347,595,2.876,643,2.245,826,3.051,1028,3.984,1032,3.818,1041,2.997,1077,2.876,1078,2.633,1079,2.633,1158,2.997,1159,6.691,1160,4.76,1161,4.76,1162,5.37,1163,4.76,1164,5.37,1165,5.738,1166,3.549,1167,4.76,1168,3.549,1169,3.531,1170,4.76,1171,3.549,1172,4.76,1173,5.37,1174,3.549,1175,4.76,1176,3.549,1177,4.76,1178,3.549,1179,4.535,1180,3.549,1181,2.633,1182,3.549,1183,2.633,1184,3.549,1185,3.549,1186,3.549,1187,3.549,1188,3.549,1189,3.549,1190,4.535,1191,5.738,1192,3.549,1193,2.362,1194,4.76,1195,3.549,1196,3.549,1197,3.549,1198,3.549,1199,3.549,1200,3.549,1201,3.549,1202,2.633,1203,2.633,1204,3.549]],["title/injectables/NotyfService.html",[145,0.848,317,1.278]],["body/injectables/NotyfService.html",[3,0.349,4,0.307,9,0.307,13,0.666,23,0.436,24,1.085,26,1.189,29,1.075,31,1.085,32,0.027,33,0.494,34,0.696,35,1.085,37,0.608,38,1.16,39,0.494,40,0.349,42,0.349,43,0.307,44,1.189,68,1.763,121,0.02,122,0.02,133,0.863,145,1.342,155,2.029,161,1.085,167,1.008,168,1.437,169,1.763,172,1.219,185,5.454,190,1.865,195,1.315,197,0.924,203,3.221,211,1.008,231,1.896,264,2.023,266,2.023,272,2.329,317,2.023,320,2.337,321,1.849,386,2.514,604,2.552,1205,3.566,1206,5.653,1207,4.223,1208,5.33,1209,4.223,1210,5.759,1211,6.134,1212,5.33,1213,4.223,1214,5.33,1215,5.33,1216,5.33,1217,5.33,1218,5.33,1219,5.33,1220,6.134,1221,5.33,1222,4.223,1223,3.954,1224,4.223,1225,4.223]],["title/components/PageNotFoundComponent.html",[0,0.066,108,0.737]],["body/components/PageNotFoundComponent.html",[0,0.119,1,0.995,2,1.611,3,0.375,4,0.331,5,1.405,6,1.405,7,1.405,8,1.405,9,0.331,13,0.519,14,3.088,15,1.726,16,1.312,17,1.317,18,1.221,19,1.136,21,1.136,32,0.027,33,0.517,39,0.422,40,0.375,42,0.375,43,0.331,83,1.226,84,1.724,85,1.505,86,1.405,87,1.946,88,1.405,89,1.405,90,0.995,91,1.405,92,1.405,93,0.995,94,1.724,95,1.067,96,1.405,97,0.736,98,0.796,99,1.405,100,0.859,101,1.405,102,0.995,103,1.312,104,0.995,105,1.405,106,1.067,107,1.405,108,1.378,109,1.405,110,0.995,111,1.405,112,0.995,113,1.405,114,0.995,115,1.405,116,0.995,117,1.226,118,1.312,119,1.405,120,1.405,121,0.021,122,0.021,481,3.024,1003,4.377,1210,4.712,1226,3.838,1227,3.838,1228,6.038,1229,5.58,1230,4.545,1231,4.545]],["title/components/ProfileComponent.html",[0,0.066,110,0.737]],["body/components/ProfileComponent.html",[0,0.083,1,0.504,2,1.009,3,0.19,4,0.168,5,0.712,6,0.712,7,0.712,8,0.712,9,0.168,13,0.399,15,1.47,16,0.665,17,1.205,18,1.117,19,0.711,21,0.711,23,0.238,24,0.711,25,1.186,26,0.711,28,1.436,29,1.125,31,0.469,32,0.027,33,0.391,34,0.571,35,0.859,37,0.679,38,0.957,39,0.529,40,0.19,41,0.712,42,0.19,43,0.168,44,1.085,56,2.607,62,1.793,64,1.793,65,1.248,66,1.495,67,1.669,68,1.558,69,2.165,70,1.327,71,2.023,72,1.423,73,0.939,74,0.939,76,1.175,77,1.922,78,1.793,79,1.53,82,1.919,83,0.622,84,1.08,85,0.942,86,0.712,87,1.456,88,0.712,89,0.712,90,0.504,91,1.341,92,0.712,93,0.504,94,1.08,95,0.541,96,0.712,97,0.373,98,0.404,99,0.712,100,0.436,101,0.712,102,0.504,103,0.665,104,0.504,105,0.712,106,0.541,107,0.712,108,0.504,109,0.712,110,1.031,111,0.712,112,0.504,113,0.712,114,0.504,115,0.712,116,0.504,117,1.365,118,1.826,119,0.712,120,0.712,121,0.013,122,0.013,133,0.566,138,2.092,142,1.219,143,1.36,144,1.84,145,1.436,147,1.238,148,1.106,164,0.821,165,1.009,166,1.327,167,1.007,168,0.942,170,1.161,179,1.934,195,1.189,199,1.08,200,2.534,206,0.622,209,0.942,210,0.712,211,1.007,212,1.578,242,1.675,248,1.946,263,1.423,264,1.327,265,1.087,266,1.788,267,1.919,268,1.71,272,1.788,273,1.919,275,1.788,276,2.062,277,2.062,278,2.858,281,1.031,284,1.009,286,2.062,287,1.919,288,1.919,289,1.919,290,1.009,291,1.009,304,2.222,306,2.846,307,1.648,313,3.953,318,0.875,344,1.275,354,2.949,446,1.602,611,3.977,631,2.951,632,3.528,633,1.915,634,4.009,643,1.648,645,2.109,667,1.887,692,1.156,816,2.754,817,2.977,842,2.336,843,3.059,1104,1.946,1105,1.946,1135,1.946,1232,1.946,1233,3.494,1234,3.494,1235,3.564,1236,2.951,1237,4.221,1238,4.275,1239,3.495,1240,4.71,1241,4.71,1242,3.495,1243,3.495,1244,4.71,1245,4.71,1246,4.71,1247,4.71,1248,3.494,1249,3.494,1250,2.951,1251,2.305,1252,2.305,1253,2.951,1254,2.305,1255,3.977,1256,2.305,1257,2.305,1258,2.305,1259,2.305,1260,2.305,1261,2.305,1262,2.951,1263,2.305,1264,2.305,1265,2.305,1266,5.062,1267,2.305,1268,2.305,1269,2.305,1270,1.946,1271,2.305,1272,2.305,1273,3.494,1274,2.305,1275,2.305,1276,2.305,1277,2.305,1278,3.494,1279,2.305,1280,2.305,1281,2.305,1282,2.305,1283,2.305,1284,2.305,1285,2.305,1286,2.305,1287,2.305,1288,5.062,1289,5.062,1290,5.062,1291,1.946,1292,2.305,1293,1.946,1294,2.305,1295,4.221,1296,2.305,1297,2.305,1298,2.305,1299,2.305,1300,2.305,1301,2.305,1302,2.305,1303,2.305,1304,1.946,1305,2.305,1306,2.305,1307,1.946,1308,2.305,1309,2.305,1310,2.305,1311,3.494,1312,2.951,1313,3.494,1314,2.305,1315,3.494,1316,2.305,1317,2.305,1318,2.305,1319,2.305,1320,2.305,1321,2.305,1322,2.305,1323,2.305,1324,2.305,1325,2.305,1326,2.305]],["title/components/RegisterComponent.html",[0,0.066,112,0.737]],["body/components/RegisterComponent.html",[0,0.077,1,0.589,2,1.133,3,0.222,4,0.196,5,0.832,6,0.832,7,0.832,8,0.832,9,0.196,13,0.448,15,0.678,16,0.777,17,1.228,18,1.138,19,0.548,21,0.548,23,0.405,24,0.799,25,1.165,26,0.548,29,1.083,31,0.548,32,0.027,33,0.429,34,0.478,35,0.548,37,0.528,38,0.742,39,0.523,40,0.222,42,0.222,60,1.49,62,1.998,64,2.063,65,1.274,66,1.915,67,1.998,68,1.926,69,2.266,70,1.757,71,2.052,72,1.598,73,1.885,74,1.097,77,1.489,78,1.39,79,1.179,80,2.61,82,1.097,83,0.726,84,1.212,85,1.058,86,0.832,87,1.571,88,0.832,89,0.832,90,0.589,91,0.988,92,0.832,93,0.589,94,1.212,95,0.632,96,0.832,97,0.436,98,0.472,99,0.832,100,0.509,101,0.832,102,0.589,103,0.777,104,0.589,105,0.832,106,0.632,107,0.832,108,0.589,109,0.832,110,0.589,111,0.832,112,1.013,113,0.832,114,0.589,115,0.832,116,0.589,117,0.726,118,0.777,119,0.832,120,0.832,121,0.015,122,0.015,133,0.635,142,1.133,143,1.336,144,1.743,145,1.361,148,0.921,161,1.186,164,0.632,165,0.777,166,1.022,167,0.742,168,0.726,170,0.942,172,0.777,174,2.274,179,1.49,181,3.312,190,1.336,192,2.61,196,0.954,197,0.589,206,0.726,207,2.61,208,1.49,209,0.726,210,0.832,212,0.988,224,3.754,231,0.832,250,0.891,251,0.891,252,0.891,262,1.373,263,1.598,264,1.022,265,1.27,266,1.93,267,1.097,269,1.373,271,2.661,272,2.142,273,2.372,274,2.561,275,1.93,276,2.071,277,2.071,278,2.613,279,2.359,280,1.49,281,1.445,283,1.627,284,1.179,285,1.097,286,1.179,287,1.885,288,2.071,289,2.071,290,1.718,291,1.718,296,1.373,303,1.792,304,2.183,306,1.627,307,1.27,321,1.179,322,0.954,324,0.632,356,1.022,386,1.85,387,1.627,399,2.37,401,1.49,403,1.85,591,1.998,598,1.998,622,1.179,624,1.885,629,4.256,632,3.409,633,0.777,643,1.85,645,1.998,816,2.871,817,2.969,826,1.373,874,2.37,991,1.373,1032,1.792,1042,1.792,1077,2.37,1080,2.91,1081,1.627,1085,1.998,1094,2.274,1096,3.772,1097,4.293,1111,2.91,1115,1.998,1116,1.998,1119,4.186,1120,2.274,1122,2.274,1124,4.01,1125,4.01,1126,1.998,1139,3.312,1140,1.792,1141,2.274,1142,2.274,1143,2.274,1144,2.274,1145,2.274,1146,2.274,1147,1.998,1148,2.274,1151,1.998,1152,1.998,1153,1.998,1154,1.998,1156,1.998,1181,1.998,1183,1.998,1193,1.792,1202,1.998,1203,3.433,1239,1.998,1242,1.998,1243,1.998,1250,2.274,1255,4.293,1270,2.274,1327,1.998,1328,3.923,1329,2.692,1330,4.293,1331,4.628,1332,4.564,1333,2.692,1334,2.692,1335,2.692,1336,2.692,1337,2.274,1338,2.274,1339,2.692,1340,2.692,1341,2.61,1342,2.692,1343,2.692,1344,2.692,1345,2.692,1346,2.274,1347,2.692,1348,2.692,1349,2.692,1350,2.692,1351,3.312,1352,3.312,1353,2.91,1354,1.998,1355,3.433,1356,3.433,1357,1.998,1358,2.274,1359,2.274,1360,2.274,1361,3.312,1362,2.274,1363,2.274,1364,2.692,1365,2.692,1366,2.692,1367,5.445,1368,5.04,1369,3.923,1370,3.312,1371,3.312,1372,3.312,1373,3.312,1374,3.312,1375,3.312,1376,2.274,1377,2.692,1378,2.692,1379,2.692,1380,2.692,1381,4.293,1382,2.692,1383,2.692,1384,2.91,1385,2.274,1386,2.274,1387,3.312,1388,2.274,1389,2.274,1390,3.312,1391,1.998,1392,2.274,1393,2.274,1394,3.312,1395,3.312,1396,3.312,1397,3.312,1398,2.274,1399,2.274,1400,2.274,1401,2.274,1402,2.274,1403,2.274,1404,2.274,1405,2.274,1406,2.274,1407,2.274,1408,4.293,1409,2.274]],["title/components/StatsComponent.html",[0,0.066,114,0.737]],["body/components/StatsComponent.html",[0,0.086,1,0.537,2,1.057,3,0.202,4,0.178,5,0.758,6,0.758,7,0.758,8,0.758,9,0.178,13,0.555,15,0.617,16,0.708,17,1.218,18,1.129,19,0.745,21,0.745,23,0.253,24,0.745,25,1.223,26,0.499,28,1.463,29,1.089,31,0.892,32,0.027,33,0.551,34,0.624,35,0.892,37,0.663,38,0.828,39,0.451,40,0.202,41,0.758,42,0.202,43,0.178,44,1.231,45,0.869,56,2.026,62,1.552,64,1.552,65,0.537,66,0.869,67,1.552,68,1.72,71,1.39,78,1.297,83,1.182,84,1.131,85,0.987,86,0.758,87,1.502,88,0.758,89,0.758,90,0.537,91,0.922,92,0.758,93,0.537,94,1.131,95,0.576,96,0.758,97,0.397,98,0.43,99,0.758,100,0.464,101,0.758,102,0.537,103,0.708,104,0.537,105,0.758,106,0.576,107,0.758,108,0.537,109,0.758,110,0.537,111,0.758,112,0.537,113,0.758,114,1.063,115,0.758,116,0.537,117,0.661,118,0.708,119,0.758,120,0.758,121,0.014,122,0.014,127,3.7,133,0.593,138,1.965,142,1.265,143,1.403,147,1.297,148,1.42,155,1.211,161,0.499,164,0.86,165,1.057,167,0.692,168,0.987,170,0.745,172,1.715,191,1.804,195,1.183,197,1.3,199,1.502,200,1.845,206,0.661,211,0.919,212,1.671,218,2.477,239,0.869,242,1.804,261,2.425,263,0.999,264,0.931,275,0.931,279,1.25,281,0.959,284,1.918,312,2.026,322,1.297,323,0.999,324,1.029,331,1.491,344,1.357,361,1.25,386,1.727,391,1.482,397,2.648,403,2.067,540,2.781,572,1.819,573,4.407,633,1.575,634,2.936,643,2.067,667,1.552,692,2,702,1.918,753,1.603,771,1.39,775,1.074,776,1.074,777,1.074,778,1.074,779,1.074,794,1.074,799,1.357,802,1.25,812,2.716,821,1.632,826,2.234,839,3.233,842,3.215,852,2.436,853,1.632,948,3.629,991,2.781,1024,2.07,1060,2.07,1077,3.511,1078,2.716,1079,1.819,1140,2.436,1169,1.819,1190,3.092,1193,2.915,1223,1.819,1262,3.092,1312,4.103,1354,2.716,1384,2.716,1391,1.819,1410,2.07,1411,4.381,1412,3.661,1413,4.381,1414,4.381,1415,4.381,1416,4.381,1417,4.381,1418,4.859,1419,3.661,1420,3.661,1421,4.859,1422,3.661,1423,4.381,1424,3.661,1425,2.452,1426,3.661,1427,4.381,1428,4.381,1429,4.381,1430,2.452,1431,3.661,1432,2.452,1433,6.138,1434,3.661,1435,2.452,1436,5.454,1437,2.452,1438,3.661,1439,4.381,1440,5.939,1441,2.452,1442,2.452,1443,4.606,1444,4.381,1445,3.661,1446,2.452,1447,2.452,1448,2.452,1449,3.661,1450,2.452,1451,2.452,1452,2.452,1453,2.452,1454,3.661,1455,3.661,1456,2.452,1457,4.381,1458,3.661,1459,3.661,1460,2.452,1461,2.452,1462,3.661,1463,3.661,1464,2.452,1465,2.452,1466,2.452,1467,2.452,1468,2.452,1469,2.452,1470,2.452,1471,2.452,1472,2.452,1473,2.452,1474,2.452,1475,2.452,1476,2.452,1477,3.661,1478,2.452,1479,2.452,1480,2.452,1481,2.452,1482,2.452,1483,2.452,1484,3.661,1485,2.452,1486,2.452,1487,2.452,1488,2.452,1489,2.452,1490,3.661,1491,2.452,1492,2.452,1493,3.661,1494,2.452,1495,2.452,1496,2.452,1497,2.452,1498,2.452,1499,2.452,1500,2.452,1501,2.07,1502,3.661,1503,2.452,1504,2.452,1505,3.661,1506,3.661,1507,2.452,1508,2.452,1509,2.452,1510,3.661,1511,2.07,1512,2.452,1513,2.452,1514,2.452,1515,2.452,1516,2.452,1517,2.452,1518,2.452,1519,2.452,1520,2.452,1521,3.092]],["title/pipes/TrimDecimalsPipe.html",[434,2.034,1522,2.24]],["body/pipes/TrimDecimalsPipe.html",[3,0.383,4,0.337,9,0.337,13,0.645,16,1.339,24,0.944,29,0.813,31,0.944,32,0.027,33,0.565,34,0.479,35,0.944,37,0.645,39,0.43,40,0.383,42,0.383,43,0.337,121,0.022,122,0.022,148,1.327,172,1.339,195,1.291,197,1.497,211,1.068,212,1.168,281,1.015,322,1.643,324,1.327,397,2.803,434,3.414,643,2.665,692,2.186,696,2.473,700,2.473,766,2.665,956,3.086,1028,3.441,1083,3.916,1179,3.916,1522,4.219,1523,4.638,1524,4.77,1525,3.916,1526,5.649,1527,5.649,1528,5.649,1529,5.649,1530,6.499,1531,4.638,1532,5.649,1533,6.34,1534,6.34,1535,6.34,1536,5.649,1537,5.649,1538,4.638,1539,4.638,1540,4.638,1541,4.638,1542,4.638]],["title/components/UpdateProfileComponent.html",[0,0.066,116,0.737]],["body/components/UpdateProfileComponent.html",[0,0.072,1,0.533,2,1.052,3,0.201,4,0.177,5,0.753,6,0.753,7,0.753,8,0.753,9,0.177,13,0.416,15,0.613,16,0.704,17,1.208,18,1.119,19,0.496,21,0.496,23,0.376,24,0.742,25,1.099,26,0.496,28,1.306,29,1.135,31,0.496,32,0.027,33,0.405,34,0.562,35,0.496,37,0.644,38,0.461,39,0.523,40,0.201,41,0.753,42,0.201,60,1.348,62,1.928,64,1.998,65,1.191,66,1.716,67,1.837,68,1.8,69,2.141,70,1.383,71,1.657,72,0.993,73,1.778,74,0.993,77,1.383,78,1.291,79,1.911,80,2.425,82,0.993,83,0.657,84,1.126,85,0.983,86,0.753,87,1.497,88,0.753,89,0.753,90,0.533,91,0.917,92,0.753,93,0.533,94,1.126,95,0.572,96,0.753,97,0.395,98,0.427,99,0.753,100,0.461,101,0.753,102,0.533,103,0.704,104,0.533,105,0.753,106,0.572,107,0.753,108,0.533,109,0.753,110,0.533,111,0.753,112,0.533,113,0.753,114,0.533,115,0.753,116,0.955,117,1.674,118,1.792,119,0.753,120,0.753,121,0.014,122,0.014,130,2.285,133,0.59,138,1.918,142,1.052,143,1.26,144,1.603,145,1.306,148,1.138,161,1.108,164,0.856,165,0.704,166,0.925,167,0.689,168,0.657,169,0.806,170,0.889,172,1.052,179,1.348,190,1.26,192,2.425,194,1.808,195,0.889,196,0.863,197,0.797,200,1.657,202,1.621,203,1.472,204,2.425,205,1.808,206,0.657,207,2.425,208,1.348,209,0.657,210,0.753,212,1.37,224,2.425,231,1.497,241,0.925,242,1.205,245,2.225,249,0.925,250,1.205,251,1.205,252,1.205,253,0.925,262,1.858,263,1.484,264,0.925,265,1.149,266,1.969,267,0.993,268,1.808,271,2.567,272,2.066,273,2.298,274,2.416,275,1.839,276,1.973,277,1.973,278,2.539,279,2.225,280,1.348,281,1.432,283,1.472,284,1.067,285,0.993,286,1.067,287,1.778,288,1.973,289,1.973,290,1.595,291,1.595,296,1.242,307,1.149,322,0.863,324,0.572,374,2.057,386,1.719,387,1.472,399,2.202,401,1.348,403,1.719,408,1.808,563,3.936,591,1.808,606,2.057,616,2.904,618,1.348,622,1.067,629,4.078,632,2.202,633,1.792,634,2.638,643,1.719,645,1.928,647,1.621,692,0.806,721,1.348,771,0.925,816,2.848,817,2.957,826,1.242,874,2.202,991,1.242,1032,1.621,1042,1.621,1077,2.202,1080,2.704,1081,1.472,1085,1.808,1111,2.704,1115,1.808,1119,4.037,1126,1.808,1140,1.621,1147,1.808,1151,1.808,1152,1.808,1153,1.808,1154,1.808,1156,1.808,1181,1.808,1183,1.808,1193,1.621,1202,1.808,1203,3.239,1235,3.077,1236,2.057,1239,1.808,1242,3.239,1243,1.808,1253,3.686,1332,4.379,1337,2.057,1338,2.057,1341,2.425,1346,2.057,1351,3.077,1352,3.077,1353,2.704,1355,3.594,1356,3.848,1357,1.808,1358,2.057,1359,2.057,1360,2.057,1361,3.077,1362,2.057,1363,2.057,1367,4.091,1368,3.077,1370,3.077,1371,3.077,1372,3.077,1373,3.077,1374,3.077,1375,3.077,1376,2.057,1381,3.686,1384,2.704,1385,2.057,1386,2.057,1387,3.077,1388,2.057,1389,2.057,1390,3.077,1391,1.808,1392,2.057,1393,2.057,1394,3.077,1395,3.077,1396,3.077,1397,3.077,1398,2.057,1399,2.057,1400,2.057,1401,2.057,1402,2.057,1403,2.057,1404,2.057,1405,2.057,1406,2.057,1407,2.057,1408,4.091,1409,2.057,1543,4.832,1544,1.808,1545,3.644,1546,3.644,1547,3.644,1548,3.644,1549,3.644,1550,3.644,1551,4.365,1552,4.844,1553,4.365,1554,3.686,1555,3.644,1556,2.437,1557,2.437,1558,4.365,1559,2.437,1560,2.437,1561,2.437,1562,2.437,1563,2.437,1564,2.437,1565,2.437,1566,2.437,1567,2.437,1568,2.437,1569,2.437,1570,2.437,1571,2.437,1572,2.437,1573,2.437,1574,2.437,1575,2.437,1576,4.365,1577,2.437,1578,2.437,1579,2.437,1580,4.365,1581,2.437,1582,2.437,1583,2.437,1584,2.437,1585,2.437,1586,2.437,1587,2.437,1588,2.437,1589,2.437,1590,2.437,1591,2.437,1592,2.437,1593,3.644,1594,2.437,1595,2.437,1596,2.437,1597,2.437,1598,2.437,1599,2.437,1600,2.437,1601,2.437,1602,2.437]],["title/interfaces/UserData.html",[329,0.908,815,2.034]],["body/interfaces/UserData.html",[0,0.066,3,0.182,4,0.161,9,0.161,13,0.252,14,1.222,15,1.035,17,0.418,18,0.387,19,0.45,21,0.45,23,0.228,25,0.556,26,0.45,28,1.16,32,0.027,33,0.381,34,0.349,37,0.469,38,0.777,39,0.486,40,0.182,41,0.683,42,0.182,43,0.161,44,1.011,45,1.456,56,2.275,65,0.483,85,0.596,98,1.147,100,0.418,117,0.596,121,0.013,122,0.013,133,0.548,138,1.524,142,0.977,143,0.977,144,1.535,145,1.16,147,1.198,148,1.427,150,1.47,152,1.47,155,0.731,161,1.11,164,0.519,165,0.977,166,0.838,167,0.777,168,0.596,169,0.731,170,1.011,188,1.47,190,0.977,191,1.524,195,1.11,196,1.198,199,1.619,200,0.838,206,0.596,209,0.596,210,0.683,211,1.091,212,1.708,231,0.683,239,1.932,241,0.838,242,1.908,244,0.9,249,0.838,250,0.731,251,0.731,252,0.731,253,0.838,255,2.294,257,2.017,258,1.47,271,1.042,281,1.412,285,1.877,322,0.782,324,1.082,329,1.34,331,2.532,334,0.838,336,3.066,351,1.47,354,1.222,356,1.886,358,2.736,366,1.47,369,1.47,373,2.736,375,1.47,376,2.044,403,1.596,421,2.485,493,1.47,593,1.47,595,1.335,627,1.378,633,1.434,642,2.017,665,1.886,667,2.32,668,0.967,673,1.47,689,1.126,692,1.908,693,1.042,694,1.939,696,1.8,697,2.573,699,1.042,700,1.481,702,2.175,705,1.596,706,1.042,720,1.042,722,2.174,723,1.042,729,1.042,753,2.175,754,1.596,755,1.596,756,1.596,757,1.596,765,1.042,771,1.561,774,2.343,775,1.481,776,1.481,777,1.481,778,2.017,779,1.481,781,1.596,783,1.596,794,2.463,797,1.596,806,1.042,807,1.042,811,1.47,813,2.51,814,1.639,815,3.002,816,2.472,817,2.672,818,1.639,819,1.639,820,1.639,821,1.47,822,3.05,823,1.639,824,1.639,825,2.51,826,1.725,827,3.888,828,3.419,829,1.639,830,1.639,831,1.47,832,2.51,833,1.639,834,1.639,835,1.639,836,3.419,837,1.639,838,1.639,839,1.47,840,1.639,841,1.639,842,2.749,843,2.044,844,1.639,845,1.639,846,3.419,847,1.639,848,1.639,849,1.639,850,2.51,851,1.639,852,1.47,853,1.47,854,1.639,855,1.639,856,1.639,857,1.639,858,1.639,859,1.639,860,1.639,861,1.639,862,1.639,863,1.639,864,1.639,865,2.51,866,1.639,867,1.639,868,1.639,869,1.47,870,1.639,871,3.686,872,1.639,873,3.05,874,1.335,875,1.639,876,1.639,877,3.05,878,1.639,879,1.639,880,1.639,881,1.639,882,3.05,883,2.51,884,1.639,885,1.639,886,2.51,887,2.51,888,1.639,889,3.419,890,3.05,891,1.639,892,2.51,893,1.639,894,1.639,895,1.639,896,1.639,897,1.639,898,3.686,899,3.05,900,2.51,901,1.639,902,2.51,903,1.639,904,1.639,905,1.639,906,2.51,907,2.51,908,1.639,909,3.05,910,2.51,911,1.639,912,2.51,913,1.639,914,2.51,915,3.05,916,1.639,917,1.639,918,1.639,919,1.639,920,1.639,921,1.639,922,1.639,923,1.639,924,1.639,925,1.47,926,1.639,927,1.639,928,1.639,929,3.05,930,1.639,931,1.639,932,1.639,933,1.639,934,2.51,935,2.51,936,1.639,937,1.639,938,2.51,939,1.639,940,2.51,941,1.639,942,1.639,943,1.639,944,1.639,945,1.639,946,1.639,947,1.47,948,2.251,949,1.639,950,1.47,951,1.639,952,1.639,953,1.639,954,2.51,955,1.639,956,1.47,957,1.639,958,1.639,959,1.639,960,1.639,961,1.639,962,2.51,963,2.51,964,1.639,965,1.639,966,1.639,967,1.639,968,1.639,969,1.639,970,2.51,971,1.639,972,1.639,973,2.51,974,1.639,975,1.639,976,1.639,977,1.639,978,1.639,979,1.639,980,1.639,981,2.51,982,1.639,983,2.51,984,2.51,985,1.639,986,1.639,987,2.51,988,1.639,989,1.639,990,1.639,991,1.725,992,1.639,993,1.639,994,1.639,995,1.639,996,1.639,997,1.639,998,1.639,999,1.639,1000,1.639,1001,1.47,1002,1.639,1003,2.251,1004,1.639]],["title/guards/UserGuard.html",[298,2.034,589,2.24]],["body/guards/UserGuard.html",[3,0.372,4,0.328,9,0.328,13,0.686,23,0.465,24,1.129,26,0.917,29,0.972,31,1.129,32,0.027,33,0.514,34,0.573,35,1.129,37,0.716,39,0.582,40,0.372,42,0.372,43,0.328,121,0.021,122,0.021,144,1.714,167,1.049,170,1.387,191,1.835,200,2.106,202,3.691,209,1.214,211,1.137,214,3.966,298,3.352,300,3.341,302,4.782,303,2.996,304,2.96,306,3.633,307,2.617,308,3.802,309,5.299,310,5.299,312,3.632,313,4.782,314,4.685,315,2.633,316,5.077,317,2.106,318,1.709,319,3.341,320,2.492,321,1.972,322,1.595,323,1.834,324,1.058,589,3.691,1603,3.802,1604,4.503,1605,4.503,1606,4.503]],["title/classes/UserModule.html",[43,0.245,1607,2.24]],["body/classes/UserModule.html",[3,0.384,4,0.339,9,0.339,13,0.531,23,0.481,26,0.948,29,1.193,31,0.948,32,0.027,33,0.432,34,0.703,35,0.948,42,0.384,43,0.339,121,0.022,122,0.022,133,0.917,148,1.093,170,1.153,195,1.406,199,1.886,422,2.576,624,2.485,632,3.687,667,2.005,692,1.873,816,2.878,817,3.11,1238,5.152,1291,3.93,1293,3.93,1304,3.93,1307,3.93,1554,5.152,1607,4.329,1608,4.655,1609,3.93,1610,6.101,1611,5.661,1612,5.661,1613,4.655,1614,4.655,1615,4.655,1616,4.655,1617,4.655,1618,4.655,1619,4.655,1620,4.655,1621,4.655,1622,4.655,1623,4.655,1624,4.655,1625,4.655,1626,4.655,1627,4.655,1628,4.655,1629,4.655,1630,4.655,1631,4.655]],["title/injectables/UserService.html",[28,0.848,317,1.278]],["body/injectables/UserService.html",[3,0.295,4,0.26,9,0.26,13,0.545,23,0.368,24,0.973,26,0.973,28,1.203,29,1.136,31,0.727,32,0.027,33,0.331,34,0.619,35,0.727,37,0.748,39,0.556,40,0.295,42,0.295,43,0.26,44,0.973,121,0.018,122,0.018,133,0.774,138,2.202,142,1.555,143,1.661,144,2.025,148,1.122,161,0.727,164,1.408,165,1.379,166,1.814,167,0.903,170,1.304,190,1.03,191,1.58,195,1.283,199,1.907,200,2.462,206,0.962,209,0.962,211,1.018,212,1.612,241,1.355,242,2.041,249,1.355,307,2.54,312,2.644,317,1.814,320,1.975,321,1.563,324,1.351,344,1.975,422,2.644,604,2.157,614,4.578,616,3.989,618,2.98,624,1.454,627,1.946,633,1.892,634,3.919,645,1.692,647,2.375,771,1.814,842,2.98,843,2.887,950,3.179,1124,4.578,1125,4.578,1137,3.014,1501,4.034,1607,3.583,1632,3.014,1633,4.034,1634,5.385,1635,5.385,1636,5.385,1637,5.751,1638,5.751,1639,6.17,1640,5.751,1641,4.777,1642,3.569,1643,3.569,1644,3.569,1645,4.777,1646,3.569,1647,3.569,1648,3.569,1649,3.569,1650,3.569,1651,4.777,1652,3.569,1653,3.569,1654,3.569,1655,3.569,1656,3.569,1657,3.569,1658,3.569,1659,3.569,1660,3.569,1661,3.569,1662,3.569,1663,3.569,1664,3.569,1665,3.569,1666,3.569,1667,3.569,1668,4.777,1669,3.569,1670,5.385,1671,3.569,1672,3.569]],["title/coverage.html",[1673,3.878]],["body/coverage.html",[0,0.135,1,0.918,9,0.305,10,3.543,11,2.792,12,3.543,28,1.056,32,0.027,34,0.433,43,0.305,63,3.543,65,1.45,90,0.918,93,0.918,95,0.985,97,0.68,98,0.735,100,0.793,102,0.918,104,0.918,106,0.985,108,0.918,110,0.918,112,0.918,114,0.918,116,0.918,121,0.02,122,0.02,123,3.938,124,2.792,125,3.543,145,1.056,161,0.854,239,1.486,267,1.709,281,1.161,285,2.162,298,3.208,299,2.792,301,3.543,304,1.979,317,2.323,326,2.792,327,3.938,329,1.739,402,3.543,434,2.535,472,3.113,481,2.792,563,3.208,566,2.792,568,2.978,589,2.792,605,3.543,665,1.593,666,3.543,690,3.493,691,3.493,695,2.139,698,2.139,701,2.139,811,3.874,815,2.535,1088,3.543,1106,3.543,1158,3.543,1205,3.543,1226,3.543,1227,3.543,1232,3.543,1327,3.938,1341,3.532,1357,3.938,1410,3.543,1521,4.482,1522,2.792,1524,3.543,1525,3.543,1543,3.938,1544,3.938,1603,3.543,1607,2.792,1609,3.543,1632,3.543,1673,3.543,1674,4.195,1675,4.195,1676,4.195,1677,4.195,1678,5.308,1679,5.308,1680,4.195,1681,4.195,1682,4.195,1683,4.195,1684,4.195,1685,4.195,1686,4.195,1687,3.543,1688,4.195,1689,6.312,1690,5.308,1691,4.195,1692,4.195,1693,4.195,1694,4.195,1695,5.308,1696,4.195,1697,4.195,1698,4.195,1699,5.308,1700,5.308,1701,5.308,1702,5.308,1703,5.308,1704,5.308,1705,4.195,1706,4.195,1707,4.195,1708,3.543,1709,4.195,1710,4.195,1711,4.195,1712,4.195]],["title/dependencies.html",[425,2.694,1713,2.086]],["body/dependencies.html",[32,0.027,40,0.404,121,0.022,122,0.022,208,2.706,209,1.319,318,1.856,425,3.254,427,3.628,455,4.327,456,3.88,572,3.628,573,3.628,587,4.129,618,2.706,1206,4.129,1714,4.89,1715,5.756,1716,4.89,1717,5.832,1718,4.89,1719,4.89,1720,4.89,1721,4.89,1722,4.89,1723,4.89,1724,4.89,1725,4.89,1726,4.89,1727,5.832,1728,4.89,1729,4.89,1730,4.89,1731,6.453,1732,4.89,1733,4.89,1734,4.89,1735,4.89,1736,4.89,1737,4.89,1738,4.89,1739,4.89,1740,4.89,1741,4.89,1742,4.89,1743,4.89,1744,4.89,1745,4.89,1746,4.89,1747,4.89,1748,4.89,1749,4.89]],["title/miscellaneous/functions.html",[1750,1.871,1751,3.418]],["body/miscellaneous/functions.html",[23,0.541,32,0.025,37,0.693,121,0.023,122,0.023,204,3.487,231,1.62,271,2.472,563,3.167,622,2.66,1116,3.888,1327,3.888,1330,4.425,1341,4.521,1353,4.507,1354,3.888,1355,4.759,1356,4.759,1543,3.888,1544,4.507,1750,3.487,1751,4.425,1752,5.241,1753,5.241]],["title/index.html",[23,0.29,1633,2.375,1754,2.812]],["body/index.html",[0,0.122,4,0.35,15,1.211,32,0.022,33,0.446,48,4.062,51,4.062,57,5.226,121,0.022,122,0.022,128,2.106,161,0.979,164,1.453,322,1.704,335,4.062,446,1.826,802,2.453,831,3.201,925,3.201,947,3.201,1001,3.201,1169,3.569,1511,5.692,1713,3.569,1715,4.062,1755,4.811,1756,5.775,1757,4.811,1758,6.189,1759,4.062,1760,4.811,1761,5.775,1762,6.565,1763,4.811,1764,4.811,1765,4.811,1766,4.811,1767,4.811,1768,4.811,1769,4.811,1770,6.189,1771,4.811,1772,6.419,1773,4.811,1774,4.811,1775,4.811,1776,4.811,1777,5.775,1778,5.775,1779,6.419,1780,4.811,1781,5.775,1782,5.775,1783,4.811,1784,6.666,1785,4.811,1786,4.811,1787,5.775,1788,4.811,1789,4.811,1790,4.811,1791,4.811,1792,6.189,1793,4.811,1794,3.569]],["title/modules.html",[424,2.775]],["body/modules.html",[32,0.024,121,0.024,122,0.024,423,3.614,424,3.282,435,3.282,456,3.614,869,3.614,1443,4.587,1795,5.432,1796,5.432,1797,6.201]],["title/overview.html",[1794,3.407]],["body/overview.html",[1,1.29,2,1.244,32,0.027,43,0.313,83,1.162,90,1.29,93,1.29,95,1.547,97,0.955,100,1.114,102,1.29,104,1.29,106,1.384,108,1.29,110,1.29,112,1.29,114,1.29,116,1.29,121,0.021,122,0.021,300,3.196,422,2.384,423,4.732,424,2.603,425,2.866,426,3.637,427,3.196,428,3.637,429,3.196,430,3.637,431,3.637,432,3.637,433,3.637,434,3.561,435,3.561,436,5.372,437,4.977,438,5.372,439,4.977,440,5.372,441,4.977,442,5.372,443,4.977,444,4.557,445,3.637,446,1.635,585,2.866,604,2.603,689,2.196,766,2.546,991,2.751,1522,2.866,1687,3.637,1794,3.196,1798,4.307,1799,4.307,1800,4.307]],["title/properties.html",[133,0.656,1713,2.086]],["body/properties.html",[32,0.025,121,0.024,122,0.024,133,0.887,1759,4.626,1801,5.478]],["title/routes.html",[585,3.056]],["body/routes.html",[32,0.024,121,0.024,122,0.024,585,3.661]],["title/miscellaneous/variables.html",[1750,1.871,1802,3.418]],["body/miscellaneous/variables.html",[18,0.918,23,0.541,32,0.026,34,0.541,121,0.023,122,0.023,172,1.513,197,1.147,413,4.759,414,4.759,472,4.507,618,2.9,1223,3.888,1708,4.425,1750,3.487,1802,4.425,1803,5.241,1804,5.241,1805,5.241,1806,5.241,1807,5.241,1808,5.241,1809,5.241,1810,5.241,1811,5.241,1812,5.241,1813,5.241,1814,5.241]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1801,"title":{},"body":{"properties.html":{}}}],["0.015",{"_index":878,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.0625em",{"_index":1395,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.12.0",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":395,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.2vh",{"_index":392,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["0.375em",{"_index":1399,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.3s",{"_index":1182,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0.4",{"_index":1460,"title":{},"body":{"components/StatsComponent.html":{}}}],["0.49",{"_index":876,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5",{"_index":1190,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["0.58",{"_index":875,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["0.5rem",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0.789",{"_index":787,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["0.8",{"_index":1456,"title":{},"body":{"components/StatsComponent.html":{}}}],["0/1",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["000436",{"_index":295,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["0004ff",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["00076e",{"_index":291,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["00115c",{"_index":294,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["002fff",{"_index":290,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["003c6e",{"_index":1326,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0099ff",{"_index":1325,"title":{},"body":{"components/ProfileComponent.html":{}}}],["01",{"_index":762,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["01t${drinkdata.time}:00`).tolocaletimestring('en",{"_index":763,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["05em",{"_index":1404,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["0625em",{"_index":1401,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1",{"_index":991,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":756,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["1.11.3",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.2rem",{"_index":1200,"title":{},"body":{"components/NavigationComponent.html":{}}}],["1.5vh",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":267,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["100",{"_index":65,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["1000",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["100vh",{"_index":1177,"title":{},"body":{"components/NavigationComponent.html":{}}}],["100vw",{"_index":1188,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":1204,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10vh",{"_index":80,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["11.30.0",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["12/13",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["12vh",{"_index":1194,"title":{},"body":{"components/NavigationComponent.html":{}}}],["13",{"_index":1800,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1687,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14/15",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["15.2.0",{"_index":1715,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15.2.9",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["155",{"_index":1198,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":1191,"title":{},"body":{"components/NavigationComponent.html":{}}}],["16",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["17/18",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["1:980328026322:web:6e3441bfbe4bfba4619d0b",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":1390,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["1vh",{"_index":1027,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["1}.${day.date.getdate",{"_index":1487,"title":{},"body":{"components/StatsComponent.html":{}}}],["2",{"_index":766,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"overview.html":{}}}],["2.3.0",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1037,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20.1.2",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["20/21",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1461,"title":{},"body":{"components/StatsComponent.html":{}}}],["201",{"_index":1031,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["20px",{"_index":391,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["21",{"_index":378,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["212121",{"_index":274,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["21212180",{"_index":390,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["255",{"_index":1196,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25vh",{"_index":268,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["28vh",{"_index":1029,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["2rem",{"_index":1176,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2vh",{"_index":269,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{}}}],["3.0.0",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":286,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3/3",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1457,"title":{},"body":{"components/StatsComponent.html":{}}}],["30kg",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["30vh",{"_index":1025,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["33",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["35vh",{"_index":1024,"title":{},"body":{"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["375em",{"_index":1408,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["3vh",{"_index":270,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["4",{"_index":1798,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["4/3",{"_index":1519,"title":{},"body":{"components/StatsComponent.html":{}}}],["4/5",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1041,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{}}}],["400",{"_index":1440,"title":{},"body":{"components/StatsComponent.html":{}}}],["4000",{"_index":1215,"title":{},"body":{"injectables/NotyfService.html":{}}}],["404",{"_index":1230,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["404page",{"_index":1231,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40vh",{"_index":262,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["48009b",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["4caf50",{"_index":1219,"title":{},"body":{"injectables/NotyfService.html":{}}}],["5",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5.0.2",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1521,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["50px",{"_index":278,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["50vh",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5px",{"_index":1175,"title":{},"body":{"components/NavigationComponent.html":{}}}],["5s",{"_index":1406,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["5vh",{"_index":79,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["6",{"_index":1799,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":285,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["65",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["6e0065",{"_index":1323,"title":{},"body":{"components/ProfileComponent.html":{}}}],["6f00ff",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6vh",{"_index":280,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["7",{"_index":1469,"title":{},"body":{"components/StatsComponent.html":{}}}],["7.6.1",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["7.9.0",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":75,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["700",{"_index":1439,"title":{},"body":{"components/StatsComponent.html":{}}}],["75",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["75em",{"_index":1400,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["8/8",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":63,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["80vh",{"_index":1508,"title":{},"body":{"components/StatsComponent.html":{}}}],["8400ff",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{}}}],["85vh",{"_index":265,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["87",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["87008b",{"_index":1397,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["9",{"_index":226,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["9/10",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["95vh",{"_index":1099,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["980328026322",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["997",{"_index":1184,"title":{},"body":{"components/NavigationComponent.html":{}}}],["999",{"_index":1192,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_",{"_index":1470,"title":{},"body":{"components/StatsComponent.html":{}}}],["a.payload.doc.data",{"_index":736,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["aboutus",{"_index":602,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["aboutuscomponent",{"_index":1,"title":{"components/AboutUsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abscontrol.get('confirmpassword')?.value",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abscontrol.get('password')?.value",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["absolute",{"_index":1042,"title":{},"body":{"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abstractcontrol",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["abv",{"_index":220,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["accessors",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["actions",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actions.map(a",{"_index":735,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["activatedroute",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":309,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["active",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["add",{"_index":128,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["adddrinkamount",{"_index":1005,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["adddrinkamount(drink",{"_index":751,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["added",{"_index":247,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["adding",{"_index":254,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["address",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["adds",{"_index":184,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["adjustchartsizes",{"_index":1418,"title":{},"body":{"components/StatsComponent.html":{}}}],["admin",{"_index":91,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["admin@zt.com",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adminform",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adminformcomponent",{"_index":90,"title":{"components/AdminFormComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":299,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminpagecomponent",{"_index":93,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["afauth",{"_index":1555,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["afs",{"_index":142,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aizasyci6ejwh0cuv7u3qokuf7aotjqbg0kx46s",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alcohol",{"_index":255,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["alert",{"_index":969,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["align",{"_index":67,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["allalcoholgrams",{"_index":929,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["allowed",{"_index":297,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["allows",{"_index":332,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["alpha",{"_index":394,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["already",{"_index":792,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["always",{"_index":680,"title":{},"body":{"injectables/DateService.html":{}}}],["amount",{"_index":696,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["amounts",{"_index":983,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["angular",{"_index":164,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"index.html":{}}}],["angular/animations",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{}}}],["angular/fire/compat",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/auth",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angular/fire/compat/firestore",{"_index":206,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/storage",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/stepper",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":209,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["angularfiremodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":578,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":143,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["apikey",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["app.appspot.com",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["app.firebaseapp.com",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":95,"title":{"components/AppComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appends",{"_index":796,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["appid",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":48,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["appmodule",{"_index":423,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":435,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approximate",{"_index":866,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["approximately",{"_index":829,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["arguments",{"_index":1425,"title":{},"body":{"components/StatsComponent.html":{}}}],["around",{"_index":1509,"title":{},"body":{"components/StatsComponent.html":{}}}],["arrange",{"_index":1429,"title":{},"body":{"components/StatsComponent.html":{}}}],["array",{"_index":361,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["array.from",{"_index":1467,"title":{},"body":{"components/StatsComponent.html":{}}}],["array.isarray(drinkentries",{"_index":1499,"title":{},"body":{"components/StatsComponent.html":{}}}],["artifacts",{"_index":1773,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1517,"title":{},"body":{"components/StatsComponent.html":{}}}],["async",{"_index":138,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["aunthenticated",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["authdomain",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":307,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["authenticationservice",{"_index":304,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["authetntication",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authservice",{"_index":306,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["authstate",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authstate(this.auth",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auto",{"_index":71,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["automatically",{"_index":1766,"title":{},"body":{"index.html":{}}}],["available",{"_index":869,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"modules.html":{}}}],["average",{"_index":879,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["await",{"_index":242,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["bac",{"_index":827,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["back",{"_index":187,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["background",{"_index":272,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bar",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["barchartheight",{"_index":1458,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartview",{"_index":1413,"title":{},"body":{"components/StatsComponent.html":{}}}],["barchartwidth",{"_index":1454,"title":{},"body":{"components/StatsComponent.html":{}}}],["based",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":686,"title":{},"body":{"injectables/DateService.html":{}}}],["behaviorsubject(new",{"_index":678,"title":{},"body":{"injectables/DateService.html":{}}}],["block",{"_index":1202,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["blood",{"_index":825,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bodywaterconstant",{"_index":873,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["bold",{"_index":1100,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{}}}],["bootstrap",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":276,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["bottom",{"_index":74,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["box",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["break",{"_index":993,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["browse",{"_index":1797,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["build",{"_index":1772,"title":{},"body":{"index.html":{}}}],["builder",{"_index":163,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button",{"_index":282,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["button:disabled",{"_index":292,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["button:first",{"_index":381,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:last",{"_index":383,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["button:not(:disabled",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["buttons",{"_index":379,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["calculate",{"_index":906,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatebac",{"_index":867,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculates",{"_index":865,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculatetotals",{"_index":941,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calculation",{"_index":870,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["calories",{"_index":257,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["caloriesperserving",{"_index":219,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["canactivate",{"_index":302,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":308,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["capabilities",{"_index":1790,"title":{},"body":{"index.html":{}}}],["catch",{"_index":249,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["catch((error",{"_index":374,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["category",{"_index":218,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["categorycounts[category",{"_index":1502,"title":{},"body":{"components/StatsComponent.html":{}}}],["ccblue",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpink",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ccpurple",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cdr",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":68,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["change",{"_index":947,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["changedetectorref",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":838,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["characters",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["chart",{"_index":1433,"title":{},"body":{"components/StatsComponent.html":{}}}],["charts",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["check",{"_index":1169,"title":{},"body":{"components/NavigationComponent.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["checking",{"_index":205,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["checks",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["child",{"_index":399,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["choice",{"_index":1786,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{"classes/UserModule.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1608,"title":{},"body":{"classes/UserModule.html":{}}}],["clears",{"_index":807,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["cli",{"_index":1758,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":971,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["clicks",{"_index":704,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["clip",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["close",{"_index":1038,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["cluster_appmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1768,"title":{},"body":{"index.html":{}}}],["collection",{"_index":337,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["collection('drink",{"_index":371,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["color",{"_index":273,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["column",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["command",{"_index":1787,"title":{},"body":{"index.html":{}}}],["commercially",{"_index":59,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["commonmodule",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":88,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["components/about",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/drink",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/home/home.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navigation/navigation.component",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/profile/profile.component",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/register/register.component",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats/stats.component",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/update",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirm('are",{"_index":368,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["confirmation",{"_index":1572,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["confirmdelete",{"_index":973,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["confirmed",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["console.error('error",{"_index":253,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["console.error('user",{"_index":868,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.error(error",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"drinkdata",{"_index":980,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('current",{"_index":927,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('date",{"_index":979,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('drink",{"_index":896,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('estimated",{"_index":934,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('fetched",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('future",{"_index":904,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('invalid",{"_index":808,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["console.log('last",{"_index":919,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('no",{"_index":1004,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('past",{"_index":903,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('time",{"_index":920,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('total",{"_index":932,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('udata",{"_index":872,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log('uid",{"_index":978,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(`deleted",{"_index":999,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(this.currentuserid",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":212,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["construct",{"_index":884,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["constructor(afs",{"_index":344,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(fb",{"_index":140,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["constructor(private",{"_index":323,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{}}}],["constructor(router",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["constructor(user",{"_index":1611,"title":{},"body":{"classes/UserModule.html":{}}}],["constructor(userservice",{"_index":27,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["consumed",{"_index":694,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["container",{"_index":261,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["container.open",{"_index":1185,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contains",{"_index":126,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["content",{"_index":826,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["count",{"_index":1505,"title":{},"body":{"components/StatsComponent.html":{}}}],["coverage",{"_index":1673,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cps",{"_index":719,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["create",{"_index":851,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["creates",{"_index":772,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["createuserwithemailandpassword",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["creating",{"_index":160,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["credentials",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":312,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"components/StatsComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentemail",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["currently",{"_index":200,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currenttime",{"_index":883,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currenttime.gettime",{"_index":917,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["currentuser",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdateProfileComponent.html":{}}}],["currentuser.updatepassword(newpassword",{"_index":1592,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["currentuseremail",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":842,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":296,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["d3",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":148,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["database",{"_index":130,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["databse",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":667,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["date().gettime",{"_index":790,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(`1970",{"_index":761,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["date(event.target.value",{"_index":952,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.max(...pastdrinks.map((drink",{"_index":913,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.max(earliestalldrinktime.gettime",{"_index":939,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(math.min(...drinktimes.map((drink",{"_index":937,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date(this.selecteddate",{"_index":893,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1476,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getfullyear",{"_index":1472,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.getmonth",{"_index":1473,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.setdate(date.getdate",{"_index":1471,"title":{},"body":{"components/StatsComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":958,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["date:'yyyy",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["date:\\'yyyy",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["dateinput",{"_index":832,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dateservice",{"_index":665,"title":{"injectables/DateService.html":{}},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["day",{"_index":794,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["day.date.getmonth",{"_index":1486,"title":{},"body":{"components/StatsComponent.html":{}}}],["day.formatteddate",{"_index":1482,"title":{},"body":{"components/StatsComponent.html":{}}}],["dd",{"_index":961,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["decimal",{"_index":1533,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimalplaces",{"_index":1530,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals",{"_index":1527,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["decimals.pipe",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["decimals.pipe.ts",{"_index":1525,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["decimals.pipe.ts:17",{"_index":1531,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["declarations",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1199,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{},"components/StatsComponent.html":{}}}],["deep",{"_index":1512,"title":{},"body":{"components/StatsComponent.html":{}}}],["default",{"_index":172,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":336,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deleted",{"_index":373,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletedrink",{"_index":340,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrink(drinkid",{"_index":346,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deletedrinkfromfirestore",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletedrinkfromfirestore(drink",{"_index":977,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletes",{"_index":348,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["deleting",{"_index":375,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["deletion",{"_index":970,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dependencies",{"_index":425,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":1039,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detail.alcohol",{"_index":860,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.amount",{"_index":858,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.calories",{"_index":859,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.id",{"_index":857,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detail.time",{"_index":861,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["details",{"_index":1026,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["detailsarray",{"_index":855,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["detailsarray.map(detail",{"_index":856,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["dev",{"_index":1764,"title":{},"body":{"index.html":{}}}],["development",{"_index":1760,"title":{},"body":{"index.html":{}}}],["digit",{"_index":767,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["direction",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/StatsComponent.html":{}}}],["directive",{"_index":86,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1771,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1776,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":1220,"title":{},"body":{"injectables/NotyfService.html":{}}}],["display",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["displayed",{"_index":1211,"title":{},"body":{"injectables/NotyfService.html":{}}}],["displaying",{"_index":168,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["displayname",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["displays",{"_index":14,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["dist",{"_index":1775,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1506,"title":{},"body":{"components/StatsComponent.html":{}}}],["div",{"_index":283,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["div.drink",{"_index":1033,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["div:last",{"_index":1034,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["doc(drinkid",{"_index":372,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["doc.data",{"_index":1495,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata",{"_index":1494,"title":{},"body":{"components/StatsComponent.html":{}}}],["docdata?.drinkamounts",{"_index":1496,"title":{},"body":{"components/StatsComponent.html":{}}}],["docid",{"_index":775,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref",{"_index":776,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.get().topromise",{"_index":779,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set",{"_index":998,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docref.set(drinkamountdata",{"_index":805,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["docsnapshot",{"_index":778,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.data",{"_index":783,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot.exists",{"_index":781,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["docsnapshot?.data",{"_index":1483,"title":{},"body":{"components/StatsComponent.html":{}}}],["document",{"_index":774,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["document.getelementbyid(\"profilepic",{"_index":1298,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":800,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["drankdrinksref",{"_index":1490,"title":{},"body":{"components/StatsComponent.html":{}}}],["drink",{"_index":98,"title":{"interfaces/Drink.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drink's",{"_index":895,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.abv",{"_index":1021,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.abv/100",{"_index":786,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.alcohol",{"_index":910,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.amount",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["drink.calories",{"_index":944,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.caloriesperserving",{"_index":785,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.category",{"_index":799,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{}}}],["drink.drinkdate",{"_index":902,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.drinkdate.gettime",{"_index":914,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.id",{"_index":990,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.ml",{"_index":1023,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drink.name",{"_index":376,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.name.tolowercase().includes(term",{"_index":746,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drink.time",{"_index":1000,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drink.time.split(':').map(number",{"_index":891,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamount",{"_index":695,"title":{"interfaces/DrinkAmount.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkamountdata",{"_index":803,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkamounts",{"_index":702,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamounts[drinkname",{"_index":986,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkamountsmap",{"_index":698,"title":{"interfaces/DrinkAmountsMap.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["drinkcount",{"_index":1484,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkdata",{"_index":239,"title":{"interfaces/DrinkData.html":{}},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["drinkdata.drinkamounts",{"_index":981,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdata.ml",{"_index":758,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata.time",{"_index":759,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinkdata?.drinkamounts",{"_index":853,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate",{"_index":892,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkdate.sethours(hours",{"_index":894,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinkentries",{"_index":1498,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkentries.foreach((drink",{"_index":1500,"title":{},"body":{"components/StatsComponent.html":{}}}],["drinkform",{"_index":134,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinkid",{"_index":350,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["drinking",{"_index":54,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["drinklist",{"_index":601,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["drinklistcomponent",{"_index":97,"title":{"components/DrinkListComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drinkmlinput",{"_index":1035,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinkname",{"_index":729,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinks",{"_index":331,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinksfortheday",{"_index":821,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["drinkslist",{"_index":711,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["drinktimeinput",{"_index":1036,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["drinktimes",{"_index":887,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.filter((drink",{"_index":901,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktimes.reduce((sum",{"_index":930,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["drinktoedit",{"_index":228,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["drinktoedit.id",{"_index":232,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["duration",{"_index":1214,"title":{},"body":{"injectables/NotyfService.html":{}}}],["dynamic",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1785,"title":{},"body":{"index.html":{}}}],["earliestalldrinktime",{"_index":936,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ease",{"_index":1183,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["edit",{"_index":156,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{}}}],["editdrink",{"_index":341,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["editdrink(drink",{"_index":352,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["edited",{"_index":201,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editing",{"_index":154,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["editingdrinkid",{"_index":135,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["eee",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["elapsed",{"_index":921,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["element",{"_index":85,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["elementref",{"_index":813,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["elimination",{"_index":880,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["email",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":683,"title":{},"body":{"injectables/DateService.html":{}}}],["empty",{"_index":159,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["encapsulation",{"_index":1160,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1784,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":924,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["enter",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["entries",{"_index":985,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.findindex((entry",{"_index":988,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entries.splice(entryindex",{"_index":992,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry",{"_index":797,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entry.id",{"_index":989,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["entryid",{"_index":789,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["entryindex",{"_index":987,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["environment",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebase",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":190,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["error('no",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":1208,"title":{},"body":{"injectables/NotyfService.html":{}}}],["estimated",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["estimatedsobertime",{"_index":938,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["event",{"_index":948,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["execute",{"_index":1781,"title":{},"body":{"index.html":{}}}],["exist",{"_index":801,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existing",{"_index":183,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata",{"_index":782,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["existingdata.drinkamounts",{"_index":784,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exists",{"_index":793,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["exit",{"_index":994,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f44336",{"_index":1221,"title":{},"body":{"injectables/NotyfService.html":{}}}],["f700ff",{"_index":1396,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["false",{"_index":203,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{}}}],["fb",{"_index":162,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["female",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["fetchalldrinks",{"_index":342,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fetchdrinksfortheday",{"_index":848,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetches",{"_index":358,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetching",{"_index":366,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fetchuserdata",{"_index":841,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ff00dd",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ff00ff",{"_index":1322,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1767,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1514,"title":{},"body":{"components/StatsComponent.html":{}}}],["filled",{"_index":355,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fills",{"_index":153,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["filterdrinks",{"_index":741,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filtereddrinks",{"_index":715,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["filters",{"_index":740,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["find",{"_index":984,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["fireauth",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["firestore",{"_index":165,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["firestoredocumentdata",{"_index":701,"title":{"interfaces/FirestoreDocumentData.html":{}},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["first",{"_index":802,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/StatsComponent.html":{},"index.html":{}}}],["fixed",{"_index":1028,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["flag",{"_index":204,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["flat",{"_index":862,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["flex",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["float",{"_index":380,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form",{"_index":60,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form's",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form'},{'name",{"_index":92,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["form.component",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.html",{"_index":132,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.scss",{"_index":131,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts",{"_index":125,"title":{},"body":{"components/AdminFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:106",{"_index":178,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:20",{"_index":193,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:24",{"_index":198,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:28",{"_index":146,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:73",{"_index":176,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form.component.ts:87",{"_index":171,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["form/admin",{"_index":124,"title":{},"body":{"components/AdminFormComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["formats",{"_index":954,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["formatted",{"_index":956,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["formatteddate",{"_index":753,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["formattedtime",{"_index":760,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["formbuilder",{"_index":141,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["formcontainer",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontainer>h1",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formcontrol('male",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formdata",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":192,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["formsmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1003,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/UserData.html":{}}}],["found'},{'name",{"_index":109,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["found.component",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1229,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":1228,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1227,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(this.auth.signout",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["full",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1751,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1791,"title":{},"body":{"index.html":{}}}],["future",{"_index":899,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["futuredrinks",{"_index":905,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["gap",{"_index":1507,"title":{},"body":{"components/StatsComponent.html":{}}}],["gb",{"_index":764,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["gender",{"_index":817,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["genderfromdb",{"_index":1545,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["genderselection",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["genderselection>label",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["genderselection>label>input",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gendertemp",{"_index":1302,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.charat(0).touppercase",{"_index":1305,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gendertemp.slice(1",{"_index":1306,"title":{},"body":{"components/ProfileComponent.html":{}}}],["generate",{"_index":1770,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1757,"title":{},"body":{"index.html":{}}}],["generates",{"_index":788,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["get's",{"_index":1558,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getauth",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["getconfirmpassword",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getcurrentuseremail",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuseremailstring",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["getcurrentuserid",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["getdrinks",{"_index":732,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["getemail",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getfirestore",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatteddate",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["getformatteddate(date",{"_index":957,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["getgender",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getgenderandweight",{"_index":1551,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getpassword",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getprofilepicture",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getprofilepicurl",{"_index":1552,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["getregisterdate",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gets",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["getselecteddate",{"_index":670,"title":{},"body":{"injectables/DateService.html":{}}}],["getstorage",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":1633,"title":{"index.html":{}},"body":{"injectables/UserService.html":{}}}],["getuser",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserid",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["getweight",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["given",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["go",{"_index":925,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["goal",{"_index":49,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["gradient(135deg",{"_index":289,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["grams",{"_index":933,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["graph",{"_index":1443,"title":{},"body":{"components/StatsComponent.html":{},"modules.html":{}}}],["graphdata",{"_index":1414,"title":{},"body":{"components/StatsComponent.html":{}}}],["gray",{"_index":293,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["green",{"_index":384,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["group",{"_index":194,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["guard",{"_index":298,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["guards",{"_index":300,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guards/user.guard",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["h1",{"_index":76,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["habits",{"_index":55,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["hamburger",{"_index":1173,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handles",{"_index":179,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["headercontainer",{"_index":1315,"title":{},"body":{"components/ProfileComponent.html":{}}}],["height",{"_index":64,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["help",{"_index":1792,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidden",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["history.state.drink",{"_index":229,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["holds",{"_index":681,"title":{},"body":{"injectables/DateService.html":{}}}],["home",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["home.component.html",{"_index":819,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["home.component.scss",{"_index":820,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":1448,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1438,"title":{},"body":{"components/StatsComponent.html":{}}}],["hostlisteners",{"_index":1422,"title":{},"body":{"components/StatsComponent.html":{}}}],["hour",{"_index":765,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["hours",{"_index":889,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["html",{"_index":84,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["htmlimageelement",{"_index":1299,"title":{},"body":{"components/ProfileComponent.html":{}}}],["http://localhost:4200",{"_index":1765,"title":{},"body":{"index.html":{}}}],["https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11",{"_index":1301,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":1174,"title":{},"body":{"components/NavigationComponent.html":{}}}],["icons",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":199,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["id'}).subscribe",{"_index":364,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["identifier",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["if(!this.currentuserid",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(!this.loginform.valid",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(currentuser",{"_index":1591,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(newpassword",{"_index":1589,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(password",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["if(this.pwcheck",{"_index":1596,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["if(user",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["image",{"_index":287,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["img",{"_index":1316,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":322,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1515,"title":{},"body":{"components/StatsComponent.html":{}}}],["imports",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":928,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":809,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["infocontainer",{"_index":1317,"title":{},"body":{"components/ProfileComponent.html":{}}}],["initialization",{"_index":721,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["initializeapp(environment",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp,providefirebaseapp",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":177,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializedrinkdata",{"_index":1006,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["initializedrinkdata(drinkname",{"_index":730,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["initializeform",{"_index":137,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["initializes",{"_index":147,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["injectable",{"_index":317,"title":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1201,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inner",{"_index":1098,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["innercontainer",{"_index":61,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["input",{"_index":271,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["input[type=\"radio",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["input[type=\"radio\"]:checked+span",{"_index":1393,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inputfieldzt",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["inset(100",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["instantly",{"_index":684,"title":{},"body":{"injectables/DateService.html":{}}}],["interface",{"_index":329,"title":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{}},"body":{"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":689,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"interfaces/FirestoreDocumentData.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["invalid",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["isadmin",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["iseditmode",{"_index":136,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["isopen",{"_index":1164,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isuser",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["it's",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["items",{"_index":284,"title":{},"body":{"components/AdminFormComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["iterate",{"_index":982,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["justify",{"_index":1193,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["karma",{"_index":1783,"title":{},"body":{"index.html":{}}}],["kcal",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["kcal/serving",{"_index":1022,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["keep",{"_index":53,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["key",{"_index":699,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["kg",{"_index":1311,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label",{"_index":1398,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:first",{"_index":1407,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["label:last",{"_index":1409,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landing",{"_index":103,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["landingbuttondiv",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landinglogin",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["landingpagecomponent",{"_index":102,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["landingregister",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["large",{"_index":82,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["last",{"_index":922,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["last7days",{"_index":1466,"title":{},"body":{"components/StatsComponent.html":{}}}],["last7days.map(async",{"_index":1481,"title":{},"body":{"components/StatsComponent.html":{}}}],["lastdrinktime",{"_index":912,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["lastdrinktime.gettime",{"_index":918,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["later",{"_index":728,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["latest",{"_index":682,"title":{},"body":{"injectables/DateService.html":{}}}],["left",{"_index":70,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["legend",{"_index":83,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"overview.html":{}}}],["legendposition",{"_index":1444,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendposition.below",{"_index":1445,"title":{},"body":{"components/StatsComponent.html":{}}}],["legendpospie",{"_index":1415,"title":{},"body":{"components/StatsComponent.html":{}}}],["length",{"_index":1468,"title":{},"body":{"components/StatsComponent.html":{}}}],["letter",{"_index":1402,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["li",{"_index":400,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["li:not(:last",{"_index":398,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["lightgray",{"_index":1405,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["linear",{"_index":288,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list",{"_index":334,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"interfaces/UserData.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["list.component",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":709,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.scss",{"_index":710,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["list.component.ts",{"_index":691,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["list.component.ts:102",{"_index":1013,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:116",{"_index":1012,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:127",{"_index":1011,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:140",{"_index":1014,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:148",{"_index":1010,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:159",{"_index":1009,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:34",{"_index":810,"title":{},"body":{"interfaces/DrinkAmountsMap.html":{}}}],["list.component.ts:60",{"_index":1016,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:64",{"_index":1019,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:68",{"_index":1017,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:72",{"_index":1018,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:76",{"_index":1015,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:80",{"_index":1020,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list.component.ts:84",{"_index":1008,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["list/drink",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["listens",{"_index":1427,"title":{},"body":{"components/StatsComponent.html":{}}}],["lists",{"_index":703,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["literal",{"_index":812,"title":{},"body":{"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/StatsComponent.html":{}}}],["loadbarchartdata",{"_index":1419,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadbarchartdata(currentuserid",{"_index":1431,"title":{},"body":{"components/StatsComponent.html":{}}}],["loaded",{"_index":314,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["loading",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpiechartdata",{"_index":1420,"title":{},"body":{"components/StatsComponent.html":{}}}],["loadpiechartdata(currentuserid",{"_index":1434,"title":{},"body":{"components/StatsComponent.html":{}}}],["loads",{"_index":839,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["log",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"injectables/UserService.html":{}}}],["logging",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":105,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["login(username",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttondiv",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":104,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginuser(username",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":1313,"title":{},"body":{"components/ProfileComponent.html":{}}}],["logoutuser",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["logs",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["loop",{"_index":995,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mail",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["male",{"_index":874,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["managing",{"_index":330,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["map",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["map(actions",{"_index":734,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["margin",{"_index":69,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["mat",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["matautocompletemodule",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheetmodule",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogmodule",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["materror",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["matexpansionmodule",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldupdate",{"_index":1599,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformfieldupdate>mat",{"_index":1600,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["matformlogin",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformregister",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matformregister>mat",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matgridlistmodule",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["math.max(0",{"_index":916,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.max(math.min(height",{"_index":1459,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(math.min(width",{"_index":1455,"title":{},"body":{"components/StatsComponent.html":{}}}],["math.max(this.bac",{"_index":923,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["math.random",{"_index":791,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["maticonmodule",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreemodule",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":397,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["mdc",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["media",{"_index":1516,"title":{},"body":{"components/StatsComponent.html":{}}}],["menu",{"_index":1159,"title":{},"body":{"components/NavigationComponent.html":{}}}],["merge",{"_index":806,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["merging",{"_index":804,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["message",{"_index":1210,"title":{},"body":{"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{}}}],["messages",{"_index":169,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["messagingsenderid",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metabolismrate",{"_index":877,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{}}}],["method",{"_index":950,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["min",{"_index":279,"title":{},"body":{"components/AdminFormComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["minimum",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minute",{"_index":768,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["minutes",{"_index":890,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["miscellaneous",{"_index":1750,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ml",{"_index":217,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{}}}],["mm",{"_index":960,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["mmm",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":157,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["modify",{"_index":129,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["module",{"_index":422,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["modules",{"_index":424,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1793,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["native",{"_index":966,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["navigate",{"_index":335,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["navigates",{"_index":186,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigation",{"_index":151,"title":{},"body":{"components/AdminFormComponent.html":{},"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":107,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["navigation.component.html",{"_index":1163,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1162,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation?.extras?.state",{"_index":215,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["navigationcomponent",{"_index":106,"title":{"components/NavigationComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationend",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":377,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["necessary",{"_index":708,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["need",{"_index":1788,"title":{},"body":{"index.html":{}}}],["needed",{"_index":127,"title":{},"body":{"components/AdminFormComponent.html":{},"components/StatsComponent.html":{}}}],["negative",{"_index":926,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["new",{"_index":161,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newgender",{"_index":1580,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newly",{"_index":748,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["newpassword",{"_index":1587,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["newweight",{"_index":1576,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["next",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":1511,"title":{},"body":{"components/StatsComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngneat/hot",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["ngneat/overview",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["ngx",{"_index":1513,"title":{},"body":{"components/StatsComponent.html":{}}}],["ngxchartsmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":389,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["notification",{"_index":189,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["notifications",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["notyf",{"_index":1206,"title":{},"body":{"injectables/NotyfService.html":{},"dependencies.html":{}}}],["notyfservice",{"_index":145,"title":{"injectables/NotyfService.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["nowrap",{"_index":1392,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["null",{"_index":196,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["number",{"_index":692,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["object",{"_index":1223,"title":{},"body":{"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(categorycounts).map(([category",{"_index":1504,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.entries(drinkdata.drinkamounts).map(([name",{"_index":854,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["object.keys(updates).length",{"_index":1584,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["object.values(drinkamounts).foreach((drinkentries",{"_index":1497,"title":{},"body":{"components/StatsComponent.html":{}}}],["object.values(drinksfortheday).flat().length",{"_index":1485,"title":{},"body":{"components/StatsComponent.html":{}}}],["objects",{"_index":885,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["observable",{"_index":315,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"guards/UserGuard.html":{}}}],["oldest",{"_index":1479,"title":{},"body":{"components/StatsComponent.html":{}}}],["once",{"_index":996,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondatechange",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondatechange(event",{"_index":951,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ondrinkclick",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["ondrinkclick(drink",{"_index":972,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["oninit",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["onresize",{"_index":1421,"title":{},"body":{"components/StatsComponent.html":{}}}],["onsubmit",{"_index":139,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["opacity",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":1170,"title":{},"body":{"components/NavigationComponent.html":{}}}],["opendatepicker",{"_index":964,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["opens",{"_index":962,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["otherwise",{"_index":158,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["out",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["overall",{"_index":818,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["overflow",{"_index":263,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["overlay",{"_index":1187,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":1794,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":81,"title":{},"body":{"components/AboutUsComponent.html":{},"components/LandingPageComponent.html":{}}}],["package",{"_index":1713,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":73,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["padstart(2",{"_index":1475,"title":{},"body":{"components/StatsComponent.html":{}}}],["page",{"_index":15,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["page'},{'name",{"_index":94,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["page.component",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":339,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":338,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":327,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1091,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:25",{"_index":345,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts:32",{"_index":1092,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:44",{"_index":359,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:52",{"_index":357,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:66",{"_index":360,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:74",{"_index":353,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:82",{"_index":347,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page/admin",{"_index":326,"title":{},"body":{"components/AdminPageComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["page/landing",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pagenotfoundcomponent",{"_index":108,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":211,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["params.get('id",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["parsefloat(formatted).tostring",{"_index":1539,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["passed",{"_index":149,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["password",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["password.length",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwords",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["passwordsdontmatch",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["passwordsmatchvalidator",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["past",{"_index":898,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks",{"_index":900,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.length",{"_index":911,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["pastdrinks.reduce((sum",{"_index":908,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["path",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pathmatch",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":258,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["personal",{"_index":56,"title":{},"body":{"components/AboutUsComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["personalstats",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["picker",{"_index":963,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["picture",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["picurl",{"_index":1295,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pie",{"_index":1436,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartdata",{"_index":1416,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartheight",{"_index":1463,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartview",{"_index":1417,"title":{},"body":{"components/StatsComponent.html":{}}}],["piechartwidth",{"_index":1462,"title":{},"body":{"components/StatsComponent.html":{}}}],["pipe",{"_index":1522,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(switchmap(({user",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipes",{"_index":1523,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["pipes/trim",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":1537,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["places",{"_index":1534,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["platform",{"_index":51,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["please",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["pointer",{"_index":401,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["position",{"_index":386,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["present",{"_index":152,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["previous",{"_index":849,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["profile",{"_index":118,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile'},{'name",{"_index":111,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.scss",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["profile.component.ts",{"_index":1544,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profile.component.ts:102",{"_index":1570,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:106",{"_index":1571,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:110",{"_index":1573,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":1574,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:119",{"_index":1560,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:128",{"_index":1559,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:139",{"_index":1557,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:155",{"_index":1562,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":1567,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:45",{"_index":1564,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1568,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:53",{"_index":1563,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1565,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:62",{"_index":1566,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:68",{"_index":1556,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":1561,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile.component.ts:98",{"_index":1569,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profile/update",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profileadminbtn",{"_index":1324,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilebuttondiv",{"_index":1318,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecontainer",{"_index":1314,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilelogoutbtn",{"_index":1321,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml",{"_index":1297,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepichtml.src",{"_index":1300,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilepicurl",{"_index":1554,"title":{},"body":{"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["profilepicurlfromdb",{"_index":1546,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["profilestatsbtn",{"_index":1319,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilesub",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileupdatebtn",{"_index":1320,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1756,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":191,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["promise.all(promises",{"_index":1489,"title":{},"body":{"components/StatsComponent.html":{}}}],["promises",{"_index":1480,"title":{},"body":{"components/StatsComponent.html":{}}}],["proper",{"_index":700,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"interfaces/UserData.html":{}}}],["properly",{"_index":955,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":50,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{}}}],["provideauth",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provideauth,getauth",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providedin",{"_index":320,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"injectables/NotyfService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore,getfirestore",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providestorage",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providestorage,getstorage",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["providing",{"_index":707,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["public",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["pwcheck",{"_index":1547,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["querysnapshot",{"_index":1492,"title":{},"body":{"components/StatsComponent.html":{}}}],["radius",{"_index":277,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["rate",{"_index":881,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["ratio",{"_index":1518,"title":{},"body":{"components/StatsComponent.html":{}}}],["re",{"_index":1428,"title":{},"body":{"components/StatsComponent.html":{}}}],["reactiveformsmodule",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":852,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["recorded",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["rect(0",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["red",{"_index":382,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":354,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{}}}],["redirectto",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecttoadminformadddrink",{"_index":343,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["redirecttoadminpage",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttodrinks",{"_index":967,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["redirecttologin",{"_index":1089,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttopersonalstats",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirecttoregister",{"_index":1090,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirecttoupdateprofile",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ref",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["ref.where('email",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["reference",{"_index":831,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["register",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":113,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["register.component.html",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerageindays",{"_index":1610,"title":{},"body":{"classes/UserModule.html":{}}}],["registerbutton",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerbuttondiv",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":112,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdate",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["registerform",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["registers",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registersubmit",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registeruser(username",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registration",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relative",{"_index":387,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["reload",{"_index":1001,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["remaining",{"_index":997,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["remixicon",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["removes",{"_index":976,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["reset",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":324,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["return(abscontrol",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1477,"title":{},"body":{"components/StatsComponent.html":{}}}],["rgb(20",{"_index":1178,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgb(201",{"_index":1030,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgb(255",{"_index":1040,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["rgba($color",{"_index":393,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["rgba(0",{"_index":1189,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(132",{"_index":1195,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rgba(72",{"_index":1197,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":72,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["ripple",{"_index":1217,"title":{},"body":{"injectables/NotyfService.html":{}}}],["root",{"_index":321,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["route",{"_index":313,"title":{},"body":{"guards/AdminGuard.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":144,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":310,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":585,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":166,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["routing.module",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1520,"title":{},"body":{"components/StatsComponent.html":{}}}],["rules",{"_index":175,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["run",{"_index":1762,"title":{},"body":{"index.html":{}}}],["running",{"_index":1777,"title":{},"body":{"index.html":{}}}],["rxfire",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":318,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/ProfileComponent.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1769,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":713,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["searchterm",{"_index":716,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["section",{"_index":1510,"title":{},"body":{"components/StatsComponent.html":{}}}],["select",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["selectdrink",{"_index":1007,"title":{},"body":{"components/DrinkListComponent.html":{}}}],["selectdrink(drink",{"_index":737,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selected",{"_index":356,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddate",{"_index":668,"title":{},"body":{"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["selecteddatesubject",{"_index":669,"title":{},"body":{"injectables/DateService.html":{}}}],["selecteddrink",{"_index":712,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["selection",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["separate",{"_index":897,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["serve",{"_index":1763,"title":{},"body":{"index.html":{}}}],["server",{"_index":1761,"title":{},"body":{"index.html":{}}}],["serves",{"_index":328,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["service",{"_index":167,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":319,"title":{},"body":{"guards/AdminGuard.html":{},"components/LoginComponent.html":{},"guards/UserGuard.html":{}}}],["services/notyf/notyf.service",{"_index":210,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["serving",{"_index":259,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["set",{"_index":673,"title":{},"body":{"injectables/DateService.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sets",{"_index":155,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["setselecteddate",{"_index":671,"title":{},"body":{"injectables/DateService.html":{}}}],["setselecteddate(date",{"_index":674,"title":{},"body":{"injectables/DateService.html":{}}}],["settimeout",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["shadow",{"_index":1394,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["shape",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["sheet",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["show",{"_index":1478,"title":{},"body":{"components/StatsComponent.html":{}}}],["shows",{"_index":188,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sign",{"_index":1096,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signinwithemailandpassword",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["sober",{"_index":828,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours",{"_index":931,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["soberhours*100",{"_index":935,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["sobertime",{"_index":830,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["solid",{"_index":396,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":1391,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["spacing",{"_index":1403,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["span",{"_index":1203,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["specific",{"_index":705,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["specified",{"_index":349,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["spinner",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.ts",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../update",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about",{"_index":10,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin",{"_index":123,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"coverage.html":{}}}],["src/app/components/drink",{"_index":690,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":811,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:110",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:123",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:160",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:223",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:232",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:243",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:250",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:257",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:263",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:274",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:36",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:40",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:44",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:48",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:52",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:56",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:60",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:81",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:86",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/landing",{"_index":1088,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:44",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:48",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts",{"_index":1158,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/navigation/navigation.component.ts:16",{"_index":1168,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/navigation/navigation.component.ts:21",{"_index":1166,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/components/page",{"_index":1226,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profile/profile.component.ts:106",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:115",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:126",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:136",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:145",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:150",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:155",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:22",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:26",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:30",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:34",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:38",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:42",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:65",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:87",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profile/profile.component.ts:97",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/register/register.component.ts:40",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:47",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:63",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:68",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:72",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:76",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:80",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:84",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:88",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:94",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/stats/stats.component.ts",{"_index":1410,"title":{},"body":{"components/StatsComponent.html":{},"coverage.html":{}}}],["src/app/components/stats/stats.component.ts:116",{"_index":1435,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:18",{"_index":1441,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:22",{"_index":1447,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:26",{"_index":1446,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:31",{"_index":1442,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:35",{"_index":1424,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:48",{"_index":1426,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:56",{"_index":1437,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:69",{"_index":1430,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/stats/stats.component.ts:87",{"_index":1432,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/components/update",{"_index":1543,"title":{},"body":{"components/UpdateProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/guards/admin.guard.ts",{"_index":301,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/guards/admin.guard.ts:12",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/admin.guard.ts:26",{"_index":311,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/user.guard.ts",{"_index":1603,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/guards/user.guard.ts:12",{"_index":1604,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:26",{"_index":1605,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/pipes/trim",{"_index":1524,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{},"coverage.html":{}}}],["src/app/services/authentication.service",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:17",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:32",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:40",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:45",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:52",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:59",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:69",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:76",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/date.service",{"_index":693,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/services/date.service.ts",{"_index":666,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/services/date.service.ts:14",{"_index":679,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:18",{"_index":677,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:24",{"_index":675,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/date.service.ts:32",{"_index":672,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/services/notyf/notyf.service.ts",{"_index":1205,"title":{},"body":{"injectables/NotyfService.html":{},"coverage.html":{}}}],["src/app/services/notyf/notyf.service.ts:10",{"_index":1207,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:16",{"_index":1222,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:41",{"_index":1213,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/notyf/notyf.service.ts:49",{"_index":1209,"title":{},"body":{"injectables/NotyfService.html":{}}}],["src/app/services/user/user.module.ts",{"_index":1609,"title":{},"body":{"classes/UserModule.html":{},"coverage.html":{}}}],["src/app/services/user/user.module.ts:10",{"_index":1618,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:11",{"_index":1614,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:12",{"_index":1612,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:5",{"_index":1615,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:6",{"_index":1619,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:7",{"_index":1613,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:8",{"_index":1616,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.module.ts:9",{"_index":1617,"title":{},"body":{"classes/UserModule.html":{}}}],["src/app/services/user/user.service",{"_index":41,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["src/app/services/user/user.service.ts",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user/user.service.ts:17",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:21",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:25",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:35",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:42",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:57",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:70",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:85",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.ts",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1754,"title":{"index.html":{}},"body":{}}],["state",{"_index":214,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"guards/UserGuard.html":{}}}],["state.drink",{"_index":216,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["statements",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats",{"_index":1312,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":115,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["stats.component.html",{"_index":1412,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":1411,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":114,"title":{"components/StatsComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storagebucket",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":727,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["stored",{"_index":1774,"title":{},"body":{"index.html":{}}}],["stores",{"_index":747,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["string",{"_index":195,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["string).subscribe",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["style",{"_index":388,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["submission",{"_index":180,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["submit",{"_index":260,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{}}}],["submits",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["subscribers",{"_index":685,"title":{},"body":{"injectables/DateService.html":{}}}],["subscription",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":185,"title":{},"body":{"components/AdminFormComponent.html":{},"injectables/NotyfService.html":{}}}],["success(message",{"_index":1212,"title":{},"body":{"injectables/NotyfService.html":{}}}],["successfully",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sum",{"_index":909,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["support",{"_index":1795,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":369,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["svg",{"_index":1796,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"components/StatsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1711,"title":{},"body":{"coverage.html":{}}}],["tempamounts",{"_index":718,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["temporary",{"_index":717,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tempstring",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["term",{"_index":714,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms",{"_index":742,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["terms.every(term",{"_index":745,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["test",{"_index":1780,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1789,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1779,"title":{},"body":{"index.html":{}}}],["text",{"_index":66,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["thank",{"_index":46,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["this.adjustchartsizes",{"_index":1449,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afauth.currentuser",{"_index":1590,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.afs",{"_index":370,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.afs.collection(\"drink\").valuechanges({idfield",{"_index":363,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.afs.collection(\"user\").doc(this.currentuserid",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.afs.collection('drankdrinks').doc(docid",{"_index":777,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.afs.collection('drankdrinks').ref",{"_index":1491,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.afs.collection('drink').add(drinkdata",{"_index":246,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('drink').doc(this.editingdrinkid).update(drinkdata",{"_index":243,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.afs.collection('drink').snapshotchanges().pipe",{"_index":733,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.afs.collection('user",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(await",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["this.afs.collection('user').doc(currentuserid).get().topromise",{"_index":844,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.auth.currentuser",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["this.auth.currentuser?.email",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.auth.user.subscribe(async",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isadmin",{"_index":325,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isuser",{"_index":1606,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.authservice.login(email",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.logoutuser().subscribe",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bac",{"_index":871,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.barchartview",{"_index":1464,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.calculatebac",{"_index":864,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.calculatetotals",{"_index":863,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.currentuser",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuseremail",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentuserid",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dateinput.nativeelement.showpicker",{"_index":965,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.getselecteddate",{"_index":723,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.selecteddate$.subscribe(date",{"_index":840,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.dateservice.setselecteddate(this.selecteddate",{"_index":953,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.deletedrinkfromfirestore(drink",{"_index":975,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkform",{"_index":222,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.patchvalue(drinktoedit",{"_index":233,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.valid",{"_index":238,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinkform.value",{"_index":240,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.drinks",{"_index":365,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.drinksfortheday",{"_index":850,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.length",{"_index":946,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.map((drink",{"_index":888,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinksfortheday.reduce((sum",{"_index":943,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.drinkslist",{"_index":725,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.drinkslist.filter(drink",{"_index":744,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.editingdrinkid",{"_index":221,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.email",{"_index":1623,"title":{},"body":{"classes/UserModule.html":{}}}],["this.fb.group",{"_index":223,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.fetchalldrinks",{"_index":362,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fetchdrinksfortheday",{"_index":836,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.fetchuserdata",{"_index":835,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.filtereddrinks",{"_index":726,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.fireauth.user.pipe(map(user",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.gender",{"_index":1304,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.gender?.value",{"_index":1581,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.genderfromdb",{"_index":1582,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.getcurrentuseremail",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcurrentuserid",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getdrinks().subscribe(drinks",{"_index":724,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.getgender",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofilepicture",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getregisterdate",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserid",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getusername",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getweight",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.graphdata",{"_index":1488,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.id",{"_index":1620,"title":{},"body":{"classes/UserModule.html":{}}}],["this.initializedrinkdata(drink.name",{"_index":738,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.initializeform",{"_index":227,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.iseditmode",{"_index":230,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.isopen",{"_index":1172,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.loadbarchartdata(currentuserid",{"_index":1450,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loading",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpiechartdata(currentuserid",{"_index":1451,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.loginform.get('email",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notyf.error(message",{"_index":1225,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyf.success(message",{"_index":1224,"title":{},"body":{"injectables/NotyfService.html":{}}}],["this.notyfservice.error('no",{"_index":1002,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.error('something",{"_index":250,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('drink",{"_index":244,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.notyfservice.success('logged",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notyfservice.success('password",{"_index":1594,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('profile",{"_index":1586,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.notyfservice.success('registered",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.notyfservice.success('url",{"_index":1575,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.password?.value",{"_index":1588,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.piechartdata",{"_index":1503,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.piechartview",{"_index":1465,"title":{},"body":{"components/StatsComponent.html":{}}}],["this.profilepicurl",{"_index":1625,"title":{},"body":{"classes/UserModule.html":{}}}],["this.profilesub",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pwcheck",{"_index":1593,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.registerageindays",{"_index":1627,"title":{},"body":{"classes/UserModule.html":{}}}],["this.registerdate",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":213,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["this.router.navigate",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":248,"title":{},"body":{"components/AdminFormComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['/adminform",{"_index":367,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.router.navigate(['/drinklist",{"_index":968,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.router.navigate(['/home",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/landing",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["this.router.navigate(['/login",{"_index":1094,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/personalstats",{"_index":1309,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":1597,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.router.navigate(['/register",{"_index":1093,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.router.navigate(['/updateprofile",{"_index":1310,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.searchterm.trim().tolowercase().split",{"_index":743,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.selecteddate",{"_index":722,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getdate().tostring().padstart(2",{"_index":757,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getfullyear",{"_index":754,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddate.getmonth",{"_index":755,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.selecteddatesubject.asobservable",{"_index":676,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.next(date",{"_index":687,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddatesubject.value",{"_index":688,"title":{},"body":{"injectables/DateService.html":{}}}],["this.selecteddrink",{"_index":739,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.sobertime",{"_index":940,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.tempamounts[drink.name",{"_index":752,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.tempamounts[drinkname",{"_index":731,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.totalcalories",{"_index":942,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.totaldrinks",{"_index":945,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.userdata",{"_index":846,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["this.username",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.userservice.getcurrentuseremailstring",{"_index":770,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["this.userservice.getcurrentuserid",{"_index":45,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"interfaces/UserData.html":{}}}],["this.userservice.getcurrentuserid().then((result",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.weight",{"_index":1307,"title":{},"body":{"components/ProfileComponent.html":{},"classes/UserModule.html":{}}}],["this.weight?.value",{"_index":1577,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["this.weightfromdb.tostring",{"_index":1578,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["through",{"_index":150,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["throw",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["time",{"_index":697,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["timeelapsedhours",{"_index":915,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["times",{"_index":886,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["today's",{"_index":834,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["toggle",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["togglemenu",{"_index":1165,"title":{},"body":{"components/NavigationComponent.html":{}}}],["toggles",{"_index":1167,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tolerance",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":266,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["tostring",{"_index":1474,"title":{},"body":{"components/StatsComponent.html":{}}}],["total",{"_index":822,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalcalories",{"_index":823,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totaldrinks",{"_index":824,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["totalpastalcoholgrams",{"_index":907,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["track",{"_index":52,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["tracked",{"_index":749,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["tracking",{"_index":706,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["trailing",{"_index":1541,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transform",{"_index":1179,"title":{},"body":{"components/NavigationComponent.html":{},"pipes/TrimDecimalsPipe.html":{}}}],["transform(value",{"_index":1529,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["transition",{"_index":1181,"title":{},"body":{"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["translatex",{"_index":1180,"title":{},"body":{"components/NavigationComponent.html":{}}}],["translatex(0",{"_index":1186,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["triggers",{"_index":949,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["trimdecimals",{"_index":1528,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimdecimals:2",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["trimdecimalspipe",{"_index":434,"title":{"pipes/TrimDecimalsPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TrimDecimalsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["trimmed",{"_index":1535,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimmer",{"_index":1536,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trimming",{"_index":1526,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["trims",{"_index":1532,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["true",{"_index":231,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AppComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":241,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":1218,"title":{},"body":{"injectables/NotyfService.html":{}}}],["ul",{"_index":385,"title":{},"body":{"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["undefined",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unelevated",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["unique",{"_index":773,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["unit",{"_index":1778,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1501,"title":{},"body":{"components/StatsComponent.html":{},"injectables/UserService.html":{}}}],["unnecessary",{"_index":1540,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["up",{"_index":1097,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":117,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["updatebutton",{"_index":1602,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updatebuttondiv",{"_index":1601,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updated",{"_index":245,"title":{},"body":{"components/AdminFormComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/UpdateProfileComponent.html":{}}}],["updateddrinkamounts",{"_index":780,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name",{"_index":795,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateddrinkamounts[drink.name].push",{"_index":798,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["updateform",{"_index":1598,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofile",{"_index":600,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{}}}],["updateprofile(user",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["updateprofilecomponent",{"_index":116,"title":{"components/UpdateProfileComponent.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updateprofileform",{"_index":1548,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updateprofilesubmit",{"_index":1553,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates",{"_index":182,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["updates.gender",{"_index":1583,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updates.weight",{"_index":1579,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["updating",{"_index":1595,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["uploaded",{"_index":750,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["urltree",{"_index":316,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["us'},{'name",{"_index":89,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["us.component",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us.component.html",{"_index":22,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.scss",{"_index":20,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts",{"_index":12,"title":{},"body":{"components/AboutUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:12",{"_index":30,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us.component.ts:17",{"_index":36,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["us/about",{"_index":11,"title":{},"body":{"components/AboutUsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["usage",{"_index":720,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["use",{"_index":57,"title":{},"body":{"components/AboutUsComponent.html":{},"index.html":{}}}],["used",{"_index":58,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["user",{"_index":170,"title":{},"body":{"components/AdminFormComponent.html":{},"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"guards/UserGuard.html":{},"classes/UserModule.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":1624,"title":{},"body":{"classes/UserModule.html":{}}}],["user.email)).get().topromise",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["user.gender",{"_index":1630,"title":{},"body":{"classes/UserModule.html":{}}}],["user.id",{"_index":1621,"title":{},"body":{"classes/UserModule.html":{}}}],["user.module",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepicurl",{"_index":1626,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerageindays",{"_index":1628,"title":{},"body":{"classes/UserModule.html":{}}}],["user.registerdate",{"_index":1629,"title":{},"body":{"classes/UserModule.html":{}}}],["user.username",{"_index":1622,"title":{},"body":{"classes/UserModule.html":{}}}],["user.weight",{"_index":1631,"title":{},"body":{"classes/UserModule.html":{}}}],["user?.email",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdata",{"_index":815,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["userdoc",{"_index":843,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["userdoc.data",{"_index":847,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc.exists",{"_index":845,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["userdoc?.get('email",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["userdoc?.get('gender",{"_index":1303,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('profilepicurl",{"_index":1296,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('registerdate",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('username",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.get('weight",{"_index":1308,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdoc?.id",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocref",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocref.get().topromise",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userdocref.update(updates).then",{"_index":1585,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userdocs",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["userdocs?.docs[0",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["useremail",{"_index":769,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{}}}],["userguard",{"_index":589,"title":{"guards/UserGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":771,"title":{},"body":{"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":1607,"title":{"classes/UserModule.html":{}},"body":{"classes/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"classes/UserModule.html":{}}}],["usernamefromdb",{"_index":1549,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["userref",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["userref.get().topromise",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":28,"title":{"injectables/UserService.html":{}},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":47,"title":{},"body":{"components/AboutUsComponent.html":{}}}],["valid",{"_index":181,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":174,"title":{},"body":{"components/AdminFormComponent.html":{},"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validatorfn",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.email",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.max(100",{"_index":236,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(0",{"_index":235,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(1",{"_index":237,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.min(30",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.minlength(3",{"_index":234,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.minlength(8",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":225,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["validators.required",{"_index":224,"title":{},"body":{"components/AdminFormComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["value",{"_index":197,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"pipes/TrimDecimalsPipe.html":{},"components/UpdateProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tofixed(decimalplaces",{"_index":1538,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["values",{"_index":173,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["var",{"_index":87,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["variable",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1802,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1759,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1782,"title":{},"body":{"index.html":{}}}],["view",{"_index":333,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["viewchild",{"_index":814,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewchild('dateinput",{"_index":833,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["viewencapsulation",{"_index":1171,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewencapsulation.none",{"_index":1161,"title":{},"body":{"components/NavigationComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"injectables/DateService.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["volume",{"_index":256,"title":{},"body":{"components/AdminFormComponent.html":{}}}],["want",{"_index":351,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["watches",{"_index":837,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["weight",{"_index":816,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{},"classes/UserModule.html":{}}}],["weightfromdb",{"_index":1550,"title":{},"body":{"components/UpdateProfileComponent.html":{}}}],["weightingrams",{"_index":882,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["welcome",{"_index":1095,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["went",{"_index":251,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["where('__name__",{"_index":1493,"title":{},"body":{"components/StatsComponent.html":{}}}],["white",{"_index":275,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["width",{"_index":62,"title":{},"body":{"components/AboutUsComponent.html":{},"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["window.confirm(`are",{"_index":974,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["window.innerheight",{"_index":1453,"title":{},"body":{"components/StatsComponent.html":{}}}],["window.innerwidth",{"_index":1452,"title":{},"body":{"components/StatsComponent.html":{}}}],["window:resize",{"_index":1423,"title":{},"body":{"components/StatsComponent.html":{}}}],["wrap",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["wrong",{"_index":252,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"interfaces/Drink.html":{},"interfaces/DrinkAmount.html":{},"interfaces/DrinkAmountsMap.html":{},"interfaces/DrinkData.html":{},"components/DrinkListComponent.html":{},"interfaces/FirestoreDocumentData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{},"interfaces/UserData.html":{}}}],["x",{"_index":1216,"title":{},"body":{"injectables/NotyfService.html":{}}}],["y",{"_index":264,"title":{},"body":{"components/AdminFormComponent.html":{},"components/AdminPageComponent.html":{},"components/DrinkListComponent.html":{},"components/HomeComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginComponent.html":{},"injectables/NotyfService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StatsComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["yyyy",{"_index":959,"title":{},"body":{"interfaces/DrinkData.html":{},"components/HomeComponent.html":{},"interfaces/UserData.html":{}}}],["z",{"_index":1032,"title":{},"body":{"components/DrinkListComponent.html":{},"components/NavigationComponent.html":{},"components/RegisterComponent.html":{},"components/UpdateProfileComponent.html":{}}}],["zero",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["zeroes",{"_index":1542,"title":{},"body":{"pipes/TrimDecimalsPipe.html":{}}}],["zerotoleranceapp",{"_index":1755,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutUsComponent.html":{"url":"components/AboutUsComponent.html","title":"component - AboutUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about-us/about-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the about us page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-us\n            \n\n\n\n            \n                styleUrls\n                ./about-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/about-us/about-us.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/about-us/about-us.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Displays the about us page.\n */\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent {\n  constructor(\n    private userService: UserService\n  ){}\n\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n  }\n}\n\n    \n\n    \n        \n    About Us\n    Thank you for using our application! \n        The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits. \n        This app is for personal use only and should not be used commercially in any form.\n    \n\n    \n\n    \n                \n                    ./about-us.component.scss\n                \n                .innerContainer {\n    width: 80%;\n    height: 100%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding-bottom: 70%;\n}\n\n.innerContainer > h1 {\n    font-size: 5vh;\n    padding-bottom: 10vh;\n}\n\n.innerContainer > p {\n    font-size: large;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Thank you for using our application!         The goal of this app is to provide you with a platform where  you can track and keep track of your drinking habits.         This app is for personal use only and should not be used commercially in any form.    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminFormComponent.html":{"url":"components/AdminFormComponent.html","title":"component - AdminFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-form/admin-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains a form that is needed for the admin add or modify a drink in the database.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-form\n            \n\n\n\n            \n                styleUrls\n                ./admin-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkForm\n                            \n                            \n                                editingDrinkId\n                            \n                            \n                                isEditMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-form/admin-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Initializes the form with drink data if it is passed through navigation.\nIf drink data is present it fills the form for editing and sets edit mode.\nOtherwise initializes an empty form for creating a new drink.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Initializes the form with default values and validation rules.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes the form when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-form/admin-form.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Handles the form submission.\nIf the form is valid:\n\nUpdates an existing drink if editingDrinkId is valid.\nAdds a new drink if editingDrinkId is not valid.\n\nOn success navigates back to the admin page and shows a success notification.\nOn error shows an error notification.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:20\n                        \n                    \n\n            \n                \n                    The from group for the drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingDrinkId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the currently edited drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-form/admin-form.component.ts:28\n                        \n                    \n\n            \n                \n                    Flag for checking for editing mode.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Contains a form that is needed for the admin add or modify a drink in the database.\n */\n@Component({\n  selector: 'app-admin-form',\n  templateUrl: './admin-form.component.html',\n  styleUrls: ['./admin-form.component.scss']\n})\nexport class AdminFormComponent {\n  /**\n   * The from group for the drink.\n   */\n  drinkForm: FormGroup;\n  /**\n   * ID of the currently edited drink.\n   */\n  editingDrinkId: string | null = null;\n  /**\n   * Flag for checking for editing mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Initializes the form with drink data if it is passed through navigation.\n   * If drink data is present it fills the form for editing and sets edit mode.\n   * Otherwise initializes an empty form for creating a new drink.\n   * @param fb The form builder.\n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state as { drink: any };\n    if (state && state.drink) {\n      const { id, name, ml, category, caloriesPerServing, abv } = state.drink;\n      this.editingDrinkId = id;\n      this.drinkForm = this.fb.group({\n        name: [name, Validators.required],\n        ml: [ml, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: [category, Validators.required],\n        caloriesPerServing: [caloriesPerServing, [Validators.required, Validators.pattern('^[0-9]+$')]],\n        abv: [abv, [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    } else {\n      this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        ml: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        category: ['', Validators.required],\n        caloriesPerServing: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        abv: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      });\n    }\n  }\n\n  /**\n   * Initializes the form when the component is initialized.\n   */\n  ngOnInit(): void {\n    this.userService.getCurrentUserId();\n    this.initializeForm();\n    const drinkToEdit = history.state.drink;\n    if (drinkToEdit) {\n      this.isEditMode = true;\n      this.editingDrinkId = drinkToEdit.id;\n      this.drinkForm.patchValue(drinkToEdit);\n    }\n  }\n\n  /**\n   * Initializes the form with default values and validation rules.\n   */\n  initializeForm(): void {\n    this.drinkForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      abv: [null, [Validators.required, Validators.min(0), Validators.max(100)]],\n      caloriesPerServing: [null, [Validators.required, Validators.min(0)]],\n      ml: [null, [Validators.required, Validators.min(1)]],\n      category: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Handles the form submission.\n   * If the form is valid:\n   * - Updates an existing drink if `editingDrinkId` is valid.\n   * - Adds a new drink if `editingDrinkId` is not valid.\n   * \n   * On success navigates back to the admin page and shows a success notification.\n   * On error shows an error notification.\n   */\n  async onSubmit(): Promise {\n    if (this.drinkForm.valid) {\n      const drinkData = this.drinkForm.value;\n\n      try {\n        if (this.editingDrinkId) {\n          // Updates existing drink.\n          await this.afs.collection('drink').doc(this.editingDrinkId).update(drinkData);\n          this.notyfService.success('Drink updated');\n        } else {\n          // Adds new drink.\n          await this.afs.collection('drink').add(drinkData);\n          this.notyfService.success('Drink added');\n        }\n\n        // Navigates back to the admin page.\n        this.router.navigate(['/admin']);\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore:', error);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{ isEditMode ? 'Update drink' : 'Add a new drink' }}\n\n  \n    \n    \n      Name\n      \n    \n\n    \n    \n      Alcohol by Volume (ABV %)\n      \n    \n\n    \n    \n      Calories per Serving\n      \n    \n\n    \n    \n      Volume (ml)\n      \n    \n\n    \n    \n      Category\n      \n    \n\n    \n    \n      Submit\n    \n  \n\n    \n\n    \n                \n                    ./admin-form.component.scss\n                \n                .admin-form-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-form-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n}\n\n.drink-form {\n  width: 40vh;\n  height: 25vh;\n  padding-top: 2vh;\n}\n\n.form-group {\n  text-align: center;\n  margin-bottom: 3vh;\n}\n\n.drink-form input {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.admin-form-button-div {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 5vh;\n}\n\n.admin-form-button {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.admin-form-button:disabled {\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: gray;\n  background-image: linear-gradient(135deg, #00115c 0%, #000436 100%);\n  cursor: not-allowed;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ isEditMode ? \\'Update drink\\' : \\'Add a new drink\\' }}                Name                        Alcohol by Volume (ABV %)                        Calories per Serving                        Volume (ml)                        Category                        Submit      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/admin.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Admin guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/admin.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/admin.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is admin or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is admin.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * Admin guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for user authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n\n  /**\n   * Returns if current user is admin or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is admin.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    \n      return this.authService.isAdmin();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin-page/admin-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Serves as the admin interface for managing drinks in the Firestore database.\nIt allows the admin to:\n\nView the list of all drinks\nNavigate to a form to add a new drink\nEdit an existing drink\nDelete drinks from the collection\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n\n\n            \n                styleUrls\n                ./admin-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDrink\n                            \n                            \n                                editDrink\n                            \n                            \n                                fetchAllDrinks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminFormAddDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, router: Router, notyfService: NotyfService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin-page/admin-page.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDrink\n                        \n                    \n                \n            \n            \n                \ndeleteDrink(drinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Deletes the drink specified by the ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the drink we want to delete\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editDrink\n                        \n                    \n                \n            \n            \n                \neditDrink(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form filled with the data of the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink that we want to edit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllDrinks\n                        \n                    \n                \n            \n            \n                \nfetchAllDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Fetches all the drinks from the database\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Initializes with current user ID and drinks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminFormAddDrink\n                        \n                    \n                \n            \n            \n                \nredirectToAdminFormAddDrink()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin-page/admin-page.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Redirects to the admin form\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin-page/admin-page.component.ts:25\n                        \n                    \n\n            \n                \n                    Array for the drinks.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Serves as the admin interface for managing drinks in the Firestore database.\n * It allows the admin to:\n * - View the list of all drinks\n * - Navigate to a form to add a new drink\n * - Edit an existing drink\n * - Delete drinks from the collection\n */\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent {\n\n  /**\n   * Array for the drinks.\n   */\n  drinks: any[] = [];\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   * @param userService Service for user data.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private router: Router,\n    private notyfService: NotyfService,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Initializes with current user ID and drinks\n   */\n  ngOnInit(): void{\n    this.userService.getCurrentUserId();\n    this.fetchAllDrinks();\n  }\n\n  /**\n   * Fetches all the drinks from the database\n   */\n  fetchAllDrinks(): void {\n    this.afs.collection(\"drink\").valueChanges({idField: 'id'}).subscribe(\n      (drinks) => {\n        this.drinks = drinks;\n      },\n      (error) => {\n        console.error('Error fetching drinks', error);\n      }\n    )\n  }\n\n  /**\n   * Redirects to the admin form\n   */\n  redirectToAdminFormAddDrink(): void {\n    this.router.navigate(['/adminform']);\n  }\n\n  /**\n   * Redirects to the admin form filled with the data of the selected drink\n   * @param drink The drink that we want to edit\n   */\n  editDrink(drink: any): void {\n    this.router.navigate(['/adminform'], { state: { drink } });\n  }\n\n  /**\n   * Deletes the drink specified by the ID\n   * @param drinkId The ID of the drink we want to delete\n   */\n  deleteDrink(drinkId: string): void {\n    if (confirm('Are you sure you want to delete this drink?')) {\n      this.afs\n        .collection('drink')\n        .doc(drinkId)\n        .delete()\n        .then(() => {\n          this.notyfService.success('Drink deleted');\n          this.fetchAllDrinks();\n        })\n        .catch((error) => {\n          this.notyfService.error('Something went wrong');\n          console.error('Error deleting drink: ', error);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  All Drinks\n  \n    \n      {{ drink.name }}\n      \n        Delete &nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp; Edit\n      \n    \n  \n  \n    Add New Drink\n  \n\n    \n\n    \n                \n                    ./admin-page.component.scss\n                \n                .admin-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.admin-container > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.add-drink-button {\n  margin-left: 21%;\n  margin-top: 10%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.buttons-div {\n  float: right;\n}\n\n.buttons-div > button:first-of-type {\n  color: red;\n}\n\n.buttons-div > button:last-of-type {\n  color: green;\n}\n\n.add-drink-button-div {\n  width: 100%;\n}\n\n.admin-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.admin-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  All Drinks            {{ drink.name }}              Delete                Edit                  Add New Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zero-tolerance-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectorRef  } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'zero-tolerance-app';\n\n  loading = true;\n\n  constructor(private router: Router, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\nAppModule -->\n\nAdminFormComponent->AppModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAppModule -->\n\nAdminPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nAppModule -->\n\nDrinkListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nAppModule -->\n\nStatsComponent->AppModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nAppModule -->\n\nTrimDecimalsPipe->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutUsComponent\n                        \n                        \n                            AdminFormComponent\n                        \n                        \n                            AdminPageComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DrinkListComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            StatsComponent\n                        \n                        \n                            TrimDecimalsPipe\n                        \n                        \n                            UpdateProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { AngularFireModule } from \"@angular/fire/compat\";\nimport { AngularFirestoreModule } from \"@angular/fire/compat/firestore\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { initializeApp,provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth,getAuth } from '@angular/fire/auth';\nimport { provideFirestore,getFirestore } from '@angular/fire/firestore';\nimport { provideStorage,getStorage } from '@angular/fire/storage';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TrimDecimalsPipe } from './pipes/trim-decimals.pipe';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavigationComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AdminPageComponent,\n    PageNotFoundComponent,\n    StatsComponent,\n    UpdateProfileComponent,\n    LandingPageComponent,\n    DrinkListComponent,\n    AdminFormComponent,\n    TrimDecimalsPipe,\n    AboutUsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AngularFireModule,\n    NgxChartsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n    provideStorage(() => getStorage()),\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebase }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminPageComponent } from './components/admin-page/admin-page.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\nimport { AdminGuard } from './guards/admin.guard';\nimport { UserGuard } from './guards/user.guard';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport { DrinkListComponent } from './components/drink-list/drink-list.component';\nimport { AdminFormComponent } from './components/admin-form/admin-form.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/landing'},\n  {path: 'landing', component: LandingPageComponent},\n  {path: 'home', component: HomeComponent, canActivate: [UserGuard]},\n  {path: 'admin', component: AdminPageComponent, canActivate: [AdminGuard]},\n  {path: 'adminform', component: AdminFormComponent, canActivate: [AdminGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [UserGuard]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'personalstats', component: StatsComponent, canActivate: [UserGuard]},\n  {path: 'updateprofile', component: UpdateProfileComponent, canActivate: [UserGuard]},\n  {path: 'drinklist', component: DrinkListComponent, canActivate: [UserGuard]},\n  {path: 'aboutus', component: AboutUsComponent, canActivate: [UserGuard]},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [CommonModule, BrowserModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isUser\n                            \n                            \n                                login\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, fireAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Authentication.\n\n                                                        \n                                                \n                                                \n                                                        fireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Returns an observable of the currently aunthenticated user\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Logs in user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's username.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current user's password.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Logged in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Logs in an existing user with the provided username and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Username to be logged in with.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Password to be logged in with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Logs out the currently authenticated user.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/authentication.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Registers a new user with the given email and password, and sets the user's display name to the provided username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : authState(this.auth)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/authentication.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable that gets the current user's authetntication state\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Auth, signInWithEmailAndPassword, authState, createUserWithEmailAndPassword, updateProfile } from '@angular/fire/auth';\nimport { from, map, Observable, switchMap } from 'rxjs';\n\n/**\n * Service for user authentication.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Observable that gets the current user's authetntication state\n   */\n  currentUser$ = authState(this.auth);\n  \n  /**\n   * \n   * @param auth Authentication.\n   * @param fireAuth Angular Firebase Authentication.\n   */\n  constructor(private auth: Auth, private fireAuth: AngularFireAuth) { }\n\n  /**\n   * Logs in user.\n   * @param username Current user's username.\n   * @param password Current user's password.\n   * @returns Logged in user.\n   */\n  login(username: string, password: string){\n    return from(\n      signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Returns an observable of the currently aunthenticated user\n   */\n  getUser(){ return this.currentUser$; }\n\n  /**\n   * Checks if the user is currently authenticated based on the user from AngularFireAuth and the current user from Auth\n   */\n  isUser(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == this.auth.currentUser?.email;}));\n  }\n\n  /**\n   * Checks if the currently authenticated user is an admin by checking if the email matches the admin email.\n   */\n  isAdmin(): Observable{\n    return this.fireAuth.user.pipe(map(user => {return user?.email == \"admin@zt.com\"}));\n  }\n\n  /**\n   * Registers a new user with the given email and password, and sets the user's display name to the provided username.\n   */\n  registerUser(username: string, email: string, password: string){\n    return from(createUserWithEmailAndPassword(this.auth, email, password))\n    .pipe(switchMap(({user}) => updateProfile(user, {displayName: username})));\n  }\n\n  /**\n   * Logs in an existing user with the provided username and password.\n   * @param username Username to be logged in with.\n   * @param password Password to be logged in with.\n   */\n  loginUser(username: string, password: string){\n    return from(signInWithEmailAndPassword(this.auth, username, password));\n  }\n\n  /**\n   * Logs out the currently authenticated user.\n   */\n  logoutUser(){ return from(this.auth.signOut()); }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/date.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for date selector.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedDate$\n                            \n                            \n                                    Private\n                                selectedDateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedDate\n                            \n                            \n                                setSelectedDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedDate\n                        \n                    \n                \n            \n            \n                \ngetSelectedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/date.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the selected date.\n\n\n                        \n                            Returns :     Date | null\n\n                        \n                            \n                                The set date.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedDate\n                        \n                    \n                \n            \n            \n                \nsetSelectedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/date.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the selected date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.selectedDateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/date.service.ts:18\n                        \n                    \n\n            \n                \n                    Date as observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedDateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/services/date.service.ts:14\n                        \n                    \n\n            \n                \n                    Date that always holds the latest value and emits that instantly to subscribers.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Service for date selector.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n  /**\n   * Date that always holds the latest value and emits that instantly to subscribers.\n   */\n  private selectedDateSubject = new BehaviorSubject(new Date());\n  /**\n   * Date as observable.\n   */\n  selectedDate$ = this.selectedDateSubject.asObservable();\n\n  /**\n   * Sets the selected date.\n   * @param date The selected date.\n   */\n  setSelectedDate(date: Date): void {\n    this.selectedDateSubject.next(date);\n  }\n\n  /**\n   * Gets the selected date.\n   * @returns The set date.\n   */\n  getSelectedDate(): Date | null {\n    return this.selectedDateSubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Drink.html":{"url":"interfaces/Drink.html","title":"interface - Drink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Drink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abv\n                                        \n                                \n                                \n                                        \n                                            caloriesPerServing\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            ml\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abv:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caloriesPerServing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caloriesPerServing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ml:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmount.html":{"url":"interfaces/DrinkAmount.html","title":"interface - DrinkAmount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alcohol\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            calories\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alcohol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alcohol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calories:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkAmountsMap.html":{"url":"interfaces/DrinkAmountsMap.html","title":"interface - DrinkAmountsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkAmountsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a map of consumed drinks.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    DrinkAmount[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/components/drink-list/drink-list.component.ts:34\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrinkData.html":{"url":"interfaces/DrinkData.html","title":"interface - DrinkData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrinkData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the consumed drink data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n    \n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrinkListComponent.html":{"url":"components/DrinkListComponent.html","title":"component - DrinkListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrinkListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/drink-list/drink-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Lists out all the drinks in the database.\nIf the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drink-list\n            \n\n\n\n            \n                styleUrls\n                ./drink-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drink-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drinkAmounts\n                            \n                            \n                                drinksList\n                            \n                            \n                                filteredDrinks\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedDrink\n                            \n                            \n                                tempAmounts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDrinkAmount\n                            \n                            \n                                filterDrinks\n                            \n                            \n                                getDrinks\n                            \n                            \n                                initializeDrinkData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectDrink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, dateService: DateService, userService: UserService, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/drink-list/drink-list.component.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addDrinkAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDrinkAmount(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Stores the newly tracked drink in Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink tracking to be uploaded\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterDrinks\n                        \n                    \n                \n            \n            \n                \nfilterDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Filters the drink list based on the search term\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrinks\n                        \n                    \n                \n            \n            \n                \ngetDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks from the database\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                The given drink\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeDrinkData\n                        \n                    \n                \n            \n            \n                \ninitializeDrinkData(drinkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Initializes a temporary value to store drink data later\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drinkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the given drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Gets all the drinks on initialization\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDrink\n                        \n                    \n                \n            \n            \n                \nselectDrink(drink: Drink)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/drink-list/drink-list.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Sets the selected drink\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            Drink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected drink\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drinkAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:76\n                        \n                    \n\n            \n                \n                    A map of the user's selected consumed drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:60\n                        \n                    \n\n            \n                \n                    List of the drinks from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:68\n                        \n                    \n\n            \n                \n                    The drinks matching the search term.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:72\n                        \n                    \n\n            \n                \n                    The search term in the search bar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:84\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDrink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Drink | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:64\n                        \n                    \n\n            \n                \n                    The selected drink.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempAmounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/drink-list/drink-list.component.ts:80\n                        \n                    \n\n            \n                \n                    Temporary data for consumed drink.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n    \n        \n  Add Drink\n\n  \n\n  \n    \n      {{ drink.name }}\n      \n        \n        {{drink.name}}\n        ABV: {{ drink.abv}}\n        Kcal/Serving: {{ drink.caloriesPerServing}}\n        Category: {{ drink.category}}\n        Size: {{ drink.ml}} ml\n        \n          Amount (ml)\n          \n          Time\n          \n          Add\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./drink-list.component.scss\n                \n                .drink-list {\n  width: 35vh;\n  position: relative;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.drink-list ul {\n  position: relative; \n  list-style: none;\n  padding: 0;\n  margin-top: 5vh;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\n.drink-list > h1 {\n  text-align: center;\n  font-size: 5vh;\n  margin-bottom: 5vh;\n  // margin-top: 5vh;\n}\n\n.drink-list li {\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  padding: 20px;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drink-details {\n  padding: 1vh;\n  position: fixed;\n  top: 0;\n  margin-top: 28vh;\n  margin-left: -5vh;\n  width: 40vh;\n  color: rgb(201, 201, 201);\n\n  z-index: 10;\n  background-color: #212121;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  text-align: center;\n}\n\n.drink-name {\n  margin-bottom: 2vh;\n  color: white;\n}\n\ndiv.drink-details div:last-of-type {\n  margin-top: 5vh;\n}\n\n.search-bar {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n}\n\n.drinkMlInput,\n.drinkTimeInput {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding-bottom: 0%;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n.drinkMlInput {\n  margin-bottom: 1vh;\n}\n\n.add-drink-button {\n  margin-top: 20%;\n  width: 60%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.close-drink-detail {\n  color: rgb(255, 0, 0);\n  margin-left: 40%;\n  position: absolute;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add Drink              {{ drink.name }}                      {{drink.name}}        ABV: {{ drink.abv}}        Kcal/Serving: {{ drink.caloriesPerServing}}        Category: {{ drink.category}}        Size: {{ drink.ml}} ml                  Amount (ml)                    Time                    Add                    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrinkListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreDocumentData.html":{"url":"interfaces/FirestoreDocumentData.html","title":"interface - FirestoreDocumentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirestoreDocumentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/drink-list/drink-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for consumed drinks with proper type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drinkAmounts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drinkAmounts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drinkAmounts:         DrinkAmountsMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DrinkAmountsMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { map, Observable } from 'rxjs';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for a drink.\n */\nexport interface Drink{\n  name: string;\n  abv: number;\n  caloriesPerServing: number;\n  category: string;\n  ml: number;\n}\n\n/**\n * Interface for the consumed drink.\n */\ninterface DrinkAmount {\n  id: string;\n  amount: number;\n  time: string;\n  calories: number;\n  alcohol: number;\n  category: string;\n}\n\n/**\n * Interface for a map of consumed drinks.\n */\ninterface DrinkAmountsMap {\n  [key: string]: DrinkAmount[];\n}\n\n/**\n * Interface for consumed drinks with proper type.\n */\ninterface FirestoreDocumentData {\n  drinkAmounts: DrinkAmountsMap;\n}\n\n/**\n * Lists out all the drinks in the database.\n * If the user clicks on a specific drink they can add it to their tracking after providing the necessary data.\n */\n@Component({\n  selector: 'app-drink-list',\n  templateUrl: './drink-list.component.html',\n  styleUrls: ['./drink-list.component.scss']\n})\n\nexport class DrinkListComponent {\n\n  /**\n   * List of the drinks from the database.\n   */\n  drinksList: Drink[] = [];\n  /**\n   * The selected drink.\n   */\n  selectedDrink: Drink | null = null;\n  /**\n   * The drinks matching the search term.\n   */\n  filteredDrinks: Drink[] = [];\n  /**\n   * The search term in the search bar.\n   */\n  searchTerm: string = '';\n  /**\n   * A map of the user's selected consumed drink.\n   */\n  drinkAmounts: Map = new Map();\n  /**\n   * Temporary data for consumed drink.\n   */\n  tempAmounts: { [key: string]: {ml: number, cps: number, time: string, date: string} } = {};\n  /**\n   * The selected date.\n   */\n  selectedDate: any;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param dateService Service for proper date usage.\n   * @param userService Service for user data.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(private afs: AngularFirestore,\n    private dateService: DateService,\n    private userService: UserService,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Gets all the drinks on initialization\n   */\n  ngOnInit(){\n    this.userService.getCurrentUserId();\n    this.selectedDate = this.dateService.getSelectedDate();\n\n    this.getDrinks().subscribe(drinks => {\n      this.drinksList = drinks;\n      this.filteredDrinks = drinks;\n    });\n  }\n\n  /**\n   * Initializes a temporary value to store drink data later\n   * @param drinkName The name of the given drink\n   */\n  initializeDrinkData(drinkName: string): void {\n    if (!this.tempAmounts[drinkName]) {\n      this.tempAmounts[drinkName] = { ml: 0, time: '', date: '', cps: 0 };\n    }\n  }\n  \n  \n  /**\n   * Gets all the drinks from the database\n   * @returns The given drink\n   */\n  getDrinks(): Observable{\n    return this.afs.collection('drink').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Drink;\n        return data;\n      }))\n    );\n  }\n\n  /**\n   * Sets the selected drink\n   * @param drink The selected drink\n   */\n  selectDrink(drink: Drink): void {\n    this.initializeDrinkData(drink.name);\n    this.selectedDrink = this.selectedDrink === drink ? null : drink;\n  }\n\n  /**\n   * Filters the drink list based on the search term\n   */\n  filterDrinks(): void {\n    const terms = this.searchTerm.trim().toLowerCase().split(' ');\n    this.filteredDrinks = this.drinksList.filter(drink => terms.every(term =>\n      drink.name.toLowerCase().includes(term))\n    );\n  }\n  \n  /**\n   * Stores the newly tracked drink in Firestore\n   * @param drink The drink tracking to be uploaded\n   */\n  async addDrinkAmount(drink: Drink): Promise {\n    const drinkData = this.tempAmounts[drink.name];\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      \n    if (drinkData && drinkData.ml > 0 && drinkData.time && this.selectedDate) {\n      const formattedTime = new Date(`1970-01-01T${drinkData.time}:00`).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n\n      const userEmail = await this.userService.getCurrentUserEmailString();\n      const userID = await this.userService.getCurrentUserId();\n    \n      // Creates a unique document ID based on the user and the date\n      const docId = `${userID}-${formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      let updatedDrinkAmounts: DrinkAmountsMap = {};\n    \n      if (docSnapshot && docSnapshot.exists) {\n        const existingData = docSnapshot.data() as FirestoreDocumentData;\n        updatedDrinkAmounts = existingData ? existingData.drinkAmounts : {};\n      }\n\n      const calories = drink.caloriesPerServing * (drinkData.ml / 100);\n      const alcohol = ((drink.abv/100) * drinkData.ml) * 0.789;\n\n      // Generates a unique entryId for the drink\n      const entryId = `${new Date().getTime()}-${Math.random()}`;\n\n      // Checks if the drink already exists in the map for that day.\n      if (updatedDrinkAmounts[drink.name]) {\n        // If the drink exists, appends the new entry to the array for that drink\n        updatedDrinkAmounts[drink.name].push({\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        });\n      } else {\n        // If the drink doesn't exist, creates a new array and add the first entry.\n        updatedDrinkAmounts[drink.name] = [{\n          id: entryId,\n          amount: drinkData.ml,\n          calories: calories,\n          alcohol: alcohol,\n          time: formattedTime,\n          category: drink.category\n        }];\n      }\n    \n      // Stores the drink data in Firestore.\n      const drinkAmountData = {\n        email: userEmail,\n        date: formattedDate,\n        drinkAmounts: updatedDrinkAmounts\n      };\n    \n      try {\n        // Stores the updated data to Firestore, merging with existing document.\n        await docRef.set(drinkAmountData, { merge: true });\n        this.notyfService.success('Drink added');\n          \n        // Clears the temporary data.\n        this.tempAmounts[drink.name] = { ml: 0, time: '', date: '', cps: 0 };\n      } catch (error) {\n        this.notyfService.error('Something went wrong');\n        console.error('Error adding drink to Firestore: ', error);\n      }\n    } else {\n      console.log('Invalid data');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the drink tracking page and the overall data.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bac\n                            \n                            \n                                    \n                                dateInput\n                            \n                            \n                                drinksForTheDay\n                            \n                            \n                                selectedDate\n                            \n                            \n                                soberTime\n                            \n                            \n                                totalCalories\n                            \n                            \n                                totalDrinks\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateBAC\n                            \n                            \n                                calculateTotals\n                            \n                            \n                                    Async\n                                deleteDrinkFromFirestore\n                            \n                            \n                                    Async\n                                fetchDrinksForTheDay\n                            \n                            \n                                    Async\n                                fetchUserData\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDateChange\n                            \n                            \n                                onDrinkClick\n                            \n                            \n                                openDatePicker\n                            \n                            \n                                redirectToDrinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService, dateService: DateService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for proper date usage.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBAC\n                        \n                    \n                \n            \n            \n                \ncalculateBAC()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Calculates approximate blood alcohol content for given day.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If user data is not present then returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotals\n                        \n                    \n                \n            \n            \n                \ncalculateTotals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:223\n                        \n                    \n\n\n            \n                \n                        Calculates total calories and drinks for the day.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDrinkFromFirestore\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDrinkFromFirestore(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:274\n                        \n                    \n\n\n            \n                \n                        Removes the selected drink from the user's consumed drinks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The drink to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchDrinksForTheDay\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDrinksForTheDay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Fetches the user's consumed drinks for the day.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Fetches user data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:243\n                        \n                    \n\n\n            \n                \n                        Formats the given date.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The given date.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The given date but properly formatted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Initializes the page.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDateChange\n                        \n                    \n                \n            \n            \n                \nonDateChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:232\n                        \n                    \n\n\n            \n                \n                        Sets proper data on date change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event that triggers this method.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrinkClick\n                        \n                    \n                \n            \n            \n                \nonDrinkClick(drink: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Shows alert for drink deletion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                drink\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently clicked drink.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDatePicker\n                        \n                    \n                \n            \n            \n                \nopenDatePicker()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Opens the date picker.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToDrinks\n                        \n                    \n                \n            \n            \n                \nredirectToDrinks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:257\n                        \n                    \n\n\n            \n                \n                        Redirects to drink list page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bac\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:52\n                        \n                    \n\n            \n                \n                    Blood alcohol content for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:81\n                        \n                    \n\n            \n                \n                    Reference to the dateInput element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drinksForTheDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:40\n                        \n                    \n\n            \n                \n                    Drinks for the selected day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:36\n                        \n                    \n\n            \n                \n                    The selected date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        soberTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:56\n                        \n                    \n\n            \n                \n                    The time by the user will be sober approximately.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCalories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:44\n                        \n                    \n\n            \n                \n                    Total calories for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalDrinks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Total amount of drinks for the day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:60\n                        \n                    \n\n            \n                \n                    The user's personal data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n    \n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    -->\n\n    \n      {{ selectedDate | date: 'yyyy-MM-dd' }}\n    \n\n    \n      \n      \n    -->\n\n    \n      \n    \n  \n\n   0\">\n    \n      \n        {{ drink.name }}\n        \n         {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |\n        trimDecimals:2 }} kcal\n        \n      \n    \n  \n  \n    No drinks recorded for this day\n  \n\n  \n    \n      Total calories for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalCalories | trimDecimals:2 }}-->\n      Total calories:{{ totalCalories | trimDecimals:2 }} kcal\n    \n    \n      Number of drinks for {{ selectedDate | date:'yyyy-MM-dd' }}: {{ totalDrinks }}-->\n      Number of drinks:{{ totalDrinks }}\n    \n    \n    \n      Estimated BAC:{{ bac | number: '1.2-2' }}%\n      Sober:~ {{ soberTime | date: 'EEE MMM dd yyyy HH:mm:ss'\n          }}\n    \n  \n  \n    Add Drink\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n  width: 40vh;\n  overflow-y: auto;\n  height: 85vh;\n  margin-top: -10%;\n}\n\n.date-picker-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.date-display-box {\n  background-color: #212121;\n  color: white;\n  border-radius: 50px 50px 50px 50px;\n  width: 100%;\n  text-align: center;\n  min-height: 6vh;\n  padding: 20px;\n  cursor: pointer;\n}\n\n.info-container {\n  padding-top: 5%;\n}\n\n.info-container-right {\n  float: right;\n}\n\nul > li {\n  text-align: center;\n}\n\n.add-drink-container {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2vh;\n}\n\n.add-drink-button {\n  margin-top: 5%;\n  width: 65%;\n  height: 3.5rem;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  color: white;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.no-drinks {\n  text-align: center;\n}\n\n.home-container ul {\n  position: relative;\n  list-style: none;\n  padding: 0;\n  background-color: #21212180;\n  border-radius: 20px 20px 20px 20px;\n  border: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n  max-height: 30vh;\n  overflow-y: auto;\n}\n\nul li:not(:last-child) {\n  border-bottom: 0.2vh rgba($color: gray, $alpha: 0.2) solid;\n}\n\n\n.home-container li {\n  position: relative;\n  cursor: pointer;\n  padding: 20px;\n}\n\n.remove-drink {\n  color: red;\n  float: right;\n  margin-right: -1vh;\n  margin-top: -1.5vh;\n}\n\n.hidden-date-input {\n  position: absolute;\n  width: 0;\n  height: 0;\n  opacity: 0;\n}\n\n.date-picker-field {\n  padding-bottom: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedDate | date: \\'yyyy-MM-dd\\' }}    -->          {{ selectedDate | date: \\'yyyy-MM-dd\\' }}                        -->                   0\">                  {{ drink.name }}                 {{ drink.amount }} ml - {{ drink.time }} - {{ drink.calories |        trimDecimals:2 }} kcal                          No drinks recorded for this day              Total calories for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalCalories | trimDecimals:2 }}-->      Total calories:{{ totalCalories | trimDecimals:2 }} kcal              Number of drinks for {{ selectedDate | date:\\'yyyy-MM-dd\\' }}: {{ totalDrinks }}-->      Number of drinks:{{ totalDrinks }}                  Estimated BAC:{{ bac | number: \\'1.2-2\\' }}%      Sober:~ {{ soberTime | date: \\'EEE MMM dd yyyy HH:mm:ss\\'          }}            Add Drink  '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays the landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n\n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToLogin\n                            \n                            \n                                redirectToRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing-page/landing-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToLogin\n                        \n                    \n                \n            \n            \n                \nredirectToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/landing-page/landing-page.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Redirects to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToRegister\n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/landing-page/landing-page.component.ts:25\n                        \n                    \n\n\n            \n                \n                        Redirects to the register page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Displays the landing page.\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent {\n\n  /**\n   * \n   * @param router Router for routing.\n   */\n  constructor(\n    private router: Router\n  ){}\n\n  /**\n   * Redirects to the register page.\n   */\n  redirectToRegister(){\n    this.router.navigate(['/register']);\n  }\n\n  /**\n   * Redirects to the login page.\n   */\n  redirectToLogin(){\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n    \n        Welcome To\n        Zero Tolerance\n    \n    \n        Sign Up\n        Sign In\n    \n\n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                .inner-container {\n    margin-top: 100%;\n    overflow-y: auto;\n    height: 95vh;\n\n  }\n\n  .inner-container > div > p {\n    text-align: center;\n    font-size: 2vh;\n  }\n\n  .inner-container > div > h1 {\n    text-align: center;\n    font-size: 5vh;\n    font-weight: bold;\n  }\n\n  .landingButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  #landingRegister {\n    width: 70%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n    color: white;\n  }\n\n  #landingLogin {\n    margin-top: 5%;\n    width: 70%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n    color: white;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome To        Zero Tolerance                Sign Up        Sign In    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the logging in of the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, auth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Submits the typed in data for log in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                The user's credentials.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    The login form group.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:44\n                                \n                            \n                    \n                        \n                                Gets the e-mail input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:48\n                                \n                            \n                    \n                        \n                                Gets the password input.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Handles the logging in of the user.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit{\n  /**\n   * The login form group.\n   */\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  })\n\n  /**\n   * \n   * @param authService Service for user authentication.\n   * @param router Router for routing.\n   * @param auth Angular Firebase Authentication.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private auth: AngularFireAuth,\n    private notyfService: NotyfService\n  ){}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the e-mail input.\n   */\n  get email(){ return this.loginForm.get('email'); }\n  /**\n   * Gets the password input.\n   */\n  get password(){ return this.loginForm.get('password'); }\n\n  /**\n   * Submits the typed in data for log in.\n   * @returns The user's credentials.\n   */\n  submit(){\n    if(!this.loginForm.valid){ return; }\n\n    const { email, password } = this.loginForm.value;\n\n    this.authService.login(email as string, password as string).subscribe({\n      next: () => {\n        this.notyfService.success('Logged in');\n        this.auth.user.subscribe(async user => {\n          if(user){\n            this.router.navigate(['/home'])\n          } \n        });\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  Sign In\n  \n\n    \n      \n      Type in an e-mail address\n      Invalid e-mail address\n    \n    \n    \n      \n      Type in your password\n      \n    \n    \n\n    \n      Sign In\n    \n\n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n  }\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.loginForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.loginButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.loginButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormLogin {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormLogin > mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.matError {\n    color: red;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign In                  Type in an e-mail address      Invalid e-mail address                        Type in your password                        Sign In      '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navigation/navigation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles the navigation menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n\n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/navigation/navigation.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Toggles navigation menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navigation/navigation.component.ts:16\n                        \n                    \n\n            \n                \n                    Flag to check if menu is open.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n/**\n * Handles the navigation menu.\n */\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NavigationComponent {\n  /**\n   * Flag to check if menu is open.\n   */\n  isOpen = false;\n\n  /**\n   * Toggles navigation menu.\n   */\n  toggleMenu() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n    \n\n    \n        \n   \n     \n      Home\n       About Us\n       Profile\n     \n   \n \n \n\n \n   \n \n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .hamburger-icon {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 1000;\n}\n\n.hamburger-menu-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  background: rgb(20, 0, 40);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  z-index: 997;\n}\n\n.hamburger-menu-container.open {\n  transform: translateX(0);\n}\n\n.menu-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n\n.menu-content {\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: white;\n  z-index: 999;\n}\n\n.menu-content ul {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  margin-top: 3vh;\n}\n\n.menu-content li {\n  margin-top: 15px;\n  padding-right: 12vh;\n  padding-left: 12vh;\n  padding-top: 2vh;\n  padding-bottom: 2vh;\n  border-radius: 15px;\n  cursor: pointer;\n  background-image: linear-gradient(135deg, rgba(132, 0, 255, 0.5) 0%, rgba(72, 0, 155, 0.5) 100%);\n  width: 100%;\n}\n\n.menu-content a {\n  color: white;\n  text-decoration: none;\n  font-size: 1.2rem;\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n}\n\na > span {\n  padding-right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Home       About Us       Profile               '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotyfService.html":{"url":"injectables/NotyfService.html","title":"injectable - NotyfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotyfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notyf/notyf.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for displaying messages.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notyf\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notyf/notyf.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/notyf/notyf.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/notyf/notyf.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Sets the type of the message to success.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notyf\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/services/notyf/notyf.service.ts:16\n                        \n                    \n\n            \n                \n                    Notyf object.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Notyf } from 'notyf';\n\n/**\n * Service for displaying messages.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyfService {\n  constructor() { }\n  \n  /**\n   * Notyf object.\n   */\n  private notyf = new Notyf({\n    duration: 4000,\n    position: {\n      x: 'center',\n      y: 'top',\n    },\n    ripple: false,\n    types: [\n      {\n        type: 'success',\n        background: '#4CAF50',\n        dismissible: true\n      },\n      {\n        type: 'error',\n        background: '#F44336',\n        dismissible: true\n      },\n    ],\n  });\n\n  /**\n   * Sets the type of the message to success.\n   * @param message The message to be displayed.\n   */\n  success(message: string): void {\n    this.notyf.success(message);\n  }\n\n  /**\n   * Sets the type of the message to error.\n   * @param message The message to be displayed.\n   */\n  error(message: string): void {\n    this.notyf.error(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays message for page not found.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Displays message for page not found.\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n\n    \n\n    \n        404\nPage not found!\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '404Page not found!'\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile display and it's actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserID\n                            \n                            \n                                gender\n                            \n                            \n                                    Optional\n                                profileSub\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGender\n                            \n                            \n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Async\n                                getRegisterDate\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                    Async\n                                getWeight\n                            \n                            \n                                logoutUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirectToAdminPage\n                            \n                            \n                                redirectToPersonalStats\n                            \n                            \n                                redirectToUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, authService: AuthenticationService, route: ActivatedRoute, userService: UserService, router: Router, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile/profile.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Currently active route.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGender()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's gender.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRegisterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRegisterDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's registration date.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Gets the currently logged in user's weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutUser\n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Logs out the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes profile with the currently logged in user's data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToAdminPage\n                        \n                    \n                \n            \n            \n                \nredirectToAdminPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Redirects to admin page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToPersonalStats\n                        \n                    \n                \n            \n            \n                \nredirectToPersonalStats()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Redirects to currently logged in user's personal statistics page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToUpdateProfile\n                        \n                    \n                \n            \n            \n                \nredirectToUpdateProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile/profile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Redirects to update profile page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:22\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:38\n                        \n                    \n\n            \n                \n                    Currently logged in user's gender.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profileSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:34\n                        \n                    \n\n            \n                \n                    Subscription of profile.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:30\n                        \n                    \n\n            \n                \n                    Currently logged in user's registration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:26\n                        \n                    \n\n            \n                \n                    Currently logged in user's username.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile/profile.component.ts:42\n                        \n                    \n\n            \n                \n                    Currently logged in user's weight.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Handles user profile display and it's actions.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  /**\n   * Currently logged in user's username.\n   */\n  username: string;\n  /**\n   * Currently logged in user's registration date.\n   */\n  registerDate: Date;\n  /**\n   * Subscription of profile.\n   */\n  profileSub?: Subscription;\n  /**\n   * Currently logged in user's gender.\n   */\n  gender: string;\n  /**\n   * Currently logged in user's weight.\n   */\n  weight: number;\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param authService Service for user authentication\n   * @param route Currently active route.\n   * @param userService Service for user data.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying notifications.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private authService: AuthenticationService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Initializes profile with the currently logged in user's data.\n   */\n  ngOnInit(){\n    this.profileSub = this.route.paramMap.subscribe(params => {\n      this.currentUserID = params.get('id') as string;\n      if(!this.currentUserID){\n        this.userService.getCurrentUserId().then((result: string | undefined) => {\n          const tempString: string = result || '';\n          this.currentUserID = tempString;\n          console.log(this.currentUserID);\n\n          this.getUsername();\n          this.getRegisterDate();\n          this.getProfilePicture();\n          this.getGender();\n          this.getWeight();\n        })\n      }\n    })\n  }\n\n  /**\n   * Logs out the user.\n   */\n  logoutUser(){\n    this.authService.logoutUser().subscribe(() => {\n      this.notyfService.success('Logged out');\n      this.router.navigate(['']);\n    });\n  }\n\n  /**\n   * Gets the currently logged in user's username.\n   */\n  async getUsername(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.username = userDoc?.get('username');\n  }\n\n  /**\n   * Gets the currently logged in user's registration date.\n   */\n  async getRegisterDate(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.registerDate = userDoc?.get('registerDate');\n  }\n\n  /**\n   * Gets the currently logged in user's profile picture.\n   */\n  async getProfilePicture(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const picUrl = userDoc?.get('profilePicUrl');\n    const profilePicHtml = document.getElementById(\"profilePic\") as HTMLImageElement;\n    profilePicHtml.src = picUrl ? picUrl : \"https://cdn.discordapp.com/attachments/905132673356410932/1295650761803567144/c0749b7cc401421662ae901ec8f9f660.jpg?ex=670f6c4d&is=670e1acd&hm=c475e7139b4d6fea1067d23489cbf043e59050b17f9f5cab50cc39cf9c7cee11&\"\n  }\n\n  /**\n   * Gets the currently logged in user's gender.\n   */\n  async getGender(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    const genderTemp = userDoc?.get('gender');\n    this.gender = genderTemp.charAt(0).toUpperCase() + genderTemp.slice(1);\n  }\n\n  /**\n   * Gets the currently logged in user's weight.\n   */\n  async getWeight(){\n    const userDocRef = this.afs.collection(\"user\").doc(this.currentUserID);\n    const userDoc = await userDocRef.get().toPromise();\n    this.weight = userDoc?.get('weight');\n  }\n\n  /**\n   * Redirects to currently logged in user's personal statistics page.\n   */\n  redirectToPersonalStats(){ this.router.navigate(['/personalstats']); }\n\n  /**\n   * Redirects to update profile page.\n   */\n  redirectToUpdateProfile(){ this.router.navigate(['/updateprofile']); }\n\n  /**\n   * Redirects to admin page.\n   */\n  redirectToAdminPage() { this.router.navigate(['/admin']); }\n}\n\n    \n\n    \n        \n    \n        \n        {{username}}\n    \n    \n        {{registerDate}}\n        {{gender}} - \n        {{weight}} kg\n    \n    \n        Admin Page\n        Personal Stats\n        Update Profile\n        Logout\n    \n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .profileContainer {\n    width: 25vh;\n    overflow-y: auto;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.headerContainer > h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.headerContainer > img {\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 50px 50px 50px 50px;\n}\n\n.infoContainer {\n    text-align: center;\n    padding-bottom: 5vh;\n}\n\n.profileButtonDiv {\n  text-align: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.profileStatsBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n  color: white;\n}\n\n.profileUpdateBtn {\n  width: 100%;\n  height: 3.5rem;\n  margin-top: 10%;\n  border-radius: 50px 50px 50px 50px;\n  font-size: large;\n  background-image: linear-gradient(135deg, #8400ff 0%, #48009b 100%);\n  color: white;\n}\n\n.profileLogoutBtn {\n    width: 100%;\n    height: 3.5rem;\n    margin-top: 10%;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #ff00ff 0%, #6e0065 100%);\n    color: white;\n  }\n\n  .profileAdminBtn {\n    width: 100%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    background-image: linear-gradient(135deg, #0099ff 0%, #003c6e 100%);\n    color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{username}}                {{registerDate}}        {{gender}} -         {{weight}} kg                Admin Page        Personal Stats        Update Profile        Logout    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user registration.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, afs: AngularFirestore, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying notifications.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubmit\n                        \n                    \n                \n            \n            \n                \nregisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Submits the user's data for registration.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                If the registration form's data is invalid then returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmPassword: new FormControl('', Validators.required),\n    weight: new FormControl('', [Validators.required, Validators.min(30)]), // Minimum weight validation\n    gender: new FormControl('male', Validators.required) // Gender must be selected\n  }, { validators: passwordsMatchValidator() })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:40\n                        \n                    \n\n            \n                \n                    Form for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:68\n                                \n                            \n                    \n                        \n                                Gets the input username.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:72\n                                \n                            \n                    \n                        \n                                Gets the input e-mail.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:76\n                                \n                            \n                    \n                        \n                                Gets the input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:80\n                                \n                            \n                    \n                        \n                                Gets the input confirmed password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:84\n                                \n                            \n                    \n                        \n                                Gets the input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/register/register.component.ts:88\n                                \n                            \n                    \n                        \n                                Gets the input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Checks if the two passwords typed in the `registerForm` match\n */\nexport function passwordsMatchValidator(): ValidatorFn{\n  return(AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n\n    if(password && (password !== confirmPassword)){\n      return{ passwordsDontMatch: true }\n    }\n    else if(password != \"\" && (password.length  {\n        this.notyfService.success('Registered successfully');\n        this.authService.logoutUser();\n        this.router.navigate(['/login']);\n      },\n      error: (error) => {\n        this.notyfService.error('Something went wrong');\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  Sign Up\n  \n  \n    \n      \n      Please enter a username! \n\n    \n      \n      Please enter an e-mail!\n      Please enter a valid e-mail address!\n    \n\n    \n      \n      Please type in a password! \n\n    \n      \n      Please confirm your password!\n    \n\n    The passwords do not match\n    Password must be at least 8 characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg! \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n    \n\n    \n      \n        Sign Up\n      \n    \n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                :root {\n    --ccPurple: #6f00ff;\n    --ccPink: #ff00dd;\n    --ccBlue: #0004ff;\n}\n\n.formContainer {\n    width: 100%;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.registerForm {\n    width: 40vh;\n    height: 50vh;\n    padding-top: 2vh;\n}\n\n.registerButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.registerButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.matFormRegister {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormRegister>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.genderSelection,\n.genderSelection>label,\n.genderSelection>label>input {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign Up                    Please enter a username!                 Please enter an e-mail!      Please enter a valid e-mail address!                    Please type in a password!                 Please confirm your password!        The passwords do not match    Password must be at least 8 characters!                    Please enter your weight!      Weight must be at least 30kg!                                             Male                                      Female                Please select your gender!                                Sign Up            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stats/stats.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displaying user's personal statistics.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n\n\n            \n                styleUrls\n                ./stats.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barChartView\n                            \n                            \n                                graphData\n                            \n                            \n                                legendPosPie\n                            \n                            \n                                pieChartData\n                            \n                            \n                                pieChartView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustChartSizes\n                            \n                            \n                                    Private\n                                    Async\n                                loadBarChartData\n                            \n                            \n                                    Private\n                                    Async\n                                loadPieChartData\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stats/stats.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adjustChartSizes\n                        \n                    \n                \n            \n            \n                \n                        \n                    adjustChartSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Sets the size of the charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadBarChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadBarChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Loads the data for the bar chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadPieChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadPieChartData(currentUserID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Loads the data for the pie chart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUserID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The currently logged in user's ID.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the two charts.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                If the current userID is invalid returns.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/components/stats/stats.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Listens for event to re-arrange charts if needed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        barChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [700, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:18\n                        \n                    \n\n            \n                \n                    Default for bar chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:31\n                        \n                    \n\n            \n                \n                    Data of the bar graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legendPosPie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LegendPosition\n\n                    \n                \n                \n                    \n                        Default value : LegendPosition.Below\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:26\n                        \n                    \n\n            \n                \n                    Position of the legend for graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:35\n                        \n                    \n\n            \n                \n                    Data of the pie graph.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChartView\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                \n                    \n                        Default value : [400, 400]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/stats/stats.component.ts:22\n                        \n                    \n\n            \n                \n                    Default for pie chart.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport { UserService } from 'src/app/services/user/user.service';\n\n/**\n * Displaying user's personal statistics.\n */\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit {\n  /**\n   * Default for bar chart.\n   */\n  barChartView: [number, number] = [700, 400];\n  /**\n   * Default for pie chart.\n   */\n  pieChartView: [number, number] = [400, 400];\n  /**\n   * Position of the legend for graph.\n   */\n  legendPosPie: LegendPosition = LegendPosition.Below;\n  \n  /**\n   * Data of the bar graph.\n   */\n  graphData: { name: string; value: number }[] = [];\n  /**\n   * Data of the pie graph.\n   */\n  pieChartData: { name: string; value: number }[] = [];\n\n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   */\n  constructor(private afs: AngularFirestore, private userService: UserService) {}\n\n  /**\n   * Listens for event to re-arrange charts if needed.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.adjustChartSizes();\n  }\n\n  /**\n   * Initializes the two charts.\n   * @returns If the current userID is invalid returns.\n   */\n  async ngOnInit(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (!currentUserID) return;\n\n    this.adjustChartSizes();\n\n    await this.loadBarChartData(currentUserID);\n    await this.loadPieChartData(currentUserID);\n  }\n\n  /**\n   * Sets the size of the charts.\n   */\n  private adjustChartSizes(): void {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const barChartWidth = Math.max(Math.min(width * 0.8, 700), 300);\n    const barChartHeight = Math.max(Math.min(height * 0.4, 400), 200);\n\n    const pieChartWidth = Math.max(Math.min(width * 0.5, 400), 300);\n    const pieChartHeight = Math.max(Math.min(height * 0.5, 400), 300);\n\n    this.barChartView = [barChartWidth, barChartHeight];\n    this.pieChartView = [pieChartWidth, pieChartHeight];\n  }\n\n  /**\n   * Loads the data for the bar chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadBarChartData(currentUserID: string): Promise {\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      return { date, formattedDate };\n    }).reverse(); // Reverse to show oldest first\n\n    const promises = last7Days.map(async (day) => {\n      const docId = `${currentUserID}-${day.formattedDate}`;\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      const drinkData = docSnapshot?.data() as {drinkAmounts?: Record};\n      const drinksForTheDay = drinkData?.drinkAmounts ?? {};\n      const drinkCount = Object.values(drinksForTheDay).flat().length;\n\n      return { name: `${day.date.getMonth() + 1}.${day.date.getDate()}`, value: drinkCount };\n    });\n\n    this.graphData = await Promise.all(promises);\n  }\n\n  /**\n   * Loads the data for the pie chart.\n   * @param currentUserID The currently logged in user's ID.\n   */\n  private async loadPieChartData(currentUserID: string): Promise {\n    const drankDrinksRef = this.afs.collection('drankDrinks').ref;\n    const querySnapshot = await drankDrinksRef\n      .where('__name__', '>=', `${currentUserID}-`)\n      .where('__name__', ' {\n      const docData = doc.data() as { drinkAmounts?: Record };\n      const drinkAmounts = docData?.drinkAmounts || {};\n      Object.values(drinkAmounts).forEach((drinkEntries: any) => {\n        // Check if drinkEntries is an array or an object\n        if (Array.isArray(drinkEntries)) {\n          drinkEntries.forEach((drink: any) => {\n            const category = drink.category || 'Unknown';\n            categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          });\n        }\n      });\n    });\n    this.pieChartData = Object.entries(categoryCounts).map(([category, count]) => ({\n      name: category,\n      value: count,\n    }));\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n      \n    \n  \n    \n    \n      \n      \n    \n    Distribution of Drinks (by category)\n  \n  \n\n    \n\n    \n                \n                    ./stats.component.scss\n                \n                .stats-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  overflow-y: auto;\n  height: 80vh;\n}\n\n.chart-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.chart-section {\n  flex: 1 1 auto;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-height: 35vh;\n}\n\n::ng-deep .ngx-charts text {\n  fill: white !important;\n}\n\n@media (min-aspect-ratio: 4/3) {\n  .stats-container {\n    flex-direction: row;\n    justify-content: center;\n  }\n\n  .chart-section {\n    flex: 1 1 50%;\n    max-width: 50%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Distribution of Drinks (by category)    '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TrimDecimalsPipe.html":{"url":"pipes/TrimDecimalsPipe.html","title":"pipe - TrimDecimalsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TrimDecimalsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/trim-decimals.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for trimming decimals for proper data display.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        trimDecimals\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, decimalPlaces: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/trim-decimals.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        Trims decimal places off of value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value to be trimmed.\n\n                                            \n                                        \n                                        \n                                                decimalPlaces\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    Amount of decimal places to be trimmer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Trimmed value as string.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for trimming decimals for proper data display.\n */\n@Pipe({\n  name: 'trimDecimals'\n})\nexport class TrimDecimalsPipe implements PipeTransform {\n\n  /**\n   * Trims decimal places off of value.\n   * @param value The value to be trimmed.\n   * @param decimalPlaces Amount of decimal places to be trimmer.\n   * @returns Trimmed value as string.\n   */\n  transform(value: number, decimalPlaces: number = 2): string {\n    if (!value) return '0';\n    const formatted = value.toFixed(decimalPlaces); // Fixed to max decimalPlaces\n    return parseFloat(formatted).toString(); // Remove unnecessary trailing zeroes\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateProfileComponent.html":{"url":"components/UpdateProfileComponent.html","title":"component - UpdateProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/update-profile/update-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Handles user profile update.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-profile\n            \n\n\n\n            \n                styleUrls\n                ./update-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genderFromDB\n                            \n                            \n                                profilePicUrlFromDB\n                            \n                            \n                                pwCheck\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                usernameFromDB\n                            \n                            \n                                weightFromDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGenderAndWeight\n                            \n                            \n                                    Async\n                                getProfilePicUrl\n                            \n                            \n                                    Async\n                                getUsername\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateProfileSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicUrl\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                                \n                                    weight\n                                \n                                \n                                    gender\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, afs: AngularFirestore, userService: UserService, afAuth: AngularFireAuth, notyfService: NotyfService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/update-profile/update-profile.component.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for user data.\n\n                                                        \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        notyfService\n                                                  \n                                                        \n                                                                        NotyfService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying messages.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderAndWeight\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderAndWeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's gender and weight.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfilePicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfilePicUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:128\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's profile picture.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsername()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Get's currently logged in user's username.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Gets user's data on initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfileSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfileSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/update-profile/update-profile.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Submits data for profile update.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                If userID is invalid returns.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genderFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:53\n                        \n                    \n\n            \n                \n                    User's gender from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrlFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:45\n                        \n                    \n\n            \n                \n                    User's profile picture from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pwCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:57\n                        \n                    \n\n            \n                \n                    Flag for checking if password match.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [Validators.minLength(8)]),\n    confirmPassword: new FormControl(''),\n    profilePicUrl: new FormControl(''),\n    weight: new FormControl('', [Validators.required, Validators.min(30)]),\n    gender: new FormControl('', Validators.required)\n  }, { validators: passwordsMatchValidator() })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:62\n                        \n                    \n\n            \n                \n                    Form group for profile update data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:41\n                        \n                    \n\n            \n                \n                    User's username from the database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weightFromDB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/update-profile/update-profile.component.ts:49\n                        \n                    \n\n            \n                \n                    User's weight from the database.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicUrl\n                    \n                \n\n                \n                    \n                        getprofilePicUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:98\n                                \n                            \n                    \n                        \n                                Gets user's input profile picture.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:102\n                                \n                            \n                    \n                        \n                                Gets user's input password.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets user' input password confirmation.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        weight\n                    \n                \n\n                \n                    \n                        getweight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:110\n                                \n                            \n                    \n                        \n                                Gets user's input weight.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        gender\n                    \n                \n\n                \n                    \n                        getgender()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/update-profile/update-profile.component.ts:114\n                                \n                            \n                    \n                        \n                                Gets user's input gender.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Checks if the input passwords match.\n * @returns True flag if passwords match\n */\nexport function passwordsMatchValidator(): ValidatorFn{\n  return(AbsControl: AbstractControl): ValidationErrors | null => {\n    const password = AbsControl.get('password')?.value;\n    const confirmPassword = AbsControl.get('confirmPassword')?.value;\n    \n    if(password && (password !== confirmPassword)){\n      return{ passwordsDontMatch: true }\n    }\n    else if(password != \"\" && (password.length  this.notyfService.success('URL updated'))\n        .catch((error) => this.notyfService.error('Something went wrong'));\n    }\n\n    const newWeight = this.weight?.value;\n    if (newWeight !== this.weightFromDB.toString()) {\n      updates.weight = newWeight;\n    }\n\n    const newGender = this.gender?.value;\n    if (newGender !== this.genderFromDB) {\n      updates.gender = newGender;\n    }\n\n    if (Object.keys(updates).length > 0) {\n      userDocRef.update(updates).then(() => this.notyfService.success('Profile updated'));\n    }\n\n    const newPassword = this.password?.value;\n    if(newPassword){\n      try{\n        const currentUser = await this.afAuth.currentUser;\n        if(currentUser){\n          await currentUser.updatePassword(newPassword);\n          this.pwCheck = true;\n          this.notyfService.success('Password updated');\n        }\n      } catch (error){\n        console.error('Error updating password: ', error);\n        this.pwCheck = false;\n        this.notyfService.error('Something went wrong');\n      }\n    }\n\n    if(this.pwCheck){ this.router.navigate(['/profile']); }\n  }\n}\n\n    \n\n    \n        \n  Update Profile\n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    The passwords do not match\n    Password must be at least 8\n      characters!\n\n    \n    \n      \n      Please enter your weight!\n      Weight must be at least 30kg!\n    \n\n    \n    \n      \n        \n          \n          &nbsp; Male &nbsp;\n        \n        \n          \n          Female\n        \n        Please select your gender!\n      \n    \n\n    \n      \n        Update Profile\n      \n    \n  \n\n    \n\n    \n                \n                    ./update-profile.component.scss\n                \n                .formContainer {\n    width: 40vh;\n    overflow-y: auto;\n    height: 85vh;\n    margin-top: -10%;\n}\n\n.formContainer>h1 {\n    text-align: center;\n    font-size: 5vh;\n}\n\n.updateForm {\n    width: 40vh;\n    height: 25vh;\n    padding-top: 5vh;\n}\n\n.matFormFieldUpdate {\n    min-width: 100%;\n    min-height: 10vh;\n}\n\n.matFormFieldUpdate>mat-error {\n    height: 10vh;\n}\n\n.inputFieldZT {\n    background-color: #212121;\n    color: white;\n    border-radius: 50px 50px 50px 50px;\n    width: 100%;\n    text-align: center;\n    min-height: 6vh;\n    padding-bottom: 0%;\n}\n\n.updateButtonDiv {\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5vh;\n}\n\n.mat-mdc-unelevated-button:not(:disabled) {\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.updateButton {\n    margin-top: 5%;\n    width: 60%;\n    height: 3.5rem;\n    border-radius: 50px 50px 50px 50px;\n    font-size: large;\n    color: white;\n    background-image: linear-gradient(135deg, #002fff 0%, #00076e 100%);\n}\n\n.genderSelection div {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 0.5rem;\n    justify-content: center;\n}\n\n.genderSelection input[type=\"radio\"] {\n    clip: rect(0 0 0 0);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n.genderSelection input[type=\"radio\"]:checked+span {\n    box-shadow: 0 0 0 0.0625em linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    background-image: linear-gradient(135deg, #f700ff 0%, #87008b 100%);\n    z-index: 1;\n    color: white;\n}\n\nlabel span {\n    display: block;\n    cursor: pointer;\n    background-color: #212121;\n    padding: 0.375em .75em;\n    position: relative;\n    margin-left: .0625em;\n    box-shadow: 0 0 0 0.0625em #212121;\n    letter-spacing: .05em;\n    color: lightgray;\n    text-align: center;\n    transition: background-color .5s ease;\n  }\n\n  label:first-child span {\n    border-radius: .375em 0 0 .375em;\n  }\n  \n  label:last-child span {\n    border-radius: 0 .375em .375em 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Profile                                                The passwords do not match    Password must be at least 8      characters!                    Please enter your weight!      Weight must be at least 30kg!                                                Male                                      Female                Please select your gender!                            Update Profile            '\n    var COMPONENTS = [{'name': 'AboutUsComponent', 'selector': 'app-about-us'},{'name': 'AdminFormComponent', 'selector': 'app-admin-form'},{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrinkListComponent', 'selector': 'app-drink-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'UpdateProfileComponent', 'selector': 'app-update-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/home/home.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the user's personal data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { DateService } from 'src/app/services/date.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { NotyfService } from '../../services/notyf/notyf.service';\n\n/**\n * Interface for the consumed drink data.\n */\ninterface DrinkData {\n  drinkAmounts: { [key: string]: { id: string, amount: number; calories: number, alcohol: number, time: string }[] };\n}\n\n/**\n * Interface for the user's personal data.\n */\ninterface UserData {\n  weight: number;\n  gender: string;\n}\n\n/**\n * Displays the drink tracking page and the overall data.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit{\n  \n  /**\n   * The selected date.\n   */\n  selectedDate: Date;\n  /**\n   * Drinks for the selected day.\n   */\n  drinksForTheDay: any[] = [];\n  /**\n   * Total calories for the day.\n   */\n  totalCalories: number = 0;\n  /**\n   * Total amount of drinks for the day.\n   */\n  totalDrinks: number = 0;\n  /**\n   * Blood alcohol content for the day.\n   */\n  bac: number = 0;\n  /**\n   * The time by the user will be sober approximately.\n   */\n  soberTime: Date | null = null;\n  /**\n   * The user's personal data.\n   */\n  userData: UserData;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param userService Service for user data.\n   * @param dateService Service for proper date usage.\n   * @param router Router for routing.\n   * @param notyfService Service for displaying messages.\n   */\n  constructor(\n    private afs: AngularFirestore,\n    private userService: UserService,\n    private dateService: DateService,\n    private router: Router,\n    private notyfService: NotyfService\n  ){}\n\n  /**\n   * Reference to the `dateInput` element.\n   */\n  @ViewChild('dateInput') dateInput!: ElementRef;\n\n  /**\n   * Initializes the page.\n   */\n  async ngOnInit(): Promise {\n    /**\n     * Initializes selected date from DateService or today's date.\n     */\n    this.selectedDate = this.dateService.getSelectedDate() || new Date();\n    await this.fetchUserData();\n\n    /**\n     * Fetches drinks data for the selected date.\n     */\n    this.fetchDrinksForTheDay();\n    \n    /**\n     * Watches for date changes and loads drinks.\n     */\n    await this.dateService.selectedDate$.subscribe(date => {\n      this.selectedDate = date;\n      this.fetchDrinksForTheDay();\n    });\n  }\n\n  /**\n   * Fetches user data.\n   */\n  async fetchUserData(): Promise {\n    const currentUserID = await this.userService.getCurrentUserId();\n    if (currentUserID) {\n      const userDoc = await this.afs.collection('user').doc(currentUserID).get().toPromise();\n      if (userDoc && userDoc.exists) {\n        this.userData = userDoc.data() as UserData;\n      }\n    }\n  }\n\n  /**\n   * Fetches the user's consumed drinks for the day.\n   */\n  async fetchDrinksForTheDay(): Promise {\n    // Clears previous data\n    this.drinksForTheDay = [];\n    const currentUserID = await this.userService.getCurrentUserId();\n    \n    if (currentUserID && this.selectedDate) {\n      const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n      const docId = `${currentUserID}-${formattedDate}`; // Create document ID based on user and date\n\n      const docRef = this.afs.collection('drankDrinks').doc(docId);\n      const docSnapshot = await docRef.get().toPromise();\n\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as { drinkAmounts?: Record };\n\n        this.drinksForTheDay = drinkData?.drinkAmounts\n          ? Object.entries(drinkData.drinkAmounts).map(([name, detailsArray]) => {\n            return detailsArray.map(detail => ({\n              name,\n              id: detail.id,\n              amount: detail.amount,\n              calories: detail.calories,\n              alcohol: detail.alcohol,\n              time: detail.time\n          }));\n        }).flat() : [];\n\n        this.calculateTotals();\n        this.calculateBAC();\n      }\n    }\n  }\n  \n  /**\n   * Calculates approximate blood alcohol content for given day.\n   * @returns If user data is not present then returns.\n   */\n  calculateBAC(): void {\n    if (!this.userData) {\n      console.error('User data not available for BAC calculation');\n      this.bac = 0;\n      return;\n    }\n\n    console.log('UDATA: ', this.userData);\n\n    const { weight, gender } = this.userData;\n    const bodyWaterConstant = gender === 'male' ? 0.58 : 0.49;\n    const metabolismRate = 0.015; // Average alcohol elimination rate per hour\n    const weightInGrams = weight * 1000;\n    const currentTime = new Date();\n    // Construct full date objects for drink times\n      const drinkTimes = this.drinksForTheDay.map((drink) => {\n        const [hours, minutes] = drink.time.split(':').map(Number);\n        const drinkDate = new Date(this.selectedDate);\n        drinkDate.setHours(hours, minutes, 0, 0); // Set hours and minutes to the drink's time\n        return { ...drink, drinkDate };\n      });\n      console.log('Drink times:', drinkTimes);\n\n      // Separate past and future drinks\n      const pastDrinks = drinkTimes.filter((drink) => drink.drinkDate  drink.drinkDate > currentTime);\n      console.log('Past Drinks:', pastDrinks);\n      console.log('Future Drinks:', futureDrinks);\n\n    // Calculate BAC based on past drinks\n      const totalPastAlcoholGrams = pastDrinks.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      if (pastDrinks.length > 0) {\n        const lastDrinkTime = new Date(Math.max(...pastDrinks.map((drink) => drink.drinkDate.getTime())));\n        const timeElapsedHours = Math.max(0, (currentTime.getTime() - lastDrinkTime.getTime()) / (1000 * 60 * 60));\n\n        console.log('Last past drink time:', lastDrinkTime);\n        console.log('Time elapsed since last drink (hours):', timeElapsedHours);\n\n        this.bac =\n            ((totalPastAlcoholGrams) / (weightInGrams * bodyWaterConstant)) * 100 - metabolismRate * timeElapsedHours;\n        this.bac = Math.max(this.bac, 0); // Ensure BAC does not go negative\n        console.log('Current BAC:', this.bac);\n      } else {\n        this.bac = 0; // No past drinks, no BAC\n      }\n      \n      // Calculate sober time (including future drinks)\n      const allAlcoholGrams = drinkTimes.reduce((sum, drink) => sum + (drink.alcohol || 0), 0);\n      const soberHours = allAlcoholGrams / (metabolismRate * weightInGrams * bodyWaterConstant);\n\n      console.log('Total alcohol grams (past + future):', allAlcoholGrams);\n      console.log('Estimated hours to sober:', soberHours*100);\n\n      const earliestAllDrinkTime = new Date(Math.min(...drinkTimes.map((drink) => drink.drinkDate.getTime())));\n      const estimatedSoberTime = new Date(Math.max(earliestAllDrinkTime.getTime()) + (soberHours*100) * 60 * 60 * 1000);\n\n      this.soberTime = estimatedSoberTime;\n      console.log('Estimated time to be sober:', this.soberTime);  \n  }\n\n  /**\n   * Calculates total calories and drinks for the day.\n   */\n  calculateTotals(): void {\n    this.totalCalories = this.drinksForTheDay.reduce((sum, drink) => sum + (drink.calories || 0), 0);\n    this.totalDrinks = this.drinksForTheDay.length;\n  }\n\n  /**\n   * Sets proper data on date change.\n   * @param event The event that triggers this method.\n   */\n  onDateChange(event: any) {\n    this.selectedDate = new Date(event.target.value);\n    this.dateService.setSelectedDate(this.selectedDate);\n    this.fetchDrinksForTheDay();\n  }\n\n  /**\n   * Formats the given date.\n   * @param date The given date.\n   * @returns The given date but properly formatted.\n   */\n  getFormattedDate(date: Date): string {\n    return date.toISOString().split('T')[0]; // Formats date as YYYY-MM-DD for the input field\n  }\n\n  /**\n   * Opens the date picker.\n   */\n  openDatePicker() {\n    this.dateInput.nativeElement.showPicker(); // Opens the native date picker\n  }\n\n  /**\n   * Redirects to drink list page.\n   */\n  redirectToDrinks(){ this.router.navigate(['/drinklist']); }\n\n  /**\n   * Shows alert for drink deletion.\n   * @param drink The currently clicked drink.\n   */\n  onDrinkClick(drink: any): void {\n    const confirmDelete = window.confirm(`Are you sure you want to delete the drink ${drink.name}?`);\n    if (confirmDelete) {\n      this.deleteDrinkFromFirestore(drink);\n    }\n  }\n\n  /**\n   * Removes the selected drink from the user's consumed drinks.\n   * @param drink The drink to be deleted.\n   */\n  async deleteDrinkFromFirestore(drink: any): Promise {\n    const userId = await this.userService.getCurrentUserId();\n    const formattedDate = `${this.selectedDate.getFullYear()}-${(this.selectedDate.getMonth() + 1).toString().padStart(2, '0')}-${this.selectedDate.getDate().toString().padStart(2, '0')}`;\n    const docId = `${userId}-${formattedDate}`;\n    console.log('UID: ', userId);\n    console.log('DATE: ', formattedDate);\n\n    const docRef = this.afs.collection('drankDrinks').doc(docId);\n    \n    try {\n      const docSnapshot = await docRef.get().toPromise();\n      if (docSnapshot && docSnapshot.exists) {\n        const drinkData = docSnapshot.data() as DrinkData;\n        console.log(\"drinkData: \", drinkData);\n        if (drinkData && drinkData.drinkAmounts) {\n          const drinkAmounts = drinkData.drinkAmounts;\n  \n          // Iterate through the drink amounts and find the drink to delete by name and id\n          for (const drinkName in drinkAmounts) {\n            const entries = drinkAmounts[drinkName];\n            \n            // Find the specific entry by name and id\n            const entryIndex = entries.findIndex((entry: any) => entry.id === drink.id);\n  \n            if (entryIndex !== -1) {\n              // Delete the specific entry by its id\n              entries.splice(entryIndex, 1);\n              break; // Exit loop once the drink is deleted\n            }\n          }\n  \n          // Update the document with the remaining drink amounts\n          await docRef.set({ ...drinkData, drinkAmounts }, { merge: true });\n          this.notyfService.success('Drink deleted');\n          console.log(`Deleted drink ${drink.name} at ${drink.time} from Firestore`);\n  \n          // Reload the drinks for the day after deletion\n          this.fetchDrinksForTheDay();\n        }\n      } else {\n        this.notyfService.error('No document found');\n        console.log('No document found to delete');\n      }\n    } catch (error) {\n      this.notyfService.error('Something went wrong');\n      console.error('Error fetching or deleting document: ', error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/user.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    User guard.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for authentication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/user.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Returns if current user is user or not.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Currently loaded route.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current state of router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                If current user is user.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n/**\n * User guard.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  \n  /**\n   * \n   * @param authService Service for authentication.\n   */\n  constructor(private authService: AuthenticationService){}\n  \n  /**\n   * Returns if current user is user or not.\n   * @param route Currently loaded route.\n   * @param state Current state of router.\n   * @returns If current user is user.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n           \n      return this.authService.isUser();\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModule.html":{"url":"classes/UserModule.html","title":"class - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for user data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                profilePicUrl\n                            \n                            \n                                registerAgeInDays\n                            \n                            \n                                registerDate\n                            \n                            \n                                username\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(User: UserModule)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.module.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        UserModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAgeInDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.module.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModule {\n  id: string;\n  username: string;\n  email: string;\n  profilePicUrl: string;\n  registerAgeInDays: string;\n  registerDate: Date;\n  gender: string;\n  weight: number;\n\n  constructor(User: UserModule){\n    this.id = User.id;\n    this.username = User.username;\n    this.email = User.email;\n    this.profilePicUrl = User.profilePicUrl;\n    this.registerAgeInDays = User.registerAgeInDays;\n    this.registerDate = User.registerDate;\n    this.gender = User.gender;\n    this.weight = User.weight;\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for getting user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                currentUserEmail\n                            \n                            \n                                currentUserID\n                            \n                            \n                                formData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUserEmail\n                            \n                            \n                                    Async\n                                getCurrentUserEmailString\n                            \n                            \n                                    Async\n                                getCurrentUserId\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, auth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firebase Authentication.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router for routing.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserEmailString\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserEmailString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Returns the currently logged in user's e-mail as a string.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Gets the current user's ID from the databse.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user/user.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Returns with the ID based on the getCurrentUserId() method.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AngularFireAuth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:35\n                        \n                    \n\n            \n                \n                    Angular Firebase Authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:21\n                        \n                    \n\n            \n                \n                    Currently logged in user's e-mail.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:25\n                        \n                    \n\n            \n                \n                    Currently logged in user's ID.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModule\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user/user.service.ts:17\n                        \n                    \n\n            \n                \n                    User module.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { UserModule } from './user.module';\n\n/**\n * Service for getting user data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  /**\n   * User module.\n   */\n  formData: UserModule;\n  /**\n   * Currently logged in user's e-mail.\n   */\n  currentUserEmail: string;\n  /**\n   * Currently logged in user's ID.\n   */\n  currentUserID: string;\n  \n  /**\n   * \n   * @param afs Angular Firestore.\n   * @param auth Angular Firebase Authentication.\n   * @param router Router for routing.\n   */\n  constructor(\n    private afs : AngularFirestore,\n    public auth : AngularFireAuth,\n    private router: Router\n  ) {}\n\n  /**\n   * Gets the current user's ID from the databse.\n   */\n  async getCurrentUserId(): Promise {\n    const user = await this.auth.currentUser;\n    if (user) {\n      const userDocs = await this.afs.collection('user', ref => ref.where('email', '==', user.email)).get().toPromise();\n      const userDoc = userDocs?.docs[0];\n      return userDoc?.id;\n    } else {\n      this.router.navigate(['/landing']);\n      throw new Error('No currently logged in user');\n    }\n  }\n\n  /**\n   * Returns with the ID based on the `getCurrentUserId()` method.\n   */\n  async getUserId(){\n    try {\n      const userID = await this.getCurrentUserId();\n      return userID;\n    } catch (error){\n      console.error(error);\n      return '';\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail.\n   */\n  async getCurrentUserEmail()\n  {\n    const user = await this.auth.currentUser;\n    if(user){\n      const userRef = this.afs.collection('user').doc(await this.getUserId())\n      const userDoc = await userRef.get().toPromise();\n      const currentEmail = userDoc?.get('email') as string;\n      this.currentUserEmail = currentEmail;\n      console.log('fetched email:', this.currentUserEmail);\n    }\n  }\n\n  /**\n   * Returns the currently logged in user's e-mail as a string.\n   */\n  async getCurrentUserEmailString()\n  {\n    await this.getCurrentUserEmail();\n    return this.currentUserEmail;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/about-us/about-us.component.ts\n            \n            component\n            AboutUsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/admin-form/admin-form.component.ts\n            \n            component\n            AdminFormComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            component\n            DrinkListComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            Drink\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmount\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            DrinkAmountsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/drink-list/drink-list.component.ts\n            \n            interface\n            FirestoreDocumentData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            interface\n            DrinkData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            interface\n            UserData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                        src/app/components/register/register.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/stats/stats.component.ts\n            \n            component\n            StatsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/update-profile/update-profile.component.ts\n            \n            component\n            UpdateProfileComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                        src/app/components/update-profile/update-profile.component.ts\n            \n            function\n            passwordsMatchValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pipes/trim-decimals.pipe.ts\n            \n            pipe\n            TrimDecimalsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/notyf/notyf.service.ts\n            \n            injectable\n            NotyfService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/user/user.module.ts\n            \n            class\n            UserModule\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.9\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.9\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @ngneat/hot-toast : ^5.0.2\n        \n            @ngneat/overview : ^3.0.0\n        \n            @swimlane/ngx-charts : ^20.1.2\n        \n            bootstrap-icons : ^1.11.3\n        \n            d3 : ^7.9.0\n        \n            d3-scale : ^4.0.2\n        \n            d3-selection : ^3.0.0\n        \n            d3-shape : ^3.2.0\n        \n            firebase-tools : ^11.30.0\n        \n            notyf : ^3.10.0\n        \n            remixicon : ^4.6.0\n        \n            rxfire : ^6.0.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordsMatchValidator   (src/.../register.component.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../update-profile.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the two passwords typed in the registerForm match\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/components/update-profile/update-profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the input passwords match.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                True flag if passwords match\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nZeroToleranceApp\nThis project was generated with Angular CLI version 15.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutUsComponent\n\nAboutUsComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutUsComponent->AppModule\n\n\n\n\n\nAdminFormComponent\n\nAdminFormComponent\n\nAppModule -->\n\nAdminFormComponent->AppModule\n\n\n\n\n\nAdminPageComponent\n\nAdminPageComponent\n\nAppModule -->\n\nAdminPageComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDrinkListComponent\n\nDrinkListComponent\n\nAppModule -->\n\nDrinkListComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nStatsComponent\n\nStatsComponent\n\nAppModule -->\n\nStatsComponent->AppModule\n\n\n\n\n\nTrimDecimalsPipe\n\nTrimDecimalsPipe\n\nAppModule -->\n\nTrimDecimalsPipe->AppModule\n\n\n\n\n\nUpdateProfileComponent\n\nUpdateProfileComponent\n\nAppModule -->\n\nUpdateProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'zero-tolerance-app',\n    appId: '1:980328026322:web:6e3441bfbe4bfba4619d0b',\n    storageBucket: 'zero-tolerance-app.appspot.com',\n    apiKey: 'AIzaSyCi6ejWh0cUV7u3QOKUf7AotJqbg0KX46s',\n    authDomain: 'zero-tolerance-app.firebaseapp.com',\n    messagingSenderId: '980328026322',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
